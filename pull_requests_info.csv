Pull_Request_Number,Pull_Request_State,Pull_Request_Author,Pull_Request_Body,Number_of_Files_changed,File_Names,Number_of_commits,Commits_Data,Commits_Files_Data,Time_Stamps
1,closed,indierawk2k2,,4,"['Logo.jpg', 'MTNDWidget.jpg', 'README.md', 'WindowsKeyShortcutGuide.jpg']",11,"[{'Commit_ID': 'cbaa5fb732528a61e016da16815de6dffc6cacf1', 'Commit_Message': 'Update README.md', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 18, 41, 29)}, {'Commit_ID': '40210c2e16c0bd9f3b07a02507d721e84eabec03', 'Commit_Message': 'Uploading logo image', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 20, 17, 58)}, {'Commit_ID': '9a54a918a0fbf722975ea2a2e86d855d1a88066e', 'Commit_Message': 'Adding logo', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 20, 21, 54)}, {'Commit_ID': '46f33f81fdae5c3373629cae800699611442eefb', 'Commit_Message': 'Delete PowerToys.jpg', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 20, 27, 48)}, {'Commit_ID': 'b175ef1dd5ca8741bd43b43bf17d47e9ef259828', 'Commit_Message': 'Adding logo image', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 20, 28, 9)}, {'Commit_ID': '977c2d1aace75f433a60862a1f8f231c6e68944f', 'Commit_Message': 'Update README.md', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 20, 28, 23)}, {'Commit_ID': 'e5d8f4d8b9290979481aecf1abb471b4f024aebc', 'Commit_Message': 'Adding updated logo image', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 20, 31, 10)}, {'Commit_ID': 'ebd05200cf9fd0af9acea5f348121e61ec586754', 'Commit_Message': 'Update README.md', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 20, 38, 18)}, {'Commit_ID': 'cd385ab2d7671d1d9fdbbfd90788543f9f31c59f', 'Commit_Message': 'Adding preview utilities images', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 20, 38, 48)}, {'Commit_ID': 'f35ac08f4aef8868d655517e00d15b4d9ce5fa5f', 'Commit_Message': 'Updating with images for the first two utilities', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 20, 41, 5)}, {'Commit_ID': '0e85d5fdfbed766209b76315858e57c266cad033', 'Commit_Message': 'Fix a couple typeos', 'Commit_Timestamp': datetime.datetime(2019, 5, 5, 20, 45, 16)}]","[{'Name': 'Logo.jpg', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'MTNDWidget.jpg', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'README.md', 'Line Additions': 35, 'Line Deletions': 0, 'Patch': ""@@ -1,4 +1,39 @@\n \r\n+# Overview\r\n+\r\n+PowerToys is a set of utilities for power users to tune and streamline their Windows expereince for greater productivity.  \r\n+\r\n+![logo](Logo.jpg)\r\n+\r\n+# What's Happening\r\n+\r\n+The first two utilities we're working on are:\r\n+\r\n+1. Maximize to new desktop widget - The MTND widget shows a pop-up button when a user hovers over the maximize / restore button on any window.  Clicking it creates a new desktop, sends the app to that desktop and maximizes the app on the new desktop.\r\n+\r\n+![Maximize to new desktop widget](MTNDWidget.jpg)\r\n+\r\n+2. Windows key shortcut guide - The shortcut guide appears when a user holds the Windows key down for more than one second and shows the available shortcuts for the current state of the desktop.\r\n+\r\n+![Windows key shortcut guide](WindowsKeyShortcutGuide.jpg)\r\n+\r\n+The first preview of these two utilities and corresponding source code will be released Summer 2020.\r\n+\r\n+# Backlog\r\n+\r\n+Here's the current set of utilities we're considering.  Please use issues and +1's to guide the project to suugest new ideas and help us prioritize th list below.\r\n+\r\n+1. Full window manager including specific layouts for docking and undocking laptops\r\n+2. Keyboard shortcut manager\r\n+3. Win+R replacement\r\n+4. Better alt+tab including browser tab integration and search for running apps\r\n+5. Battery tracker\r\n+6. Batch file re-namer\r\n+6. Quick resolution swaps in taskbar\r\n+8. Mouse events without focus\r\n+9. Cmd (or PS or Bash) from here\r\n+10. Contents menu file browsing\r\n+\r\n # Contributing\r\n \r\n This project welcomes contributions and suggestions.  Most contributions require you to agree to a\r""}, {'Name': 'WindowsKeyShortcutGuide.jpg', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}]",2019-05-05 21:22:54
2,closed,corbob,Just a few typos I noticed while reading through the ReadMe. ,1,['README.md'],1,"[{'Commit_ID': 'ec41e808ef60ac446d7c6cf871a9063a28534111', 'Commit_Message': 'fix a couple typos', 'Commit_Timestamp': datetime.datetime(2019, 5, 6, 23, 33, 8)}]","[{'Name': 'README.md', 'Line Additions': 1, 'Line Deletions': 1, 'Patch': ""@@ -23,7 +23,7 @@ The first two utilities we're working on are:\n \r\n # Backlog\r\n \r\n-Here's the current set of utilities we're considering.  Please use issues and +1's to guide the project to suugest new ideas and help us prioritize th list below.\r\n+Here's the current set of utilities we're considering.  Please use issues and +1's to guide the project to suggest new ideas and help us prioritize the list below.\r\n \r\n 1. Full window manager including specific layouts for docking and undocking laptops\r\n 2. Keyboard shortcut manager\r""}]",2019-05-09 15:53:16
9,closed,tomer,,1,['README.md'],1,"[{'Commit_ID': 'b3e3a0ce2a41ac7d68909f586446f9a4a66ada88', 'Commit_Message': 's/expereince/experience', 'Commit_Timestamp': datetime.datetime(2019, 5, 7, 3, 36, 42)}]","[{'Name': 'README.md', 'Line Additions': 1, 'Line Deletions': 1, 'Patch': '@@ -1,7 +1,7 @@\n \r\n # Overview\r\n \r\n-PowerToys is a set of utilities for power users to tune and streamline their Windows expereince for greater productivity.  \r\n+PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity.  \r\n \r\n Inspired by the [Windows 95 era PowerToys project](https://en.wikipedia.org/wiki/Microsoft_PowerToys), this reboot provides power users with ways to squeeze more efficiency out of the Windows 10 shell and customize it for individual workflows.  A great overview of the Windows 95 PowerToys can be found [here](https://socket3.wordpress.com/2016/10/22/using-windows-95-powertoys/).\r\n \r'}]",2019-05-09 15:57:30
25,closed,joshuaalm,"Corrected letter transpositions, and capitalized Alt+Tab for consistency (all other key names were at the beginning of their respective lines, so were already capitalized, but on my Surface Book all modifier keys and Tab are capitalized)",1,['README.md'],1,"[{'Commit_ID': 'f2c9538701e7116c273a5689cf202c82c5a09045', 'Commit_Message': 'Minor spelling corrections\n\nCorrected letter transpositions, and capitalized Alt+Tab for consistency (all other key names were at the beginning of their respective lines, so were already capitalized, but on my Surface Book all modifier keys and Tab are capitalized)', 'Commit_Timestamp': datetime.datetime(2019, 5, 8, 15, 45, 56)}]","[{'Name': 'README.md', 'Line Additions': 3, 'Line Deletions': 3, 'Patch': ""@@ -1,7 +1,7 @@\n \r\n # Overview\r\n \r\n-PowerToys is a set of utilities for power users to tune and streamline their Windows expereince for greater productivity.  \r\n+PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity.  \r\n \r\n Inspired by the [Windows 95 era PowerToys project](https://en.wikipedia.org/wiki/Microsoft_PowerToys), this reboot provides power users with ways to squeeze more efficiency out of the Windows 10 shell and customize it for individual workflows.  A great overview of the Windows 95 PowerToys can be found [here](https://socket3.wordpress.com/2016/10/22/using-windows-95-powertoys/).\r\n \r\n@@ -23,12 +23,12 @@ The first two utilities we're working on are:\n \r\n # Backlog\r\n \r\n-Here's the current set of utilities we're considering.  Please use issues and +1's to guide the project to suugest new ideas and help us prioritize th list below.\r\n+Here's the current set of utilities we're considering.  Please use issues and +1's to guide the project to suggest new ideas and help us prioritize the list below.\r\n \r\n 1. Full window manager including specific layouts for docking and undocking laptops\r\n 2. Keyboard shortcut manager\r\n 3. Win+R replacement\r\n-4. Better alt+tab including browser tab integration and search for running apps\r\n+4. Better Alt+Tab including browser tab integration and search for running apps\r\n 5. Battery tracker\r\n 6. Batch file re-namer\r\n 6. Quick resolution swaps in taskbar\r""}]",2019-05-09 15:58:32
108,closed,Meir017,,1,['README.md'],1,"[{'Commit_ID': '50438d37c53f0fbfc9074a187ccfca56b827da9c', 'Commit_Message': 'add issue links to Backlog list', 'Commit_Timestamp': datetime.datetime(2019, 5, 15, 8, 0, 2)}]","[{'Name': 'README.md', 'Line Additions': 6, 'Line Deletions': 6, 'Patch': ""@@ -25,13 +25,13 @@ The first two utilities we're working on are:\n \r\n Here's the current set of utilities we're considering.  Please use issues and +1's to guide the project to suggest new ideas and help us prioritize the list below.\r\n \r\n-1. Full window manager including specific layouts for docking and undocking laptops\r\n-2. Keyboard shortcut manager\r\n-3. Win+R replacement\r\n+1. [Full window manager including specific layouts for docking and undocking laptops](https://github.com/microsoft/PowerToys/issues/4)\r\n+2. [Keyboard shortcut manager](https://github.com/microsoft/PowerToys/issues/6)\r\n+3. [Win+R replacement](https://github.com/microsoft/PowerToys/issues/44)\r\n 4. Better Alt+Tab including browser tab integration and search for running apps\r\n-5. Battery tracker\r\n-6. Batch file re-namer\r\n-6. Quick resolution swaps in taskbar\r\n+5. [Battery tracker](https://github.com/microsoft/PowerToys/issues/7)\r\n+6. [Batch file re-namer](https://github.com/microsoft/PowerToys/issues/101)\r\n+7. [Quick resolution swaps in taskbar](https://github.com/microsoft/PowerToys/issues/27)\r\n 8. Mouse events without focus\r\n 9. Cmd (or PS or Bash) from here\r\n 10. Contents menu file browsing\r""}]",2019-05-15 14:05:06
151,closed,bzoz,FancyZones and Shortcut Guide initial commit,341,"['.gitattributes', '.github/ISSUE_TEMPLATE/bug_report.md', '.github/ISSUE_TEMPLATE/documentation-issue.md', '.github/ISSUE_TEMPLATE/feature_request.md', '.github/pull_request_template.md', '.pipelines/build.cmd', '.pipelines/pipeline.user.windows.yml', '.pipelines/restore.cmd', 'License.rtf', 'PowerToys.sln', 'README.md', 'build/pipelines/ci.yml', 'build/pipelines/templates/build-powertoys-ci.yml', 'build/pipelines/templates/build-powertoys-steps.yml', 'contributing.md', 'deps/cpprestsdk/README.md', 'deps/cpprestsdk/cpprestsdk.vcxproj', 'deps/cpprestsdk/include/cpprest/asyncrt_utils.h', 'deps/cpprestsdk/include/cpprest/base_uri.h', 'deps/cpprestsdk/include/cpprest/details/SafeInt3.hpp', 'deps/cpprestsdk/include/cpprest/details/basic_types.h', 'deps/cpprestsdk/include/cpprest/details/cpprest_compat.h', 'deps/cpprestsdk/include/cpprest/details/web_utilities.h', 'deps/cpprestsdk/include/cpprest/json.h', 'deps/cpprestsdk/include/cpprest/uri.h', 'deps/cpprestsdk/include/cpprest/uri_builder.h', 'deps/cpprestsdk/include/cpprest/version.h', 'deps/cpprestsdk/license.txt', 'deps/cpprestsdk/pch.cpp', 'deps/cpprestsdk/pch.h', 'deps/cpprestsdk/src/json/json.cpp', 'deps/cpprestsdk/src/json/json_parsing.cpp', 'deps/cpprestsdk/src/json/json_serialization.cpp', 'deps/cpprestsdk/src/utilities/asyncrt_utils.cpp', 'deps/cpprestsdk/src/utilities/base64.cpp', 'deps/cpprestsdk/src/utilities/web_utilities.cpp', 'doc/coding/organization.md', 'doc/coding/style.md', 'doc/images/FZTutorial.jpg', 'doc/images/Logo.jpg', 'doc/images/MTNDWidget.jpg', 'doc/images/WindowsKeyShortcutGuide.jpg', 'doc/images/example_powertoy/settings.png', 'doc/images/runner/tray.png', 'doc/images/shortcut_guide/settings.png', 'doc/images/shortcut_guide/usage.png', 'doc/planning/FancyZonesBacklog.md', 'doc/planning/PowerToysBacklog.md', 'doc/planning/ShortcutGuideBacklog.md', 'doc/specs/PowerToys-fancyzones.md', 'doc/specs/PowerToys-settings.md', 'doc/specs/Shared-hooks.md', 'installer/PowerToysSetup.sln', 'installer/PowerToysSetup/Bitmaps/banner.bmp', 'installer/PowerToysSetup/Bitmaps/dialog.bmp', 'installer/PowerToysSetup/CustomDialogs/PTInstallDirDlg.wxs', 'installer/PowerToysSetup/CustomDialogs/WixUI_PTInstallDir.wxs', 'installer/PowerToysSetup/PowerToysSetup.wixproj', 'installer/PowerToysSetup/Product.wxs', 'installer/PowerToysSetupCustomActions/CustomAction.cpp', 'installer/PowerToysSetupCustomActions/CustomAction.def', 'installer/PowerToysSetupCustomActions/PowerToysSetupCustomActions.vcxproj', 'installer/PowerToysSetupCustomActions/PowerToysSetupCustomActions.vcxproj.filters', 'installer/PowerToysSetupCustomActions/Telemetry/ProjectTelemetry.h', 'installer/PowerToysSetupCustomActions/Telemetry/TraceLoggingDefines.h', 'installer/PowerToysSetupCustomActions/stdafx.cpp', 'installer/PowerToysSetupCustomActions/stdafx.h', 'installer/README.md', 'src/README.md', 'src/common/README.md', 'src/common/Telemetry/PowerToys.wprp', 'src/common/Telemetry/ProjectTelemetry.h', 'src/common/Telemetry/TraceLoggingDefines.h', 'src/common/Telemetry/readme.md', 'src/common/UnitTests-CommonLib/Settings.Tests.cpp', 'src/common/UnitTests-CommonLib/UnitTests-CommonLib.vcxproj', 'src/common/UnitTests-CommonLib/UnitTests-CommonLib.vcxproj.filters', 'src/common/UnitTests-CommonLib/pch.cpp', 'src/common/UnitTests-CommonLib/pch.h', 'src/common/animation.cpp', 'src/common/animation.h', 'src/common/async_message_queue.h', 'src/common/common.cpp', 'src/common/common.h', 'src/common/common.vcxproj', 'src/common/common.vcxproj.filters', 'src/common/d2d_svg.cpp', 'src/common/d2d_svg.h', 'src/common/d2d_text.cpp', 'src/common/d2d_text.h', 'src/common/d2d_window.cpp', 'src/common/d2d_window.h', 'src/common/dpi_aware.cpp', 'src/common/dpi_aware.h', 'src/common/monitors.cpp', 'src/common/monitors.h', 'src/common/pch.cpp', 'src/common/pch.h', 'src/common/settings_helpers.cpp', 'src/common/settings_helpers.h', 'src/common/settings_objects.cpp', 'src/common/settings_objects.h', 'src/common/start_visible.cpp', 'src/common/start_visible.h', 'src/common/tasklist_positions.cpp', 'src/common/tasklist_positions.h', 'src/common/two_way_pipe_message_ipc.h', 'src/common/windows_colors.cpp', 'src/common/windows_colors.h', 'src/editor/README.md', 'src/editor/StreamURIResolverFromFile.cpp', 'src/editor/StreamUriResolverFromFile.h', 'src/editor/main.cpp', 'src/editor/pch.cpp', 'src/editor/pch.h', 'src/editor/resource.h', 'src/editor/settings-html/200.html', 'src/editor/settings-html/dist/bundle.js', 'src/editor/settings-html/index.html', 'src/editor/settings.rc', 'src/editor/settings.vcxproj', 'src/editor/settings.vcxproj.filters', 'src/modules/README.md', 'src/modules/example_powertoy/README.md', 'src/modules/example_powertoy/dllmain.cpp', 'src/modules/example_powertoy/example_powertoy.rc', 'src/modules/example_powertoy/example_powertoy.vcxproj', 'src/modules/example_powertoy/example_powertoy.vcxproj.filters', 'src/modules/example_powertoy/pch.cpp', 'src/modules/example_powertoy/pch.h', 'src/modules/example_powertoy/resource.h', 'src/modules/example_powertoy/trace.cpp', 'src/modules/example_powertoy/trace.h', 'src/modules/fancyzones/FancyZones.png', 'src/modules/fancyzones/FancyZonesSettings.png', 'src/modules/fancyzones/Picker.png', 'src/modules/fancyzones/README.md', 'src/modules/fancyzones/TableEditor.png', 'src/modules/fancyzones/WindowEditor.png', 'src/modules/fancyzones/dll/FancyZonesModule.vcxproj', 'src/modules/fancyzones/dll/FancyZonesModule.vcxproj.filters', 'src/modules/fancyzones/dll/README.md', 'src/modules/fancyzones/dll/dllmain.cpp', 'src/modules/fancyzones/dll/fancyzones.def', 'src/modules/fancyzones/dll/packages.config', 'src/modules/fancyzones/dll/pch.cpp', 'src/modules/fancyzones/dll/pch.h', 'src/modules/fancyzones/dll/targetver.h', 'src/modules/fancyzones/editor/FancyZonesEditor.sln', 'src/modules/fancyzones/editor/FancyZonesEditor/App.config', 'src/modules/fancyzones/editor/FancyZonesEditor/App.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/App.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasEditor.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasEditor.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasEditorWindow.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasEditorWindow.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasZone.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasZone.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/EditorOverlay.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/EditorOverlay.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/EditorWindow.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/FancyZonesEditor.csproj', 'src/modules/fancyzones/editor/FancyZonesEditor/GridEditor.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/GridEditor.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/GridEditorWindow.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/GridEditorWindow.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/GridResizer.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/GridResizer.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/GridZone.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/GridZone.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/LayoutPreview.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/LayoutPreview.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/MainWindow.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/MainWindow.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/Models/CanvasLayoutModel.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/Models/GridLayoutModel.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/Models/LayoutModel.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/Models/Settings.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/Properties/AssemblyInfo.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/Properties/Resources.Designer.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/Properties/Resources.resx', 'src/modules/fancyzones/editor/FancyZonesEditor/Properties/Settings.Designer.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/Properties/Settings.settings', 'src/modules/fancyzones/editor/FancyZonesEditor/RowColInfo.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/WindowLayout.xaml', 'src/modules/fancyzones/editor/FancyZonesEditor/WindowLayout.xaml.cs', 'src/modules/fancyzones/editor/FancyZonesEditor/images/ChromeClose.png', 'src/modules/fancyzones/editor/FancyZonesEditor/images/Delete.png', 'src/modules/fancyzones/editor/FancyZonesEditor/images/Merge.png', 'src/modules/fancyzones/lib/FancyZones.cpp', 'src/modules/fancyzones/lib/FancyZones.h', 'src/modules/fancyzones/lib/FancyZonesLib.vcxproj', 'src/modules/fancyzones/lib/FancyZonesLib.vcxproj.filters', 'src/modules/fancyzones/lib/RegistryHelpers.h', 'src/modules/fancyzones/lib/Settings.cpp', 'src/modules/fancyzones/lib/Settings.h', 'src/modules/fancyzones/lib/Zone.cpp', 'src/modules/fancyzones/lib/Zone.h', 'src/modules/fancyzones/lib/ZoneSet.cpp', 'src/modules/fancyzones/lib/ZoneSet.h', 'src/modules/fancyzones/lib/ZoneWindow.cpp', 'src/modules/fancyzones/lib/ZoneWindow.h', 'src/modules/fancyzones/lib/fancyzones.rc', 'src/modules/fancyzones/lib/packages.config', 'src/modules/fancyzones/lib/pch.cpp', 'src/modules/fancyzones/lib/pch.h', 'src/modules/fancyzones/lib/resource.h', 'src/modules/fancyzones/lib/trace.cpp', 'src/modules/fancyzones/lib/trace.h', 'src/modules/fancyzones/lib/util.h', 'src/modules/fancyzones/tests/UnitTests/RegistryHelpers.Spec.cpp', 'src/modules/fancyzones/tests/UnitTests/UnitTests.vcxproj', 'src/modules/fancyzones/tests/UnitTests/UnitTests.vcxproj.filters', 'src/modules/fancyzones/tests/UnitTests/Util.Spec.cpp', 'src/modules/fancyzones/tests/UnitTests/Util.h', 'src/modules/fancyzones/tests/UnitTests/Zone.Spec.cpp', 'src/modules/fancyzones/tests/UnitTests/ZoneSet.Spec.cpp', 'src/modules/fancyzones/tests/UnitTests/ZoneWindow.Spec.cpp', 'src/modules/fancyzones/tests/UnitTests/packages.config', 'src/modules/fancyzones/tests/UnitTests/pch.cpp', 'src/modules/fancyzones/tests/UnitTests/pch.h', 'src/modules/interface/README.md', 'src/modules/interface/lowlevel_keyboard_event_data.h', 'src/modules/interface/powertoy_module_interface.h', 'src/modules/interface/win_hook_event_data.h', 'src/modules/shortcut_guide/README.md', 'src/modules/shortcut_guide/dllmain.cpp', 'src/modules/shortcut_guide/keyboard_state.cpp', 'src/modules/shortcut_guide/keyboard_state.h', 'src/modules/shortcut_guide/overlay_window.cpp', 'src/modules/shortcut_guide/overlay_window.h', 'src/modules/shortcut_guide/pch.cpp', 'src/modules/shortcut_guide/pch.h', 'src/modules/shortcut_guide/resource.h', 'src/modules/shortcut_guide/shortcut_guide.cpp', 'src/modules/shortcut_guide/shortcut_guide.h', 'src/modules/shortcut_guide/shortcut_guide.rc', 'src/modules/shortcut_guide/shortcut_guide.vcxproj', 'src/modules/shortcut_guide/shortcut_guide.vcxproj.filters', 'src/modules/shortcut_guide/target_state.cpp', 'src/modules/shortcut_guide/target_state.h', 'src/modules/shortcut_guide/trace.cpp', 'src/modules/shortcut_guide/trace.h', 'src/runner/README.md', 'src/runner/auto_start_helper.cpp', 'src/runner/auto_start_helper.h', 'src/runner/general_settings.cpp', 'src/runner/general_settings.h', 'src/runner/lowlevel_keyboard_event.cpp', 'src/runner/lowlevel_keyboard_event.h', 'src/runner/main.cpp', 'src/runner/pch.cpp', 'src/runner/pch.h', 'src/runner/powertoy_module.cpp', 'src/runner/powertoy_module.h', 'src/runner/powertoys_events.cpp', 'src/runner/powertoys_events.h', 'src/runner/resource.h', 'src/runner/runner.rc', 'src/runner/runner.vcxproj', 'src/runner/runner.vcxproj.filters', 'src/runner/settings_window.cpp', 'src/runner/settings_window.h', 'src/runner/svgs/0.svg', 'src/runner/svgs/1.svg', 'src/runner/svgs/2.svg', 'src/runner/svgs/3.svg', 'src/runner/svgs/4.svg', 'src/runner/svgs/5.svg', 'src/runner/svgs/6.svg', 'src/runner/svgs/7.svg', 'src/runner/svgs/8.svg', 'src/runner/svgs/9.svg', 'src/runner/svgs/icon.ico', 'src/runner/svgs/no_active_window.svg', 'src/runner/svgs/overlay.svg', 'src/runner/svgs/overlay_portrait.svg', 'src/runner/trace.cpp', 'src/runner/trace.h', 'src/runner/tray_icon.cpp', 'src/runner/tray_icon.h', 'src/runner/unhandled_exception_handler.cpp', 'src/runner/unhandled_exception_handler.h', 'src/runner/win_hook_event.cpp', 'src/runner/win_hook_event.h', 'src/settings-web/.gitignore', 'src/settings-web/README.md', 'src/settings-web/index.html', 'src/settings-web/just.config.js', 'src/settings-web/package-lock.json', 'src/settings-web/package.json', 'src/settings-web/src/components/App.tsx', 'src/settings-web/src/components/BaseSettingsControl.tsx', 'src/settings-web/src/components/BoolToggleSettingsControl.tsx', 'src/settings-web/src/components/ColorPickerSettingsControl.tsx', 'src/settings-web/src/components/CustomActionSettingsControl.tsx', 'src/settings-web/src/components/CustomSettingsScreen.tsx', 'src/settings-web/src/components/GeneralSettings.tsx', 'src/settings-web/src/components/IntSpinnerSettingsControl.tsx', 'src/settings-web/src/components/StringTextSettingsControl.tsx', 'src/settings-web/src/components/fabric.png', 'src/settings-web/src/css/layout.css', 'src/settings-web/src/icons/README.md', 'src/settings-web/src/icons/config/fabric-icons.json', 'src/settings-web/src/icons/css/fabric-icons-inline.css', 'src/settings-web/src/icons/css/fabric-icons.css', 'src/settings-web/src/icons/fabric-icons.html', 'src/settings-web/src/icons/fonts/fabric-icons.woff', 'src/settings-web/src/icons/microsoft-ui-fabric-assets-license.pdf', 'src/settings-web/src/icons/scss/fabric-icons-inline.scss', 'src/settings-web/src/icons/scss/fabric-icons.scss', 'src/settings-web/src/icons/src/IconNames.ts', 'src/settings-web/src/icons/src/data/AllIconNames.json', 'src/settings-web/src/icons/src/fabric-icons.ts', 'src/settings-web/src/icons/src/iconAliases.ts', 'src/settings-web/src/icons/src/index.ts', 'src/settings-web/src/index.tsx', 'src/settings-web/src/setup_icons.tsx', 'src/settings-web/src/svg/animated_gif_recorder.svg', 'src/settings-web/src/svg/batch_renamer.svg', 'src/settings-web/src/svg/fancy_zones.svg', 'src/settings-web/src/svg/maximize_new_desktop.svg', 'src/settings-web/src/svg/shortcut_guide.svg', 'src/settings-web/src/svg/terminate_tool.svg', 'src/settings-web/tsconfig.json', 'src/settings-web/typings/just-scripts.d.ts', 'src/settings-web/webpack.config.js', 'src/settings-web/webpack.serve.config.js', 'tools/project_template/ModuleTemplate/ModuleTemplate.rc', 'tools/project_template/ModuleTemplate/ModuleTemplate.vcxproj', 'tools/project_template/ModuleTemplate/ModuleTemplate.vcxproj.filters', 'tools/project_template/ModuleTemplate/README.md', 'tools/project_template/ModuleTemplate/dllmain.cpp', 'tools/project_template/ModuleTemplate/pch.cpp', 'tools/project_template/ModuleTemplate/pch.h', 'tools/project_template/ModuleTemplate/resource.h', 'tools/project_template/ModuleTemplate/trace.cpp', 'tools/project_template/ModuleTemplate/trace.h', 'tools/project_template/PowerToysModuleTemplate.zip', 'tools/project_template/README.md', 'tools/project_template/TemplateIcon.ico']",1,"[{'Commit_ID': 'c4c9a851fc66226e307ed56eab700a7ec2865fe2', 'Commit_Message': 'FancyZones and Shortcut Guide initial commit\n\nCo-authored-by: Alexis Campailla <alexis@janeasystems.com>\nCo-authored-by: Bret Anderson <bretan@microsoft.com>\nCo-authored-by: Enrico Giordani <enrico.giordani@gmail.com>\nCo-authored-by: Jaime Bernardo <jaime@janeasystems.com>\nCo-authored-by: Jeff Bogdan <jeffbog@microsoft.com>\nCo-authored-by: March Rogers <marchr@microsoft.com>\nCo-authored-by: Mike Harsh <mharsh@microsoft.com>\nCo-authored-by: Nachum Bundak <Nachum.Bundak@microsoft.com>\nCo-authored-by: Oliver Jones <ojones@microsoft.com>\nCo-authored-by: Patrick Little <plittle@microsoft.com>', 'Commit_Timestamp': datetime.datetime(2019, 9, 5, 15, 20, 25)}]","[{'Name': '.gitattributes', 'Line Additions': 1, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1 @@\n+*.rc diff\r'}, {'Name': '.github/ISSUE_TEMPLATE/bug_report.md', 'Line Additions': 37, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,37 @@\n+---\n+name: Bug report\n+about: Report errors or unexpected behavior\n+title: \'\'\n+labels: \'\'\n+assignees: \'\'\n+\n+---\n+\n+<!--\n+**Important: When reporting BSODs or security issues, DO NOT attach memory dumps, logs, or traces to Github issues**.\n+Instead, send dumps/traces to secure@microsoft.com, referencing this GitHub issue.\n+-->\n+\n+# Environment\n+\n+```\n+Windows build number: [run ""ver"" at a command prompt]\n+PowerToys version: \n+PowerToy module for which you are reporting the bug (if applicable):\n+```\n+\n+# Steps to reproduce\n+\n+<!-- A description of how to trigger this bug. -->\n+\n+# Expected behavior\n+\n+<!-- A description of what you\'re expecting, possibly containing screenshots or reference material. -->\n+\n+# Actual behavior\n+\n+<!-- What\'s actually happening? -->\n+\n+# Screenshots\n+\n+<!-- If applicable, add screenshots to help explain your problem. -->'}, {'Name': '.github/ISSUE_TEMPLATE/documentation-issue.md', 'Line Additions': 10, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,10 @@\n+---\n+name: Documentation Issue\n+about: Report issues in our documentation\n+title: ''\n+labels: ''\n+assignees: ''\n+\n+---\n+\n+<!-- Briefly describe which document needs to be corrected and why. -->""}, {'Name': '.github/ISSUE_TEMPLATE/feature_request.md', 'Line Additions': 21, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,21 @@\n+---\n+name: Feature request\n+about: Suggest an idea for this project\n+title: ''\n+labels: ''\n+assignees: ''\n+\n+---\n+\n+# Summary of the new feature/enhancement\n+\n+<!-- \n+A clear and concise description of what the problem is that the new feature would solve.\n+Describe why and how a user would use this new functionality (if applicable).\n+-->\n+\n+# Proposed technical implementation details (optional)\n+\n+<!-- \n+A clear and concise description of what you want to happen.\n+-->""}, {'Name': '.github/pull_request_template.md', 'Line Additions': 19, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,19 @@\n+<!-- Enter a brief description/summary of your PR here. What does it fix/what does it change/how was it tested (even manually, if necessary)? -->\n+## Summary of the Pull Request\n+\n+<!-- Other than the issue solved, is this relevant to any other issues/existing PRs? --> \n+## References\n+\n+<!-- Please review the items on the PR checklist before submitting-->\n+## PR Checklist\n+* [ ] Closes #xxx\n+* [ ] CLA signed. If not, go over [here](https://cla.opensource.microsoft.com/microsoft/PowerToys) and sign the CLA\n+* [ ] Tests added/passed\n+* [ ] Requires documentation to be updated\n+* [ ] I've discussed this with core contributors already. If not checked, I'm ready to accept this work might be rejected in favor of a different grand plan. Issue number where discussion took place: #xxx\n+\n+<!-- Provide a more detailed description of the PR, other things fixed or any additional comments/features here -->\n+## Detailed Description of the Pull Request / Additional comments\n+\n+<!-- Describe how you validated the behavior. Add automated tests wherever possible, but list manual validation steps taken as well -->\n+## Validation Steps Performed""}, {'Name': '.pipelines/build.cmd', 'Line Additions': 2, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,2 @@\n+cd /D ""%~dp0""\n+dotnet build --no-restore ..\\PowerToys.sln || exit /b 1'}, {'Name': '.pipelines/pipeline.user.windows.yml', 'Line Additions': 43, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,43 @@\n+environment:\n+  host:\n+    os: 'windows'\n+    flavor: 'server'\n+    version: '2016'\n+  runtime:\n+    provider: 'appcontainer'\n+    image: 'cdpxwinrs4test.azurecr.io/global/vse2017u7-external-azsdk-mobile-ext-win1803:latest-nodetools'\n+    source_mode: 'link'\n+\n+signing_options:\n+  profile: 'azure'\n+\n+package_sources:\n+  nuget:\n+    feeds:\n+      'Toolset': 'https://msazure.pkgs.visualstudio.com/_packaging/Toolset/nuget/v3/index.json'\n+      'CloudES-CDP': 'https://cloudes.pkgs.visualstudio.com/_packaging/CDP/nuget/v3/index.json'\n+      'CloudES-Internal': 'https://cloudes.pkgs.visualstudio.com/_packaging/Internal/nuget/v3/index.json'\n+      'MsNugetMirror': 'https://msazure.pkgs.visualstudio.com/_packaging/MsNugetMirror/nuget/v3/index.json'\n+      'NugetMirror': 'https://msazure.pkgs.visualstudio.com/_packaging/NugetMirror/nuget/v3/index.json'\n+      'CorextMirror': 'https://msazure.pkgs.visualstudio.com/_packaging/CorextMirror/nuget/v3/index.json'\n+      'Official': 'https://msazure.pkgs.visualstudio.com/_packaging/Official/nuget/v3/index.json'\n+      'Toolset': 'https://msazure.pkgs.visualstudio.com/_packaging/Toolset/nuget/v3/index.json'\n+      'AzureCXP': 'https://msazure.pkgs.visualstudio.com/_packaging/AzureCXP/nuget/v3/index.json'\n+\n+restore:\n+  commands:\n+    - !!defaultcommand\n+      name: 'Restore CSharp'\n+      command: '.pipelines\\restore.cmd'\n+      \n+build:\n+  commands:\n+    - !!buildcommand\n+      name: 'Build CSharp'\n+      command: '.pipelines\\build.cmd'\n+      artifacts:\n+        - from: '**\\bin'\n+          to: 'Build_Output'\n+          include:\n+            - '**/*'\n+""}, {'Name': '.pipelines/restore.cmd', 'Line Additions': 3, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,3 @@\n+cd /D ""%~dp0""\n+\n+dotnet restore ..\\PowerToys.sln || exit /b 1'}, {'Name': 'License.rtf', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'PowerToys.sln', 'Line Additions': 120, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,120 @@\n+\ufeff\r\n+Microsoft Visual Studio Solution File, Format Version 12.00\r\n+# Visual Studio Version 16\r\n+VisualStudioVersion = 16.0.28803.452\r\n+MinimumVisualStudioVersion = 10.0.40219.1\r\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""runner"", ""src\\runner\\runner.vcxproj"", ""{9412D5C6-2CF2-4FC2-A601-B55508EA9B27}""\r\n+\tProjectSection(ProjectDependencies) = postProject\r\n+\t\t{48804216-2A0E-4168-A6D8-9CD068D14227} = {48804216-2A0E-4168-A6D8-9CD068D14227}\r\n+\t\t{74485049-C722-400F-ABE5-86AC52D929B3} = {74485049-C722-400F-ABE5-86AC52D929B3}\r\n+\t\t{A46629C4-1A6C-40FA-A8B6-10E5102BB0BA} = {A46629C4-1A6C-40FA-A8B6-10E5102BB0BA}\r\n+\t\t{07C389E3-6BC8-41CF-923E-307B1265FA2D} = {07C389E3-6BC8-41CF-923E-307B1265FA2D}\r\n+\tEndProjectSection\r\n+EndProject\r\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""common"", ""src\\common\\common.vcxproj"", ""{74485049-C722-400F-ABE5-86AC52D929B3}""\r\n+EndProject\r\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""shortcut_guide"", ""src\\modules\\shortcut_guide\\shortcut_guide.vcxproj"", ""{A46629C4-1A6C-40FA-A8B6-10E5102BB0BA}""\r\n+EndProject\r\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""example_powertoy"", ""src\\modules\\example_powertoy\\example_powertoy.vcxproj"", ""{44CC9375-3E6E-4D99-8913-7FB748807EBD}""\r\n+EndProject\r\n+Project(""{2150E333-8FDC-42A3-9474-1A3956D46DE8}"") = ""modules"", ""modules"", ""{4574FDD0-F61D-4376-98BF-E5A1262C11EC}""\r\n+EndProject\r\n+Project(""{2150E333-8FDC-42A3-9474-1A3956D46DE8}"") = ""interface"", ""interface"", ""{3BB8493E-D18E-4485-A320-CB40F90F55AE}""\r\n+\tProjectSection(SolutionItems) = preProject\r\n+\t\tsrc\\modules\\interface\\lowlevel_keyboard_event_data.h = src\\modules\\interface\\lowlevel_keyboard_event_data.h\r\n+\t\tsrc\\modules\\interface\\powertoy_module_interface.h = src\\modules\\interface\\powertoy_module_interface.h\r\n+\t\tsrc\\modules\\interface\\win_hook_event_data.h = src\\modules\\interface\\win_hook_event_data.h\r\n+\tEndProjectSection\r\n+EndProject\r\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""settings"", ""src\\editor\\settings.vcxproj"", ""{07C389E3-6BC8-41CF-923E-307B1265FA2D}""\r\n+EndProject\r\n+Project(""{2150E333-8FDC-42A3-9474-1A3956D46DE8}"") = ""fancyzones"", ""fancyzones"", ""{D1D6BC88-09AE-4FB4-AD24-5DED46A791DD}""\r\n+EndProject\r\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""FancyZonesLib"", ""src\\modules\\fancyzones\\lib\\FancyZonesLib.vcxproj"", ""{F9C68EDF-AC74-4B77-9AF1-005D9C9F6A99}""\r\n+EndProject\r\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""fancyzones"", ""src\\modules\\fancyzones\\dll\\FancyZonesModule.vcxproj"", ""{48804216-2A0E-4168-A6D8-9CD068D14227}""\r\n+\tProjectSection(ProjectDependencies) = postProject\r\n+\t\t{5CCC8468-DEC8-4D36-99D4-5C891BEBD481} = {5CCC8468-DEC8-4D36-99D4-5C891BEBD481}\r\n+\tEndProjectSection\r\n+EndProject\r\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""UnitTests-FancyZones"", ""src\\modules\\fancyzones\\tests\\UnitTests\\UnitTests.vcxproj"", ""{9C6A7905-72D4-4BF5-B256-ABFDAEF68AE9}""\r\n+EndProject\r\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""cpprestsdk"", ""deps\\cpprestsdk\\cpprestsdk.vcxproj"", ""{4E577735-DFAB-41AF-8A6E-B6E8872A2928}""\r\n+EndProject\r\n+Project(""{2150E333-8FDC-42A3-9474-1A3956D46DE8}"") = ""deps"", ""deps"", ""{1FAF749F-0D6F-4BF5-A563-31A4B5279D27}""\r\n+EndProject\r\n+Project(""{2150E333-8FDC-42A3-9474-1A3956D46DE8}"") = ""common"", ""common"", ""{1AFB6476-670D-4E80-A464-657E01DFF482}""\r\n+EndProject\r\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""UnitTests-CommonLib"", ""src\\common\\UnitTests-CommonLib\\UnitTests-CommonLib.vcxproj"", ""{1A066C63-64B3-45F8-92FE-664E1CCE8077}""\r\n+EndProject\r\n+Project(""{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"") = ""FancyZonesEditor"", ""src\\modules\\fancyzones\\editor\\FancyZonesEditor\\FancyZonesEditor.csproj"", ""{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}""\r\n+EndProject\r\n+Global\r\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n+\t\tDebug|x64 = Debug|x64\r\n+\t\tRelease|x64 = Release|x64\r\n+\tEndGlobalSection\r\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n+\t\t{9412D5C6-2CF2-4FC2-A601-B55508EA9B27}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{9412D5C6-2CF2-4FC2-A601-B55508EA9B27}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{9412D5C6-2CF2-4FC2-A601-B55508EA9B27}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{9412D5C6-2CF2-4FC2-A601-B55508EA9B27}.Release|x64.Build.0 = Release|x64\r\n+\t\t{74485049-C722-400F-ABE5-86AC52D929B3}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{74485049-C722-400F-ABE5-86AC52D929B3}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{74485049-C722-400F-ABE5-86AC52D929B3}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{74485049-C722-400F-ABE5-86AC52D929B3}.Release|x64.Build.0 = Release|x64\r\n+\t\t{A46629C4-1A6C-40FA-A8B6-10E5102BB0BA}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{A46629C4-1A6C-40FA-A8B6-10E5102BB0BA}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{A46629C4-1A6C-40FA-A8B6-10E5102BB0BA}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{A46629C4-1A6C-40FA-A8B6-10E5102BB0BA}.Release|x64.Build.0 = Release|x64\r\n+\t\t{44CC9375-3E6E-4D99-8913-7FB748807EBD}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{44CC9375-3E6E-4D99-8913-7FB748807EBD}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{07C389E3-6BC8-41CF-923E-307B1265FA2D}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{07C389E3-6BC8-41CF-923E-307B1265FA2D}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{07C389E3-6BC8-41CF-923E-307B1265FA2D}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{07C389E3-6BC8-41CF-923E-307B1265FA2D}.Release|x64.Build.0 = Release|x64\r\n+\t\t{F9C68EDF-AC74-4B77-9AF1-005D9C9F6A99}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{F9C68EDF-AC74-4B77-9AF1-005D9C9F6A99}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{F9C68EDF-AC74-4B77-9AF1-005D9C9F6A99}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{F9C68EDF-AC74-4B77-9AF1-005D9C9F6A99}.Release|x64.Build.0 = Release|x64\r\n+\t\t{48804216-2A0E-4168-A6D8-9CD068D14227}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{48804216-2A0E-4168-A6D8-9CD068D14227}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{48804216-2A0E-4168-A6D8-9CD068D14227}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{48804216-2A0E-4168-A6D8-9CD068D14227}.Release|x64.Build.0 = Release|x64\r\n+\t\t{9C6A7905-72D4-4BF5-B256-ABFDAEF68AE9}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{9C6A7905-72D4-4BF5-B256-ABFDAEF68AE9}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{9C6A7905-72D4-4BF5-B256-ABFDAEF68AE9}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{9C6A7905-72D4-4BF5-B256-ABFDAEF68AE9}.Release|x64.Build.0 = Release|x64\r\n+\t\t{4E577735-DFAB-41AF-8A6E-B6E8872A2928}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{4E577735-DFAB-41AF-8A6E-B6E8872A2928}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{4E577735-DFAB-41AF-8A6E-B6E8872A2928}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{4E577735-DFAB-41AF-8A6E-B6E8872A2928}.Release|x64.Build.0 = Release|x64\r\n+\t\t{1A066C63-64B3-45F8-92FE-664E1CCE8077}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{1A066C63-64B3-45F8-92FE-664E1CCE8077}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{1A066C63-64B3-45F8-92FE-664E1CCE8077}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{1A066C63-64B3-45F8-92FE-664E1CCE8077}.Release|x64.Build.0 = Release|x64\r\n+\t\t{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}.Debug|x64.ActiveCfg = Debug|x64\r\n+\t\t{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}.Debug|x64.Build.0 = Debug|x64\r\n+\t\t{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}.Release|x64.ActiveCfg = Release|x64\r\n+\t\t{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}.Release|x64.Build.0 = Release|x64\r\n+\tEndGlobalSection\r\n+\tGlobalSection(SolutionProperties) = preSolution\r\n+\t\tHideSolutionNode = FALSE\r\n+\tEndGlobalSection\r\n+\tGlobalSection(NestedProjects) = preSolution\r\n+\t\t{74485049-C722-400F-ABE5-86AC52D929B3} = {1AFB6476-670D-4E80-A464-657E01DFF482}\r\n+\t\t{A46629C4-1A6C-40FA-A8B6-10E5102BB0BA} = {4574FDD0-F61D-4376-98BF-E5A1262C11EC}\r\n+\t\t{44CC9375-3E6E-4D99-8913-7FB748807EBD} = {4574FDD0-F61D-4376-98BF-E5A1262C11EC}\r\n+\t\t{3BB8493E-D18E-4485-A320-CB40F90F55AE} = {4574FDD0-F61D-4376-98BF-E5A1262C11EC}\r\n+\t\t{D1D6BC88-09AE-4FB4-AD24-5DED46A791DD} = {4574FDD0-F61D-4376-98BF-E5A1262C11EC}\r\n+\t\t{F9C68EDF-AC74-4B77-9AF1-005D9C9F6A99} = {D1D6BC88-09AE-4FB4-AD24-5DED46A791DD}\r\n+\t\t{48804216-2A0E-4168-A6D8-9CD068D14227} = {D1D6BC88-09AE-4FB4-AD24-5DED46A791DD}\r\n+\t\t{9C6A7905-72D4-4BF5-B256-ABFDAEF68AE9} = {D1D6BC88-09AE-4FB4-AD24-5DED46A791DD}\r\n+\t\t{4E577735-DFAB-41AF-8A6E-B6E8872A2928} = {1FAF749F-0D6F-4BF5-A563-31A4B5279D27}\r\n+\t\t{1A066C63-64B3-45F8-92FE-664E1CCE8077} = {1AFB6476-670D-4E80-A464-657E01DFF482}\r\n+\t\t{5CCC8468-DEC8-4D36-99D4-5C891BEBD481} = {D1D6BC88-09AE-4FB4-AD24-5DED46A791DD}\r\n+\tEndGlobalSection\r\n+\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n+\t\tSolutionGuid = {C3A2F9D1-7930-4EF4-A6FC-7EE0A99821D0}\r\n+\tEndGlobalSection\r\n+EndGlobal\r'}, {'Name': 'README.md', 'Line Additions': 107, 'Line Deletions': 62, 'Patch': ""@@ -1,62 +1,107 @@\n-\r\n-# Overview\r\n-\r\n-PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity.  \r\n-\r\n-Inspired by the [Windows 95 era PowerToys project](https://en.wikipedia.org/wiki/Microsoft_PowerToys), this reboot provides power users with ways to squeeze more efficiency out of the Windows 10 shell and customize it for individual workflows.  A great overview of the Windows 95 PowerToys can be found [here](https://socket3.wordpress.com/2016/10/22/using-windows-95-powertoys/).\r\n-\r\n-The first preview of these utilities and corresponding source code will be released Summer 2019.\r\n-\r\n-![logo](Logo.jpg)\r\n-\r\n-# What's Happening\r\n-\r\n-## June Update\r\n-Since the announcement of the PowerToys reboot at BUILD, the interest in the project has been incredible to see.  Due to the excitement we are optimizing the first preview to make it easy to integrate new utilities into the repo.  We also have two interns working on additional PowerToys.  The specs for these are:\r\n-\r\n-* [Process terminate tool](https://github.com/indierawk2k2/PowerToys-1/blob/master/specs/Terminate%20Spec.md)\r\n-* [Batch file renamer](https://github.com/indierawk2k2/PowerToys-1/blob/master/specs/File%20Classification%20Spec.md)\r\n-* [Animated gif screen recorder](https://github.com/indierawk2k2/PowerToys-1/blob/master/specs/GIF%20Maker%20Spec.md)\r\n-\r\n-Finally, we are organizing a team to productize an internal window manager into the PowerToys project for the 2019 [One Week Hackathon](https://www.onmsft.com/news/take-a-peek-inside-microsofts-recent-one-week-hackathon).\r\n-\r\n-We are still targeting to release the preview and code during Summer 2019.\r\n-\r\n-## The first two utilities we're working on are:\r\n-\r\n-1. Maximize to new desktop widget - The MTND widget shows a pop-up button when a user hovers over the maximize / restore button on any window.  Clicking it creates a new desktop, sends the app to that desktop and maximizes the app on the new desktop.\r\n-\r\n-![Maximize to new desktop widget](MTNDWidget.jpg)\r\n-\r\n-2. Windows key shortcut guide - The shortcut guide appears when a user holds the Windows key down for more than one second and shows the available shortcuts for the current state of the desktop.\r\n-\r\n-![Windows key shortcut guide](WindowsKeyShortcutGuide.jpg)\r\n-\r\n-# Backlog\r\n-\r\n-Here's the current set of utilities we're considering.  Please use issues and +1's to guide the project to suggest new ideas and help us prioritize the list below.\r\n-\r\n-1. [Full window manager including specific layouts for docking and undocking laptops](https://github.com/microsoft/PowerToys/issues/4)\r\n-2. [Keyboard shortcut manager](https://github.com/microsoft/PowerToys/issues/6)\r\n-3. [Win+R replacement](https://github.com/microsoft/PowerToys/issues/44)\r\n-4. Better Alt+Tab including browser tab integration and search for running apps\r\n-5. [Battery tracker](https://github.com/microsoft/PowerToys/issues/7)\r\n-6. [Batch file re-namer](https://github.com/microsoft/PowerToys/issues/101)\r\n-7. [Quick resolution swaps in taskbar](https://github.com/microsoft/PowerToys/issues/27)\r\n-8. Mouse events without focus\r\n-9. Cmd (or PS or Bash) from here\r\n-10. Contents menu file browsing\r\n-\r\n-# Contributing\r\n-\r\n-This project welcomes contributions and suggestions.  Most contributions require you to agree to a\r\n-Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\r\n-the rights to use your contribution. For details, visit https://cla.microsoft.com.\r\n-\r\n-When you submit a pull request, a CLA-bot will automatically determine whether you need to provide\r\n-a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\r\n-provided by the bot. You will only need to do this once across all repos using our CLA.\r\n-\r\n-This project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\r\n-For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\r\n-contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\r\n+# Overview\n+\n+PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity.  \n+\n+Inspired by the [Windows 95 era PowerToys project](https://en.wikipedia.org/wiki/Microsoft_PowerToys), this reboot provides power users with ways to squeeze more efficiency out of the Windows 10 shell and customize it for individual workflows.  A great overview of the Windows 95 PowerToys can be found [here](https://socket3.wordpress.com/2016/10/22/using-windows-95-powertoys/).\n+\n+The first preview of these utilities can be installed from [here](https://github.com/Microsoft/powertoys/releases).\n+\n+![logo](doc/images/Logo.jpg)\n+\n+# What's Happening\n+\n+## September Update\n+The first preview release of the PowerToys utilities and source code is now live!  This release includes two preview quality utilities as well as the tools and docs to make it easy to create new PowerToys utilities.  \n+\n+1. [FancyZones](/src/modules/fancyzones/) - FancyZones is a window manager that makes it easy to create copmlex window layouts and quickly position windows into those layouts.  The FancyZones backlog can be found [here](https://github.com/Microsoft/PowerToys/tree/master/doc/planning/FancyZonesBacklog.md)\n+\n+![FancyZones](src/modules/fancyzones/FancyZones.png)\n+\n+FanzyZones Video Tutorial\n+[![FancyZones Video Tutorial](doc/images/FZTutorial.jpg)](https://www.youtube.com/watch?v=rTtGzZYAXgY)\n+\n+2. [Windows key shortcut guide](/src/modules/shortcut_guide) - The shortcut guide appears when a user holds the Windows key down for more than one second and shows the available shortcuts for the current state of the desktop.  The shortcut guide backlog can be found [here](https://github.com/Microsoft/PowerToys/tree/master/doc/planning/ShortcutGuideBacklog.md)\n+\n+![Windows key shortcut guide](doc/images/WindowsKeyShortcutGuide.jpg)\n+\n+Additional utilities in the pipeline are:\n+\n+* Maximize to new desktop widget - The MTND widget shows a pop-up button when a user hovers over the maximize / restore button on any window.  Clicking it creates a new desktop, sends the app to that desktop and maximizes the app on the new desktop.\n+* [Process terminate tool](https://github.com/indierawk2k2/PowerToys-1/blob/master/specs/Terminate%20Spec.md)\n+* [Batch file renamer](https://github.com/indierawk2k2/PowerToys-1/blob/master/specs/File%20Classification%20Spec.md)\n+* [Animated gif screen recorder](https://github.com/indierawk2k2/PowerToys-1/blob/master/specs/GIF%20Maker%20Spec.md)\n+\n+# Backlog\n+\n+The full backlog of utilities can be found [here](https://github.com/Microsoft/PowerToys/tree/master/doc/planning/PowerToysBacklog.md)\n+\n+# Where to download PowerToys\n+\n+  The latest release of PowerToys can be downloaded from https://github.com/microsoft/PowerToys/releases <br />\n+  Click on `Assets` to show the files available in the release and then click on `PowerToysSetup.msi` to download the PowerToys installer. <br />\n+  PDB symbols for the release are available in a separate zip file `PDB symbols.zip`.\n+\n+# Developer Guidance\n+\n+## Build Prerequisites\n+ * Windows 10 1803 (build 10.0.17134.0) or above in order to build and run PowerToys.\n+ * Visual Studio 2019 Community edition or higher, with the 'Desktop Development with C++' component and the Windows 10 SDK version 10.0.18362.0 or higher.\n+ \n+## Building the Code\n+ * Open `powertoys.sln` in Visual Studio, in the `Solutions Configuration` drop-down menu select `Release` or `Debug`, from the `Build` menu choose `Build Solution`.\n+ * The PowerToys binaries will be located in your repo under `x64\\Release`.\n+ * If you want to copy the `PowerToys.exe` binary to a different location, you'll also need to copy the `modules` and the `svgs` folders.\n+\n+## Prerequisites to Build the Installer\n+ * Install the [WiX Toolset Visual Studio 2019 Extension](https://marketplace.visualstudio.com/items?itemName=RobMensching.WiXToolset).\n+ * Install the [WiX Toolset build tools](https://wixtoolset.org/releases/).\n+ \n+## Building the .msi Installer\n+  * From the `installer` folder open `PowerToysSetup.sln` in Visual Studio, in the `Solutions Configuration` drop-down menu select `Release` or `Debug`, from the `Build` menu choose `Build Solution`.\n+  * The resulting `PowerToysSetup.msi` installer will be available in the `installer\\PowerToysSetup\\x64\\Release\\` folder.\n+\n+## Debugging\n+  The following configuration issue only applies if the user is a member of the Administrators group.\n+  \n+  Some PowerToys modules require to run with the highest permission level if the current user is a member of the Administrators group. The highest permission level is required in order to be able to perform some actions when an elevated application (e.g. Task Manager) is in the foreground or is the target of an action. Without elevated privileges some PowerToys modules will still work but with some limitations:\n+ - the `FancyZones` module will be not be able to move an elevated window to a zone.\n+ - the `Shortcut Guide` module will not appear if the foreground window belongs to an elevated application.\n+ \n+ In order to run and debug PowerToys from Visual Studio when the user is a member of the Administrators group, Visual Studio has to be started with elevated privileges. If you want to avoid running Visual Studio with elevated privileges and don't mind the limitations described above, you can do the following: open the `runner` project properties and navigate to the `Linker -> Manifest File` settings, edit the `UAC Execution Level` property and change it from `highestAvailable (/level='highestAvailable')` to `asInvoker (/level='asInvoker')`, save the changes.\n+ \n+## How to create new PowerToys\n+\n+See the instructions on [how to install the PowerToys Module project template](tools/project_template). <br />\n+Specifications for the [PowerToys settings API](doc/specs/PowerToys-settings.md).\n+\n+## Coding Guidance\n+\n+Please review these brief docs below relating to our coding standards etc.\n+\n+> 👉 If you find something missing from these docs, feel free to contribute to any of our documentation files anywhere in the repository (or make some new ones\\!)\n+\n+This is a work in progress as we learn what we'll need to provide people in order to be effective contributors to our project.\n+- [Coding Style](doc/coding/style.md)\n+- [Code Organization](doc/coding/organization.md)\n+\n+# Contributing\n+This project welcomes contributions and suggestions and we are excited to work with the power user community to build a set of tools for helping you get the most our of Windows.\n+\n+We ask that **before you start work on a feature that you would like to contribute**, please read our [Contributor's Guide](contributing.md). We will be happy to work with you to figure out the best approach, provide guidance and mentorship throughout feature development, and help avoid any wasted or duplicate effort.\n+\n+> ⚠ **Note**: PowerToys is still a nascent project and the team is actively working out of this repository.  We will be periodically re-structuring the code to make it easier to comprehend, navigate, build, test, and contribute to, so **DO expect significant changes to code layout on a regular basis**.\n+\n+> ⚠ **License Info**: Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.microsoft.com.\n+\n+When you submit a pull request, a CLA-bot will automatically determine whether you need to provide\n+a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\n+provided by the bot. You will only need to do this once across all repos using our CLA.\n+\n+# Code of Conduct\n+\n+This project has adopted the [Microsoft Open Source Code of Conduct][conduct-code]. <br />\n+For more information see the [Code of Conduct FAQ][conduct-FAQ] or contact [opencode@microsoft.com][conduct-email] with any additional questions or comments.\n+\n+[conduct-code]: https://opensource.microsoft.com/codeofconduct/ \n+[conduct-FAQ]: https://opensource.microsoft.com/codeofconduct/faq/\n+[conduct-email]: mailto:opencode@microsoft.com""}, {'Name': 'build/pipelines/ci.yml', 'Line Additions': 24, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,24 @@\n+trigger:\n+  batch: true\n+  branches:\n+    include:\n+      - master\n+  paths:\n+    exclude:\n+      - doc/*\n+      - temp/*\n+      - tools/*\n+\n+pr:\n+  branches:\n+    include:\n+      - master\n+\n+#     0.0.yyMM.dd##\n+#     0.0.1904.0900\n+name: 0.0.$(Date:yyMM).$(Date:dd)$(Rev:rr)\n+\n+jobs:\n+  - template: ./templates/build-powertoys-ci.yml\n+    parameters:\n+      platform: x64'}, {'Name': 'build/pipelines/templates/build-powertoys-ci.yml', 'Line Additions': 17, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,17 @@\n+parameters:\n+  configuration: 'Release'\n+  platform: ''\n+  additionalBuildArguments: ''\n+\n+jobs:\n+- job: Build${{ parameters.platform }}${{ parameters.configuration }}\n+  displayName: Build ${{ parameters.platform }} ${{ parameters.configuration }}\n+  variables:\n+    BuildConfiguration: ${{ parameters.configuration }}\n+    BuildPlatform: ${{ parameters.platform }}\n+  pool: { vmImage: windows-2019 }\n+\n+  steps:\n+  - template: build-powertoys-steps.yml\n+    parameters:\n+      additionalBuildArguments: ${{ parameters.additionalBuildArguments }}\n\\ No newline at end of file""}, {'Name': 'build/pipelines/templates/build-powertoys-steps.yml', 'Line Additions': 35, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,35 @@\n+parameters:\n+  additionalBuildArguments: ''\n+\n+steps:\n+- checkout: self\n+  submodules: true\n+  clean: true\n+\n+- task: NuGetToolInstaller@0\n+  displayName: Ensure NuGet 4.8.1\n+  inputs:\n+    versionSpec: 4.8.1\n+\n+- task: VisualStudioTestPlatformInstaller@1\n+  displayName: Ensure VSTest Platform\n+\n+- task: NuGetCommand@2\n+  displayName: Restore NuGet packages\n+  inputs:\n+    command: restore\n+    feedsToUse: config\n+    configPath: NuGet.config\n+    restoreSolution: PowerToys.sln\n+    restoreDirectory: '$(Build.SourcesDirectory)\\packages'\n+\n+- task: VSBuild@1\n+  displayName: 'Build solution **\\PowerToys.sln'\n+  inputs:\n+    solution: '**\\PowerToys.sln'\n+    vsVersion: 15.0\n+    platform: '$(BuildPlatform)'\n+    configuration: '$(BuildConfiguration)'\n+    msbuildArgs: ${{ parameters.additionalBuildArguments }}\n+    clean: true\n+    maximumCpuCount: true""}, {'Name': 'contributing.md', 'Line Additions': 128, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,128 @@\n+# Power Toys Contributor\'s Guide\n+\n+Below is our guidance for how to report issues, propose new features, and submit contributions via Pull Requests (PRs).\n+\n+## Before you start, file an issue\n+\n+Please follow this simple rule to help us eliminate any unnecessary wasted effort & frustration, and ensure an efficient and effective use of everyone\'s time - yours, ours, and other community members\':\n+\n+> 👉 If you have a question, think you\'ve discovered an issue, would like to propose a new feature, etc., then find/file an issue **BEFORE** starting work to fix/implement it.\n+\n+### Search existing issues first\n+\n+Before filing a new issue, search existing open and closed issues first: It is likely someone else has found the problem you\'re seeing, and someone may be working on or have already contributed a fix!\n+\n+If no existing item describes your issue/feature, great - please file a new issue:\n+\n+### File a new Issue\n+\n+* Don\'t know whether you\'re reporting an issue or requesting a feature? File an issue\n+* Have a question that you don\'t see answered in docs, videos, etc.? File an issue\n+* Want to know if we\'re planning on building a particular feature? File an issue\n+* Got a great idea for a new utility or feature? File an issue/request/idea\n+* Don\'t understand how to do something? File an issue/Community Guidance Request\n+* Found an existing issue that describes yours? Great - upvote and add additional commentary / info / repro-steps / etc.\n+\n+### Complete the template\n+\n+**Please include as much information as possible in your issue**. The more information you provide, the more likely your issue/ask will be understood and implemented. Helpful information includes:\n+\n+* What device you\'re running (inc. CPU type, memory, disk, etc.)\n+* What build of Windows your device is running\n+\n+  👉 Tip: Run the following in PowerShell Core\n+\n+  ```powershell\n+  C:\\> $PSVersionTable.OS\n+  Microsoft Windows 10.0.18909\n+  ```\n+\n+  ... or in Windows PowerShell\n+\n+  ```powershell\n+  C:\\> $PSVersionTable.BuildVersion\n+\n+  Major  Minor  Build  Revision\n+  -----  -----  -----  --------\n+  10     0      18912  1001\n+  ```\n+\n+  ... or Cmd:\n+\n+  ```cmd\n+  C:\\> ver\n+\n+  Microsoft Windows [Version 10.0.18900.1001]\n+  ```\n+\n+* What tools and apps you\'re using (e.g. VS 2019, VSCode, etc.)\n+* Don\'t assume we\'re experts in setting up YOUR environment and don\'t assume we are experts in YOUR workflow. Teach us to help you!\n+* **We LOVE detailed repro steps!** What steps do we need to take to reproduce the issue? Assume we love to read repro steps. As much detail as you can stand is probably _barely_ enough detail for us!\n+* Prefer error message text where possible or screenshots of errors if text cannot be captured\n+* **If you intend to implement the fix/feature yourself then say so!** If you do not indicate otherwise we will assume that the issue is our to solve, or may label the issue as `Help-Wanted`.\n+\n+### DO NOT post ""+1"" comments\n+\n+> ⚠ DO NOT post ""+1"", ""me too"", or similar comments - they just add noise to an issue.\n+\n+If you don\'t have any additional info/context to add but would like to indicate that you\'re affected by the issue, upvote the original issue by clicking its [+😊] button and hitting 👍 (+1) icon. This way we can actually measure how impactful an issue is.\n+\n+---\n+\n+## Contributing fixes / features\n+\n+For those able & willing to help fix issues and/or implement features ...\n+\n+### To Spec or not to Spec\n+\n+Some issues/features may be quick and simple to describe and understand. For such scenarios, once a team member has agreed with your approach, skip ahead to the section headed ""Fork, Branch, and Create your PR"", below.\n+\n+Small issues that do not require a spec will be labelled Issue-Bug or Issue-Task.\n+\n+However, some issues/features will require careful thought & formal design before implementation. For these scenarios, we\'ll request that a spec is written and the associated issue will be labeled Issue-Feature.\n+\n+Specs help collaborators discuss different approaches to solve a problem, describe how the feature will behave, how the feature will impact the user, what happens if something goes wrong, etc. Driving towards agreement in a spec, before any code is written, often results in simpler code, and less wasted effort in the long run.\n+\n+Specs will be managed in a very similar manner as code contributions so please follow the ""Fork, Branch and Create your PR"" below.\n+\n+### Writing / Contributing-to a Spec\n+\n+To write/contribute to a spec: fork, branch and commit via PRs, as you would with any code changes.\n+\n+Specs are written in markdown, stored under the `doc/specs` folder and named `[issue id] - [spec description].md`.\n+\n+👉 **It is important to follow the spec templates and complete the requested information**. The available spec templates will help ensure that specs contain the minimum information & decisions necessary to permit development to begin. In particular, specs require you to confirm that you\'ve already discussed the issue/idea with the team in an issue and that you provide the issue ID for reference.\n+\n+Team members will be happy to help review specs and guide them to completion.\n+\n+### Help Wanted\n+\n+Once the team have approved an issue/spec, development can proceed. If no developers are immediately available, the spec can be parked ready for a developer to get started. Parked specs\' issues will be labeled ""Help Wanted"". To find a list of development opportunities waiting for developer involvement, visit the Issues and filter on [the Help-Wanted label](https://github.com/microsoft/PowerToys/labels/Help-Wanted).\n+\n+---\n+\n+## Development\n+\n+### Fork, Clone, Branch and Create your PR\n+\n+Once you\'ve discussed your proposed feature/fix/etc. with a team member, and you\'ve agreed an approach or a spec has been written and approved, it\'s time to start development:\n+\n+1. Fork the repo if you haven\'t already\n+1. Clone your fork locally\n+1. Create & push a feature branch\n+1. Create a [Draft Pull Request (PR)](https://github.blog/2019-02-14-introducing-draft-pull-requests/)\n+1. Work on your changes\n+\n+### Code Review\n+\n+When you\'d like the team to take a look, (even if the work is not yet fully-complete), mark the PR as \'Ready For Review\' so that the team can review your work and provide comments, suggestions, and request changes. It may take several cycles, but the end result will be solid, testable, conformant code that is safe for us to merge.\n+\n+### Merge\n+\n+Once your code has been reviewed and approved by the requisite number of team members, it will be merged into the master branch. Once merged, your PR will be automatically closed.\n+\n+---\n+\n+## Thank you\n+\n+Thank you in advance for your contribution! '}, {'Name': 'deps/cpprestsdk/README.md', 'Line Additions': 12, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,12 @@\n+# C++ Rest SDK - JSON library\n+\n+This JSON library is taken from the C++ REST SDK in https://github.com/microsoft/cpprestsdk\n+\n+Based in the [v2.10.13 release](https://github.com/microsoft/cpprestsdk/tree/v2.10.13/Release), it consists of the needed files to build and use the JSON classes described in `include/cpprest/json.h`.\n+\n+Changes made to the files in order to build in the PowerToys project:\n+- Removal of `#include` references to files that are not needed.\n+- `#include ""pch.h""` instead of `#include ""stdafx.h""` to use the PowerToys pre-compiled header.\n+- `#define _NO_ASYNCRTIMP` in [`include/cpprest/details/cpprest_compat.h`](./include/cpprest/details/cpprest_compat.h) since this class will be statically linked.\n+\n+The contents of the C++ Rest SDK license are included in [license.txt](./license.txt).'}, {'Name': 'deps/cpprestsdk/cpprestsdk.vcxproj', 'Line Additions': 121, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,121 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\n+<Project DefaultTargets=""Build"" ToolsVersion=""15.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\n+  <ItemGroup Label=""ProjectConfigurations"">\n+    <ProjectConfiguration Include=""Debug|x64"">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=""Release|x64"">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=""Globals"">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{4E577735-DFAB-41AF-8A6E-B6E8872A2928}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>common</RootNamespace>\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\n+    <ProjectName>cpprestsdk</ProjectName>\n+  </PropertyGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\n+  <ImportGroup Label=""ExtensionSettings"">\n+  </ImportGroup>\n+  <ImportGroup Label=""Shared"">\n+  </ImportGroup>\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\n+  </ImportGroup>\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\n+  </ImportGroup>\n+  <PropertyGroup Label=""UserMacros"" />\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <ClCompile>\n+      <PrecompiledHeader>Use</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <SDLCheck>true</SDLCheck>\n+      <PreprocessorDefinitions>_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ConformanceMode>true</ConformanceMode>\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <AdditionalIncludeDirectories>include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Windows</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <ClCompile>\n+      <PrecompiledHeader>Use</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <SDLCheck>true</SDLCheck>\n+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ConformanceMode>true</ConformanceMode>\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <AdditionalIncludeDirectories>include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Windows</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClInclude Include=""include\\cpprest\\asyncrt_utils.h"" />\n+    <ClInclude Include=""include\\cpprest\\base_uri.h"" />\n+    <ClInclude Include=""include\\cpprest\\details\\basic_types.h"" />\n+    <ClInclude Include=""include\\cpprest\\details\\cpprest_compat.h"" />\n+    <ClInclude Include=""include\\cpprest\\details\\SafeInt3.hpp"" />\n+    <ClInclude Include=""include\\cpprest\\details\\web_utilities.h"" />\n+    <ClInclude Include=""include\\cpprest\\json.h"" />\n+    <ClInclude Include=""include\\cpprest\\uri.h"" />\n+    <ClInclude Include=""include\\cpprest\\uri_builder.h"" />\n+    <ClInclude Include=""include\\cpprest\\version.h"" />\n+    <ClInclude Include=""pch.h"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=""src\\json\\json.cpp"" />\n+    <ClCompile Include=""src\\json\\json_parsing.cpp"" />\n+    <ClCompile Include=""src\\json\\json_serialization.cpp"" />\n+    <ClCompile Include=""src\\utilities\\asyncrt_utils.cpp"" />\n+    <ClCompile Include=""src\\utilities\\base64.cpp"" />\n+    <ClCompile Include=""src\\utilities\\web_utilities.cpp"" />\n+    <ClCompile Include=""pch.cpp"">\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\n+    </ClCompile>\n+  </ItemGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\n+  <ImportGroup Label=""ExtensionTargets"">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file'}, {'Name': 'deps/cpprestsdk/include/cpprest/asyncrt_utils.h', 'Line Additions': 697, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,697 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * Various common utilities.\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+\n+#pragma once\n+\n+#include ""cpprest/details/basic_types.h""\n+//#include ""pplx/pplxtasks.h""\n+#include <chrono>\n+#include <cstdint>\n+#include <limits.h>\n+#include <locale.h>\n+#include <random>\n+#include <string>\n+#include <system_error>\n+#include <vector>\n+\n+#ifndef _WIN32\n+#include <sys/time.h>\n+#if !defined(ANDROID) && !defined(__ANDROID__) && defined(HAVE_XLOCALE_H) // CodePlex 269\n+/* Systems using glibc: xlocale.h has been removed from glibc 2.26\n+   The above include of locale.h is sufficient\n+   Further details: https://sourceware.org/git/?p=glibc.git;a=commit;h=f0be25b6336db7492e47d2e8e72eb8af53b5506d */\n+#include <xlocale.h>\n+#endif\n+#endif\n+\n+/// Various utilities for string conversions and date and time manipulation.\n+namespace utility\n+{\n+// Left over from VS2010 support, remains to avoid breaking.\n+typedef std::chrono::seconds seconds;\n+\n+/// Functions for converting to/from std::chrono::seconds to xml string.\n+namespace timespan\n+{\n+/// <summary>\n+/// Converts a timespan/interval in seconds to xml duration string as specified by\n+/// http://www.w3.org/TR/xmlschema-2/#duration\n+/// </summary>\n+_ASYNCRTIMP utility::string_t __cdecl seconds_to_xml_duration(utility::seconds numSecs);\n+\n+/// <summary>\n+/// Converts an xml duration to timespan/interval in seconds\n+/// http://www.w3.org/TR/xmlschema-2/#duration\n+/// </summary>\n+_ASYNCRTIMP utility::seconds __cdecl xml_duration_to_seconds(const utility::string_t& timespanString);\n+} // namespace timespan\n+\n+/// Functions for Unicode string conversions.\n+namespace conversions\n+{\n+/// <summary>\n+/// Converts a UTF-16 string to a UTF-8 string.\n+/// </summary>\n+/// <param name=""w"">A two byte character UTF-16 string.</param>\n+/// <returns>A single byte character UTF-8 string.</returns>\n+_ASYNCRTIMP std::string __cdecl utf16_to_utf8(const utf16string& w);\n+\n+/// <summary>\n+/// Converts a UTF-8 string to a UTF-16\n+/// </summary>\n+/// <param name=""s"">A single byte character UTF-8 string.</param>\n+/// <returns>A two byte character UTF-16 string.</returns>\n+_ASYNCRTIMP utf16string __cdecl utf8_to_utf16(const std::string& s);\n+\n+/// <summary>\n+/// Converts a ASCII (us-ascii) string to a UTF-16 string.\n+/// </summary>\n+/// <param name=""s"">A single byte character us-ascii string.</param>\n+/// <returns>A two byte character UTF-16 string.</returns>\n+_ASYNCRTIMP utf16string __cdecl usascii_to_utf16(const std::string& s);\n+\n+/// <summary>\n+/// Converts a Latin1 (iso-8859-1) string to a UTF-16 string.\n+/// </summary>\n+/// <param name=""s"">A single byte character UTF-8 string.</param>\n+/// <returns>A two byte character UTF-16 string.</returns>\n+_ASYNCRTIMP utf16string __cdecl latin1_to_utf16(const std::string& s);\n+\n+/// <summary>\n+/// Converts a Latin1 (iso-8859-1) string to a UTF-8 string.\n+/// </summary>\n+/// <param name=""s"">A single byte character UTF-8 string.</param>\n+/// <returns>A single byte character UTF-8 string.</returns>\n+_ASYNCRTIMP utf8string __cdecl latin1_to_utf8(const std::string& s);\n+\n+/// <summary>\n+/// Converts to a platform dependent Unicode string type.\n+/// </summary>\n+/// <param name=""s"">A single byte character UTF-8 string.</param>\n+/// <returns>A platform dependent string type.</returns>\n+#ifdef _UTF16_STRINGS\n+_ASYNCRTIMP utility::string_t __cdecl to_string_t(std::string&& s);\n+#else\n+inline utility::string_t&& to_string_t(std::string&& s) { return std::move(s); }\n+#endif\n+\n+/// <summary>\n+/// Converts to a platform dependent Unicode string type.\n+/// </summary>\n+/// <param name=""s"">A two byte character UTF-16 string.</param>\n+/// <returns>A platform dependent string type.</returns>\n+#ifdef _UTF16_STRINGS\n+inline utility::string_t&& to_string_t(utf16string&& s) { return std::move(s); }\n+#else\n+_ASYNCRTIMP utility::string_t __cdecl to_string_t(utf16string&& s);\n+#endif\n+/// <summary>\n+/// Converts to a platform dependent Unicode string type.\n+/// </summary>\n+/// <param name=""s"">A single byte character UTF-8 string.</param>\n+/// <returns>A platform dependent string type.</returns>\n+#ifdef _UTF16_STRINGS\n+_ASYNCRTIMP utility::string_t __cdecl to_string_t(const std::string& s);\n+#else\n+inline const utility::string_t& to_string_t(const std::string& s) { return s; }\n+#endif\n+\n+/// <summary>\n+/// Converts to a platform dependent Unicode string type.\n+/// </summary>\n+/// <param name=""s"">A two byte character UTF-16 string.</param>\n+/// <returns>A platform dependent string type.</returns>\n+#ifdef _UTF16_STRINGS\n+inline const utility::string_t& to_string_t(const utf16string& s) { return s; }\n+#else\n+_ASYNCRTIMP utility::string_t __cdecl to_string_t(const utf16string& s);\n+#endif\n+\n+/// <summary>\n+/// Converts to a UTF-16 from string.\n+/// </summary>\n+/// <param name=""value"">A single byte character UTF-8 string.</param>\n+/// <returns>A two byte character UTF-16 string.</returns>\n+_ASYNCRTIMP utf16string __cdecl to_utf16string(const std::string& value);\n+\n+/// <summary>\n+/// Converts to a UTF-16 from string.\n+/// </summary>\n+/// <param name=""value"">A two byte character UTF-16 string.</param>\n+/// <returns>A two byte character UTF-16 string.</returns>\n+inline const utf16string& to_utf16string(const utf16string& value) { return value; }\n+/// <summary>\n+/// Converts to a UTF-16 from string.\n+/// </summary>\n+/// <param name=""value"">A two byte character UTF-16 string.</param>\n+/// <returns>A two byte character UTF-16 string.</returns>\n+inline utf16string&& to_utf16string(utf16string&& value) { return std::move(value); }\n+\n+/// <summary>\n+/// Converts to a UTF-8 string.\n+/// </summary>\n+/// <param name=""value"">A single byte character UTF-8 string.</param>\n+/// <returns>A single byte character UTF-8 string.</returns>\n+inline std::string&& to_utf8string(std::string&& value) { return std::move(value); }\n+\n+/// <summary>\n+/// Converts to a UTF-8 string.\n+/// </summary>\n+/// <param name=""value"">A single byte character UTF-8 string.</param>\n+/// <returns>A single byte character UTF-8 string.</returns>\n+inline const std::string& to_utf8string(const std::string& value) { return value; }\n+\n+/// <summary>\n+/// Converts to a UTF-8 string.\n+/// </summary>\n+/// <param name=""value"">A two byte character UTF-16 string.</param>\n+/// <returns>A single byte character UTF-8 string.</returns>\n+_ASYNCRTIMP std::string __cdecl to_utf8string(const utf16string& value);\n+\n+/// <summary>\n+/// Encode the given byte array into a base64 string\n+/// </summary>\n+_ASYNCRTIMP utility::string_t __cdecl to_base64(const std::vector<unsigned char>& data);\n+\n+/// <summary>\n+/// Encode the given 8-byte integer into a base64 string\n+/// </summary>\n+_ASYNCRTIMP utility::string_t __cdecl to_base64(uint64_t data);\n+\n+/// <summary>\n+/// Decode the given base64 string to a byte array\n+/// </summary>\n+_ASYNCRTIMP std::vector<unsigned char> __cdecl from_base64(const utility::string_t& str);\n+\n+template<typename Source>\n+CASABLANCA_DEPRECATED(""All locale-sensitive APIs will be removed in a future update. Use stringstreams directly if ""\n+                      ""locale support is required."")\n+utility::string_t print_string(const Source& val, const std::locale& loc = std::locale())\n+{\n+    utility::ostringstream_t oss;\n+    oss.imbue(loc);\n+    oss << val;\n+    if (oss.bad())\n+    {\n+        throw std::bad_cast();\n+    }\n+    return oss.str();\n+}\n+\n+CASABLANCA_DEPRECATED(""All locale-sensitive APIs will be removed in a future update. Use stringstreams directly if ""\n+                      ""locale support is required."")\n+inline utility::string_t print_string(const utility::string_t& val) { return val; }\n+\n+namespace details\n+{\n+#if defined(__ANDROID__)\n+template<class T>\n+inline std::string to_string(const T t)\n+{\n+    std::ostringstream os;\n+    os.imbue(std::locale::classic());\n+    os << t;\n+    return os.str();\n+}\n+#endif\n+\n+template<class T>\n+inline utility::string_t to_string_t(const T t)\n+{\n+#ifdef _UTF16_STRINGS\n+    using std::to_wstring;\n+    return to_wstring(t);\n+#else\n+#if !defined(__ANDROID__)\n+    using std::to_string;\n+#endif\n+    return to_string(t);\n+#endif\n+}\n+\n+template<typename Source>\n+utility::string_t print_string(const Source& val)\n+{\n+    utility::ostringstream_t oss;\n+    oss.imbue(std::locale::classic());\n+    oss << val;\n+    if (oss.bad())\n+    {\n+        throw std::bad_cast();\n+    }\n+    return oss.str();\n+}\n+\n+inline const utility::string_t& print_string(const utility::string_t& val) { return val; }\n+\n+template<typename Source>\n+utf8string print_utf8string(const Source& val)\n+{\n+    return conversions::to_utf8string(print_string(val));\n+}\n+inline const utf8string& print_utf8string(const utf8string& val) { return val; }\n+\n+template<typename Target>\n+Target scan_string(const utility::string_t& str)\n+{\n+    Target t;\n+    utility::istringstream_t iss(str);\n+    iss.imbue(std::locale::classic());\n+    iss >> t;\n+    if (iss.bad())\n+    {\n+        throw std::bad_cast();\n+    }\n+    return t;\n+}\n+\n+inline const utility::string_t& scan_string(const utility::string_t& str) { return str; }\n+} // namespace details\n+\n+template<typename Target>\n+CASABLANCA_DEPRECATED(""All locale-sensitive APIs will be removed in a future update. Use stringstreams directly if ""\n+                      ""locale support is required."")\n+Target scan_string(const utility::string_t& str, const std::locale& loc = std::locale())\n+{\n+    Target t;\n+    utility::istringstream_t iss(str);\n+    iss.imbue(loc);\n+    iss >> t;\n+    if (iss.bad())\n+    {\n+        throw std::bad_cast();\n+    }\n+    return t;\n+}\n+\n+CASABLANCA_DEPRECATED(""All locale-sensitive APIs will be removed in a future update. Use stringstreams directly if ""\n+                      ""locale support is required."")\n+inline utility::string_t scan_string(const utility::string_t& str) { return str; }\n+} // namespace conversions\n+\n+namespace details\n+{\n+/// <summary>\n+/// Cross platform RAII container for setting thread local locale.\n+/// </summary>\n+class scoped_c_thread_locale\n+{\n+public:\n+    _ASYNCRTIMP scoped_c_thread_locale();\n+    _ASYNCRTIMP ~scoped_c_thread_locale();\n+\n+#if !defined(ANDROID) && !defined(__ANDROID__) // CodePlex 269\n+#ifdef _WIN32\n+    typedef _locale_t xplat_locale;\n+#else\n+    typedef locale_t xplat_locale;\n+#endif\n+\n+    static _ASYNCRTIMP xplat_locale __cdecl c_locale();\n+#endif\n+private:\n+#ifdef _WIN32\n+    std::string m_prevLocale;\n+    int m_prevThreadSetting;\n+#elif !(defined(ANDROID) || defined(__ANDROID__))\n+    locale_t m_prevLocale;\n+#endif\n+    scoped_c_thread_locale(const scoped_c_thread_locale&);\n+    scoped_c_thread_locale& operator=(const scoped_c_thread_locale&);\n+};\n+\n+/// <summary>\n+/// Our own implementation of alpha numeric instead of std::isalnum to avoid\n+/// taking global lock for performance reasons.\n+/// </summary>\n+inline bool __cdecl is_alnum(const unsigned char uch) CPPREST_NOEXCEPT\n+{ // test if uch is an alnum character\n+    // special casing char to avoid branches\n+    // clang-format off\n+    static CPPREST_CONSTEXPR bool is_alnum_table[UCHAR_MAX + 1] = {\n+        /*        X0 X1 X2 X3 X4 X5 X6 X7 X8 X9 XA XB XC XD XE XF */\n+        /* 0X */   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        /* 1X */   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        /* 2X */   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+        /* 3X */   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, /* 0-9 */\n+        /* 4X */   0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, /* A-Z */\n+        /* 5X */   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0,\n+        /* 6X */   0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, /* a-z */\n+        /* 7X */   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0\n+        /* non-ASCII values initialized to 0 */\n+    };\n+    // clang-format on\n+    return (is_alnum_table[uch]);\n+}\n+\n+/// <summary>\n+/// Our own implementation of alpha numeric instead of std::isalnum to avoid\n+/// taking global lock for performance reasons.\n+/// </summary>\n+inline bool __cdecl is_alnum(const char ch) CPPREST_NOEXCEPT { return (is_alnum(static_cast<unsigned char>(ch))); }\n+\n+/// <summary>\n+/// Our own implementation of alpha numeric instead of std::isalnum to avoid\n+/// taking global lock for performance reasons.\n+/// </summary>\n+template<class Elem>\n+inline bool __cdecl is_alnum(Elem ch) CPPREST_NOEXCEPT\n+{\n+    // assumes \'x\' == L\'x\' for the ASCII range\n+    typedef typename std::make_unsigned<Elem>::type UElem;\n+    const auto uch = static_cast<UElem>(ch);\n+    return (uch <= static_cast<UElem>(\'z\') && is_alnum(static_cast<unsigned char>(uch)));\n+}\n+\n+/// <summary>\n+/// Simplistic implementation of make_unique. A better implementation would be based on variadic templates\n+/// and therefore not be compatible with Dev10.\n+/// </summary>\n+template<typename _Type>\n+std::unique_ptr<_Type> make_unique()\n+{\n+    return std::unique_ptr<_Type>(new _Type());\n+}\n+\n+template<typename _Type, typename _Arg1>\n+std::unique_ptr<_Type> make_unique(_Arg1&& arg1)\n+{\n+    return std::unique_ptr<_Type>(new _Type(std::forward<_Arg1>(arg1)));\n+}\n+\n+template<typename _Type, typename _Arg1, typename _Arg2>\n+std::unique_ptr<_Type> make_unique(_Arg1&& arg1, _Arg2&& arg2)\n+{\n+    return std::unique_ptr<_Type>(new _Type(std::forward<_Arg1>(arg1), std::forward<_Arg2>(arg2)));\n+}\n+\n+template<typename _Type, typename _Arg1, typename _Arg2, typename _Arg3>\n+std::unique_ptr<_Type> make_unique(_Arg1&& arg1, _Arg2&& arg2, _Arg3&& arg3)\n+{\n+    return std::unique_ptr<_Type>(\n+        new _Type(std::forward<_Arg1>(arg1), std::forward<_Arg2>(arg2), std::forward<_Arg3>(arg3)));\n+}\n+\n+template<typename _Type, typename _Arg1, typename _Arg2, typename _Arg3, typename _Arg4>\n+std::unique_ptr<_Type> make_unique(_Arg1&& arg1, _Arg2&& arg2, _Arg3&& arg3, _Arg4&& arg4)\n+{\n+    return std::unique_ptr<_Type>(new _Type(\n+        std::forward<_Arg1>(arg1), std::forward<_Arg2>(arg2), std::forward<_Arg3>(arg3), std::forward<_Arg4>(arg4)));\n+}\n+\n+template<typename _Type, typename _Arg1, typename _Arg2, typename _Arg3, typename _Arg4, typename _Arg5>\n+std::unique_ptr<_Type> make_unique(_Arg1&& arg1, _Arg2&& arg2, _Arg3&& arg3, _Arg4&& arg4, _Arg5&& arg5)\n+{\n+    return std::unique_ptr<_Type>(new _Type(std::forward<_Arg1>(arg1),\n+                                            std::forward<_Arg2>(arg2),\n+                                            std::forward<_Arg3>(arg3),\n+                                            std::forward<_Arg4>(arg4),\n+                                            std::forward<_Arg5>(arg5)));\n+}\n+\n+template<typename _Type, typename _Arg1, typename _Arg2, typename _Arg3, typename _Arg4, typename _Arg5, typename _Arg6>\n+std::unique_ptr<_Type> make_unique(_Arg1&& arg1, _Arg2&& arg2, _Arg3&& arg3, _Arg4&& arg4, _Arg5&& arg5, _Arg6&& arg6)\n+{\n+    return std::unique_ptr<_Type>(new _Type(std::forward<_Arg1>(arg1),\n+                                            std::forward<_Arg2>(arg2),\n+                                            std::forward<_Arg3>(arg3),\n+                                            std::forward<_Arg4>(arg4),\n+                                            std::forward<_Arg5>(arg5),\n+                                            std::forward<_Arg6>(arg6)));\n+}\n+\n+/// <summary>\n+/// Cross platform utility function for performing case insensitive string equality comparison.\n+/// </summary>\n+/// <param name=""left"">First string to compare.</param>\n+/// <param name=""right"">Second strong to compare.</param>\n+/// <returns>true if the strings are equivalent, false otherwise</returns>\n+_ASYNCRTIMP bool __cdecl str_iequal(const std::string& left, const std::string& right) CPPREST_NOEXCEPT;\n+\n+/// <summary>\n+/// Cross platform utility function for performing case insensitive string equality comparison.\n+/// </summary>\n+/// <param name=""left"">First string to compare.</param>\n+/// <param name=""right"">Second strong to compare.</param>\n+/// <returns>true if the strings are equivalent, false otherwise</returns>\n+_ASYNCRTIMP bool __cdecl str_iequal(const std::wstring& left, const std::wstring& right) CPPREST_NOEXCEPT;\n+\n+/// <summary>\n+/// Cross platform utility function for performing case insensitive string less-than comparison.\n+/// </summary>\n+/// <param name=""left"">First string to compare.</param>\n+/// <param name=""right"">Second strong to compare.</param>\n+/// <returns>true if a lowercase view of left is lexicographically less than a lowercase view of right; otherwise,\n+/// false.</returns>\n+_ASYNCRTIMP bool __cdecl str_iless(const std::string& left, const std::string& right) CPPREST_NOEXCEPT;\n+\n+/// <summary>\n+/// Cross platform utility function for performing case insensitive string less-than comparison.\n+/// </summary>\n+/// <param name=""left"">First string to compare.</param>\n+/// <param name=""right"">Second strong to compare.</param>\n+/// <returns>true if a lowercase view of left is lexicographically less than a lowercase view of right; otherwise,\n+/// false.</returns>\n+_ASYNCRTIMP bool __cdecl str_iless(const std::wstring& left, const std::wstring& right) CPPREST_NOEXCEPT;\n+\n+/// <summary>\n+/// Convert a string to lowercase in place.\n+/// </summary>\n+/// <param name=""target"">The string to convert to lowercase.</param>\n+_ASYNCRTIMP void __cdecl inplace_tolower(std::string& target) CPPREST_NOEXCEPT;\n+\n+/// <summary>\n+/// Convert a string to lowercase in place.\n+/// </summary>\n+/// <param name=""target"">The string to convert to lowercase.</param>\n+_ASYNCRTIMP void __cdecl inplace_tolower(std::wstring& target) CPPREST_NOEXCEPT;\n+\n+#ifdef _WIN32\n+\n+/// <summary>\n+/// Category error type for Windows OS errors.\n+/// </summary>\n+class windows_category_impl : public std::error_category\n+{\n+public:\n+    virtual const char* name() const CPPREST_NOEXCEPT { return ""windows""; }\n+\n+    virtual std::string message(int errorCode) const CPPREST_NOEXCEPT;\n+\n+    virtual std::error_condition default_error_condition(int errorCode) const CPPREST_NOEXCEPT;\n+};\n+\n+/// <summary>\n+/// Gets the one global instance of the windows error category.\n+/// </summary>\n+/// </returns>An error category instance.</returns>\n+_ASYNCRTIMP const std::error_category& __cdecl windows_category();\n+\n+#else\n+\n+/// <summary>\n+/// Gets the one global instance of the linux error category.\n+/// </summary>\n+/// </returns>An error category instance.</returns>\n+_ASYNCRTIMP const std::error_category& __cdecl linux_category();\n+\n+#endif\n+\n+/// <summary>\n+/// Gets the one global instance of the current platform\'s error category.\n+/// </summary>\n+_ASYNCRTIMP const std::error_category& __cdecl platform_category();\n+\n+/// <summary>\n+/// Creates an instance of std::system_error from a OS error code.\n+/// </summary>\n+inline std::system_error __cdecl create_system_error(unsigned long errorCode)\n+{\n+    std::error_code code((int)errorCode, platform_category());\n+    return std::system_error(code, code.message());\n+}\n+\n+/// <summary>\n+/// Creates a std::error_code from a OS error code.\n+/// </summary>\n+inline std::error_code __cdecl create_error_code(unsigned long errorCode)\n+{\n+    return std::error_code((int)errorCode, platform_category());\n+}\n+\n+/// <summary>\n+/// Creates the corresponding error message from a OS error code.\n+/// </summary>\n+inline utility::string_t __cdecl create_error_message(unsigned long errorCode)\n+{\n+    return utility::conversions::to_string_t(create_error_code(errorCode).message());\n+}\n+\n+} // namespace details\n+\n+class datetime\n+{\n+public:\n+    typedef uint64_t interval_type;\n+\n+    /// <summary>\n+    /// Defines the supported date and time string formats.\n+    /// </summary>\n+    enum date_format\n+    {\n+        RFC_1123,\n+        ISO_8601\n+    };\n+\n+    /// <summary>\n+    /// Returns the current UTC time.\n+    /// </summary>\n+    static _ASYNCRTIMP datetime __cdecl utc_now();\n+\n+    /// <summary>\n+    /// An invalid UTC timestamp value.\n+    /// </summary>\n+    enum : interval_type\n+    {\n+        utc_timestamp_invalid = static_cast<interval_type>(-1)\n+    };\n+\n+    /// <summary>\n+    /// Returns seconds since Unix/POSIX time epoch at 01-01-1970 00:00:00.\n+    /// If time is before epoch, utc_timestamp_invalid is returned.\n+    /// </summary>\n+    static interval_type utc_timestamp()\n+    {\n+        const auto seconds = utc_now().to_interval() / _secondTicks;\n+        if (seconds >= 11644473600LL)\n+        {\n+            return seconds - 11644473600LL;\n+        }\n+        else\n+        {\n+            return utc_timestamp_invalid;\n+        }\n+    }\n+\n+    datetime() : m_interval(0) {}\n+\n+    /// <summary>\n+    /// Creates <c>datetime</c> from a string representing time in UTC in RFC 1123 format.\n+    /// </summary>\n+    /// <returns>Returns a <c>datetime</c> of zero if not successful.</returns>\n+    static _ASYNCRTIMP datetime __cdecl from_string(const utility::string_t& timestring, date_format format = RFC_1123);\n+\n+    /// <summary>\n+    /// Returns a string representation of the <c>datetime</c>.\n+    /// </summary>\n+    _ASYNCRTIMP utility::string_t to_string(date_format format = RFC_1123) const;\n+\n+    /// <summary>\n+    /// Returns the integral time value.\n+    /// </summary>\n+    interval_type to_interval() const { return m_interval; }\n+\n+    datetime operator-(interval_type value) const { return datetime(m_interval - value); }\n+\n+    datetime operator+(interval_type value) const { return datetime(m_interval + value); }\n+\n+    bool operator==(datetime dt) const { return m_interval == dt.m_interval; }\n+\n+    bool operator!=(const datetime& dt) const { return !(*this == dt); }\n+\n+    static interval_type from_milliseconds(unsigned int milliseconds) { return milliseconds * _msTicks; }\n+\n+    static interval_type from_seconds(unsigned int seconds) { return seconds * _secondTicks; }\n+\n+    static interval_type from_minutes(unsigned int minutes) { return minutes * _minuteTicks; }\n+\n+    static interval_type from_hours(unsigned int hours) { return hours * _hourTicks; }\n+\n+    static interval_type from_days(unsigned int days) { return days * _dayTicks; }\n+\n+    bool is_initialized() const { return m_interval != 0; }\n+\n+private:\n+    friend int operator-(datetime t1, datetime t2);\n+\n+    static const interval_type _msTicks = static_cast<interval_type>(10000);\n+    static const interval_type _secondTicks = 1000 * _msTicks;\n+    static const interval_type _minuteTicks = 60 * _secondTicks;\n+    static const interval_type _hourTicks = 60 * 60 * _secondTicks;\n+    static const interval_type _dayTicks = 24 * 60 * 60 * _secondTicks;\n+\n+    // Private constructor. Use static methods to create an instance.\n+    datetime(interval_type interval) : m_interval(interval) {}\n+\n+    // Storing as hundreds of nanoseconds 10e-7, i.e. 1 here equals 100ns.\n+    interval_type m_interval;\n+};\n+\n+inline int operator-(datetime t1, datetime t2)\n+{\n+    auto diff = (t1.m_interval - t2.m_interval);\n+\n+    // Round it down to seconds\n+    diff /= 10 * 1000 * 1000;\n+\n+    return static_cast<int>(diff);\n+}\n+\n+/// <summary>\n+/// Nonce string generator class.\n+/// </summary>\n+class nonce_generator\n+{\n+public:\n+    /// <summary>\n+    /// Define default nonce length.\n+    /// </summary>\n+    enum\n+    {\n+        default_length = 32\n+    };\n+\n+    /// <summary>\n+    /// Nonce generator constructor.\n+    /// </summary>\n+    /// <param name=""length"">Length of the generated nonce string.</param>\n+    nonce_generator(int length = default_length)\n+        : m_random(static_cast<unsigned int>(utility::datetime::utc_timestamp())), m_length(length)\n+    {\n+    }\n+\n+    /// <summary>\n+    /// Generate a nonce string containing random alphanumeric characters (A-Za-z0-9).\n+    /// Length of the generated string is set by length().\n+    /// </summary>\n+    /// <returns>The generated nonce string.</returns>\n+    _ASYNCRTIMP utility::string_t generate();\n+\n+    /// <summary>\n+    /// Get length of generated nonce string.\n+    /// </summary>\n+    /// <returns>Nonce string length.</returns>\n+    int length() const { return m_length; }\n+\n+    /// <summary>\n+    /// Set length of the generated nonce string.\n+    /// </summary>\n+    /// <param name=""length"">Lenght of nonce string.</param>\n+    void set_length(int length) { m_length = length; }\n+\n+private:\n+    std::mt19937 m_random;\n+    int m_length;\n+};\n+\n+} // namespace utility'}, {'Name': 'deps/cpprestsdk/include/cpprest/base_uri.h', 'Line Additions': 391, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,391 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * Protocol independent support for URIs.\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+\n+#pragma once\n+\n+#include ""cpprest/asyncrt_utils.h""\n+#include ""cpprest/details/basic_types.h""\n+#include <map>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+namespace web\n+{\n+namespace details\n+{\n+struct uri_components\n+{\n+    uri_components() : m_path(_XPLATSTR(""/"")), m_port(-1) {}\n+\n+    uri_components(const uri_components&) = default;\n+    uri_components& operator=(const uri_components&) = default;\n+\n+    // This is for VS2013 compatibility -- replace with \'= default\' when VS2013 is completely dropped.\n+    uri_components(uri_components&& other) CPPREST_NOEXCEPT : m_scheme(std::move(other.m_scheme)),\n+                                                              m_host(std::move(other.m_host)),\n+                                                              m_user_info(std::move(other.m_user_info)),\n+                                                              m_path(std::move(other.m_path)),\n+                                                              m_query(std::move(other.m_query)),\n+                                                              m_fragment(std::move(other.m_fragment)),\n+                                                              m_port(other.m_port)\n+    {\n+    }\n+\n+    // This is for VS2013 compatibility -- replace with \'= default\' when VS2013 is completely dropped.\n+    uri_components& operator=(uri_components&& other) CPPREST_NOEXCEPT\n+    {\n+        if (this != &other)\n+        {\n+            m_scheme = std::move(other.m_scheme);\n+            m_host = std::move(other.m_host);\n+            m_user_info = std::move(other.m_user_info);\n+            m_path = std::move(other.m_path);\n+            m_query = std::move(other.m_query);\n+            m_fragment = std::move(other.m_fragment);\n+            m_port = other.m_port;\n+        }\n+        return *this;\n+    }\n+\n+    _ASYNCRTIMP utility::string_t join();\n+\n+    utility::string_t m_scheme;\n+    utility::string_t m_host;\n+    utility::string_t m_user_info;\n+    utility::string_t m_path;\n+    utility::string_t m_query;\n+    utility::string_t m_fragment;\n+    int m_port;\n+};\n+} // namespace details\n+\n+/// <summary>\n+/// A single exception type to represent errors in parsing, encoding, and decoding URIs.\n+/// </summary>\n+class uri_exception : public std::exception\n+{\n+public:\n+    uri_exception(std::string msg) : m_msg(std::move(msg)) {}\n+\n+    ~uri_exception() CPPREST_NOEXCEPT {}\n+\n+    const char* what() const CPPREST_NOEXCEPT { return m_msg.c_str(); }\n+\n+private:\n+    std::string m_msg;\n+};\n+\n+/// <summary>\n+/// A flexible, protocol independent URI implementation.\n+///\n+/// URI instances are immutable. Querying the various fields on an empty URI will return empty strings. Querying\n+/// various diagnostic members on an empty URI will return false.\n+/// </summary>\n+/// <remarks>\n+/// This implementation accepts both URIs (\'http://msn.com/path\') and URI relative-references\n+/// (\'/path?query#frag\').\n+///\n+/// This implementation does not provide any scheme-specific handling -- an example of this\n+/// would be the following: \'http://path1/path\'. This is a valid URI, but it\'s not a valid\n+/// http-uri -- that is, it\'s syntactically correct but does not conform to the requirements\n+/// of the http scheme (http requires a host).\n+/// We could provide this by allowing a pluggable \'scheme\' policy-class, which would provide\n+/// extra capability for validating and canonicalizing a URI according to scheme, and would\n+/// introduce a layer of type-safety for URIs of differing schemes, and thus differing semantics.\n+///\n+/// One issue with implementing a scheme-independent URI facility is that of comparing for equality.\n+/// For instance, these URIs are considered equal \'http://msn.com\', \'http://msn.com:80\'. That is --\n+/// the \'default\' port can be either omitted or explicit. Since we don\'t have a way to map a scheme\n+/// to it\'s default port, we don\'t have a way to know these are equal. This is just one of a class of\n+/// issues with regard to scheme-specific behavior.\n+/// </remarks>\n+class uri\n+{\n+public:\n+    /// <summary>\n+    /// The various components of a URI. This enum is used to indicate which\n+    /// URI component is being encoded to the encode_uri_component. This allows\n+    /// specific encoding to be performed.\n+    ///\n+    /// Scheme and port don\'t allow \'%\' so they don\'t need to be encoded.\n+    /// </summary>\n+    class components\n+    {\n+    public:\n+        enum component\n+        {\n+            user_info,\n+            host,\n+            path,\n+            query,\n+            fragment,\n+            full_uri\n+        };\n+    };\n+\n+    /// <summary>\n+    /// Encodes a URI component according to RFC 3986.\n+    /// Note if a full URI is specified instead of an individual URI component all\n+    /// characters not in the unreserved set are escaped.\n+    /// </summary>\n+    /// <param name=""raw"">The URI as a string.</param>\n+    /// <returns>The encoded string.</returns>\n+    _ASYNCRTIMP static utility::string_t __cdecl encode_uri(const utility::string_t& raw,\n+                                                            uri::components::component = components::full_uri);\n+\n+    /// <summary>\n+    /// Encodes a string by converting all characters except for RFC 3986 unreserved characters to their\n+    /// hexadecimal representation.\n+    /// </summary>\n+    /// <returns>The encoded string.</returns>\n+    _ASYNCRTIMP static utility::string_t __cdecl encode_data_string(const utility::string_t& data);\n+\n+    /// <summary>\n+    /// Decodes an encoded string.\n+    /// </summary>\n+    /// <param name=""encoded"">The URI as a string.</param>\n+    /// <returns>The decoded string.</returns>\n+    _ASYNCRTIMP static utility::string_t __cdecl decode(const utility::string_t& encoded);\n+\n+    /// <summary>\n+    /// Splits a path into its hierarchical components.\n+    /// </summary>\n+    /// <param name=""path"">The path as a string</param>\n+    /// <returns>A <c>std::vector&lt;utility::string_t&gt;</c> containing the segments in the path.</returns>\n+    _ASYNCRTIMP static std::vector<utility::string_t> __cdecl split_path(const utility::string_t& path);\n+\n+    /// <summary>\n+    /// Splits a query into its key-value components.\n+    /// </summary>\n+    /// <param name=""query"">The query string</param>\n+    /// <returns>A <c>std::map&lt;utility::string_t, utility::string_t&gt;</c> containing the key-value components of\n+    /// the query.</returns>\n+    _ASYNCRTIMP static std::map<utility::string_t, utility::string_t> __cdecl split_query(\n+        const utility::string_t& query);\n+\n+    /// <summary>\n+    /// Validates a string as a URI.\n+    /// </summary>\n+    /// <remarks>\n+    /// This function accepts both uris (\'http://msn.com\') and uri relative-references (\'path1/path2?query\').\n+    /// </remarks>\n+    /// <param name=""uri_string"">The URI string to be validated.</param>\n+    /// <returns><c>true</c> if the given string represents a valid URI, <c>false</c> otherwise.</returns>\n+    _ASYNCRTIMP static bool __cdecl validate(const utility::string_t& uri_string);\n+\n+    /// <summary>\n+    /// Creates an empty uri\n+    /// </summary>\n+    uri() : m_uri(_XPLATSTR(""/"")) {}\n+\n+    /// <summary>\n+    /// Creates a URI from the given encoded string. This will throw an exception if the string\n+    /// does not contain a valid URI. Use uri::validate if processing user-input.\n+    /// </summary>\n+    /// <param name=""uri_string"">A pointer to an encoded string to create the URI instance.</param>\n+    _ASYNCRTIMP uri(const utility::char_t* uri_string);\n+\n+    /// <summary>\n+    /// Creates a URI from the given encoded string. This will throw an exception if the string\n+    /// does not contain a valid URI. Use uri::validate if processing user-input.\n+    /// </summary>\n+    /// <param name=""uri_string"">An encoded URI string to create the URI instance.</param>\n+    _ASYNCRTIMP uri(const utility::string_t& uri_string);\n+\n+    /// <summary>\n+    /// Copy constructor.\n+    /// </summary>\n+    uri(const uri&) = default;\n+\n+    /// <summary>\n+    /// Copy assignment operator.\n+    /// </summary>\n+    uri& operator=(const uri&) = default;\n+\n+    /// <summary>\n+    /// Move constructor.\n+    /// </summary>\n+    // This is for VS2013 compatibility -- replace with \'= default\' when VS2013 is completely dropped.\n+    uri(uri&& other) CPPREST_NOEXCEPT : m_uri(std::move(other.m_uri)), m_components(std::move(other.m_components)) {}\n+\n+    /// <summary>\n+    /// Move assignment operator\n+    /// </summary>\n+    // This is for VS2013 compatibility -- replace with \'= default\' when VS2013 is completely dropped.\n+    uri& operator=(uri&& other) CPPREST_NOEXCEPT\n+    {\n+        if (this != &other)\n+        {\n+            m_uri = std::move(other.m_uri);\n+            m_components = std::move(other.m_components);\n+        }\n+        return *this;\n+    }\n+\n+    /// <summary>\n+    /// Get the scheme component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI scheme as a string.</returns>\n+    const utility::string_t& scheme() const { return m_components.m_scheme; }\n+\n+    /// <summary>\n+    /// Get the user information component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI user information as a string.</returns>\n+    const utility::string_t& user_info() const { return m_components.m_user_info; }\n+\n+    /// <summary>\n+    /// Get the host component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI host as a string.</returns>\n+    const utility::string_t& host() const { return m_components.m_host; }\n+\n+    /// <summary>\n+    /// Get the port component of the URI. Returns -1 if no port is specified.\n+    /// </summary>\n+    /// <returns>The URI port as an integer.</returns>\n+    int port() const { return m_components.m_port; }\n+\n+    /// <summary>\n+    /// Get the path component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI path as a string.</returns>\n+    const utility::string_t& path() const { return m_components.m_path; }\n+\n+    /// <summary>\n+    /// Get the query component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI query as a string.</returns>\n+    const utility::string_t& query() const { return m_components.m_query; }\n+\n+    /// <summary>\n+    /// Get the fragment component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI fragment as a string.</returns>\n+    const utility::string_t& fragment() const { return m_components.m_fragment; }\n+\n+    /// <summary>\n+    /// Creates a new uri object with the same authority portion as this one, omitting the resource and query portions.\n+    /// </summary>\n+    /// <returns>The new uri object with the same authority.</returns>\n+    _ASYNCRTIMP uri authority() const;\n+\n+    /// <summary>\n+    /// Gets the path, query, and fragment portion of this uri, which may be empty.\n+    /// </summary>\n+    /// <returns>The new URI object with the path, query and fragment portion of this URI.</returns>\n+    _ASYNCRTIMP uri resource() const;\n+\n+    /// <summary>\n+    /// An empty URI specifies no components, and serves as a default value\n+    /// </summary>\n+    bool is_empty() const { return this->m_uri.empty() || this->m_uri == _XPLATSTR(""/""); }\n+\n+    /// <summary>\n+    /// A loopback URI is one which refers to a hostname or ip address with meaning only on the local machine.\n+    /// </summary>\n+    /// <remarks>\n+    /// Examples include ""localhost"", or ip addresses in the loopback range (127.0.0.0/24).\n+    /// </remarks>\n+    /// <returns><c>true</c> if this URI references the local host, <c>false</c> otherwise.</returns>\n+    bool is_host_loopback() const\n+    {\n+        return !is_empty() &&\n+               ((host() == _XPLATSTR(""localhost"")) || (host().size() > 4 && host().substr(0, 4) == _XPLATSTR(""127."")));\n+    }\n+\n+    /// <summary>\n+    /// A wildcard URI is one which refers to all hostnames that resolve to the local machine (using the * or +)\n+    /// </summary>\n+    /// <example>\n+    /// http://*:80\n+    /// </example>\n+    bool is_host_wildcard() const\n+    {\n+        return !is_empty() && (this->host() == _XPLATSTR(""*"") || this->host() == _XPLATSTR(""+""));\n+    }\n+\n+    /// <summary>\n+    /// A portable URI is one with a hostname that can be resolved globally (used from another machine).\n+    /// </summary>\n+    /// <returns><c>true</c> if this URI can be resolved globally (used from another machine), <c>false</c>\n+    /// otherwise.</returns> <remarks> The hostname ""localhost"" is a reserved name that is guaranteed to resolve to the\n+    /// local machine, and cannot be used for inter-machine communication. Likewise the hostnames ""*"" and ""+"" on Windows\n+    /// represent wildcards, and do not map to a resolvable address.\n+    /// </remarks>\n+    bool is_host_portable() const { return !(is_empty() || is_host_loopback() || is_host_wildcard()); }\n+\n+    /// <summary>\n+    /// A default port is one where the port is unspecified, and will be determined by the operating system.\n+    /// The choice of default port may be dictated by the scheme (http -> 80) or not.\n+    /// </summary>\n+    /// <returns><c>true</c> if this URI instance has a default port, <c>false</c> otherwise.</returns>\n+    bool is_port_default() const { return !is_empty() && this->port() == 0; }\n+\n+    /// <summary>\n+    /// An ""authority"" URI is one with only a scheme, optional userinfo, hostname, and (optional) port.\n+    /// </summary>\n+    /// <returns><c>true</c> if this is an ""authority"" URI, <c>false</c> otherwise.</returns>\n+    bool is_authority() const { return !is_empty() && is_path_empty() && query().empty() && fragment().empty(); }\n+\n+    /// <summary>\n+    /// Returns whether the other URI has the same authority as this one\n+    /// </summary>\n+    /// <param name=""other"">The URI to compare the authority with.</param>\n+    /// <returns><c>true</c> if both the URI\'s have the same authority, <c>false</c> otherwise.</returns>\n+    bool has_same_authority(const uri& other) const { return !is_empty() && this->authority() == other.authority(); }\n+\n+    /// <summary>\n+    /// Returns whether the path portion of this URI is empty\n+    /// </summary>\n+    /// <returns><c>true</c> if the path portion of this URI is empty, <c>false</c> otherwise.</returns>\n+    bool is_path_empty() const { return path().empty() || path() == _XPLATSTR(""/""); }\n+\n+    /// <summary>\n+    /// Returns the full (encoded) URI as a string.\n+    /// </summary>\n+    /// <returns>The full encoded URI string.</returns>\n+    utility::string_t to_string() const { return m_uri; }\n+\n+    /// <summary>\n+    /// Returns an URI resolved against <c>this</c> as the base URI\n+    /// according to RFC3986, Section 5 (https://tools.ietf.org/html/rfc3986#section-5).\n+    /// </summary>\n+    /// <param name=""relativeUri"">The relative URI to be resolved against <c>this</c> as base.</param>\n+    /// <returns>The new resolved URI string.</returns>\n+    _ASYNCRTIMP utility::string_t resolve_uri(const utility::string_t& relativeUri) const;\n+\n+    _ASYNCRTIMP bool operator==(const uri& other) const;\n+\n+    bool operator<(const uri& other) const { return m_uri < other.m_uri; }\n+\n+    bool operator!=(const uri& other) const { return !(this->operator==(other)); }\n+\n+private:\n+    friend class uri_builder;\n+\n+    /// <summary>\n+    /// Creates a URI from the given URI components.\n+    /// </summary>\n+    /// <param name=""components"">A URI components object to create the URI instance.</param>\n+    _ASYNCRTIMP uri(const details::uri_components& components);\n+\n+    // Used by uri_builder\n+    static utility::string_t __cdecl encode_query_impl(const utf8string& raw);\n+\n+    utility::string_t m_uri;\n+    details::uri_components m_components;\n+};\n+\n+} // namespace web'}, {'Name': 'deps/cpprestsdk/include/cpprest/details/SafeInt3.hpp', 'Line Additions': 7482, 'Line Deletions': 0, 'Patch': None}, {'Name': 'deps/cpprestsdk/include/cpprest/details/basic_types.h', 'Line Additions': 131, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,131 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * Platform-dependent type definitions\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+\n+#pragma once\n+\n+#include ""cpprest/details/cpprest_compat.h""\n+#include <fstream>\n+#include <iostream>\n+#include <sstream>\n+#include <string>\n+\n+#ifndef _WIN32\n+#ifndef __STDC_LIMIT_MACROS\n+#define __STDC_LIMIT_MACROS\n+#endif\n+#include <stdint.h>\n+#else\n+#include <cstdint>\n+#endif\n+\n+#include ""cpprest/details/SafeInt3.hpp""\n+\n+namespace utility\n+{\n+#ifdef _WIN32\n+#define _UTF16_STRINGS\n+#endif\n+\n+// We should be using a 64-bit size type for most situations that do\n+// not involve specifying the size of a memory allocation or buffer.\n+typedef uint64_t size64_t;\n+\n+#ifndef _WIN32\n+typedef uint32_t HRESULT; // Needed for PPLX\n+#endif\n+\n+#ifdef _UTF16_STRINGS\n+//\n+// On Windows, all strings are wide\n+//\n+typedef wchar_t char_t;\n+typedef std::wstring string_t;\n+#define _XPLATSTR(x) L##x\n+typedef std::wostringstream ostringstream_t;\n+typedef std::wofstream ofstream_t;\n+typedef std::wostream ostream_t;\n+typedef std::wistream istream_t;\n+typedef std::wifstream ifstream_t;\n+typedef std::wistringstream istringstream_t;\n+typedef std::wstringstream stringstream_t;\n+#define ucout std::wcout\n+#define ucin std::wcin\n+#define ucerr std::wcerr\n+#else\n+//\n+// On POSIX platforms, all strings are narrow\n+//\n+typedef char char_t;\n+typedef std::string string_t;\n+#define _XPLATSTR(x) x\n+typedef std::ostringstream ostringstream_t;\n+typedef std::ofstream ofstream_t;\n+typedef std::ostream ostream_t;\n+typedef std::istream istream_t;\n+typedef std::ifstream ifstream_t;\n+typedef std::istringstream istringstream_t;\n+typedef std::stringstream stringstream_t;\n+#define ucout std::cout\n+#define ucin std::cin\n+#define ucerr std::cerr\n+#endif // endif _UTF16_STRINGS\n+\n+#ifndef _TURN_OFF_PLATFORM_STRING\n+// The \'U\' macro can be used to create a string or character literal of the platform type, i.e. utility::char_t.\n+// If you are using a library causing conflicts with \'U\' macro, it can be turned off by defining the macro\n+// \'_TURN_OFF_PLATFORM_STRING\' before including the C++ REST SDK header files, and e.g. use \'_XPLATSTR\' instead.\n+#define U(x) _XPLATSTR(x)\n+#endif // !_TURN_OFF_PLATFORM_STRING\n+\n+} // namespace utility\n+\n+typedef char utf8char;\n+typedef std::string utf8string;\n+typedef std::stringstream utf8stringstream;\n+typedef std::ostringstream utf8ostringstream;\n+typedef std::ostream utf8ostream;\n+typedef std::istream utf8istream;\n+typedef std::istringstream utf8istringstream;\n+\n+#ifdef _UTF16_STRINGS\n+typedef wchar_t utf16char;\n+typedef std::wstring utf16string;\n+typedef std::wstringstream utf16stringstream;\n+typedef std::wostringstream utf16ostringstream;\n+typedef std::wostream utf16ostream;\n+typedef std::wistream utf16istream;\n+typedef std::wistringstream utf16istringstream;\n+#else\n+typedef char16_t utf16char;\n+typedef std::u16string utf16string;\n+typedef std::basic_stringstream<utf16char> utf16stringstream;\n+typedef std::basic_ostringstream<utf16char> utf16ostringstream;\n+typedef std::basic_ostream<utf16char> utf16ostream;\n+typedef std::basic_istream<utf16char> utf16istream;\n+typedef std::basic_istringstream<utf16char> utf16istringstream;\n+#endif\n+\n+#if defined(_WIN32)\n+// Include on everything except Windows Desktop ARM, unless explicitly excluded.\n+#if !defined(CPPREST_EXCLUDE_WEBSOCKETS)\n+#if defined(WINAPI_FAMILY)\n+#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) && defined(_M_ARM)\n+#define CPPREST_EXCLUDE_WEBSOCKETS\n+#endif\n+#else\n+#if defined(_M_ARM)\n+#define CPPREST_EXCLUDE_WEBSOCKETS\n+#endif\n+#endif\n+#endif\n+#endif'}, {'Name': 'deps/cpprestsdk/include/cpprest/details/cpprest_compat.h', 'Line Additions': 91, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,91 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * Standard macros and definitions.\n+ * This header has minimal dependency on windows headers and is safe for use in the public API\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+\n+#pragma once\n+\n+#if defined(_WIN32)\n+\n+#if _MSC_VER >= 1900\n+#define CPPREST_NOEXCEPT noexcept\n+#define CPPREST_CONSTEXPR constexpr\n+#else\n+#define CPPREST_NOEXCEPT\n+#define CPPREST_CONSTEXPR const\n+#endif // _MSC_VER >= 1900\n+\n+#define CASABLANCA_UNREFERENCED_PARAMETER(x) (x)\n+\n+#include <sal.h>\n+\n+#else // ^^^ _WIN32 ^^^ // vvv !_WIN32 vvv\n+\n+#define __declspec(x) __attribute__((x))\n+#define dllimport\n+#define novtable /* no novtable equivalent */\n+#define __assume(x)                                                                                                    \\\n+    do                                                                                                                 \\\n+    {                                                                                                                  \\\n+        if (!(x)) __builtin_unreachable();                                                                             \\\n+    } while (false)\n+#define CASABLANCA_UNREFERENCED_PARAMETER(x) (void)x\n+#define CPPREST_NOEXCEPT noexcept\n+#define CPPREST_CONSTEXPR constexpr\n+\n+#include <assert.h>\n+#define _ASSERTE(x) assert(x)\n+\n+// No SAL on non Windows platforms\n+#include ""cpprest/details/nosal.h""\n+\n+#if !defined(__cdecl)\n+#if defined(cdecl)\n+#define __cdecl __attribute__((cdecl))\n+#else // ^^^ defined cdecl ^^^ // vvv !defined cdecl vvv\n+#define __cdecl\n+#endif // defined cdecl\n+#endif // not defined __cdecl\n+\n+#if defined(__ANDROID__)\n+// This is needed to disable the use of __thread inside the boost library.\n+// Android does not support thread local storage -- if boost is included\n+// without this macro defined, it will create references to __tls_get_addr\n+// which (while able to link) will not be available at runtime and prevent\n+// the .so from loading.\n+#if not defined BOOST_ASIO_DISABLE_THREAD_KEYWORD_EXTENSION\n+#define BOOST_ASIO_DISABLE_THREAD_KEYWORD_EXTENSION\n+#endif // not defined BOOST_ASIO_DISABLE_THREAD_KEYWORD_EXTENSION\n+#endif // defined(__ANDROID__)\n+\n+#ifdef __clang__\n+#include <cstdio>\n+#endif // __clang__\n+#endif // _WIN32\n+\n+#define _NO_ASYNCRTIMP\n+\n+#ifdef _NO_ASYNCRTIMP\n+#define _ASYNCRTIMP\n+#else // ^^^ _NO_ASYNCRTIMP ^^^ // vvv !_NO_ASYNCRTIMP vvv\n+#ifdef _ASYNCRT_EXPORT\n+#define _ASYNCRTIMP __declspec(dllexport)\n+#else // ^^^ _ASYNCRT_EXPORT ^^^ // vvv !_ASYNCRT_EXPORT vvv\n+#define _ASYNCRTIMP __declspec(dllimport)\n+#endif // _ASYNCRT_EXPORT\n+#endif // _NO_ASYNCRTIMP\n+\n+#ifdef CASABLANCA_DEPRECATION_NO_WARNINGS\n+#define CASABLANCA_DEPRECATED(x)\n+#else\n+#define CASABLANCA_DEPRECATED(x) __declspec(deprecated(x))\n+#endif // CASABLANCA_DEPRECATION_NO_WARNINGS'}, {'Name': 'deps/cpprestsdk/include/cpprest/details/web_utilities.h', 'Line Additions': 223, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,223 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * utility classes used by the different web:: clients\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+#pragma once\n+\n+#include ""cpprest/asyncrt_utils.h""\n+#include ""cpprest/uri.h""\n+\n+namespace web\n+{\n+namespace details\n+{\n+class zero_memory_deleter\n+{\n+public:\n+    _ASYNCRTIMP void operator()(::utility::string_t* data) const;\n+};\n+typedef std::unique_ptr<::utility::string_t, zero_memory_deleter> plaintext_string;\n+\n+#if defined(_WIN32) && !defined(CPPREST_TARGET_XP)\n+#if defined(__cplusplus_winrt)\n+class winrt_encryption\n+{\n+public:\n+    winrt_encryption() {}\n+    _ASYNCRTIMP winrt_encryption(const std::wstring& data);\n+    _ASYNCRTIMP plaintext_string decrypt() const;\n+\n+private:\n+    ::pplx::task<Windows::Storage::Streams::IBuffer ^> m_buffer;\n+};\n+#else\n+class win32_encryption\n+{\n+public:\n+    win32_encryption() {}\n+    _ASYNCRTIMP win32_encryption(const std::wstring& data);\n+    _ASYNCRTIMP ~win32_encryption();\n+    _ASYNCRTIMP plaintext_string decrypt() const;\n+\n+private:\n+    std::vector<char> m_buffer;\n+    size_t m_numCharacters;\n+};\n+#endif\n+#endif\n+} // namespace details\n+\n+/// <summary>\n+/// Represents a set of user credentials (user name and password) to be used\n+/// for authentication.\n+/// </summary>\n+class credentials\n+{\n+public:\n+    /// <summary>\n+    /// Constructs an empty set of credentials without a user name or password.\n+    /// </summary>\n+    credentials() {}\n+\n+    /// <summary>\n+    /// Constructs credentials from given user name and password.\n+    /// </summary>\n+    /// <param name=""username"">User name as a string.</param>\n+    /// <param name=""password"">Password as a string.</param>\n+    credentials(utility::string_t username, const utility::string_t& password)\n+        : m_username(std::move(username)), m_password(password)\n+    {\n+    }\n+\n+    /// <summary>\n+    /// The user name associated with the credentials.\n+    /// </summary>\n+    /// <returns>A string containing the user name.</returns>\n+    const utility::string_t& username() const { return m_username; }\n+\n+    /// <summary>\n+    /// The password for the user name associated with the credentials.\n+    /// </summary>\n+    /// <returns>A string containing the password.</returns>\n+    CASABLANCA_DEPRECATED(\n+        ""This API is deprecated for security reasons to avoid unnecessary password copies stored in plaintext."")\n+    utility::string_t password() const\n+    {\n+#if defined(_WIN32) && !defined(CPPREST_TARGET_XP)\n+        return utility::string_t(*m_password.decrypt());\n+#else\n+        return m_password;\n+#endif\n+    }\n+\n+    /// <summary>\n+    /// Checks if credentials have been set\n+    /// </summary>\n+    /// <returns><c>true</c> if user name and password is set, <c>false</c> otherwise.</returns>\n+    bool is_set() const { return !m_username.empty(); }\n+\n+    details::plaintext_string _internal_decrypt() const\n+    {\n+        // Encryption APIs not supported on XP\n+#if defined(_WIN32) && !defined(CPPREST_TARGET_XP)\n+        return m_password.decrypt();\n+#else\n+        return details::plaintext_string(new ::utility::string_t(m_password));\n+#endif\n+    }\n+\n+private:\n+    ::utility::string_t m_username;\n+\n+#if defined(_WIN32) && !defined(CPPREST_TARGET_XP)\n+#if defined(__cplusplus_winrt)\n+    details::winrt_encryption m_password;\n+#else\n+    details::win32_encryption m_password;\n+#endif\n+#else\n+    ::utility::string_t m_password;\n+#endif\n+};\n+\n+/// <summary>\n+/// web_proxy represents the concept of the web proxy, which can be auto-discovered,\n+/// disabled, or specified explicitly by the user.\n+/// </summary>\n+class web_proxy\n+{\n+    enum web_proxy_mode_internal\n+    {\n+        use_default_,\n+        use_auto_discovery_,\n+        disabled_,\n+        user_provided_\n+    };\n+\n+public:\n+    enum web_proxy_mode\n+    {\n+        use_default = use_default_,\n+        use_auto_discovery = use_auto_discovery_,\n+        disabled = disabled_\n+    };\n+\n+    /// <summary>\n+    /// Constructs a proxy with the default settings.\n+    /// </summary>\n+    web_proxy() : m_address(_XPLATSTR("""")), m_mode(use_default_) {}\n+\n+    /// <summary>\n+    /// Creates a proxy with specified mode.\n+    /// </summary>\n+    /// <param name=""mode"">Mode to use.</param>\n+    web_proxy(web_proxy_mode mode) : m_address(_XPLATSTR("""")), m_mode(static_cast<web_proxy_mode_internal>(mode)) {}\n+\n+    /// <summary>\n+    /// Creates a proxy explicitly with provided address.\n+    /// </summary>\n+    /// <param name=""address"">Proxy URI to use.</param>\n+    web_proxy(uri address) : m_address(address), m_mode(user_provided_) {}\n+\n+    /// <summary>\n+    /// Gets this proxy\'s URI address. Returns an empty URI if not explicitly set by user.\n+    /// </summary>\n+    /// <returns>A reference to this proxy\'s URI.</returns>\n+    const uri& address() const { return m_address; }\n+\n+    /// <summary>\n+    /// Gets the credentials used for authentication with this proxy.\n+    /// </summary>\n+    /// <returns>Credentials to for this proxy.</returns>\n+    const web::credentials& credentials() const { return m_credentials; }\n+\n+    /// <summary>\n+    /// Sets the credentials to use for authentication with this proxy.\n+    /// </summary>\n+    /// <param name=""cred"">Credentials to use for this proxy.</param>\n+    void set_credentials(web::credentials cred)\n+    {\n+        if (m_mode == disabled_)\n+        {\n+            throw std::invalid_argument(""Cannot attach credentials to a disabled proxy"");\n+        }\n+        m_credentials = std::move(cred);\n+    }\n+\n+    /// <summary>\n+    /// Checks if this proxy was constructed with default settings.\n+    /// </summary>\n+    /// <returns>True if default, false otherwise.</param>\n+    bool is_default() const { return m_mode == use_default_; }\n+\n+    /// <summary>\n+    /// Checks if using a proxy is disabled.\n+    /// </summary>\n+    /// <returns>True if disabled, false otherwise.</returns>\n+    bool is_disabled() const { return m_mode == disabled_; }\n+\n+    /// <summary>\n+    /// Checks if the auto discovery protocol, WPAD, is to be used.\n+    /// </summary>\n+    /// <returns>True if auto discovery enabled, false otherwise.</returns>\n+    bool is_auto_discovery() const { return m_mode == use_auto_discovery_; }\n+\n+    /// <summary>\n+    /// Checks if a proxy address is explicitly specified by the user.\n+    /// </summary>\n+    /// <returns>True if a proxy address was explicitly specified, false otherwise.</returns>\n+    bool is_specified() const { return m_mode == user_provided_; }\n+\n+private:\n+    web::uri m_address;\n+    web_proxy_mode_internal m_mode;\n+    web::credentials m_credentials;\n+};\n+\n+} // namespace web'}, {'Name': 'deps/cpprestsdk/include/cpprest/json.h', 'Line Additions': 1786, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,1786 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * HTTP Library: JSON parser and writer\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+#pragma once\n+\n+#ifndef CASA_JSON_H\n+#define CASA_JSON_H\n+\n+#include ""cpprest/asyncrt_utils.h""\n+#include ""cpprest/details/basic_types.h""\n+#include <cstdint>\n+#include <memory>\n+#include <sstream>\n+#include <string>\n+#include <unordered_map>\n+#include <vector>\n+\n+namespace web\n+{\n+/// Library for parsing and serializing JSON values to and from C++ types.\n+namespace json\n+{\n+// Various forward declarations.\n+namespace details\n+{\n+class _Value;\n+class _Number;\n+class _Null;\n+class _Boolean;\n+class _String;\n+class _Object;\n+class _Array;\n+template<typename CharType>\n+class JSON_Parser;\n+} // namespace details\n+\n+namespace details\n+{\n+extern bool g_keep_json_object_unsorted;\n+}\n+\n+/// <summary>\n+/// Preserve the order of the name/value pairs when parsing a JSON object.\n+/// The default is false, which can yield better performance.\n+/// </summary>\n+/// <param name=""keep_order""><c>true</c> if ordering should be preserved when parsing, <c>false</c> otherwise.</param>\n+/// <remarks>Note this is a global setting and affects all JSON parsing done.</remarks>\n+void _ASYNCRTIMP __cdecl keep_object_element_order(bool keep_order);\n+\n+#ifdef _WIN32\n+#ifdef _DEBUG\n+#define ENABLE_JSON_VALUE_VISUALIZER\n+#endif\n+#endif\n+\n+class number;\n+class array;\n+class object;\n+\n+/// <summary>\n+/// A JSON value represented as a C++ class.\n+/// </summary>\n+class value\n+{\n+public:\n+    /// <summary>\n+    /// This enumeration represents the various kinds of JSON values.\n+    /// </summary>\n+    enum value_type\n+    {\n+        /// Number value\n+        Number,\n+        /// Boolean value\n+        Boolean,\n+        /// String value\n+        String,\n+        /// Object value\n+        Object,\n+        /// Array value\n+        Array,\n+        /// Null value\n+        Null\n+    };\n+\n+    /// <summary>\n+    /// Constructor creating a null value\n+    /// </summary>\n+    _ASYNCRTIMP value();\n+\n+    /// <summary>\n+    /// Constructor creating a JSON number value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    _ASYNCRTIMP value(int32_t value);\n+\n+    /// <summary>\n+    /// Constructor creating a JSON number value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    _ASYNCRTIMP value(uint32_t value);\n+\n+    /// <summary>\n+    /// Constructor creating a JSON number value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    _ASYNCRTIMP value(int64_t value);\n+\n+    /// <summary>\n+    /// Constructor creating a JSON number value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    _ASYNCRTIMP value(uint64_t value);\n+\n+    /// <summary>\n+    /// Constructor creating a JSON number value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    _ASYNCRTIMP value(double value);\n+\n+    /// <summary>\n+    /// Constructor creating a JSON Boolean value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    _ASYNCRTIMP explicit value(bool value);\n+\n+    /// <summary>\n+    /// Constructor creating a JSON string value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from, a C++ STL string of the platform-native character\n+    /// width</param> <remarks> This constructor has O(n) performance because it tries to determine if specified string\n+    /// has characters that should be properly escaped in JSON. <remarks>\n+    _ASYNCRTIMP explicit value(utility::string_t value);\n+\n+    /// <summary>\n+    /// Constructor creating a JSON string value specifying if the string contains characters to escape\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from, a C++ STL string of the platform-native character\n+    /// width</param> <param name=""has_escape_chars"">Whether <paramref name=""value"" /> contains characters that should\n+    /// be escaped in JSON value</param> <remarks> This constructor has O(1) performance.\n+    /// </remarks>\n+    _ASYNCRTIMP explicit value(utility::string_t value, bool has_escape_chars);\n+\n+    /// <summary>\n+    /// Constructor creating a JSON string value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from, a C++ STL string of the platform-native character\n+    /// width</param> <remarks> <para> This constructor has O(n) performance because it tries to determine if specified\n+    /// string has characters that should be properly escaped in JSON.\n+    /// </para>\n+    /// <para>\n+    /// This constructor exists in order to avoid string literals matching another constructor,\n+    /// as is very likely. For example, conversion to bool does not require a user-defined conversion,\n+    /// and will therefore match first, which means that the JSON value turns up as a boolean.\n+    /// </para>\n+    /// </remarks>\n+    _ASYNCRTIMP explicit value(const utility::char_t* value);\n+\n+    /// <summary>\n+    /// Constructor creating a JSON string value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from, a C++ STL string of the platform-native character\n+    /// width</param> <param name=""has_escape_chars"">Whether <paramref name=""value"" /> contains characters <remarks>\n+    /// <para>\n+    /// This overload has O(1) performance.\n+    /// </para>\n+    /// <para>\n+    /// This constructor exists in order to avoid string literals matching another constructor,\n+    /// as is very likely. For example, conversion to bool does not require a user-defined conversion,\n+    /// and will therefore match first, which means that the JSON value turns up as a boolean.\n+    /// </para>\n+    /// </remarks>\n+    _ASYNCRTIMP explicit value(const utility::char_t* value, bool has_escape_chars);\n+\n+    /// <summary>\n+    /// Copy constructor\n+    /// </summary>\n+    _ASYNCRTIMP value(const value&);\n+\n+    /// <summary>\n+    /// Move constructor\n+    /// </summary>\n+    _ASYNCRTIMP value(value&&) CPPREST_NOEXCEPT;\n+\n+    /// <summary>\n+    /// Assignment operator.\n+    /// </summary>\n+    /// <returns>The JSON value object that contains the result of the assignment.</returns>\n+    _ASYNCRTIMP value& operator=(const value&);\n+\n+    /// <summary>\n+    /// Move assignment operator.\n+    /// </summary>\n+    /// <returns>The JSON value object that contains the result of the assignment.</returns>\n+    _ASYNCRTIMP value& operator=(value&&) CPPREST_NOEXCEPT;\n+\n+    // Static factories\n+\n+    /// <summary>\n+    /// Creates a null value\n+    /// </summary>\n+    /// <returns>A JSON null value</returns>\n+    static _ASYNCRTIMP value __cdecl null();\n+\n+    /// <summary>\n+    /// Creates a number value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    /// <returns>A JSON number value</returns>\n+    static _ASYNCRTIMP value __cdecl number(double value);\n+\n+    /// <summary>\n+    /// Creates a number value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    /// <returns>A JSON number value</returns>\n+    static _ASYNCRTIMP value __cdecl number(int32_t value);\n+\n+    /// <summary>\n+    /// Creates a number value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    /// <returns>A JSON number value</returns>\n+    static _ASYNCRTIMP value __cdecl number(uint32_t value);\n+\n+    /// <summary>\n+    /// Creates a number value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    /// <returns>A JSON number value</returns>\n+    static _ASYNCRTIMP value __cdecl number(int64_t value);\n+\n+    /// <summary>\n+    /// Creates a number value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    /// <returns>A JSON number value</returns>\n+    static _ASYNCRTIMP value __cdecl number(uint64_t value);\n+\n+    /// <summary>\n+    /// Creates a Boolean value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    /// <returns>A JSON Boolean value</returns>\n+    static _ASYNCRTIMP value __cdecl boolean(bool value);\n+\n+    /// <summary>\n+    /// Creates a string value\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    /// <returns>A JSON string value</returns>\n+    /// <remarks>\n+    /// This overload has O(n) performance because it tries to determine if\n+    /// specified string has characters that should be properly escaped in JSON.\n+    /// </remarks>\n+    static _ASYNCRTIMP value __cdecl string(utility::string_t value);\n+\n+    /// <summary>\n+    /// Creates a string value specifying if the string contains characters to escape\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from</param>\n+    /// <param name=""has_escape_chars"">Whether <paramref name=""value"" /> contains characters\n+    /// that should be escaped in JSON value</param>\n+    /// <returns>A JSON string value</returns>\n+    /// <remarks>\n+    /// This overload has O(1) performance.\n+    /// </remarks>\n+    static _ASYNCRTIMP value __cdecl string(utility::string_t value, bool has_escape_chars);\n+\n+#ifdef _WIN32\n+private:\n+    // Only used internally by JSON parser.\n+    static _ASYNCRTIMP value __cdecl string(const std::string& value);\n+\n+public:\n+#endif\n+\n+    /// <summary>\n+    /// Creates an object value\n+    /// </summary>\n+    /// <param name=""keep_order"">Whether to preserve the original order of the fields</param>\n+    /// <returns>An empty JSON object value</returns>\n+    static _ASYNCRTIMP json::value __cdecl object(bool keep_order = false);\n+\n+    /// <summary>\n+    /// Creates an object value from a collection of field/values\n+    /// </summary>\n+    /// <param name=""fields"">Field names associated with JSON values</param>\n+    /// <param name=""keep_order"">Whether to preserve the original order of the fields</param>\n+    /// <returns>A non-empty JSON object value</returns>\n+    static _ASYNCRTIMP json::value __cdecl object(std::vector<std::pair<::utility::string_t, value>> fields,\n+                                                  bool keep_order = false);\n+\n+    /// <summary>\n+    /// Creates an empty JSON array\n+    /// </summary>\n+    /// <returns>An empty JSON array value</returns>\n+    static _ASYNCRTIMP json::value __cdecl array();\n+\n+    /// <summary>\n+    /// Creates a JSON array\n+    /// </summary>\n+    /// <param name=""size"">The initial number of elements of the JSON value</param>\n+    /// <returns>A JSON array value</returns>\n+    static _ASYNCRTIMP json::value __cdecl array(size_t size);\n+\n+    /// <summary>\n+    /// Creates a JSON array\n+    /// </summary>\n+    /// <param name=""elements"">A vector of JSON values</param>\n+    /// <returns>A JSON array value</returns>\n+    static _ASYNCRTIMP json::value __cdecl array(std::vector<value> elements);\n+\n+    /// <summary>\n+    /// Accesses the type of JSON value the current value instance is\n+    /// </summary>\n+    /// <returns>The value\'s type</returns>\n+    _ASYNCRTIMP json::value::value_type type() const;\n+\n+    /// <summary>\n+    /// Is the current value a null value?\n+    /// </summary>\n+    /// <returns><c>true</c> if the value is a null value, <c>false</c> otherwise</returns>\n+    bool is_null() const { return type() == Null; };\n+\n+    /// <summary>\n+    /// Is the current value a number value?\n+    /// </summary>\n+    /// <returns><c>true</c> if the value is a number value, <c>false</c> otherwise</returns>\n+    bool is_number() const { return type() == Number; }\n+\n+    /// <summary>\n+    /// Is the current value represented as an integer number value?\n+    /// </summary>\n+    /// <remarks>\n+    /// Note that if a json value is a number but represented as a double it can still\n+    /// be retrieved as a integer using as_integer(), however the value will be truncated.\n+    /// </remarks>\n+    /// <returns><c>true</c> if the value is an integer value, <c>false</c> otherwise.</returns>\n+    _ASYNCRTIMP bool is_integer() const;\n+\n+    /// <summary>\n+    /// Is the current value represented as an double number value?\n+    /// </summary>\n+    /// <remarks>\n+    /// Note that if a json value is a number but represented as a int it can still\n+    /// be retrieved as a double using as_double().\n+    /// </remarks>\n+    /// <returns><c>true</c> if the value is an double value, <c>false</c> otherwise.</returns>\n+    _ASYNCRTIMP bool is_double() const;\n+\n+    /// <summary>\n+    /// Is the current value a Boolean value?\n+    /// </summary>\n+    /// <returns><c>true</c> if the value is a Boolean value, <c>false</c> otherwise</returns>\n+    bool is_boolean() const { return type() == Boolean; }\n+\n+    /// <summary>\n+    /// Is the current value a string value?\n+    /// </summary>\n+    /// <returns><c>true</c> if the value is a string value, <c>false</c> otherwise</returns>\n+    bool is_string() const { return type() == String; }\n+\n+    /// <summary>\n+    /// Is the current value an array?\n+    /// </summary>\n+    /// <returns><c>true</c> if the value is an array, <c>false</c> otherwise</returns>\n+    bool is_array() const { return type() == Array; }\n+\n+    /// <summary>\n+    /// Is the current value an object?\n+    /// </summary>\n+    /// <returns><c>true</c> if the value is an object, <c>false</c> otherwise</returns>\n+    bool is_object() const { return type() == Object; }\n+\n+    /// <summary>\n+    /// Gets the number of children of the value.\n+    /// </summary>\n+    /// <returns>The number of children. 0 for all non-composites.</returns>\n+    size_t size() const;\n+\n+    /// <summary>\n+    /// Parses a string and construct a JSON value.\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from, a C++ STL double-byte string</param>\n+    _ASYNCRTIMP static value __cdecl parse(const utility::string_t& value);\n+\n+    /// <summary>\n+    /// Attempts to parse a string and construct a JSON value.\n+    /// </summary>\n+    /// <param name=""value"">The C++ value to create a JSON value from, a C++ STL double-byte string</param>\n+    /// <param name=""errorCode"">If parsing fails, the error code is greater than 0</param>\n+    /// <returns>The parsed object. Returns web::json::value::null if failed</returns>\n+    _ASYNCRTIMP static value __cdecl parse(const utility::string_t& value, std::error_code& errorCode);\n+\n+    /// <summary>\n+    /// Serializes the current JSON value to a C++ string.\n+    /// </summary>\n+    /// <returns>A string representation of the value</returns>\n+    _ASYNCRTIMP utility::string_t serialize() const;\n+\n+    /// <summary>\n+    /// Serializes the current JSON value to a C++ string.\n+    /// </summary>\n+    /// <returns>A string representation of the value</returns>\n+    CASABLANCA_DEPRECATED(""This API is deprecated and has been renamed to avoid confusion with as_string(), use ""\n+                          ""::web::json::value::serialize() instead."")\n+    _ASYNCRTIMP utility::string_t to_string() const;\n+\n+    /// <summary>\n+    /// Parses a JSON value from the contents of an input stream using the native platform character width.\n+    /// </summary>\n+    /// <param name=""input"">The stream to read the JSON value from</param>\n+    /// <returns>The JSON value object created from the input stream.</returns>\n+    _ASYNCRTIMP static value __cdecl parse(utility::istream_t& input);\n+\n+    /// <summary>\n+    /// Parses a JSON value from the contents of an input stream using the native platform character width.\n+    /// </summary>\n+    /// <param name=""input"">The stream to read the JSON value from</param>\n+    /// <param name=""errorCode"">If parsing fails, the error code is greater than 0</param>\n+    /// <returns>The parsed object. Returns web::json::value::null if failed</returns>\n+    _ASYNCRTIMP static value __cdecl parse(utility::istream_t& input, std::error_code& errorCode);\n+\n+    /// <summary>\n+    /// Writes the current JSON value to a stream with the native platform character width.\n+    /// </summary>\n+    /// <param name=""stream"">The stream that the JSON string representation should be written to.</param>\n+    _ASYNCRTIMP void serialize(utility::ostream_t& stream) const;\n+\n+#ifdef _WIN32\n+    /// <summary>\n+    /// Parses a JSON value from the contents of a single-byte (UTF8) stream.\n+    /// </summary>\n+    /// <param name=""stream"">The stream to read the JSON value from</param>\n+    _ASYNCRTIMP static value __cdecl parse(std::istream& stream);\n+\n+    /// <summary>\n+    /// Parses a JSON value from the contents of a single-byte (UTF8) stream.\n+    /// </summary>\n+    /// <param name=""stream"">The stream to read the JSON value from</param>\n+    /// <param name=""errorCode"">If parsing fails, the error code is greater than 0</param>\n+    /// <returns>The parsed object. Returns web::json::value::null if failed</returns>\n+    _ASYNCRTIMP static value __cdecl parse(std::istream& stream, std::error_code& error);\n+\n+    /// <summary>\n+    /// Serializes the content of the value into a single-byte (UTF8) stream.\n+    /// </summary>\n+    /// <param name=""stream"">The stream that the JSON string representation should be written to.</param>\n+    _ASYNCRTIMP void serialize(std::ostream& stream) const;\n+#endif\n+\n+    /// <summary>\n+    /// Converts the JSON value to a C++ double, if and only if it is a number value.\n+    /// Throws <see cref=""json_exception""/>  if the value is not a number\n+    /// </summary>\n+    /// <returns>A double representation of the value</returns>\n+    _ASYNCRTIMP double as_double() const;\n+\n+    /// <summary>\n+    /// Converts the JSON value to a C++ integer, if and only if it is a number value.\n+    /// Throws <see cref=""json_exception""/> if the value is not a number\n+    /// </summary>\n+    /// <returns>An integer representation of the value</returns>\n+    _ASYNCRTIMP int as_integer() const;\n+\n+    /// <summary>\n+    /// Converts the JSON value to a number class, if and only if it is a number value.\n+    /// Throws <see cref=""json_exception""/>  if the value is not a number\n+    /// </summary>\n+    /// <returns>An instance of number class</returns>\n+    _ASYNCRTIMP const json::number& as_number() const;\n+\n+    /// <summary>\n+    /// Converts the JSON value to a C++ bool, if and only if it is a Boolean value.\n+    /// </summary>\n+    /// <returns>A C++ bool representation of the value</returns>\n+    _ASYNCRTIMP bool as_bool() const;\n+\n+    /// <summary>\n+    /// Converts the JSON value to a json array, if and only if it is an array value.\n+    /// </summary>\n+    /// <remarks>The returned <c>json::array</c> should have the same or shorter lifetime as <c>this</c></remarks>\n+    /// <returns>An array representation of the value</returns>\n+    _ASYNCRTIMP json::array& as_array();\n+\n+    /// <summary>\n+    /// Converts the JSON value to a json array, if and only if it is an array value.\n+    /// </summary>\n+    /// <remarks>The returned <c>json::array</c> should have the same or shorter lifetime as <c>this</c></remarks>\n+    /// <returns>An array representation of the value</returns>\n+    _ASYNCRTIMP const json::array& as_array() const;\n+\n+    /// <summary>\n+    /// Converts the JSON value to a json object, if and only if it is an object value.\n+    /// </summary>\n+    /// <returns>An object representation of the value</returns>\n+    _ASYNCRTIMP json::object& as_object();\n+\n+    /// <summary>\n+    /// Converts the JSON value to a json object, if and only if it is an object value.\n+    /// </summary>\n+    /// <returns>An object representation of the value</returns>\n+    _ASYNCRTIMP const json::object& as_object() const;\n+\n+    /// <summary>\n+    /// Converts the JSON value to a C++ STL string, if and only if it is a string value.\n+    /// </summary>\n+    /// <returns>A C++ STL string representation of the value</returns>\n+    _ASYNCRTIMP const utility::string_t& as_string() const;\n+\n+    /// <summary>\n+    /// Compares two JSON values for equality.\n+    /// </summary>\n+    /// <param name=""other"">The JSON value to compare with.</param>\n+    /// <returns>True if the values are equal.</returns>\n+    _ASYNCRTIMP bool operator==(const value& other) const;\n+\n+    /// <summary>\n+    /// Compares two JSON values for inequality.\n+    /// </summary>\n+    /// <param name=""other"">The JSON value to compare with.</param>\n+    /// <returns>True if the values are unequal.</returns>\n+    bool operator!=(const value& other) const { return !((*this) == other); }\n+\n+    /// <summary>\n+    /// Tests for the presence of a field.\n+    /// </summary>\n+    /// <param name=""key"">The name of the field</param>\n+    /// <returns>True if the field exists, false otherwise.</returns>\n+    bool has_field(const utility::string_t& key) const;\n+\n+    /// <summary>\n+    /// Tests for the presence of a number field\n+    /// </summary>\n+    /// <param name=""key"">The name of the field</param>\n+    /// <returns>True if the field exists, false otherwise.</returns>\n+    _ASYNCRTIMP bool has_number_field(const utility::string_t& key) const;\n+\n+    /// <summary>\n+    /// Tests for the presence of an integer field\n+    /// </summary>\n+    /// <param name=""key"">The name of the field</param>\n+    /// <returns>True if the field exists, false otherwise.</returns>\n+    _ASYNCRTIMP bool has_integer_field(const utility::string_t& key) const;\n+\n+    /// <summary>\n+    /// Tests for the presence of a double field\n+    /// </summary>\n+    /// <param name=""key"">The name of the field</param>\n+    /// <returns>True if the field exists, false otherwise.</returns>\n+    _ASYNCRTIMP bool has_double_field(const utility::string_t& key) const;\n+\n+    /// <summary>\n+    /// Tests for the presence of a boolean field\n+    /// </summary>\n+    /// <param name=""key"">The name of the field</param>\n+    /// <returns>True if the field exists, false otherwise.</returns>\n+    _ASYNCRTIMP bool has_boolean_field(const utility::string_t& key) const;\n+\n+    /// <summary>\n+    /// Tests for the presence of a string field\n+    /// </summary>\n+    /// <param name=""key"">The name of the field</param>\n+    /// <returns>True if the field exists, false otherwise.</returns>\n+    _ASYNCRTIMP bool has_string_field(const utility::string_t& key) const;\n+\n+    /// <summary>\n+    /// Tests for the presence of an array field\n+    /// </summary>\n+    /// <param name=""key"">The name of the field</param>\n+    /// <returns>True if the field exists, false otherwise.</returns>\n+    _ASYNCRTIMP bool has_array_field(const utility::string_t& key) const;\n+\n+    /// <summary>\n+    /// Tests for the presence of an object field\n+    /// </summary>\n+    /// <param name=""key"">The name of the field</param>\n+    /// <returns>True if the field exists, false otherwise.</returns>\n+    _ASYNCRTIMP bool has_object_field(const utility::string_t& key) const;\n+\n+    /// <summary>\n+    /// Accesses a field of a JSON object.\n+    /// </summary>\n+    /// <param name=""key"">The name of the field</param>\n+    /// <returns>The value kept in the field; null if the field does not exist</returns>\n+    CASABLANCA_DEPRECATED(\n+        ""This API is deprecated and will be removed in a future release, use json::value::at() instead."")\n+    value get(const utility::string_t& key) const;\n+\n+    /// <summary>\n+    /// Erases an element of a JSON array. Throws if index is out of bounds.\n+    /// </summary>\n+    /// <param name=""index"">The index of the element to erase in the JSON array.</param>\n+    _ASYNCRTIMP void erase(size_t index);\n+\n+    /// <summary>\n+    /// Erases an element of a JSON object. Throws if the key doesn\'t exist.\n+    /// </summary>\n+    /// <param name=""key"">The key of the element to erase in the JSON object.</param>\n+    _ASYNCRTIMP void erase(const utility::string_t& key);\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON array. Throws when index out of bounds.\n+    /// </summary>\n+    /// <param name=""index"">The index of an element in the JSON array.</param>\n+    /// <returns>A reference to the value.</returns>\n+    _ASYNCRTIMP json::value& at(size_t index);\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON array. Throws when index out of bounds.\n+    /// </summary>\n+    /// <param name=""index"">The index of an element in the JSON array.</param>\n+    /// <returns>A reference to the value.</returns>\n+    _ASYNCRTIMP const json::value& at(size_t index) const;\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON object. If the key doesn\'t exist, this method throws.\n+    /// </summary>\n+    /// <param name=""key"">The key of an element in the JSON object.</param>\n+    /// <returns>If the key exists, a reference to the value.</returns>\n+    _ASYNCRTIMP json::value& at(const utility::string_t& key);\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON object. If the key doesn\'t exist, this method throws.\n+    /// </summary>\n+    /// <param name=""key"">The key of an element in the JSON object.</param>\n+    /// <returns>If the key exists, a reference to the value.</returns>\n+    _ASYNCRTIMP const json::value& at(const utility::string_t& key) const;\n+\n+    /// <summary>\n+    /// Accesses a field of a JSON object.\n+    /// </summary>\n+    /// <param name=""key"">The name of the field</param>\n+    /// <returns>A reference to the value kept in the field.</returns>\n+    _ASYNCRTIMP value& operator[](const utility::string_t& key);\n+\n+#ifdef _WIN32\n+private:\n+    // Only used internally by JSON parser\n+    _ASYNCRTIMP value& operator[](const std::string& key)\n+    {\n+        // JSON object stores its field map as a unordered_map of string_t, so this conversion is hard to avoid\n+        return operator[](utility::conversions::to_string_t(key));\n+    }\n+\n+public:\n+#endif\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON array.\n+    /// </summary>\n+    /// <param name=""index"">The index of an element in the JSON array</param>\n+    /// <returns>The value kept at the array index; null if outside the boundaries of the array</returns>\n+    CASABLANCA_DEPRECATED(\n+        ""This API is deprecated and will be removed in a future release, use json::value::at() instead."")\n+    value get(size_t index) const;\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON array.\n+    /// </summary>\n+    /// <param name=""index"">The index of an element in the JSON array.</param>\n+    /// <returns>A reference to the value kept in the field.</returns>\n+    _ASYNCRTIMP value& operator[](size_t index);\n+\n+private:\n+    friend class web::json::details::_Object;\n+    friend class web::json::details::_Array;\n+    template<typename CharType>\n+    friend class web::json::details::JSON_Parser;\n+\n+#ifdef _WIN32\n+    /// <summary>\n+    /// Writes the current JSON value as a double-byte string to a string instance.\n+    /// </summary>\n+    /// <param name=""string"">The string that the JSON representation should be written to.</param>\n+    _ASYNCRTIMP void format(std::basic_string<utf16char>& string) const;\n+#endif\n+    /// <summary>\n+    /// Serializes the content of the value into a string instance in UTF8 format\n+    /// </summary>\n+    /// <param name=""string"">The string that the JSON representation should be written to</param>\n+    _ASYNCRTIMP void format(std::basic_string<char>& string) const;\n+\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    explicit value(std::unique_ptr<details::_Value> v, value_type kind) : m_value(std::move(v)), m_kind(kind)\n+#else\n+    explicit value(std::unique_ptr<details::_Value> v) : m_value(std::move(v))\n+#endif\n+    {\n+    }\n+\n+    std::unique_ptr<details::_Value> m_value;\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    value_type m_kind;\n+#endif\n+};\n+\n+/// <summary>\n+/// A single exception type to represent errors in parsing, converting, and accessing\n+/// elements of JSON values.\n+/// </summary>\n+class json_exception : public std::exception\n+{\n+private:\n+    std::string _message;\n+\n+public:\n+    json_exception(const char* const message) : _message(message) {}\n+#ifdef _UTF16_STRINGS\n+    json_exception(const wchar_t* const message) : _message(utility::conversions::utf16_to_utf8(message)) {}\n+#endif // _UTF16_STRINGS\n+    json_exception(std::string&& message) : _message(std::move(message)) {}\n+\n+    // Must be narrow string because it derives from std::exception\n+    const char* what() const CPPREST_NOEXCEPT { return _message.c_str(); }\n+};\n+\n+namespace details\n+{\n+enum json_error\n+{\n+    left_over_character_in_stream = 1,\n+    malformed_array_literal,\n+    malformed_comment,\n+    malformed_literal,\n+    malformed_object_literal,\n+    malformed_numeric_literal,\n+    malformed_string_literal,\n+    malformed_token,\n+    mismatched_brances,\n+    nesting,\n+    unexpected_token\n+};\n+\n+class json_error_category_impl : public std::error_category\n+{\n+public:\n+    virtual const char* name() const CPPREST_NOEXCEPT override { return ""json""; }\n+\n+    virtual std::string message(int ev) const override\n+    {\n+        switch (ev)\n+        {\n+            case json_error::left_over_character_in_stream:\n+                return ""Left-over characters in stream after parsing a JSON value"";\n+            case json_error::malformed_array_literal: return ""Malformed array literal"";\n+            case json_error::malformed_comment: return ""Malformed comment"";\n+            case json_error::malformed_literal: return ""Malformed literal"";\n+            case json_error::malformed_object_literal: return ""Malformed object literal"";\n+            case json_error::malformed_numeric_literal: return ""Malformed numeric literal"";\n+            case json_error::malformed_string_literal: return ""Malformed string literal"";\n+            case json_error::malformed_token: return ""Malformed token"";\n+            case json_error::mismatched_brances: return ""Mismatched braces"";\n+            case json_error::nesting: return ""Nesting too deep"";\n+            case json_error::unexpected_token: return ""Unexpected token"";\n+            default: return ""Unknown json error"";\n+        }\n+    }\n+};\n+\n+const json_error_category_impl& json_error_category();\n+} // namespace details\n+\n+/// <summary>\n+/// A JSON array represented as a C++ class.\n+/// </summary>\n+class array\n+{\n+    typedef std::vector<json::value> storage_type;\n+\n+public:\n+    typedef storage_type::iterator iterator;\n+    typedef storage_type::const_iterator const_iterator;\n+    typedef storage_type::reverse_iterator reverse_iterator;\n+    typedef storage_type::const_reverse_iterator const_reverse_iterator;\n+    typedef storage_type::size_type size_type;\n+\n+private:\n+    array() : m_elements() {}\n+    array(size_type size) : m_elements(size) {}\n+    array(storage_type elements) : m_elements(std::move(elements)) {}\n+\n+public:\n+    /// <summary>\n+    /// Gets the beginning iterator element of the array\n+    /// </summary>\n+    /// <returns>An <c>iterator</c> to the beginning of the JSON array.</returns>\n+    iterator begin() { return m_elements.begin(); }\n+\n+    /// <summary>\n+    /// Gets the beginning const iterator element of the array.\n+    /// </summary>\n+    /// <returns>A <c>const_iterator</c> to the beginning of the JSON array.</returns>\n+    const_iterator begin() const { return m_elements.cbegin(); }\n+\n+    /// <summary>\n+    /// Gets the end iterator element of the array\n+    /// </summary>\n+    /// <returns>An <c>iterator</c> to the end of the JSON array.</returns>\n+    iterator end() { return m_elements.end(); }\n+\n+    /// <summary>\n+    /// Gets the end const iterator element of the array.\n+    /// </summary>\n+    /// <returns>A <c>const_iterator</c> to the end of the JSON array.</returns>\n+    const_iterator end() const { return m_elements.cend(); }\n+\n+    /// <summary>\n+    /// Gets the beginning reverse iterator element of the array\n+    /// </summary>\n+    /// <returns>An <c>reverse_iterator</c> to the beginning of the JSON array.</returns>\n+    reverse_iterator rbegin() { return m_elements.rbegin(); }\n+\n+    /// <summary>\n+    /// Gets the beginning const reverse iterator element of the array\n+    /// </summary>\n+    /// <returns>An <c>const_reverse_iterator</c> to the beginning of the JSON array.</returns>\n+    const_reverse_iterator rbegin() const { return m_elements.rbegin(); }\n+\n+    /// <summary>\n+    /// Gets the end reverse iterator element of the array\n+    /// </summary>\n+    /// <returns>An <c>reverse_iterator</c> to the end of the JSON array.</returns>\n+    reverse_iterator rend() { return m_elements.rend(); }\n+\n+    /// <summary>\n+    /// Gets the end const reverse iterator element of the array\n+    /// </summary>\n+    /// <returns>An <c>const_reverse_iterator</c> to the end of the JSON array.</returns>\n+    const_reverse_iterator rend() const { return m_elements.crend(); }\n+\n+    /// <summary>\n+    /// Gets the beginning const iterator element of the array.\n+    /// </summary>\n+    /// <returns>A <c>const_iterator</c> to the beginning of the JSON array.</returns>\n+    const_iterator cbegin() const { return m_elements.cbegin(); }\n+\n+    /// <summary>\n+    /// Gets the end const iterator element of the array.\n+    /// </summary>\n+    /// <returns>A <c>const_iterator</c> to the end of the JSON array.</returns>\n+    const_iterator cend() const { return m_elements.cend(); }\n+\n+    /// <summary>\n+    /// Gets the beginning const reverse iterator element of the array.\n+    /// </summary>\n+    /// <returns>A <c>const_reverse_iterator</c> to the beginning of the JSON array.</returns>\n+    const_reverse_iterator crbegin() const { return m_elements.crbegin(); }\n+\n+    /// <summary>\n+    /// Gets the end const reverse iterator element of the array.\n+    /// </summary>\n+    /// <returns>A <c>const_reverse_iterator</c> to the end of the JSON array.</returns>\n+    const_reverse_iterator crend() const { return m_elements.crend(); }\n+\n+    /// <summary>\n+    /// Deletes an element of the JSON array.\n+    /// </summary>\n+    /// <param name=""position"">A const_iterator to the element to delete.</param>\n+    /// <returns>Iterator to the new location of the element following the erased element.</returns>\n+    /// <remarks>GCC doesn\'t support erase with const_iterator on vector yet. In the future this should be\n+    /// changed.</remarks>\n+    iterator erase(iterator position) { return m_elements.erase(position); }\n+\n+    /// <summary>\n+    /// Deletes the element at an index of the JSON array.\n+    /// </summary>\n+    /// <param name=""index"">The index of the element to delete.</param>\n+    void erase(size_type index)\n+    {\n+        if (index >= m_elements.size())\n+        {\n+            throw json_exception(""index out of bounds"");\n+        }\n+        m_elements.erase(m_elements.begin() + index);\n+    }\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON array. Throws when index out of bounds.\n+    /// </summary>\n+    /// <param name=""index"">The index of an element in the JSON array.</param>\n+    /// <returns>A reference to the value kept in the field.</returns>\n+    json::value& at(size_type index)\n+    {\n+        if (index >= m_elements.size()) throw json_exception(""index out of bounds"");\n+\n+        return m_elements[index];\n+    }\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON array. Throws when index out of bounds.\n+    /// </summary>\n+    /// <param name=""index"">The index of an element in the JSON array.</param>\n+    /// <returns>A reference to the value kept in the field.</returns>\n+    const json::value& at(size_type index) const\n+    {\n+        if (index >= m_elements.size()) throw json_exception(""index out of bounds"");\n+\n+        return m_elements[index];\n+    }\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON array.\n+    /// </summary>\n+    /// <param name=""index"">The index of an element in the JSON array.</param>\n+    /// <returns>A reference to the value kept in the field.</returns>\n+    json::value& operator[](size_type index)\n+    {\n+        msl::safeint3::SafeInt<size_type> nMinSize(index);\n+        nMinSize += 1;\n+        msl::safeint3::SafeInt<size_type> nlastSize(m_elements.size());\n+        if (nlastSize < nMinSize) m_elements.resize(nMinSize);\n+\n+        return m_elements[index];\n+    }\n+\n+    /// <summary>\n+    /// Gets the number of elements of the array.\n+    /// </summary>\n+    /// <returns>The number of elements.</returns>\n+    size_type size() const { return m_elements.size(); }\n+\n+private:\n+    storage_type m_elements;\n+\n+    friend class details::_Array;\n+    template<typename CharType>\n+    friend class json::details::JSON_Parser;\n+};\n+\n+/// <summary>\n+/// A JSON object represented as a C++ class.\n+/// </summary>\n+class object\n+{\n+    typedef std::vector<std::pair<utility::string_t, json::value>> storage_type;\n+\n+public:\n+    typedef storage_type::iterator iterator;\n+    typedef storage_type::const_iterator const_iterator;\n+    typedef storage_type::reverse_iterator reverse_iterator;\n+    typedef storage_type::const_reverse_iterator const_reverse_iterator;\n+    typedef storage_type::size_type size_type;\n+\n+private:\n+    object(bool keep_order = false) : m_elements(), m_keep_order(keep_order) {}\n+    object(storage_type elements, bool keep_order = false) : m_elements(std::move(elements)), m_keep_order(keep_order)\n+    {\n+        if (!keep_order)\n+        {\n+            sort(m_elements.begin(), m_elements.end(), compare_pairs);\n+        }\n+    }\n+\n+public:\n+    /// <summary>\n+    /// Gets the beginning iterator element of the object\n+    /// </summary>\n+    /// <returns>An <c>iterator</c> to the beginning of the JSON object.</returns>\n+    iterator begin() { return m_elements.begin(); }\n+\n+    /// <summary>\n+    /// Gets the beginning const iterator element of the object.\n+    /// </summary>\n+    /// <returns>A <c>const_iterator</c> to the beginning of the JSON object.</returns>\n+    const_iterator begin() const { return m_elements.cbegin(); }\n+\n+    /// <summary>\n+    /// Gets the end iterator element of the object\n+    /// </summary>\n+    /// <returns>An <c>iterator</c> to the end of the JSON object.</returns>\n+    iterator end() { return m_elements.end(); }\n+\n+    /// <summary>\n+    /// Gets the end const iterator element of the object.\n+    /// </summary>\n+    /// <returns>A <c>const_iterator</c> to the end of the JSON object.</returns>\n+    const_iterator end() const { return m_elements.cend(); }\n+\n+    /// <summary>\n+    /// Gets the beginning reverse iterator element of the object\n+    /// </summary>\n+    /// <returns>An <c>reverse_iterator</c> to the beginning of the JSON object.</returns>\n+    reverse_iterator rbegin() { return m_elements.rbegin(); }\n+\n+    /// <summary>\n+    /// Gets the beginning const reverse iterator element of the object\n+    /// </summary>\n+    /// <returns>An <c>const_reverse_iterator</c> to the beginning of the JSON object.</returns>\n+    const_reverse_iterator rbegin() const { return m_elements.rbegin(); }\n+\n+    /// <summary>\n+    /// Gets the end reverse iterator element of the object\n+    /// </summary>\n+    /// <returns>An <c>reverse_iterator</c> to the end of the JSON object.</returns>\n+    reverse_iterator rend() { return m_elements.rend(); }\n+\n+    /// <summary>\n+    /// Gets the end const reverse iterator element of the object\n+    /// </summary>\n+    /// <returns>An <c>const_reverse_iterator</c> to the end of the JSON object.</returns>\n+    const_reverse_iterator rend() const { return m_elements.crend(); }\n+\n+    /// <summary>\n+    /// Gets the beginning const iterator element of the object.\n+    /// </summary>\n+    /// <returns>A <c>const_iterator</c> to the beginning of the JSON object.</returns>\n+    const_iterator cbegin() const { return m_elements.cbegin(); }\n+\n+    /// <summary>\n+    /// Gets the end const iterator element of the object.\n+    /// </summary>\n+    /// <returns>A <c>const_iterator</c> to the end of the JSON object.</returns>\n+    const_iterator cend() const { return m_elements.cend(); }\n+\n+    /// <summary>\n+    /// Gets the beginning const reverse iterator element of the object.\n+    /// </summary>\n+    /// <returns>A <c>const_reverse_iterator</c> to the beginning of the JSON object.</returns>\n+    const_reverse_iterator crbegin() const { return m_elements.crbegin(); }\n+\n+    /// <summary>\n+    /// Gets the end const reverse iterator element of the object.\n+    /// </summary>\n+    /// <returns>A <c>const_reverse_iterator</c> to the end of the JSON object.</returns>\n+    const_reverse_iterator crend() const { return m_elements.crend(); }\n+\n+    /// <summary>\n+    /// Deletes an element of the JSON object.\n+    /// </summary>\n+    /// <param name=""position"">A const_iterator to the element to delete.</param>\n+    /// <returns>Iterator to the new location of the element following the erased element.</returns>\n+    /// <remarks>GCC doesn\'t support erase with const_iterator on vector yet. In the future this should be\n+    /// changed.</remarks>\n+    iterator erase(iterator position) { return m_elements.erase(position); }\n+\n+    /// <summary>\n+    /// Deletes an element of the JSON object. If the key doesn\'t exist, this method throws.\n+    /// </summary>\n+    /// <param name=""key"">The key of an element in the JSON object.</param>\n+    void erase(const utility::string_t& key)\n+    {\n+        auto iter = find_by_key(key);\n+        if (iter == m_elements.end())\n+        {\n+            throw web::json::json_exception(""Key not found"");\n+        }\n+\n+        m_elements.erase(iter);\n+    }\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON object. If the key doesn\'t exist, this method throws.\n+    /// </summary>\n+    /// <param name=""key"">The key of an element in the JSON object.</param>\n+    /// <returns>If the key exists, a reference to the value kept in the field.</returns>\n+    json::value& at(const utility::string_t& key)\n+    {\n+        auto iter = find_by_key(key);\n+        if (iter == m_elements.end())\n+        {\n+            throw web::json::json_exception(""Key not found"");\n+        }\n+\n+        return iter->second;\n+    }\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON object. If the key doesn\'t exist, this method throws.\n+    /// </summary>\n+    /// <param name=""key"">The key of an element in the JSON object.</param>\n+    /// <returns>If the key exists, a reference to the value kept in the field.</returns>\n+    const json::value& at(const utility::string_t& key) const\n+    {\n+        auto iter = find_by_key(key);\n+        if (iter == m_elements.end())\n+        {\n+            throw web::json::json_exception(""Key not found"");\n+        }\n+\n+        return iter->second;\n+    }\n+\n+    /// <summary>\n+    /// Accesses an element of a JSON object.\n+    /// </summary>\n+    /// <param name=""key"">The key of an element in the JSON object.</param>\n+    /// <returns>If the key exists, a reference to the value kept in the field, otherwise a newly created null value\n+    /// that will be stored for the given key.</returns>\n+    json::value& operator[](const utility::string_t& key)\n+    {\n+        auto iter = find_insert_location(key);\n+\n+        if (iter == m_elements.end() || key != iter->first)\n+        {\n+            return m_elements.insert(iter, std::pair<utility::string_t, value>(key, value()))->second;\n+        }\n+\n+        return iter->second;\n+    }\n+\n+    /// <summary>\n+    /// Gets an iterator to an element of a JSON object.\n+    /// </summary>\n+    /// <param name=""key"">The key of an element in the JSON object.</param>\n+    /// <returns>A const iterator to the value kept in the field.</returns>\n+    const_iterator find(const utility::string_t& key) const { return find_by_key(key); }\n+\n+    /// <summary>\n+    /// Gets the number of elements of the object.\n+    /// </summary>\n+    /// <returns>The number of elements.</returns>\n+    size_type size() const { return m_elements.size(); }\n+\n+    /// <summary>\n+    /// Checks if there are any elements in the JSON object.\n+    /// </summary>\n+    /// <returns>True if empty.</returns>\n+    bool empty() const { return m_elements.empty(); }\n+\n+private:\n+    static bool compare_pairs(const std::pair<utility::string_t, value>& p1,\n+                              const std::pair<utility::string_t, value>& p2)\n+    {\n+        return p1.first < p2.first;\n+    }\n+    static bool compare_with_key(const std::pair<utility::string_t, value>& p1, const utility::string_t& key)\n+    {\n+        return p1.first < key;\n+    }\n+\n+    storage_type::iterator find_insert_location(const utility::string_t& key)\n+    {\n+        if (m_keep_order)\n+        {\n+            return std::find_if(m_elements.begin(),\n+                                m_elements.end(),\n+                                [&key](const std::pair<utility::string_t, value>& p) { return p.first == key; });\n+        }\n+        else\n+        {\n+            return std::lower_bound(m_elements.begin(), m_elements.end(), key, compare_with_key);\n+        }\n+    }\n+\n+    storage_type::const_iterator find_by_key(const utility::string_t& key) const\n+    {\n+        if (m_keep_order)\n+        {\n+            return std::find_if(m_elements.begin(),\n+                                m_elements.end(),\n+                                [&key](const std::pair<utility::string_t, value>& p) { return p.first == key; });\n+        }\n+        else\n+        {\n+            auto iter = std::lower_bound(m_elements.begin(), m_elements.end(), key, compare_with_key);\n+            if (iter != m_elements.end() && key != iter->first)\n+            {\n+                return m_elements.end();\n+            }\n+            return iter;\n+        }\n+    }\n+\n+    storage_type::iterator find_by_key(const utility::string_t& key)\n+    {\n+        auto iter = find_insert_location(key);\n+        if (iter != m_elements.end() && key != iter->first)\n+        {\n+            return m_elements.end();\n+        }\n+        return iter;\n+    }\n+\n+    storage_type m_elements;\n+    bool m_keep_order;\n+    friend class details::_Object;\n+\n+    template<typename CharType>\n+    friend class json::details::JSON_Parser;\n+};\n+\n+/// <summary>\n+/// A JSON number represented as a C++ class.\n+/// </summary>\n+class number\n+{\n+    // Note that these constructors make sure that only negative integers are stored as signed int64 (while others\n+    // convert to unsigned int64). This helps handling number objects e.g. comparing two numbers.\n+\n+    number(double value) : m_value(value), m_type(double_type) {}\n+    number(int32_t value) : m_intval(value), m_type(value < 0 ? signed_type : unsigned_type) {}\n+    number(uint32_t value) : m_intval(value), m_type(unsigned_type) {}\n+    number(int64_t value) : m_intval(value), m_type(value < 0 ? signed_type : unsigned_type) {}\n+    number(uint64_t value) : m_uintval(value), m_type(unsigned_type) {}\n+\n+public:\n+    /// <summary>\n+    /// Does the number fit into int32?\n+    /// </summary>\n+    /// <returns><c>true</c> if the number fits into int32, <c>false</c> otherwise</returns>\n+    _ASYNCRTIMP bool is_int32() const;\n+\n+    /// <summary>\n+    /// Does the number fit into unsigned int32?\n+    /// </summary>\n+    /// <returns><c>true</c> if the number fits into unsigned int32, <c>false</c> otherwise</returns>\n+    _ASYNCRTIMP bool is_uint32() const;\n+\n+    /// <summary>\n+    /// Does the number fit into int64?\n+    /// </summary>\n+    /// <returns><c>true</c> if the number fits into int64, <c>false</c> otherwise</returns>\n+    _ASYNCRTIMP bool is_int64() const;\n+\n+    /// <summary>\n+    /// Does the number fit into unsigned int64?\n+    /// </summary>\n+    /// <returns><c>true</c> if the number fits into unsigned int64, <c>false</c> otherwise</returns>\n+    bool is_uint64() const\n+    {\n+        switch (m_type)\n+        {\n+            case signed_type: return m_intval >= 0;\n+            case unsigned_type: return true;\n+            case double_type:\n+            default: return false;\n+        }\n+    }\n+\n+    /// <summary>\n+    /// Converts the JSON number to a C++ double.\n+    /// </summary>\n+    /// <returns>A double representation of the number</returns>\n+    double to_double() const\n+    {\n+        switch (m_type)\n+        {\n+            case double_type: return m_value;\n+            case signed_type: return static_cast<double>(m_intval);\n+            case unsigned_type: return static_cast<double>(m_uintval);\n+            default: return false;\n+        }\n+    }\n+\n+    /// <summary>\n+    /// Converts the JSON number to int32.\n+    /// </summary>\n+    /// <returns>An int32 representation of the number</returns>\n+    int32_t to_int32() const\n+    {\n+        if (m_type == double_type)\n+            return static_cast<int32_t>(m_value);\n+        else\n+            return static_cast<int32_t>(m_intval);\n+    }\n+\n+    /// <summary>\n+    /// Converts the JSON number to unsigned int32.\n+    /// </summary>\n+    /// <returns>An unsigned int32 representation of the number</returns>\n+    uint32_t to_uint32() const\n+    {\n+        if (m_type == double_type)\n+            return static_cast<uint32_t>(m_value);\n+        else\n+            return static_cast<uint32_t>(m_intval);\n+    }\n+\n+    /// <summary>\n+    /// Converts the JSON number to int64.\n+    /// </summary>\n+    /// <returns>An int64 representation of the number</returns>\n+    int64_t to_int64() const\n+    {\n+        if (m_type == double_type)\n+            return static_cast<int64_t>(m_value);\n+        else\n+            return static_cast<int64_t>(m_intval);\n+    }\n+\n+    /// <summary>\n+    /// Converts the JSON number to unsigned int64.\n+    /// </summary>\n+    /// <returns>An unsigned int64 representation of the number</returns>\n+    uint64_t to_uint64() const\n+    {\n+        if (m_type == double_type)\n+            return static_cast<uint64_t>(m_value);\n+        else\n+            return static_cast<uint64_t>(m_intval);\n+    }\n+\n+    /// <summary>\n+    /// Is the number represented internally as an integral type?\n+    /// </summary>\n+    /// <returns><c>true</c> if the number is represented as an integral type, <c>false</c> otherwise</returns>\n+    bool is_integral() const { return m_type != double_type; }\n+\n+    /// <summary>\n+    /// Compares two JSON numbers for equality.\n+    /// </summary>\n+    /// <param name=""other"">The JSON number to compare with.</param>\n+    /// <returns>True if the numbers are equal.</returns>\n+    bool operator==(const number& other) const\n+    {\n+        if (m_type != other.m_type) return false;\n+\n+        switch (m_type)\n+        {\n+            case json::number::type::signed_type: return m_intval == other.m_intval;\n+            case json::number::type::unsigned_type: return m_uintval == other.m_uintval;\n+            case json::number::type::double_type: return m_value == other.m_value;\n+        }\n+        __assume(0);\n+        // Absence of this return statement provokes a warning from Intel\n+        // compiler, but its presence results in a warning from MSVC, so\n+        // we have to resort to conditional compilation to keep both happy.\n+#ifdef __INTEL_COMPILER\n+        return false;\n+#endif\n+    }\n+\n+private:\n+    union {\n+        int64_t m_intval;\n+        uint64_t m_uintval;\n+        double m_value;\n+    };\n+\n+    enum type\n+    {\n+        signed_type = 0,\n+        unsigned_type,\n+        double_type\n+    } m_type;\n+\n+    friend class details::_Number;\n+};\n+\n+namespace details\n+{\n+class _Value\n+{\n+public:\n+    virtual std::unique_ptr<_Value> _copy_value() = 0;\n+\n+    virtual bool has_field(const utility::string_t&) const { return false; }\n+    virtual value get_field(const utility::string_t&) const { throw json_exception(""not an object""); }\n+    virtual value get_element(array::size_type) const { throw json_exception(""not an array""); }\n+\n+    virtual value& index(const utility::string_t&) { throw json_exception(""not an object""); }\n+    virtual value& index(array::size_type) { throw json_exception(""not an array""); }\n+\n+    virtual const value& cnst_index(const utility::string_t&) const { throw json_exception(""not an object""); }\n+    virtual const value& cnst_index(array::size_type) const { throw json_exception(""not an array""); }\n+\n+    // Common function used for serialization to strings and streams.\n+    virtual void serialize_impl(std::string& str) const { format(str); }\n+#ifdef _WIN32\n+    virtual void serialize_impl(std::wstring& str) const { format(str); }\n+#endif\n+\n+    virtual utility::string_t to_string() const\n+    {\n+        utility::string_t str;\n+        serialize_impl(str);\n+        return str;\n+    }\n+\n+    virtual json::value::value_type type() const { return json::value::Null; }\n+\n+    virtual bool is_integer() const { throw json_exception(""not a number""); }\n+    virtual bool is_double() const { throw json_exception(""not a number""); }\n+\n+    virtual const json::number& as_number() { throw json_exception(""not a number""); }\n+    virtual double as_double() const { throw json_exception(""not a number""); }\n+    virtual int as_integer() const { throw json_exception(""not a number""); }\n+    virtual bool as_bool() const { throw json_exception(""not a boolean""); }\n+    virtual json::array& as_array() { throw json_exception(""not an array""); }\n+    virtual const json::array& as_array() const { throw json_exception(""not an array""); }\n+    virtual json::object& as_object() { throw json_exception(""not an object""); }\n+    virtual const json::object& as_object() const { throw json_exception(""not an object""); }\n+    virtual const utility::string_t& as_string() const { throw json_exception(""not a string""); }\n+\n+    virtual size_t size() const { return 0; }\n+\n+    virtual ~_Value() {}\n+\n+protected:\n+    _Value() {}\n+\n+    virtual void format(std::basic_string<char>& stream) const { stream.append(""null""); }\n+#ifdef _WIN32\n+    virtual void format(std::basic_string<wchar_t>& stream) const { stream.append(L""null""); }\n+#endif\n+private:\n+    friend class web::json::value;\n+};\n+\n+class _Null : public _Value\n+{\n+public:\n+    virtual std::unique_ptr<_Value> _copy_value() { return utility::details::make_unique<_Null>(); }\n+    virtual json::value::value_type type() const { return json::value::Null; }\n+};\n+\n+class _Number : public _Value\n+{\n+public:\n+    _Number(double value) : m_number(value) {}\n+    _Number(int32_t value) : m_number(value) {}\n+    _Number(uint32_t value) : m_number(value) {}\n+    _Number(int64_t value) : m_number(value) {}\n+    _Number(uint64_t value) : m_number(value) {}\n+\n+    virtual std::unique_ptr<_Value> _copy_value() { return utility::details::make_unique<_Number>(*this); }\n+\n+    virtual json::value::value_type type() const { return json::value::Number; }\n+\n+    virtual bool is_integer() const { return m_number.is_integral(); }\n+    virtual bool is_double() const { return !m_number.is_integral(); }\n+\n+    virtual double as_double() const { return m_number.to_double(); }\n+\n+    virtual int as_integer() const { return m_number.to_int32(); }\n+\n+    virtual const number& as_number() { return m_number; }\n+\n+protected:\n+    virtual void format(std::basic_string<char>& stream) const;\n+#ifdef _WIN32\n+    virtual void format(std::basic_string<wchar_t>& stream) const;\n+#endif\n+private:\n+    template<typename CharType>\n+    friend class json::details::JSON_Parser;\n+\n+    json::number m_number;\n+};\n+\n+class _Boolean : public _Value\n+{\n+public:\n+    _Boolean(bool value) : m_value(value) {}\n+\n+    virtual std::unique_ptr<_Value> _copy_value() { return utility::details::make_unique<_Boolean>(*this); }\n+\n+    virtual json::value::value_type type() const { return json::value::Boolean; }\n+\n+    virtual bool as_bool() const { return m_value; }\n+\n+protected:\n+    virtual void format(std::basic_string<char>& stream) const { stream.append(m_value ? ""true"" : ""false""); }\n+\n+#ifdef _WIN32\n+    virtual void format(std::basic_string<wchar_t>& stream) const { stream.append(m_value ? L""true"" : L""false""); }\n+#endif\n+private:\n+    template<typename CharType>\n+    friend class json::details::JSON_Parser;\n+    bool m_value;\n+};\n+\n+class _String : public _Value\n+{\n+public:\n+    _String(utility::string_t value) : m_string(std::move(value)) { m_has_escape_char = has_escape_chars(*this); }\n+    _String(utility::string_t value, bool escaped_chars) : m_string(std::move(value)), m_has_escape_char(escaped_chars)\n+    {\n+    }\n+\n+#ifdef _WIN32\n+    _String(std::string&& value) : m_string(utility::conversions::to_utf16string(std::move(value)))\n+    {\n+        m_has_escape_char = has_escape_chars(*this);\n+    }\n+    _String(std::string&& value, bool escape_chars)\n+        : m_string(utility::conversions::to_utf16string(std::move(value))), m_has_escape_char(escape_chars)\n+    {\n+    }\n+#endif\n+\n+    virtual std::unique_ptr<_Value> _copy_value() { return utility::details::make_unique<_String>(*this); }\n+\n+    virtual json::value::value_type type() const { return json::value::String; }\n+\n+    virtual const utility::string_t& as_string() const;\n+\n+    virtual void serialize_impl(std::string& str) const { serialize_impl_char_type(str); }\n+#ifdef _WIN32\n+    virtual void serialize_impl(std::wstring& str) const { serialize_impl_char_type(str); }\n+#endif\n+\n+protected:\n+    virtual void format(std::basic_string<char>& str) const;\n+#ifdef _WIN32\n+    virtual void format(std::basic_string<wchar_t>& str) const;\n+#endif\n+\n+private:\n+    friend class _Object;\n+    friend class _Array;\n+\n+    size_t get_reserve_size() const { return m_string.size() + 2; }\n+\n+    template<typename CharType>\n+    void serialize_impl_char_type(std::basic_string<CharType>& str) const\n+    {\n+        // To avoid repeated allocations reserve some space all up front.\n+        // size of string + 2 for quotes\n+        str.reserve(get_reserve_size());\n+        format(str);\n+    }\n+\n+    std::string as_utf8_string() const;\n+    utf16string as_utf16_string() const;\n+\n+    utility::string_t m_string;\n+\n+    // There are significant performance gains that can be made by knowing whether\n+    // or not a character that requires escaping is present.\n+    bool m_has_escape_char;\n+    static bool has_escape_chars(const _String& str);\n+};\n+\n+template<typename CharType>\n+_ASYNCRTIMP void append_escape_string(std::basic_string<CharType>& str, const std::basic_string<CharType>& escaped);\n+\n+void format_string(const utility::string_t& key, utility::string_t& str);\n+\n+#ifdef _WIN32\n+void format_string(const utility::string_t& key, std::string& str);\n+#endif\n+\n+class _Object : public _Value\n+{\n+public:\n+    _Object(bool keep_order) : m_object(keep_order) {}\n+    _Object(object::storage_type fields, bool keep_order) : m_object(std::move(fields), keep_order) {}\n+\n+    virtual std::unique_ptr<_Value> _copy_value() { return utility::details::make_unique<_Object>(*this); }\n+\n+    virtual json::object& as_object() { return m_object; }\n+\n+    virtual const json::object& as_object() const { return m_object; }\n+\n+    virtual json::value::value_type type() const { return json::value::Object; }\n+\n+    virtual bool has_field(const utility::string_t&) const;\n+\n+    virtual json::value& index(const utility::string_t& key);\n+\n+    bool is_equal(const _Object* other) const\n+    {\n+        if (m_object.size() != other->m_object.size()) return false;\n+\n+        return std::equal(std::begin(m_object), std::end(m_object), std::begin(other->m_object));\n+    }\n+\n+    virtual void serialize_impl(std::string& str) const\n+    {\n+        // To avoid repeated allocations reserve some space all up front.\n+        str.reserve(get_reserve_size());\n+        format(str);\n+    }\n+#ifdef _WIN32\n+    virtual void serialize_impl(std::wstring& str) const\n+    {\n+        // To avoid repeated allocations reserve some space all up front.\n+        str.reserve(get_reserve_size());\n+        format(str);\n+    }\n+#endif\n+    size_t size() const { return m_object.size(); }\n+\n+protected:\n+    virtual void format(std::basic_string<char>& str) const { format_impl(str); }\n+#ifdef _WIN32\n+    virtual void format(std::basic_string<wchar_t>& str) const { format_impl(str); }\n+#endif\n+\n+private:\n+    json::object m_object;\n+\n+    template<typename CharType>\n+    friend class json::details::JSON_Parser;\n+\n+    template<typename CharType>\n+    void format_impl(std::basic_string<CharType>& str) const\n+    {\n+        str.push_back(\'{\');\n+        if (!m_object.empty())\n+        {\n+            auto lastElement = m_object.end() - 1;\n+            for (auto iter = m_object.begin(); iter != lastElement; ++iter)\n+            {\n+                format_string(iter->first, str);\n+                str.push_back(\':\');\n+                iter->second.format(str);\n+                str.push_back(\',\');\n+            }\n+            format_string(lastElement->first, str);\n+            str.push_back(\':\');\n+            lastElement->second.format(str);\n+        }\n+        str.push_back(\'}\');\n+    }\n+\n+    size_t get_reserve_size() const\n+    {\n+        // This is a heuristic we can tune more in the future:\n+        // Basically size of string plus\n+        // sum size of value if an object, array, or string.\n+        size_t reserveSize = 2; // For brackets {}\n+        for (auto iter = m_object.begin(); iter != m_object.end(); ++iter)\n+        {\n+            reserveSize += iter->first.length() + 2;     // 2 for quotes\n+            size_t valueSize = iter->second.size() * 20; // Multiply by each object/array element\n+            if (valueSize == 0)\n+            {\n+                if (iter->second.type() == json::value::String)\n+                {\n+                    valueSize = static_cast<_String*>(iter->second.m_value.get())->get_reserve_size();\n+                }\n+                else\n+                {\n+                    valueSize = 5; // true, false, or null\n+                }\n+            }\n+            reserveSize += valueSize;\n+        }\n+        return reserveSize;\n+    }\n+};\n+\n+class _Array : public _Value\n+{\n+public:\n+    _Array() {}\n+    _Array(array::size_type size) : m_array(size) {}\n+    _Array(array::storage_type elements) : m_array(std::move(elements)) {}\n+\n+    virtual std::unique_ptr<_Value> _copy_value() { return utility::details::make_unique<_Array>(*this); }\n+\n+    virtual json::value::value_type type() const { return json::value::Array; }\n+\n+    virtual json::array& as_array() { return m_array; }\n+    virtual const json::array& as_array() const { return m_array; }\n+\n+    virtual json::value& index(json::array::size_type index) { return m_array[index]; }\n+\n+    bool is_equal(const _Array* other) const\n+    {\n+        if (m_array.size() != other->m_array.size()) return false;\n+\n+        auto iterT = m_array.cbegin();\n+        auto iterO = other->m_array.cbegin();\n+        auto iterTe = m_array.cend();\n+        auto iterOe = other->m_array.cend();\n+\n+        for (; iterT != iterTe && iterO != iterOe; ++iterT, ++iterO)\n+        {\n+            if (*iterT != *iterO) return false;\n+        }\n+\n+        return true;\n+    }\n+\n+    virtual void serialize_impl(std::string& str) const\n+    {\n+        // To avoid repeated allocations reserve some space all up front.\n+        str.reserve(get_reserve_size());\n+        format(str);\n+    }\n+#ifdef _WIN32\n+    virtual void serialize_impl(std::wstring& str) const\n+    {\n+        // To avoid repeated allocations reserve some space all up front.\n+        str.reserve(get_reserve_size());\n+        format(str);\n+    }\n+#endif\n+    size_t size() const { return m_array.size(); }\n+\n+protected:\n+    virtual void format(std::basic_string<char>& str) const { format_impl(str); }\n+#ifdef _WIN32\n+    virtual void format(std::basic_string<wchar_t>& str) const { format_impl(str); }\n+#endif\n+private:\n+    json::array m_array;\n+\n+    template<typename CharType>\n+    friend class json::details::JSON_Parser;\n+\n+    template<typename CharType>\n+    void format_impl(std::basic_string<CharType>& str) const\n+    {\n+        str.push_back(\'[\');\n+        if (!m_array.m_elements.empty())\n+        {\n+            auto lastElement = m_array.m_elements.end() - 1;\n+            for (auto iter = m_array.m_elements.begin(); iter != lastElement; ++iter)\n+            {\n+                iter->format(str);\n+                str.push_back(\',\');\n+            }\n+            lastElement->format(str);\n+        }\n+        str.push_back(\']\');\n+    }\n+\n+    size_t get_reserve_size() const\n+    {\n+        // This is a heuristic we can tune more in the future:\n+        // Basically sum size of each value if an object, array, or string by a multiplier.\n+        size_t reserveSize = 2; // For brackets []\n+        for (auto iter = m_array.cbegin(); iter != m_array.cend(); ++iter)\n+        {\n+            size_t valueSize = iter->size() * 20; // Per each nested array/object\n+\n+            if (valueSize == 0) valueSize = 5; // true, false, or null\n+\n+            reserveSize += valueSize;\n+        }\n+        return reserveSize;\n+    }\n+};\n+} // namespace details\n+\n+/// <summary>\n+/// Gets the number of children of the value.\n+/// </summary>\n+/// <returns>The number of children. 0 for all non-composites.</returns>\n+inline size_t json::value::size() const { return m_value->size(); }\n+\n+/// <summary>\n+/// Test for the presence of a field.\n+/// </summary>\n+/// <param name=""key"">The name of the field</param>\n+/// <returns>True if the field exists, false otherwise.</returns>\n+inline bool json::value::has_field(const utility::string_t& key) const { return m_value->has_field(key); }\n+\n+/// <summary>\n+/// Access a field of a JSON object.\n+/// </summary>\n+/// <param name=""key"">The name of the field</param>\n+/// <returns>The value kept in the field; null if the field does not exist</returns>\n+inline json::value json::value::get(const utility::string_t& key) const { return m_value->get_field(key); }\n+\n+/// <summary>\n+/// Access an element of a JSON array.\n+/// </summary>\n+/// <param name=""index"">The index of an element in the JSON array</param>\n+/// <returns>The value kept at the array index; null if outside the boundaries of the array</returns>\n+inline json::value json::value::get(size_t index) const { return m_value->get_element(index); }\n+\n+/// <summary>\n+/// A standard <c>std::ostream</c> operator to facilitate writing JSON values to streams.\n+/// </summary>\n+/// <param name=""os"">The output stream to write the JSON value to.</param>\n+/// <param name=""val"">The JSON value to be written to the stream.</param>\n+/// <returns>The output stream object</returns>\n+_ASYNCRTIMP utility::ostream_t& __cdecl operator<<(utility::ostream_t& os, const json::value& val);\n+\n+/// <summary>\n+/// A standard <c>std::istream</c> operator to facilitate reading JSON values from streams.\n+/// </summary>\n+/// <param name=""is"">The input stream to read the JSON value from.</param>\n+/// <param name=""val"">The JSON value object read from the stream.</param>\n+/// <returns>The input stream object.</returns>\n+_ASYNCRTIMP utility::istream_t& __cdecl operator>>(utility::istream_t& is, json::value& val);\n+} // namespace json\n+} // namespace web\n+\n+#endif'}, {'Name': 'deps/cpprestsdk/include/cpprest/uri.h', 'Line Additions': 21, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,21 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * Protocol independent support for URIs.\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+#pragma once\n+\n+#ifndef CASA_URI_H\n+#define CASA_URI_H\n+\n+#include ""cpprest/base_uri.h""\n+#include ""cpprest/uri_builder.h""\n+\n+#endif'}, {'Name': 'deps/cpprestsdk/include/cpprest/uri_builder.h', 'Line Additions': 295, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,295 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * Builder style class for creating URIs.\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+\n+#pragma once\n+\n+#include ""cpprest/base_uri.h""\n+#include <string>\n+\n+namespace web\n+{\n+/// <summary>\n+/// Builder for constructing URIs incrementally.\n+/// </summary>\n+class uri_builder\n+{\n+public:\n+    /// <summary>\n+    /// Creates a builder with an initially empty URI.\n+    /// </summary>\n+    uri_builder() = default;\n+\n+    /// <summary>\n+    /// Creates a builder with a existing URI object.\n+    /// </summary>\n+    /// <param name=""uri_str"">Encoded string containing the URI.</param>\n+    uri_builder(const uri& uri_str) : m_uri(uri_str.m_components) {}\n+\n+    /// <summary>\n+    /// Get the scheme component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI scheme as a string.</returns>\n+    const utility::string_t& scheme() const { return m_uri.m_scheme; }\n+\n+    /// <summary>\n+    /// Get the user information component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI user information as a string.</returns>\n+    const utility::string_t& user_info() const { return m_uri.m_user_info; }\n+\n+    /// <summary>\n+    /// Get the host component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI host as a string.</returns>\n+    const utility::string_t& host() const { return m_uri.m_host; }\n+\n+    /// <summary>\n+    /// Get the port component of the URI. Returns -1 if no port is specified.\n+    /// </summary>\n+    /// <returns>The URI port as an integer.</returns>\n+    int port() const { return m_uri.m_port; }\n+\n+    /// <summary>\n+    /// Get the path component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI path as a string.</returns>\n+    const utility::string_t& path() const { return m_uri.m_path; }\n+\n+    /// <summary>\n+    /// Get the query component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI query as a string.</returns>\n+    const utility::string_t& query() const { return m_uri.m_query; }\n+\n+    /// <summary>\n+    /// Get the fragment component of the URI as an encoded string.\n+    /// </summary>\n+    /// <returns>The URI fragment as a string.</returns>\n+    const utility::string_t& fragment() const { return m_uri.m_fragment; }\n+\n+    /// <summary>\n+    /// Set the scheme of the URI.\n+    /// </summary>\n+    /// <param name=""scheme"">Uri scheme.</param>\n+    /// <returns>A reference to this <c>uri_builder</c> to support chaining.</returns>\n+    uri_builder& set_scheme(const utility::string_t& scheme)\n+    {\n+        m_uri.m_scheme = scheme;\n+        return *this;\n+    }\n+\n+    /// <summary>\n+    /// Set the user info component of the URI.\n+    /// </summary>\n+    /// <param name=""user_info"">User info as a decoded string.</param>\n+    /// <param name=""do_encoding"">Specify whether to apply URI encoding to the given string.</param>\n+    /// <returns>A reference to this <c>uri_builder</c> to support chaining.</returns>\n+    uri_builder& set_user_info(const utility::string_t& user_info, bool do_encoding = false)\n+    {\n+        if (do_encoding)\n+        {\n+            m_uri.m_user_info = uri::encode_uri(user_info, uri::components::user_info);\n+        }\n+        else\n+        {\n+            m_uri.m_user_info = user_info;\n+        }\n+\n+        return *this;\n+    }\n+\n+    /// <summary>\n+    /// Set the host component of the URI.\n+    /// </summary>\n+    /// <param name=""host"">Host as a decoded string.</param>\n+    /// <param name=""do_encoding"">Specify whether to apply URI encoding to the given string.</param>\n+    /// <returns>A reference to this <c>uri_builder</c> to support chaining.</returns>\n+    uri_builder& set_host(const utility::string_t& host, bool do_encoding = false)\n+    {\n+        if (do_encoding)\n+        {\n+            m_uri.m_host = uri::encode_uri(host, uri::components::host);\n+        }\n+        else\n+        {\n+            m_uri.m_host = host;\n+        }\n+\n+        return *this;\n+    }\n+\n+    /// <summary>\n+    /// Set the port component of the URI.\n+    /// </summary>\n+    /// <param name=""port"">Port as an integer.</param>\n+    /// <returns>A reference to this <c>uri_builder</c> to support chaining.</returns>\n+    uri_builder& set_port(int port)\n+    {\n+        m_uri.m_port = port;\n+        return *this;\n+    }\n+\n+    /// <summary>\n+    /// Set the port component of the URI.\n+    /// </summary>\n+    /// <param name=""port"">Port as a string.</param>\n+    /// <returns>A reference to this <c>uri_builder</c> to support chaining.</returns>\n+    /// <remarks>When string can\'t be converted to an integer the port is left unchanged.</remarks>\n+    _ASYNCRTIMP uri_builder& set_port(const utility::string_t& port);\n+\n+    /// <summary>\n+    /// Set the path component of the URI.\n+    /// </summary>\n+    /// <param name=""path"">Path as a decoded string.</param>\n+    /// <param name=""do_encoding"">Specify whether to apply URI encoding to the given string.</param>\n+    /// <returns>A reference to this <c>uri_builder</c> to support chaining.</returns>\n+    uri_builder& set_path(const utility::string_t& path, bool do_encoding = false)\n+    {\n+        if (do_encoding)\n+        {\n+            m_uri.m_path = uri::encode_uri(path, uri::components::path);\n+        }\n+        else\n+        {\n+            m_uri.m_path = path;\n+        }\n+\n+        return *this;\n+    }\n+\n+    /// <summary>\n+    /// Set the query component of the URI.\n+    /// </summary>\n+    /// <param name=""query"">Query as a decoded string.</param>\n+    /// <param name=""do_encoding"">Specify whether apply URI encoding to the given string.</param>\n+    /// <returns>A reference to this <c>uri_builder</c> to support chaining.</returns>\n+    uri_builder& set_query(const utility::string_t& query, bool do_encoding = false)\n+    {\n+        if (do_encoding)\n+        {\n+            m_uri.m_query = uri::encode_uri(query, uri::components::query);\n+        }\n+        else\n+        {\n+            m_uri.m_query = query;\n+        }\n+\n+        return *this;\n+    }\n+\n+    /// <summary>\n+    /// Set the fragment component of the URI.\n+    /// </summary>\n+    /// <param name=""fragment"">Fragment as a decoded string.</param>\n+    /// <param name=""do_encoding"">Specify whether to apply URI encoding to the given string.</param>\n+    /// <returns>A reference to this <c>uri_builder</c> to support chaining.</returns>\n+    uri_builder& set_fragment(const utility::string_t& fragment, bool do_encoding = false)\n+    {\n+        if (do_encoding)\n+        {\n+            m_uri.m_fragment = uri::encode_uri(fragment, uri::components::fragment);\n+        }\n+        else\n+        {\n+            m_uri.m_fragment = fragment;\n+        }\n+\n+        return *this;\n+    }\n+\n+    /// <summary>\n+    /// Clears all components of the underlying URI in this uri_builder.\n+    /// </summary>\n+    void clear() { m_uri = details::uri_components(); }\n+\n+    /// <summary>\n+    /// Appends another path to the path of this uri_builder.\n+    /// </summary>\n+    /// <param name=""path"">Path to append as a already encoded string.</param>\n+    /// <param name=""do_encoding"">Specify whether to apply URI encoding to the given string.</param>\n+    /// <returns>A reference to this uri_builder to support chaining.</returns>\n+    _ASYNCRTIMP uri_builder& append_path(const utility::string_t& path, bool do_encoding = false);\n+\n+    /// <summary>\n+    /// Appends the raw contents of the path argument to the path of this uri_builder with no separator de-duplication.\n+    /// </summary>\n+    /// <remarks>\n+    /// The path argument is appended after adding a \'/\' separator without regards to the contents of path. If an empty\n+    /// string is provided, this function will immediately return without changes to the stored path value. For example:\n+    /// if the current contents are ""/abc"" and path=""/xyz"", the result will be ""/abc//xyz"".\n+    /// </remarks>\n+    /// <param name=""path"">Path to append as a already encoded string.</param>\n+    /// <param name=""do_encoding"">Specify whether to apply URI encoding to the given string.</param>\n+    /// <returns>A reference to this uri_builder to support chaining.</returns>\n+    _ASYNCRTIMP uri_builder& append_path_raw(const utility::string_t& path, bool do_encoding = false);\n+\n+    /// <summary>\n+    /// Appends another query to the query of this uri_builder.\n+    /// </summary>\n+    /// <param name=""query"">Query to append as a decoded string.</param>\n+    /// <param name=""do_encoding"">Specify whether to apply URI encoding to the given string.</param>\n+    /// <returns>A reference to this uri_builder to support chaining.</returns>\n+    _ASYNCRTIMP uri_builder& append_query(const utility::string_t& query, bool do_encoding = false);\n+\n+    /// <summary>\n+    /// Appends an relative uri (Path, Query and fragment) at the end of the current uri.\n+    /// </summary>\n+    /// <param name=""relative_uri"">The relative uri to append.</param>\n+    /// <returns>A reference to this uri_builder to support chaining.</returns>\n+    _ASYNCRTIMP uri_builder& append(const uri& relative_uri);\n+\n+    /// <summary>\n+    /// Appends another query to the query of this uri_builder, encoding it first. This overload is useful when building\n+    /// a query segment of the form ""element=10"", where the right hand side of the query is stored as a type other than\n+    /// a string, for instance, an integral type.\n+    /// </summary>\n+    /// <param name=""name"">The name portion of the query string</param>\n+    /// <param name=""value"">The value portion of the query string</param>\n+    /// <returns>A reference to this uri_builder to support chaining.</returns>\n+    template<typename T>\n+    uri_builder& append_query(const utility::string_t& name, const T& value, bool do_encoding = true)\n+    {\n+        if (do_encoding)\n+            append_query_encode_impl(name, utility::conversions::details::print_utf8string(value));\n+        else\n+            append_query_no_encode_impl(name, utility::conversions::details::print_string(value));\n+        return *this;\n+    }\n+\n+    /// <summary>\n+    /// Combine and validate the URI components into a encoded string. An exception will be thrown if the URI is\n+    /// invalid.\n+    /// </summary>\n+    /// <returns>The created URI as a string.</returns>\n+    _ASYNCRTIMP utility::string_t to_string() const;\n+\n+    /// <summary>\n+    /// Combine and validate the URI components into a URI class instance. An exception will be thrown if the URI is\n+    /// invalid.\n+    /// </summary>\n+    /// <returns>The create URI as a URI class instance.</returns>\n+    _ASYNCRTIMP uri to_uri() const;\n+\n+    /// <summary>\n+    /// Validate the generated URI from all existing components of this uri_builder.\n+    /// </summary>\n+    /// <returns>Whether the URI is valid.</returns>\n+    _ASYNCRTIMP bool is_valid();\n+\n+private:\n+    _ASYNCRTIMP void append_query_encode_impl(const utility::string_t& name, const utf8string& value);\n+    _ASYNCRTIMP void append_query_no_encode_impl(const utility::string_t& name, const utility::string_t& value);\n+\n+    details::uri_components m_uri;\n+};\n+} // namespace web'}, {'Name': 'deps/cpprestsdk/include/cpprest/version.h', 'Line Additions': 10, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,10 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ */\n+#define CPPREST_VERSION_MINOR 10\n+#define CPPREST_VERSION_MAJOR 2\n+#define CPPREST_VERSION_REVISION 13\n+\n+#define CPPREST_VERSION (CPPREST_VERSION_MAJOR * 100000 + CPPREST_VERSION_MINOR * 100 + CPPREST_VERSION_REVISION)'}, {'Name': 'deps/cpprestsdk/license.txt', 'Line Additions': 25, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,25 @@\n+C++ REST SDK \n+\n+The MIT License (MIT)\n+\n+Copyright (c) Microsoft Corporation\n+\n+All rights reserved.\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy of\n+this software and associated documentation files (the ""Software""), to deal in\n+the Software without restriction, including without limitation the rights to\n+use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n+the Software, and to permit persons to whom the Software is furnished to do so,\n+subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE.\n\\ No newline at end of file'}, {'Name': 'deps/cpprestsdk/pch.cpp', 'Line Additions': 1, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1 @@\n+#include ""pch.h""'}, {'Name': 'deps/cpprestsdk/pch.h', 'Line Additions': 34, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,34 @@\n+#include <winrt/base.h>\n+#include <Windows.h>\n+#include <dxgi1_3.h>\n+#include <d3d11_2.h>\n+#include <d2d1_3.h>\n+#include <d2d1_3helper.h>\n+#include <d2d1helper.h>\n+#include <dwrite.h>\n+#include <dcomp.h>\n+#include <dwmapi.h>\n+#include <Shobjidl.h>\n+#include <Shlwapi.h>\n+#include <string>\n+#include <algorithm>\n+#include <chrono>\n+#include <mutex>\n+#include <thread>\n+#include <functional>\n+#include <condition_variable>\n+#include <stdexcept>\n+#include <tuple>\n+#include <unordered_set>\n+#include <string>\n+#include <vector>\n+\n+// cpprestsdk headers\n+#include ""cpprest/details/basic_types.h""\n+#include ""cpprest/details/cpprest_compat.h""\n+#include ""cpprest/version.h""\n+// json\n+#include ""cpprest/json.h""\n+// utilities\n+#include ""cpprest/asyncrt_utils.h""\n+#include ""cpprest/details/web_utilities.h""'}, {'Name': 'deps/cpprestsdk/src/json/json.cpp', 'Line Additions': 475, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,475 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * HTTP Library: JSON parser and writer\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+\n+#include ""pch.h""\n+\n+using namespace web;\n+\n+bool json::details::g_keep_json_object_unsorted = false;\n+void json::keep_object_element_order(bool keep_order) { json::details::g_keep_json_object_unsorted = keep_order; }\n+\n+utility::ostream_t& web::json::operator<<(utility::ostream_t& os, const web::json::value& val)\n+{\n+    val.serialize(os);\n+    return os;\n+}\n+\n+utility::istream_t& web::json::operator>>(utility::istream_t& is, json::value& val)\n+{\n+    val = json::value::parse(is);\n+    return is;\n+}\n+\n+web::json::value::value()\n+    : m_value(utility::details::make_unique<web::json::details::_Null>())\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::Null)\n+#endif\n+{\n+}\n+\n+web::json::value::value(int32_t value)\n+    : m_value(utility::details::make_unique<web::json::details::_Number>(value))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::Number)\n+#endif\n+{\n+}\n+\n+web::json::value::value(uint32_t value)\n+    : m_value(utility::details::make_unique<web::json::details::_Number>(value))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::Number)\n+#endif\n+{\n+}\n+\n+web::json::value::value(int64_t value)\n+    : m_value(utility::details::make_unique<web::json::details::_Number>(value))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::Number)\n+#endif\n+{\n+}\n+\n+web::json::value::value(uint64_t value)\n+    : m_value(utility::details::make_unique<web::json::details::_Number>(value))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::Number)\n+#endif\n+{\n+}\n+\n+web::json::value::value(double value)\n+    : m_value(utility::details::make_unique<web::json::details::_Number>(value))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::Number)\n+#endif\n+{\n+}\n+\n+web::json::value::value(bool value)\n+    : m_value(utility::details::make_unique<web::json::details::_Boolean>(value))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::Boolean)\n+#endif\n+{\n+}\n+\n+web::json::value::value(utility::string_t value)\n+    : m_value(utility::details::make_unique<web::json::details::_String>(std::move(value)))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::String)\n+#endif\n+{\n+}\n+\n+web::json::value::value(utility::string_t value, bool has_escape_chars)\n+    : m_value(utility::details::make_unique<web::json::details::_String>(std::move(value), has_escape_chars))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::String)\n+#endif\n+{\n+}\n+\n+web::json::value::value(const utility::char_t* value)\n+    : m_value(utility::details::make_unique<web::json::details::_String>(value))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::String)\n+#endif\n+{\n+}\n+\n+web::json::value::value(const utility::char_t* value, bool has_escape_chars)\n+    : m_value(utility::details::make_unique<web::json::details::_String>(utility::string_t(value), has_escape_chars))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(value::String)\n+#endif\n+{\n+}\n+\n+web::json::value::value(const value& other)\n+    : m_value(other.m_value->_copy_value())\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    , m_kind(other.m_kind)\n+#endif\n+{\n+}\n+\n+web::json::value& web::json::value::operator=(const value& other)\n+{\n+    if (this != &other)\n+    {\n+        m_value = std::unique_ptr<details::_Value>(other.m_value->_copy_value());\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+        m_kind = other.m_kind;\n+#endif\n+    }\n+    return *this;\n+}\n+\n+web::json::value::value(value&& other) CPPREST_NOEXCEPT : m_value(std::move(other.m_value))\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+    ,\n+                                                          m_kind(other.m_kind)\n+#endif\n+{\n+}\n+\n+web::json::value& web::json::value::operator=(web::json::value&& other) CPPREST_NOEXCEPT\n+{\n+    if (this != &other)\n+    {\n+        m_value.swap(other.m_value);\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+        m_kind = other.m_kind;\n+#endif\n+    }\n+    return *this;\n+}\n+\n+web::json::value web::json::value::null() { return web::json::value(); }\n+\n+web::json::value web::json::value::number(double value) { return web::json::value(value); }\n+\n+web::json::value web::json::value::number(int32_t value) { return web::json::value(value); }\n+\n+web::json::value web::json::value::number(uint32_t value) { return web::json::value(value); }\n+\n+web::json::value web::json::value::number(int64_t value) { return web::json::value(value); }\n+\n+web::json::value web::json::value::number(uint64_t value) { return web::json::value(value); }\n+\n+web::json::value web::json::value::boolean(bool value) { return web::json::value(value); }\n+\n+web::json::value web::json::value::string(utility::string_t value)\n+{\n+    std::unique_ptr<details::_Value> ptr = utility::details::make_unique<details::_String>(std::move(value));\n+    return web::json::value(std::move(ptr)\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+                                ,\n+                            value::String\n+#endif\n+    );\n+}\n+\n+web::json::value web::json::value::string(utility::string_t value, bool has_escape_chars)\n+{\n+    std::unique_ptr<details::_Value> ptr =\n+        utility::details::make_unique<details::_String>(std::move(value), has_escape_chars);\n+    return web::json::value(std::move(ptr)\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+                                ,\n+                            value::String\n+#endif\n+    );\n+}\n+\n+#ifdef _WIN32\n+web::json::value web::json::value::string(const std::string& value)\n+{\n+    std::unique_ptr<details::_Value> ptr =\n+        utility::details::make_unique<details::_String>(utility::conversions::to_utf16string(value));\n+    return web::json::value(std::move(ptr)\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+                                ,\n+                            value::String\n+#endif\n+    );\n+}\n+#endif\n+\n+web::json::value web::json::value::object(bool keep_order)\n+{\n+    std::unique_ptr<details::_Value> ptr = utility::details::make_unique<details::_Object>(keep_order);\n+    return web::json::value(std::move(ptr)\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+                                ,\n+                            value::Object\n+#endif\n+    );\n+}\n+\n+web::json::value web::json::value::object(std::vector<std::pair<::utility::string_t, value>> fields, bool keep_order)\n+{\n+    std::unique_ptr<details::_Value> ptr =\n+        utility::details::make_unique<details::_Object>(std::move(fields), keep_order);\n+    return web::json::value(std::move(ptr)\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+                                ,\n+                            value::Object\n+#endif\n+    );\n+}\n+\n+web::json::value web::json::value::array()\n+{\n+    std::unique_ptr<details::_Value> ptr = utility::details::make_unique<details::_Array>();\n+    return web::json::value(std::move(ptr)\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+                                ,\n+                            value::Array\n+#endif\n+    );\n+}\n+\n+web::json::value web::json::value::array(size_t size)\n+{\n+    std::unique_ptr<details::_Value> ptr = utility::details::make_unique<details::_Array>(size);\n+    return web::json::value(std::move(ptr)\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+                                ,\n+                            value::Array\n+#endif\n+    );\n+}\n+\n+web::json::value web::json::value::array(std::vector<value> elements)\n+{\n+    std::unique_ptr<details::_Value> ptr = utility::details::make_unique<details::_Array>(std::move(elements));\n+    return web::json::value(std::move(ptr)\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+                                ,\n+                            value::Array\n+#endif\n+    );\n+}\n+\n+const web::json::number& web::json::value::as_number() const { return m_value->as_number(); }\n+\n+double web::json::value::as_double() const { return m_value->as_double(); }\n+\n+int web::json::value::as_integer() const { return m_value->as_integer(); }\n+\n+bool web::json::value::as_bool() const { return m_value->as_bool(); }\n+\n+json::array& web::json::value::as_array() { return m_value->as_array(); }\n+\n+const json::array& web::json::value::as_array() const { return m_value->as_array(); }\n+\n+json::object& web::json::value::as_object() { return m_value->as_object(); }\n+\n+const json::object& web::json::value::as_object() const { return m_value->as_object(); }\n+\n+bool web::json::number::is_int32() const\n+{\n+    switch (m_type)\n+    {\n+        case signed_type:\n+            return m_intval >= (std::numeric_limits<int32_t>::min)() && m_intval <= (std::numeric_limits<int32_t>::max)();\n+        case unsigned_type: return m_uintval <= (std::numeric_limits<int32_t>::max)();\n+        case double_type:\n+        default: return false;\n+    }\n+}\n+\n+bool web::json::number::is_uint32() const\n+{\n+    switch (m_type)\n+    {\n+    case signed_type: return m_intval >= 0 && m_intval <= (std::numeric_limits<uint32_t>::max)();\n+        case unsigned_type: return m_uintval <= (std::numeric_limits<uint32_t>::max)();\n+        case double_type:\n+        default: return false;\n+    }\n+}\n+\n+bool web::json::number::is_int64() const\n+{\n+    switch (m_type)\n+    {\n+        case signed_type: return true;\n+        case unsigned_type: return m_uintval <= static_cast<uint64_t>((std::numeric_limits<int64_t>::max)());\n+        case double_type:\n+        default: return false;\n+    }\n+}\n+\n+bool web::json::details::_String::has_escape_chars(const _String& str)\n+{\n+    return std::any_of(std::begin(str.m_string), std::end(str.m_string), [](utility::string_t::value_type const x) {\n+        if (x <= 31)\n+        {\n+            return true;\n+        }\n+        if (x == \'""\')\n+        {\n+            return true;\n+        }\n+        if (x == \'\\\\\')\n+        {\n+            return true;\n+        }\n+        return false;\n+    });\n+}\n+\n+web::json::value::value_type json::value::type() const { return m_value->type(); }\n+\n+bool json::value::is_integer() const\n+{\n+    if (!is_number())\n+    {\n+        return false;\n+    }\n+    return m_value->is_integer();\n+}\n+\n+bool json::value::is_double() const\n+{\n+    if (!is_number())\n+    {\n+        return false;\n+    }\n+    return m_value->is_double();\n+}\n+\n+json::value& web::json::details::_Object::index(const utility::string_t& key) { return m_object[key]; }\n+\n+bool web::json::details::_Object::has_field(const utility::string_t& key) const\n+{\n+    return m_object.find(key) != m_object.end();\n+}\n+\n+bool web::json::value::has_number_field(const utility::string_t& key) const\n+{\n+    return has_field(key) && at(key).is_number();\n+}\n+\n+bool web::json::value::has_integer_field(const utility::string_t& key) const\n+{\n+    return has_field(key) && at(key).is_integer();\n+}\n+\n+bool web::json::value::has_double_field(const utility::string_t& key) const\n+{\n+    return has_field(key) && at(key).is_double();\n+}\n+\n+bool web::json::value::has_boolean_field(const utility::string_t& key) const\n+{\n+    return has_field(key) && at(key).is_boolean();\n+}\n+\n+bool web::json::value::has_string_field(const utility::string_t& key) const\n+{\n+    return has_field(key) && at(key).is_string();\n+}\n+\n+bool web::json::value::has_array_field(const utility::string_t& key) const\n+{\n+    return has_field(key) && at(key).is_array();\n+}\n+\n+bool web::json::value::has_object_field(const utility::string_t& key) const\n+{\n+    return has_field(key) && at(key).is_object();\n+}\n+\n+utility::string_t json::value::to_string() const\n+{\n+#ifndef _WIN32\n+    utility::details::scoped_c_thread_locale locale;\n+#endif\n+    return m_value->to_string();\n+}\n+\n+bool json::value::operator==(const json::value& other) const\n+{\n+    if (this->m_value.get() == other.m_value.get()) return true;\n+    if (this->type() != other.type()) return false;\n+\n+    switch (this->type())\n+    {\n+        case Null: return true;\n+        case Number: return this->as_number() == other.as_number();\n+        case Boolean: return this->as_bool() == other.as_bool();\n+        case String: return this->as_string() == other.as_string();\n+        case Object:\n+            return static_cast<const json::details::_Object*>(this->m_value.get())\n+                ->is_equal(static_cast<const json::details::_Object*>(other.m_value.get()));\n+        case Array:\n+            return static_cast<const json::details::_Array*>(this->m_value.get())\n+                ->is_equal(static_cast<const json::details::_Array*>(other.m_value.get()));\n+    }\n+    __assume(0);\n+}\n+\n+void web::json::value::erase(size_t index) { return this->as_array().erase(index); }\n+\n+void web::json::value::erase(const utility::string_t& key) { return this->as_object().erase(key); }\n+\n+// at() overloads\n+web::json::value& web::json::value::at(size_t index) { return this->as_array().at(index); }\n+\n+const web::json::value& web::json::value::at(size_t index) const { return this->as_array().at(index); }\n+\n+web::json::value& web::json::value::at(const utility::string_t& key) { return this->as_object().at(key); }\n+\n+const web::json::value& web::json::value::at(const utility::string_t& key) const { return this->as_object().at(key); }\n+\n+web::json::value& web::json::value::operator[](const utility::string_t& key)\n+{\n+    if (this->is_null())\n+    {\n+        m_value.reset(new web::json::details::_Object(details::g_keep_json_object_unsorted));\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+        m_kind = value::Object;\n+#endif\n+    }\n+    return m_value->index(key);\n+}\n+\n+web::json::value& web::json::value::operator[](size_t index)\n+{\n+    if (this->is_null())\n+    {\n+        m_value.reset(new web::json::details::_Array());\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+        m_kind = value::Array;\n+#endif\n+    }\n+    return m_value->index(index);\n+}\n+\n+// Remove once VS 2013 is no longer supported.\n+#if defined(_WIN32) && _MSC_VER < 1900\n+static web::json::details::json_error_category_impl instance;\n+#endif\n+const web::json::details::json_error_category_impl& web::json::details::json_error_category()\n+{\n+#if !defined(_WIN32) || _MSC_VER >= 1900\n+    static web::json::details::json_error_category_impl instance;\n+#endif\n+    return instance;\n+}'}, {'Name': 'deps/cpprestsdk/src/json/json_parsing.cpp', 'Line Additions': 1279, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,1279 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * HTTP Library: JSON parser\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+\n+#include ""pch.h""\n+\n+#include <cstdlib>\n+\n+#if defined(_MSC_VER)\n+#pragma warning(disable : 4127) // allow expressions like while(true) pass\n+#endif\n+using namespace web;\n+using namespace web::json;\n+using namespace utility;\n+using namespace utility::conversions;\n+\n+std::array<signed char, 128> _hexval = {\n+    {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n+     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0,  1,  2,  3,\n+     4,  5,  6,  7,  8,  9,  -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1,\n+     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 11, 12, 13, 14, 15, -1,\n+     -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}};\n+\n+namespace web\n+{\n+namespace json\n+{\n+namespace details\n+{\n+//\n+// JSON Parsing\n+//\n+\n+template<typename Token>\n+#if defined(_WIN32)\n+__declspec(noreturn)\n+#else\n+    __attribute__((noreturn))\n+#endif\n+    void CreateException(const Token& tk, const utility::string_t& message)\n+{\n+    std::string str(""* Line "");\n+    str += std::to_string(tk.start.m_line);\n+    str += "", Column "";\n+    str += std::to_string(tk.start.m_column);\n+    str += "" Syntax error: "";\n+    str += utility::conversions::to_utf8string(message);\n+    throw web::json::json_exception(std::move(str));\n+}\n+\n+template<typename Token>\n+void SetErrorCode(Token& tk, json_error jsonErrorCode)\n+{\n+    tk.m_error = std::error_code(jsonErrorCode, json_error_category());\n+}\n+\n+template<typename CharType>\n+class JSON_Parser\n+{\n+public:\n+    JSON_Parser() : m_currentLine(1), m_currentColumn(1), m_currentParsingDepth(0) {}\n+\n+    struct Location\n+    {\n+        size_t m_line;\n+        size_t m_column;\n+    };\n+\n+    struct Token\n+    {\n+        enum Kind\n+        {\n+            TKN_EOF,\n+\n+            TKN_OpenBrace,\n+            TKN_CloseBrace,\n+            TKN_OpenBracket,\n+            TKN_CloseBracket,\n+            TKN_Comma,\n+            TKN_Colon,\n+            TKN_StringLiteral,\n+            TKN_NumberLiteral,\n+            TKN_IntegerLiteral,\n+            TKN_BooleanLiteral,\n+            TKN_NullLiteral,\n+            TKN_Comment\n+        };\n+\n+        Token() : kind(TKN_EOF) {}\n+\n+        Kind kind;\n+        std::basic_string<CharType> string_val;\n+\n+        typename JSON_Parser<CharType>::Location start;\n+\n+        union {\n+            double double_val;\n+            int64_t int64_val;\n+            uint64_t uint64_val;\n+            bool boolean_val;\n+            bool has_unescape_symbol;\n+        };\n+\n+        bool signed_number;\n+\n+        std::error_code m_error;\n+    };\n+\n+    void GetNextToken(Token&);\n+\n+    web::json::value ParseValue(typename JSON_Parser<CharType>::Token& first)\n+    {\n+#ifndef _WIN32\n+        utility::details::scoped_c_thread_locale locale;\n+#endif\n+\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+        auto _value = _ParseValue(first);\n+        auto type = _value->type();\n+        return web::json::value(std::move(_value), type);\n+#else\n+        return web::json::value(_ParseValue(first));\n+#endif\n+    }\n+\n+protected:\n+    typedef typename std::char_traits<CharType>::int_type int_type;\n+    virtual int_type NextCharacter() = 0;\n+    virtual int_type PeekCharacter() = 0;\n+\n+    virtual bool CompleteComment(Token& token);\n+    virtual bool CompleteStringLiteral(Token& token);\n+    int convert_unicode_to_code_point();\n+    bool handle_unescape_char(Token& token);\n+\n+private:\n+    bool CompleteNumberLiteral(CharType first, Token& token);\n+    bool ParseInt64(CharType first, uint64_t& value);\n+    bool CompleteKeywordTrue(Token& token);\n+    bool CompleteKeywordFalse(Token& token);\n+    bool CompleteKeywordNull(Token& token);\n+    std::unique_ptr<web::json::details::_Value> _ParseValue(typename JSON_Parser<CharType>::Token& first);\n+    std::unique_ptr<web::json::details::_Value> _ParseObject(typename JSON_Parser<CharType>::Token& tkn);\n+    std::unique_ptr<web::json::details::_Value> _ParseArray(typename JSON_Parser<CharType>::Token& tkn);\n+\n+    JSON_Parser& operator=(const JSON_Parser&);\n+\n+    int_type EatWhitespace();\n+\n+    void CreateToken(typename JSON_Parser<CharType>::Token& tk, typename Token::Kind kind, Location& start)\n+    {\n+        tk.kind = kind;\n+        tk.start = start;\n+        tk.string_val.clear();\n+    }\n+\n+    void CreateToken(typename JSON_Parser<CharType>::Token& tk, typename Token::Kind kind)\n+    {\n+        tk.kind = kind;\n+        tk.start.m_line = m_currentLine;\n+        tk.start.m_column = m_currentColumn;\n+        tk.string_val.clear();\n+    }\n+\n+protected:\n+    size_t m_currentLine;\n+    size_t m_currentColumn;\n+    size_t m_currentParsingDepth;\n+\n+// The DEBUG macro is defined in XCode but we don\'t in our CMakeList\n+// so for now we will keep the same on debug and release. In the future\n+// this can be increase on release if necessary.\n+#if defined(__APPLE__)\n+    static const size_t maxParsingDepth = 32;\n+#else\n+    static const size_t maxParsingDepth = 128;\n+#endif\n+};\n+\n+// Replace with template alias once VS 2012 support is removed.\n+template<typename CharType>\n+typename std::char_traits<CharType>::int_type eof()\n+{\n+    return std::char_traits<CharType>::eof();\n+}\n+\n+template<typename CharType>\n+class JSON_StreamParser : public JSON_Parser<CharType>\n+{\n+public:\n+    JSON_StreamParser(std::basic_istream<CharType>& stream) : m_streambuf(stream.rdbuf()) {}\n+\n+protected:\n+    virtual typename JSON_Parser<CharType>::int_type NextCharacter();\n+    virtual typename JSON_Parser<CharType>::int_type PeekCharacter();\n+\n+private:\n+    typename std::basic_streambuf<CharType, std::char_traits<CharType>>* m_streambuf;\n+};\n+\n+template<typename CharType>\n+class JSON_StringParser : public JSON_Parser<CharType>\n+{\n+public:\n+    JSON_StringParser(const std::basic_string<CharType>& string) : m_position(&string[0])\n+    {\n+        m_startpos = m_position;\n+        m_endpos = m_position + string.size();\n+    }\n+\n+protected:\n+    virtual typename JSON_Parser<CharType>::int_type NextCharacter();\n+    virtual typename JSON_Parser<CharType>::int_type PeekCharacter();\n+\n+    virtual bool CompleteComment(typename JSON_Parser<CharType>::Token& token);\n+    virtual bool CompleteStringLiteral(typename JSON_Parser<CharType>::Token& token);\n+\n+private:\n+    bool finish_parsing_string_with_unescape_char(typename JSON_Parser<CharType>::Token& token);\n+    const CharType* m_position;\n+    const CharType* m_startpos;\n+    const CharType* m_endpos;\n+};\n+\n+template<typename CharType>\n+typename JSON_Parser<CharType>::int_type JSON_StreamParser<CharType>::NextCharacter()\n+{\n+    auto ch = m_streambuf->sbumpc();\n+\n+    if (ch == \'\\n\')\n+    {\n+        this->m_currentLine += 1;\n+        this->m_currentColumn = 0;\n+    }\n+    else\n+    {\n+        this->m_currentColumn += 1;\n+    }\n+\n+    return ch;\n+}\n+\n+template<typename CharType>\n+typename JSON_Parser<CharType>::int_type JSON_StreamParser<CharType>::PeekCharacter()\n+{\n+    return m_streambuf->sgetc();\n+}\n+\n+template<typename CharType>\n+typename JSON_Parser<CharType>::int_type JSON_StringParser<CharType>::NextCharacter()\n+{\n+    if (m_position == m_endpos) return eof<CharType>();\n+\n+    CharType ch = *m_position;\n+    m_position += 1;\n+\n+    if (ch == \'\\n\')\n+    {\n+        this->m_currentLine += 1;\n+        this->m_currentColumn = 0;\n+    }\n+    else\n+    {\n+        this->m_currentColumn += 1;\n+    }\n+\n+    return ch;\n+}\n+\n+template<typename CharType>\n+typename JSON_Parser<CharType>::int_type JSON_StringParser<CharType>::PeekCharacter()\n+{\n+    if (m_position == m_endpos) return eof<CharType>();\n+\n+    return *m_position;\n+}\n+\n+//\n+// Consume whitespace characters and return the first non-space character or EOF\n+//\n+template<typename CharType>\n+typename JSON_Parser<CharType>::int_type JSON_Parser<CharType>::EatWhitespace()\n+{\n+    auto ch = NextCharacter();\n+\n+    while (ch != eof<CharType>() && iswspace(static_cast<wint_t>(ch)))\n+    {\n+        ch = NextCharacter();\n+    }\n+\n+    return ch;\n+}\n+\n+template<typename CharType>\n+bool JSON_Parser<CharType>::CompleteKeywordTrue(Token& token)\n+{\n+    if (NextCharacter() != \'r\') return false;\n+    if (NextCharacter() != \'u\') return false;\n+    if (NextCharacter() != \'e\') return false;\n+    token.kind = Token::TKN_BooleanLiteral;\n+    token.boolean_val = true;\n+    return true;\n+}\n+\n+template<typename CharType>\n+bool JSON_Parser<CharType>::CompleteKeywordFalse(Token& token)\n+{\n+    if (NextCharacter() != \'a\') return false;\n+    if (NextCharacter() != \'l\') return false;\n+    if (NextCharacter() != \'s\') return false;\n+    if (NextCharacter() != \'e\') return false;\n+    token.kind = Token::TKN_BooleanLiteral;\n+    token.boolean_val = false;\n+    return true;\n+}\n+\n+template<typename CharType>\n+bool JSON_Parser<CharType>::CompleteKeywordNull(Token& token)\n+{\n+    if (NextCharacter() != \'u\') return false;\n+    if (NextCharacter() != \'l\') return false;\n+    if (NextCharacter() != \'l\') return false;\n+    token.kind = Token::TKN_NullLiteral;\n+    return true;\n+}\n+\n+// Returns false only on overflow\n+template<typename CharType>\n+inline bool JSON_Parser<CharType>::ParseInt64(CharType first, uint64_t& value)\n+{\n+    value = first - \'0\';\n+    auto ch = PeekCharacter();\n+    while (ch >= \'0\' && ch <= \'9\')\n+    {\n+        unsigned int next_digit = (unsigned int)(ch - \'0\');\n+        if (value > (ULLONG_MAX / 10) || (value == ULLONG_MAX / 10 && next_digit > ULLONG_MAX % 10)) return false;\n+\n+        NextCharacter();\n+\n+        value *= 10;\n+        value += next_digit;\n+        ch = PeekCharacter();\n+    }\n+    return true;\n+}\n+\n+// This namespace hides the x-plat helper functions\n+namespace\n+{\n+#if defined(_WIN32)\n+static int print_llu(char* ptr, size_t n, uint64_t val64)\n+{\n+    return _snprintf_s_l(ptr, n, _TRUNCATE, ""%I64u"", utility::details::scoped_c_thread_locale::c_locale(), val64);\n+}\n+\n+static int print_llu(wchar_t* ptr, size_t n, uint64_t val64)\n+{\n+    return _snwprintf_s_l(ptr, n, _TRUNCATE, L""%I64u"", utility::details::scoped_c_thread_locale::c_locale(), val64);\n+}\n+static double anystod(const char* str)\n+{\n+    return _strtod_l(str, nullptr, utility::details::scoped_c_thread_locale::c_locale());\n+}\n+static double anystod(const wchar_t* str)\n+{\n+    return _wcstod_l(str, nullptr, utility::details::scoped_c_thread_locale::c_locale());\n+}\n+#else\n+static int __attribute__((__unused__)) print_llu(char* ptr, size_t n, unsigned long long val64)\n+{\n+    return snprintf(ptr, n, ""%llu"", val64);\n+}\n+static int __attribute__((__unused__)) print_llu(char* ptr, size_t n, unsigned long val64)\n+{\n+    return snprintf(ptr, n, ""%lu"", val64);\n+}\n+static double __attribute__((__unused__)) anystod(const char* str) { return strtod(str, nullptr); }\n+static double __attribute__((__unused__)) anystod(const wchar_t* str) { return wcstod(str, nullptr); }\n+#endif\n+} // namespace\n+\n+template<typename CharType>\n+bool JSON_Parser<CharType>::CompleteNumberLiteral(CharType first, Token& token)\n+{\n+    bool minus_sign;\n+\n+    if (first == \'-\')\n+    {\n+        minus_sign = true;\n+\n+        // Safe to cast because the check after this if/else statement will cover EOF.\n+        first = static_cast<CharType>(NextCharacter());\n+    }\n+    else\n+    {\n+        minus_sign = false;\n+    }\n+\n+    if (first < \'0\' || first > \'9\') return false;\n+\n+    auto ch = PeekCharacter();\n+\n+    // Check for two (or more) zeros at the beginning\n+    if (first == \'0\' && ch == \'0\') return false;\n+\n+    // Parse the number assuming its integer\n+    uint64_t val64;\n+    bool complete = ParseInt64(first, val64);\n+\n+    ch = PeekCharacter();\n+    if (complete && ch != \'.\' && ch != \'E\' && ch != \'e\')\n+    {\n+        if (minus_sign)\n+        {\n+            if (val64 > static_cast<uint64_t>(1) << 63)\n+            {\n+                // It is negative and cannot be represented in int64, so we resort to double\n+                token.double_val = 0 - static_cast<double>(val64);\n+                token.signed_number = true;\n+                token.kind = JSON_Parser<CharType>::Token::TKN_NumberLiteral;\n+                return true;\n+            }\n+\n+            // It is negative, but fits into int64\n+            token.int64_val = 0 - static_cast<int64_t>(val64);\n+            token.kind = JSON_Parser<CharType>::Token::TKN_IntegerLiteral;\n+            token.signed_number = true;\n+            return true;\n+        }\n+\n+        // It is positive so we use unsigned int64\n+        token.uint64_val = val64;\n+        token.kind = JSON_Parser<CharType>::Token::TKN_IntegerLiteral;\n+        token.signed_number = false;\n+        return true;\n+    }\n+\n+    // Magic number 5 leaves room for decimal point, null terminator, etc (in most cases)\n+    ::std::vector<CharType> buf(::std::numeric_limits<uint64_t>::digits10 + 5);\n+    int count = print_llu(buf.data(), buf.size(), val64);\n+    _ASSERTE(count >= 0);\n+    _ASSERTE((size_t)count < buf.size());\n+    // Resize to cut off the null terminator\n+    buf.resize(count);\n+\n+    bool decimal = false;\n+\n+    while (ch != eof<CharType>())\n+    {\n+        // Digit encountered?\n+        if (ch >= \'0\' && ch <= \'9\')\n+        {\n+            buf.push_back(static_cast<CharType>(ch));\n+            NextCharacter();\n+            ch = PeekCharacter();\n+        }\n+\n+        // Decimal dot?\n+        else if (ch == \'.\')\n+        {\n+            if (decimal) return false;\n+\n+            decimal = true;\n+            buf.push_back(static_cast<CharType>(ch));\n+\n+            NextCharacter();\n+            ch = PeekCharacter();\n+\n+            // Check that the following char is a digit\n+            if (ch < \'0\' || ch > \'9\') return false;\n+\n+            buf.push_back(static_cast<CharType>(ch));\n+            NextCharacter();\n+            ch = PeekCharacter();\n+        }\n+\n+        // Exponent?\n+        else if (ch == \'E\' || ch == \'e\')\n+        {\n+            buf.push_back(static_cast<CharType>(ch));\n+            NextCharacter();\n+            ch = PeekCharacter();\n+\n+            // Check for the exponent sign\n+            if (ch == \'+\')\n+            {\n+                buf.push_back(static_cast<CharType>(ch));\n+                NextCharacter();\n+                ch = PeekCharacter();\n+            }\n+            else if (ch == \'-\')\n+            {\n+                buf.push_back(static_cast<CharType>(ch));\n+                NextCharacter();\n+                ch = PeekCharacter();\n+            }\n+\n+            // First number of the exponent\n+            if (ch >= \'0\' && ch <= \'9\')\n+            {\n+                buf.push_back(static_cast<CharType>(ch));\n+                NextCharacter();\n+                ch = PeekCharacter();\n+            }\n+            else\n+                return false;\n+\n+            // The rest of the exponent\n+            while (ch >= \'0\' && ch <= \'9\')\n+            {\n+                buf.push_back(static_cast<CharType>(ch));\n+                NextCharacter();\n+                ch = PeekCharacter();\n+            }\n+\n+            // The peeked character is not a number, so we can break from the loop and construct the number\n+            break;\n+        }\n+        else\n+        {\n+            // Not expected number character?\n+            break;\n+        }\n+    };\n+\n+    buf.push_back(\'\\0\');\n+    token.double_val = anystod(buf.data());\n+    if (minus_sign)\n+    {\n+        token.double_val = -token.double_val;\n+    }\n+    token.kind = (JSON_Parser<CharType>::Token::TKN_NumberLiteral);\n+\n+    return true;\n+}\n+\n+template<typename CharType>\n+bool JSON_Parser<CharType>::CompleteComment(Token& token)\n+{\n+    // We already found a \'/\' character as the first of a token -- what kind of comment is it?\n+\n+    auto ch = NextCharacter();\n+\n+    if (ch == eof<CharType>() || (ch != \'/\' && ch != \'*\')) return false;\n+\n+    if (ch == \'/\')\n+    {\n+        // Line comment -- look for a newline or EOF to terminate.\n+\n+        ch = NextCharacter();\n+\n+        while (ch != eof<CharType>() && ch != \'\\n\')\n+        {\n+            ch = NextCharacter();\n+        }\n+    }\n+    else\n+    {\n+        // Block comment -- look for a terminating ""*/"" sequence.\n+\n+        ch = NextCharacter();\n+\n+        while (true)\n+        {\n+            if (ch == eof<CharType>()) return false;\n+\n+            if (ch == \'*\')\n+            {\n+                auto ch1 = PeekCharacter();\n+\n+                if (ch1 == eof<CharType>()) return false;\n+\n+                if (ch1 == \'/\')\n+                {\n+                    // Consume the character\n+                    NextCharacter();\n+                    break;\n+                }\n+\n+                ch = ch1;\n+            }\n+\n+            ch = NextCharacter();\n+        }\n+    }\n+\n+    token.kind = Token::TKN_Comment;\n+\n+    return true;\n+}\n+\n+template<typename CharType>\n+bool JSON_StringParser<CharType>::CompleteComment(typename JSON_Parser<CharType>::Token& token)\n+{\n+    // This function is specialized for the string parser, since we can be slightly more\n+    // efficient in copying data from the input to the token: do a memcpy() rather than\n+    // one character at a time.\n+\n+    auto ch = JSON_StringParser<CharType>::NextCharacter();\n+\n+    if (ch == eof<CharType>() || (ch != \'/\' && ch != \'*\')) return false;\n+\n+    if (ch == \'/\')\n+    {\n+        // Line comment -- look for a newline or EOF to terminate.\n+\n+        ch = JSON_StringParser<CharType>::NextCharacter();\n+\n+        while (ch != eof<CharType>() && ch != \'\\n\')\n+        {\n+            ch = JSON_StringParser<CharType>::NextCharacter();\n+        }\n+    }\n+    else\n+    {\n+        // Block comment -- look for a terminating ""*/"" sequence.\n+\n+        ch = JSON_StringParser<CharType>::NextCharacter();\n+\n+        while (true)\n+        {\n+            if (ch == eof<CharType>()) return false;\n+\n+            if (ch == \'*\')\n+            {\n+                ch = JSON_StringParser<CharType>::PeekCharacter();\n+\n+                if (ch == eof<CharType>()) return false;\n+\n+                if (ch == \'/\')\n+                {\n+                    // Consume the character\n+                    JSON_StringParser<CharType>::NextCharacter();\n+                    break;\n+                }\n+            }\n+\n+            ch = JSON_StringParser<CharType>::NextCharacter();\n+        }\n+    }\n+\n+    token.kind = JSON_Parser<CharType>::Token::TKN_Comment;\n+\n+    return true;\n+}\n+\n+void convert_append_unicode_code_unit(JSON_Parser<utf16char>::Token& token, utf16string value)\n+{\n+    token.string_val.append(value);\n+}\n+void convert_append_unicode_code_unit(JSON_Parser<char>::Token& token, utf16string value)\n+{\n+    token.string_val.append(::utility::conversions::utf16_to_utf8(value));\n+}\n+void convert_append_unicode_code_unit(JSON_Parser<utf16char>::Token& token, utf16char value)\n+{\n+    token.string_val.push_back(value);\n+}\n+void convert_append_unicode_code_unit(JSON_Parser<char>::Token& token, utf16char value)\n+{\n+    utf16string utf16(reinterpret_cast<utf16char*>(&value), 1);\n+    token.string_val.append(::utility::conversions::utf16_to_utf8(utf16));\n+}\n+\n+template<typename CharType>\n+int JSON_Parser<CharType>::convert_unicode_to_code_point()\n+{\n+    // A four-hexdigit Unicode character.\n+    // Transform into a 16 bit code point.\n+    int decoded = 0;\n+    for (int i = 0; i < 4; ++i)\n+    {\n+        auto ch = NextCharacter();\n+        int ch_int = static_cast<int>(ch);\n+        if (ch_int < 0 || ch_int > 127) return -1;\n+#ifdef _WIN32\n+        const int isxdigitResult = _isxdigit_l(ch_int, utility::details::scoped_c_thread_locale::c_locale());\n+#else\n+        const int isxdigitResult = isxdigit(ch_int);\n+#endif\n+        if (!isxdigitResult) return -1;\n+\n+        int val = _hexval[static_cast<size_t>(ch_int)];\n+\n+        _ASSERTE(val != -1);\n+\n+        // Add the input char to the decoded number\n+        decoded |= (val << (4 * (3 - i)));\n+    }\n+    return decoded;\n+}\n+\n+#define H_SURROGATE_START 0xD800\n+#define H_SURROGATE_END 0xDBFF\n+\n+template<typename CharType>\n+inline bool JSON_Parser<CharType>::handle_unescape_char(Token& token)\n+{\n+    token.has_unescape_symbol = true;\n+\n+    // This function converts unescaped character pairs (e.g. ""\\t"") into their ASCII or Unicode representations (e.g.\n+    // tab sign) Also it handles \\u + 4 hexadecimal digits\n+    auto ch = NextCharacter();\n+    switch (ch)\n+    {\n+        case \'\\""\': token.string_val.push_back(\'\\""\'); return true;\n+        case \'\\\\\': token.string_val.push_back(\'\\\\\'); return true;\n+        case \'/\': token.string_val.push_back(\'/\'); return true;\n+        case \'b\': token.string_val.push_back(\'\\b\'); return true;\n+        case \'f\': token.string_val.push_back(\'\\f\'); return true;\n+        case \'r\': token.string_val.push_back(\'\\r\'); return true;\n+        case \'n\': token.string_val.push_back(\'\\n\'); return true;\n+        case \'t\': token.string_val.push_back(\'\\t\'); return true;\n+        case \'u\':\n+        {\n+            int decoded = convert_unicode_to_code_point();\n+            if (decoded == -1)\n+            {\n+                return false;\n+            }\n+\n+            // handle multi-block characters that start with a high-surrogate\n+            if (decoded >= H_SURROGATE_START && decoded <= H_SURROGATE_END)\n+            {\n+                // skip escape character \'\\u\'\n+                if (NextCharacter() != \'\\\\\' || NextCharacter() != \'u\')\n+                {\n+                    return false;\n+                }\n+                int decoded2 = convert_unicode_to_code_point();\n+\n+                if (decoded2 == -1)\n+                {\n+                    return false;\n+                }\n+\n+                utf16string compoundUTF16 = {static_cast<utf16char>(decoded), static_cast<utf16char>(decoded2)};\n+                convert_append_unicode_code_unit(token, compoundUTF16);\n+\n+                return true;\n+            }\n+\n+            // Construct the character based on the decoded number\n+            convert_append_unicode_code_unit(token, static_cast<utf16char>(decoded));\n+\n+            return true;\n+        }\n+        default: return false;\n+    }\n+}\n+\n+template<typename CharType>\n+bool JSON_Parser<CharType>::CompleteStringLiteral(Token& token)\n+{\n+    token.has_unescape_symbol = false;\n+    auto ch = NextCharacter();\n+    while (ch != \'""\')\n+    {\n+        if (ch == \'\\\\\')\n+        {\n+            handle_unescape_char(token);\n+        }\n+        else if (ch >= CharType(0x0) && ch < CharType(0x20))\n+        {\n+            return false;\n+        }\n+        else\n+        {\n+            if (ch == eof<CharType>()) return false;\n+\n+            token.string_val.push_back(static_cast<CharType>(ch));\n+        }\n+        ch = NextCharacter();\n+    }\n+\n+    if (ch == \'""\')\n+    {\n+        token.kind = Token::TKN_StringLiteral;\n+    }\n+    else\n+    {\n+        return false;\n+    }\n+\n+    return true;\n+}\n+\n+template<typename CharType>\n+bool JSON_StringParser<CharType>::CompleteStringLiteral(typename JSON_Parser<CharType>::Token& token)\n+{\n+    // This function is specialized for the string parser, since we can be slightly more\n+    // efficient in copying data from the input to the token: do a memcpy() rather than\n+    // one character at a time.\n+\n+    auto start = m_position;\n+    token.has_unescape_symbol = false;\n+\n+    auto ch = JSON_StringParser<CharType>::NextCharacter();\n+\n+    while (ch != \'""\')\n+    {\n+        if (ch == eof<CharType>()) return false;\n+\n+        if (ch == \'\\\\\')\n+        {\n+            const size_t numChars = m_position - start - 1;\n+            const size_t prevSize = token.string_val.size();\n+            token.string_val.resize(prevSize + numChars);\n+            memcpy(const_cast<CharType*>(token.string_val.c_str() + prevSize), start, numChars * sizeof(CharType));\n+\n+            if (!JSON_StringParser<CharType>::handle_unescape_char(token))\n+            {\n+                return false;\n+            }\n+\n+            // Reset start position and continue.\n+            start = m_position;\n+        }\n+        else if (ch >= CharType(0x0) && ch < CharType(0x20))\n+        {\n+            return false;\n+        }\n+\n+        ch = JSON_StringParser<CharType>::NextCharacter();\n+    }\n+\n+    const size_t numChars = m_position - start - 1;\n+    const size_t prevSize = token.string_val.size();\n+    token.string_val.resize(prevSize + numChars);\n+    memcpy(const_cast<CharType*>(token.string_val.c_str() + prevSize), start, numChars * sizeof(CharType));\n+\n+    token.kind = JSON_Parser<CharType>::Token::TKN_StringLiteral;\n+\n+    return true;\n+}\n+\n+template<typename CharType>\n+void JSON_Parser<CharType>::GetNextToken(typename JSON_Parser<CharType>::Token& result)\n+{\n+try_again:\n+    auto ch = EatWhitespace();\n+\n+    CreateToken(result, Token::TKN_EOF);\n+\n+    if (ch == eof<CharType>()) return;\n+\n+    switch (ch)\n+    {\n+        case \'{\':\n+        case \'[\':\n+        {\n+            if (++m_currentParsingDepth > JSON_Parser<CharType>::maxParsingDepth)\n+            {\n+                SetErrorCode(result, json_error::nesting);\n+                break;\n+            }\n+\n+            typename JSON_Parser<CharType>::Token::Kind tk = ch == \'{\' ? Token::TKN_OpenBrace : Token::TKN_OpenBracket;\n+            CreateToken(result, tk, result.start);\n+            break;\n+        }\n+        case \'}\':\n+        case \']\':\n+        {\n+            if ((signed int)(--m_currentParsingDepth) < 0)\n+            {\n+                SetErrorCode(result, json_error::mismatched_brances);\n+                break;\n+            }\n+\n+            typename JSON_Parser<CharType>::Token::Kind tk =\n+                ch == \'}\' ? Token::TKN_CloseBrace : Token::TKN_CloseBracket;\n+            CreateToken(result, tk, result.start);\n+            break;\n+        }\n+        case \',\': CreateToken(result, Token::TKN_Comma, result.start); break;\n+\n+        case \':\': CreateToken(result, Token::TKN_Colon, result.start); break;\n+\n+        case \'t\':\n+            if (!CompleteKeywordTrue(result))\n+            {\n+                SetErrorCode(result, json_error::malformed_literal);\n+            }\n+            break;\n+        case \'f\':\n+            if (!CompleteKeywordFalse(result))\n+            {\n+                SetErrorCode(result, json_error::malformed_literal);\n+            }\n+            break;\n+        case \'n\':\n+            if (!CompleteKeywordNull(result))\n+            {\n+                SetErrorCode(result, json_error::malformed_literal);\n+            }\n+            break;\n+        case \'/\':\n+            if (!CompleteComment(result))\n+            {\n+                SetErrorCode(result, json_error::malformed_comment);\n+                break;\n+            }\n+            // For now, we\'re ignoring comments.\n+            goto try_again;\n+        case \'""\':\n+            if (!CompleteStringLiteral(result))\n+            {\n+                SetErrorCode(result, json_error::malformed_string_literal);\n+            }\n+            break;\n+\n+        case \'-\':\n+        case \'0\':\n+        case \'1\':\n+        case \'2\':\n+        case \'3\':\n+        case \'4\':\n+        case \'5\':\n+        case \'6\':\n+        case \'7\':\n+        case \'8\':\n+        case \'9\':\n+            if (!CompleteNumberLiteral(static_cast<CharType>(ch), result))\n+            {\n+                SetErrorCode(result, json_error::malformed_numeric_literal);\n+            }\n+            break;\n+        default: SetErrorCode(result, json_error::malformed_token); break;\n+    }\n+}\n+\n+template<typename CharType>\n+std::unique_ptr<web::json::details::_Value> JSON_Parser<CharType>::_ParseObject(\n+    typename JSON_Parser<CharType>::Token& tkn)\n+{\n+    auto obj = utility::details::make_unique<web::json::details::_Object>(g_keep_json_object_unsorted);\n+    auto& elems = obj->m_object.m_elements;\n+\n+    GetNextToken(tkn);\n+    if (tkn.m_error) goto error;\n+\n+    if (tkn.kind != JSON_Parser<CharType>::Token::TKN_CloseBrace)\n+    {\n+        while (true)\n+        {\n+            // State 1: New field or end of object, looking for field name or closing brace\n+            std::basic_string<CharType> fieldName;\n+            switch (tkn.kind)\n+            {\n+                case JSON_Parser<CharType>::Token::TKN_StringLiteral: fieldName = std::move(tkn.string_val); break;\n+                default: goto error;\n+            }\n+\n+            GetNextToken(tkn);\n+            if (tkn.m_error) goto error;\n+\n+            // State 2: Looking for a colon.\n+            if (tkn.kind != JSON_Parser<CharType>::Token::TKN_Colon) goto done;\n+\n+            GetNextToken(tkn);\n+            if (tkn.m_error) goto error;\n+\n+                // State 3: Looking for an expression.\n+#ifdef ENABLE_JSON_VALUE_VISUALIZER\n+            auto fieldValue = _ParseValue(tkn);\n+            auto type = fieldValue->type();\n+            elems.emplace_back(utility::conversions::to_string_t(std::move(fieldName)),\n+                               json::value(std::move(fieldValue), type));\n+#else\n+            elems.emplace_back(utility::conversions::to_string_t(std::move(fieldName)), json::value(_ParseValue(tkn)));\n+#endif\n+            if (tkn.m_error) goto error;\n+\n+            // State 4: Looking for a comma or a closing brace\n+            switch (tkn.kind)\n+            {\n+                case JSON_Parser<CharType>::Token::TKN_Comma:\n+                    GetNextToken(tkn);\n+                    if (tkn.m_error) goto error;\n+                    break;\n+                case JSON_Parser<CharType>::Token::TKN_CloseBrace: goto done;\n+                default: goto error;\n+            }\n+        }\n+    }\n+\n+done:\n+    GetNextToken(tkn);\n+    if (tkn.m_error) return utility::details::make_unique<web::json::details::_Null>();\n+\n+    if (!g_keep_json_object_unsorted)\n+    {\n+        ::std::sort(elems.begin(), elems.end(), json::object::compare_pairs);\n+    }\n+\n+    return std::unique_ptr<web::json::details::_Value>(obj.release());\n+\n+error:\n+    if (!tkn.m_error)\n+    {\n+        SetErrorCode(tkn, json_error::malformed_object_literal);\n+    }\n+    return utility::details::make_unique<web::json::details::_Null>();\n+}\n+\n+template<typename CharType>\n+std::unique_ptr<web::json::details::_Value> JSON_Parser<CharType>::_ParseArray(\n+    typename JSON_Parser<CharType>::Token& tkn)\n+{\n+    GetNextToken(tkn);\n+    if (tkn.m_error) return utility::details::make_unique<web::json::details::_Null>();\n+\n+    auto result = utility::details::make_unique<web::json::details::_Array>();\n+\n+    if (tkn.kind != JSON_Parser<CharType>::Token::TKN_CloseBracket)\n+    {\n+        while (true)\n+        {\n+            // State 1: Looking for an expression.\n+            result->m_array.m_elements.emplace_back(ParseValue(tkn));\n+            if (tkn.m_error) return utility::details::make_unique<web::json::details::_Null>();\n+\n+            // State 4: Looking for a comma or a closing bracket\n+            switch (tkn.kind)\n+            {\n+                case JSON_Parser<CharType>::Token::TKN_Comma:\n+                    GetNextToken(tkn);\n+                    if (tkn.m_error) return utility::details::make_unique<web::json::details::_Null>();\n+                    break;\n+                case JSON_Parser<CharType>::Token::TKN_CloseBracket:\n+                    GetNextToken(tkn);\n+                    if (tkn.m_error) return utility::details::make_unique<web::json::details::_Null>();\n+                    return std::move(result);\n+                default:\n+                    SetErrorCode(tkn, json_error::malformed_array_literal);\n+                    return utility::details::make_unique<web::json::details::_Null>();\n+            }\n+        }\n+    }\n+\n+    GetNextToken(tkn);\n+    if (tkn.m_error) return utility::details::make_unique<web::json::details::_Null>();\n+\n+    return std::unique_ptr<web::json::details::_Value>(result.release());\n+}\n+\n+template<typename CharType>\n+std::unique_ptr<web::json::details::_Value> JSON_Parser<CharType>::_ParseValue(\n+    typename JSON_Parser<CharType>::Token& tkn)\n+{\n+    switch (tkn.kind)\n+    {\n+        case JSON_Parser<CharType>::Token::TKN_OpenBrace:\n+        {\n+            return _ParseObject(tkn);\n+        }\n+        case JSON_Parser<CharType>::Token::TKN_OpenBracket:\n+        {\n+            return _ParseArray(tkn);\n+        }\n+        case JSON_Parser<CharType>::Token::TKN_StringLiteral:\n+        {\n+            auto value = utility::details::make_unique<web::json::details::_String>(std::move(tkn.string_val),\n+                                                                                    tkn.has_unescape_symbol);\n+            GetNextToken(tkn);\n+            if (tkn.m_error) return utility::details::make_unique<web::json::details::_Null>();\n+            return std::move(value);\n+        }\n+        case JSON_Parser<CharType>::Token::TKN_IntegerLiteral:\n+        {\n+            std::unique_ptr<web::json::details::_Number> value;\n+            if (tkn.signed_number)\n+                value = utility::details::make_unique<web::json::details::_Number>(tkn.int64_val);\n+            else\n+                value = utility::details::make_unique<web::json::details::_Number>(tkn.uint64_val);\n+\n+            GetNextToken(tkn);\n+            if (tkn.m_error) return utility::details::make_unique<web::json::details::_Null>();\n+            return std::move(value);\n+        }\n+        case JSON_Parser<CharType>::Token::TKN_NumberLiteral:\n+        {\n+            auto value = utility::details::make_unique<web::json::details::_Number>(tkn.double_val);\n+            GetNextToken(tkn);\n+            if (tkn.m_error) return utility::details::make_unique<web::json::details::_Null>();\n+            return std::move(value);\n+        }\n+        case JSON_Parser<CharType>::Token::TKN_BooleanLiteral:\n+        {\n+            auto value = utility::details::make_unique<web::json::details::_Boolean>(tkn.boolean_val);\n+            GetNextToken(tkn);\n+            if (tkn.m_error) return utility::details::make_unique<web::json::details::_Null>();\n+            return std::move(value);\n+        }\n+        case JSON_Parser<CharType>::Token::TKN_NullLiteral:\n+        {\n+            GetNextToken(tkn);\n+            // Returning a null value whether or not an error occurred.\n+            return utility::details::make_unique<web::json::details::_Null>();\n+        }\n+        default:\n+        {\n+            SetErrorCode(tkn, json_error::malformed_token);\n+            return utility::details::make_unique<web::json::details::_Null>();\n+        }\n+    }\n+}\n+\n+} // namespace details\n+} // namespace json\n+} // namespace web\n+\n+static web::json::value _parse_stream(utility::istream_t& stream)\n+{\n+    web::json::details::JSON_StreamParser<utility::char_t> parser(stream);\n+    web::json::details::JSON_Parser<utility::char_t>::Token tkn;\n+\n+    parser.GetNextToken(tkn);\n+    if (tkn.m_error)\n+    {\n+        web::json::details::CreateException(tkn, utility::conversions::to_string_t(tkn.m_error.message()));\n+    }\n+\n+    auto value = parser.ParseValue(tkn);\n+    if (tkn.m_error)\n+    {\n+        web::json::details::CreateException(tkn, utility::conversions::to_string_t(tkn.m_error.message()));\n+    }\n+    else if (tkn.kind != web::json::details::JSON_Parser<utility::char_t>::Token::TKN_EOF)\n+    {\n+        web::json::details::CreateException(tkn,\n+                                            _XPLATSTR(""Left-over characters in stream after parsing a JSON value""));\n+    }\n+    return value;\n+}\n+\n+static web::json::value _parse_stream(utility::istream_t& stream, std::error_code& error)\n+{\n+    web::json::details::JSON_StreamParser<utility::char_t> parser(stream);\n+    web::json::details::JSON_Parser<utility::char_t>::Token tkn;\n+\n+    parser.GetNextToken(tkn);\n+    if (tkn.m_error)\n+    {\n+        error = std::move(tkn.m_error);\n+        return web::json::value();\n+    }\n+\n+    auto returnObject = parser.ParseValue(tkn);\n+    if (tkn.kind != web::json::details::JSON_Parser<utility::char_t>::Token::TKN_EOF)\n+    {\n+        web::json::details::SetErrorCode(tkn, web::json::details::json_error::left_over_character_in_stream);\n+    }\n+\n+    error = std::move(tkn.m_error);\n+    return returnObject;\n+}\n+\n+#ifdef _WIN32\n+static web::json::value _parse_narrow_stream(std::istream& stream)\n+{\n+    web::json::details::JSON_StreamParser<char> parser(stream);\n+    web::json::details::JSON_StreamParser<char>::Token tkn;\n+\n+    parser.GetNextToken(tkn);\n+    if (tkn.m_error)\n+    {\n+        web::json::details::CreateException(tkn, utility::conversions::to_string_t(tkn.m_error.message()));\n+    }\n+\n+    auto value = parser.ParseValue(tkn);\n+    if (tkn.m_error)\n+    {\n+        web::json::details::CreateException(tkn, utility::conversions::to_string_t(tkn.m_error.message()));\n+    }\n+    else if (tkn.kind != web::json::details::JSON_Parser<char>::Token::TKN_EOF)\n+    {\n+        web::json::details::CreateException(tkn,\n+                                            _XPLATSTR(""Left-over characters in stream after parsing a JSON value""));\n+    }\n+    return value;\n+}\n+\n+static web::json::value _parse_narrow_stream(std::istream& stream, std::error_code& error)\n+{\n+    web::json::details::JSON_StreamParser<char> parser(stream);\n+    web::json::details::JSON_StreamParser<char>::Token tkn;\n+\n+    parser.GetNextToken(tkn);\n+    if (tkn.m_error)\n+    {\n+        error = std::move(tkn.m_error);\n+        return web::json::value();\n+    }\n+\n+    auto returnObject = parser.ParseValue(tkn);\n+    if (tkn.kind != web::json::details::JSON_Parser<utility::char_t>::Token::TKN_EOF)\n+    {\n+        returnObject = web::json::value();\n+        web::json::details::SetErrorCode(tkn, web::json::details::json_error::left_over_character_in_stream);\n+    }\n+\n+    error = std::move(tkn.m_error);\n+    return returnObject;\n+}\n+#endif\n+\n+web::json::value web::json::value::parse(const utility::string_t& str)\n+{\n+    web::json::details::JSON_StringParser<utility::char_t> parser(str);\n+    web::json::details::JSON_Parser<utility::char_t>::Token tkn;\n+\n+    parser.GetNextToken(tkn);\n+    if (tkn.m_error)\n+    {\n+        web::json::details::CreateException(tkn, utility::conversions::to_string_t(tkn.m_error.message()));\n+    }\n+\n+    auto value = parser.ParseValue(tkn);\n+    if (tkn.m_error)\n+    {\n+        web::json::details::CreateException(tkn, utility::conversions::to_string_t(tkn.m_error.message()));\n+    }\n+    else if (tkn.kind != web::json::details::JSON_Parser<utility::char_t>::Token::TKN_EOF)\n+    {\n+        web::json::details::CreateException(tkn,\n+                                            _XPLATSTR(""Left-over characters in stream after parsing a JSON value""));\n+    }\n+    return value;\n+}\n+\n+web::json::value web::json::value::parse(const utility::string_t& str, std::error_code& error)\n+{\n+    web::json::details::JSON_StringParser<utility::char_t> parser(str);\n+    web::json::details::JSON_Parser<utility::char_t>::Token tkn;\n+\n+    parser.GetNextToken(tkn);\n+    if (tkn.m_error)\n+    {\n+        error = std::move(tkn.m_error);\n+        return web::json::value();\n+    }\n+\n+    auto returnObject = parser.ParseValue(tkn);\n+    if (tkn.kind != web::json::details::JSON_Parser<utility::char_t>::Token::TKN_EOF)\n+    {\n+        returnObject = web::json::value();\n+        web::json::details::SetErrorCode(tkn, web::json::details::json_error::left_over_character_in_stream);\n+    }\n+\n+    error = std::move(tkn.m_error);\n+    return returnObject;\n+}\n+\n+web::json::value web::json::value::parse(utility::istream_t& stream) { return _parse_stream(stream); }\n+\n+web::json::value web::json::value::parse(utility::istream_t& stream, std::error_code& error)\n+{\n+    return _parse_stream(stream, error);\n+}\n+\n+#ifdef _WIN32\n+web::json::value web::json::value::parse(std::istream& stream) { return _parse_narrow_stream(stream); }\n+\n+web::json::value web::json::value::parse(std::istream& stream, std::error_code& error)\n+{\n+    return _parse_narrow_stream(stream, error);\n+}\n+#endif'}, {'Name': 'deps/cpprestsdk/src/json/json_serialization.cpp', 'Line Additions': 254, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,254 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * HTTP Library: JSON parser and writer\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+\n+#include ""pch.h""\n+\n+#include <stdio.h>\n+\n+#ifndef _WIN32\n+#define __STDC_FORMAT_MACROS\n+#include <inttypes.h>\n+#endif\n+\n+using namespace web;\n+using namespace web::json;\n+using namespace utility;\n+using namespace utility::conversions;\n+\n+//\n+// JSON Serialization\n+//\n+\n+#ifdef _WIN32\n+void web::json::value::serialize(std::ostream& stream) const\n+{\n+    // This has better performance than writing directly to stream.\n+    std::string str;\n+    m_value->serialize_impl(str);\n+    stream << str;\n+}\n+void web::json::value::format(std::basic_string<wchar_t>& string) const { m_value->format(string); }\n+#endif\n+\n+void web::json::value::serialize(utility::ostream_t& stream) const\n+{\n+#ifndef _WIN32\n+    utility::details::scoped_c_thread_locale locale;\n+#endif\n+\n+    // This has better performance than writing directly to stream.\n+    utility::string_t str;\n+    m_value->serialize_impl(str);\n+    stream << str;\n+}\n+\n+void web::json::value::format(std::basic_string<char>& string) const { m_value->format(string); }\n+\n+template<typename CharType>\n+void web::json::details::append_escape_string(std::basic_string<CharType>& str,\n+                                              const std::basic_string<CharType>& escaped)\n+{\n+    for (const auto& ch : escaped)\n+    {\n+        switch (ch)\n+        {\n+            case \'\\""\':\n+                str += \'\\\\\';\n+                str += \'\\""\';\n+                break;\n+            case \'\\\\\':\n+                str += \'\\\\\';\n+                str += \'\\\\\';\n+                break;\n+            case \'\\b\':\n+                str += \'\\\\\';\n+                str += \'b\';\n+                break;\n+            case \'\\f\':\n+                str += \'\\\\\';\n+                str += \'f\';\n+                break;\n+            case \'\\r\':\n+                str += \'\\\\\';\n+                str += \'r\';\n+                break;\n+            case \'\\n\':\n+                str += \'\\\\\';\n+                str += \'n\';\n+                break;\n+            case \'\\t\':\n+                str += \'\\\\\';\n+                str += \'t\';\n+                break;\n+            default:\n+\n+                // If a control character then must unicode escaped.\n+                if (ch >= 0 && ch <= 0x1F)\n+                {\n+                    static const std::array<CharType, 16> intToHex = {\n+                        {\'0\', \'1\', \'2\', \'3\', \'4\', \'5\', \'6\', \'7\', \'8\', \'9\', \'A\', \'B\', \'C\', \'D\', \'E\', \'F\'}};\n+                    str += \'\\\\\';\n+                    str += \'u\';\n+                    str += \'0\';\n+                    str += \'0\';\n+                    str += intToHex[(ch & 0xF0) >> 4];\n+                    str += intToHex[ch & 0x0F];\n+                }\n+                else\n+                {\n+                    str += ch;\n+                }\n+        }\n+    }\n+}\n+\n+void web::json::details::format_string(const utility::string_t& key, utility::string_t& str)\n+{\n+    str.push_back(\'""\');\n+    append_escape_string(str, key);\n+    str.push_back(\'""\');\n+}\n+\n+#ifdef _WIN32\n+void web::json::details::format_string(const utility::string_t& key, std::string& str)\n+{\n+    str.push_back(\'""\');\n+    append_escape_string(str, utility::conversions::to_utf8string(key));\n+    str.push_back(\'""\');\n+}\n+#endif\n+\n+void web::json::details::_String::format(std::basic_string<char>& str) const\n+{\n+    str.push_back(\'""\');\n+\n+    if (m_has_escape_char)\n+    {\n+        append_escape_string(str, utility::conversions::to_utf8string(m_string));\n+    }\n+    else\n+    {\n+        str.append(utility::conversions::to_utf8string(m_string));\n+    }\n+\n+    str.push_back(\'""\');\n+}\n+\n+void web::json::details::_Number::format(std::basic_string<char>& stream) const\n+{\n+    if (m_number.m_type != number::type::double_type)\n+    {\n+        // #digits + 1 to avoid loss + 1 for the sign + 1 for null terminator.\n+        const size_t tempSize = std::numeric_limits<uint64_t>::digits10 + 3;\n+        char tempBuffer[tempSize];\n+\n+#ifdef _WIN32\n+        // This can be improved performance-wise if we implement our own routine\n+        if (m_number.m_type == number::type::signed_type)\n+            _i64toa_s(m_number.m_intval, tempBuffer, tempSize, 10);\n+        else\n+            _ui64toa_s(m_number.m_uintval, tempBuffer, tempSize, 10);\n+\n+        const auto numChars = strnlen_s(tempBuffer, tempSize);\n+#else\n+        int numChars;\n+        if (m_number.m_type == number::type::signed_type)\n+            numChars = snprintf(tempBuffer, tempSize, ""%"" PRId64, m_number.m_intval);\n+        else\n+            numChars = snprintf(tempBuffer, tempSize, ""%"" PRIu64, m_number.m_uintval);\n+#endif\n+        stream.append(tempBuffer, numChars);\n+    }\n+    else\n+    {\n+        // #digits + 2 to avoid loss + 1 for the sign + 1 for decimal point + 5 for exponent (e+xxx) + 1 for null\n+        // terminator\n+        const size_t tempSize = std::numeric_limits<double>::digits10 + 10;\n+        char tempBuffer[tempSize];\n+#ifdef _WIN32\n+        const auto numChars = _sprintf_s_l(tempBuffer,\n+                                           tempSize,\n+                                           ""%.*g"",\n+                                           utility::details::scoped_c_thread_locale::c_locale(),\n+                                           std::numeric_limits<double>::digits10 + 2,\n+                                           m_number.m_value);\n+#else\n+        const auto numChars =\n+            snprintf(tempBuffer, tempSize, ""%.*g"", std::numeric_limits<double>::digits10 + 2, m_number.m_value);\n+#endif\n+        stream.append(tempBuffer, numChars);\n+    }\n+}\n+\n+#ifdef _WIN32\n+\n+void web::json::details::_String::format(std::basic_string<wchar_t>& str) const\n+{\n+    str.push_back(L\'""\');\n+\n+    if (m_has_escape_char)\n+    {\n+        append_escape_string(str, m_string);\n+    }\n+    else\n+    {\n+        str.append(m_string);\n+    }\n+\n+    str.push_back(L\'""\');\n+}\n+\n+void web::json::details::_Number::format(std::basic_string<wchar_t>& stream) const\n+{\n+    if (m_number.m_type != number::type::double_type)\n+    {\n+        // #digits + 1 to avoid loss + 1 for the sign + 1 for null terminator.\n+        const size_t tempSize = std::numeric_limits<uint64_t>::digits10 + 3;\n+        wchar_t tempBuffer[tempSize];\n+\n+        if (m_number.m_type == number::type::signed_type)\n+            _i64tow_s(m_number.m_intval, tempBuffer, tempSize, 10);\n+        else\n+            _ui64tow_s(m_number.m_uintval, tempBuffer, tempSize, 10);\n+\n+        stream.append(tempBuffer, wcsnlen_s(tempBuffer, tempSize));\n+    }\n+    else\n+    {\n+        // #digits + 2 to avoid loss + 1 for the sign + 1 for decimal point + 5 for exponent (e+xxx) + 1 for null\n+        // terminator\n+        const size_t tempSize = std::numeric_limits<double>::digits10 + 10;\n+        wchar_t tempBuffer[tempSize];\n+        const int numChars = _swprintf_s_l(tempBuffer,\n+                                           tempSize,\n+                                           L""%.*g"",\n+                                           utility::details::scoped_c_thread_locale::c_locale(),\n+                                           std::numeric_limits<double>::digits10 + 2,\n+                                           m_number.m_value);\n+        stream.append(tempBuffer, numChars);\n+    }\n+}\n+\n+#endif\n+\n+const utility::string_t& web::json::details::_String::as_string() const { return m_string; }\n+\n+const utility::string_t& web::json::value::as_string() const { return m_value->as_string(); }\n+\n+utility::string_t json::value::serialize() const\n+{\n+#ifndef _WIN32\n+    utility::details::scoped_c_thread_locale locale;\n+#endif\n+    return m_value->to_string();\n+}'}, {'Name': 'deps/cpprestsdk/src/utilities/asyncrt_utils.cpp', 'Line Additions': 1490, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,1490 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * Utilities\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+\n+#include ""pch.h""\n+\n+#include <algorithm>\n+#include <cpprest/asyncrt_utils.h>\n+#include <stdexcept>\n+#include <string>\n+#include <time.h>\n+\n+using namespace web;\n+using namespace utility;\n+using namespace utility::conversions;\n+\n+namespace\n+{\n+struct to_lower_ch_impl\n+{\n+    char operator()(char c) const CPPREST_NOEXCEPT\n+    {\n+        if (c >= \'A\' && c <= \'Z\') return static_cast<char>(c - \'A\' + \'a\');\n+        return c;\n+    }\n+\n+    wchar_t operator()(wchar_t c) const CPPREST_NOEXCEPT\n+    {\n+        if (c >= L\'A\' && c <= L\'Z\') return static_cast<wchar_t>(c - L\'A\' + L\'a\');\n+        return c;\n+    }\n+};\n+\n+CPPREST_CONSTEXPR to_lower_ch_impl to_lower_ch {};\n+\n+struct eq_lower_ch_impl\n+{\n+    template<class CharT>\n+    inline CharT operator()(const CharT left, const CharT right) const CPPREST_NOEXCEPT\n+    {\n+        return to_lower_ch(left) == to_lower_ch(right);\n+    }\n+};\n+\n+CPPREST_CONSTEXPR eq_lower_ch_impl eq_lower_ch {};\n+\n+struct lt_lower_ch_impl\n+{\n+    template<class CharT>\n+    inline CharT operator()(const CharT left, const CharT right) const CPPREST_NOEXCEPT\n+    {\n+        return to_lower_ch(left) < to_lower_ch(right);\n+    }\n+};\n+\n+CPPREST_CONSTEXPR lt_lower_ch_impl lt_lower_ch {};\n+} // namespace\n+\n+namespace utility\n+{\n+namespace details\n+{\n+_ASYNCRTIMP bool __cdecl str_iequal(const std::string& left, const std::string& right) CPPREST_NOEXCEPT\n+{\n+    return left.size() == right.size() && std::equal(left.cbegin(), left.cend(), right.cbegin(), eq_lower_ch);\n+}\n+\n+_ASYNCRTIMP bool __cdecl str_iequal(const std::wstring& left, const std::wstring& right) CPPREST_NOEXCEPT\n+{\n+    return left.size() == right.size() && std::equal(left.cbegin(), left.cend(), right.cbegin(), eq_lower_ch);\n+}\n+\n+_ASYNCRTIMP bool __cdecl str_iless(const std::string& left, const std::string& right) CPPREST_NOEXCEPT\n+{\n+    return std::lexicographical_compare(left.cbegin(), left.cend(), right.cbegin(), right.cend(), lt_lower_ch);\n+}\n+\n+_ASYNCRTIMP bool __cdecl str_iless(const std::wstring& left, const std::wstring& right) CPPREST_NOEXCEPT\n+{\n+    return std::lexicographical_compare(left.cbegin(), left.cend(), right.cbegin(), right.cend(), lt_lower_ch);\n+}\n+\n+_ASYNCRTIMP void __cdecl inplace_tolower(std::string& target) CPPREST_NOEXCEPT\n+{\n+    for (auto& ch : target)\n+    {\n+        ch = to_lower_ch(ch);\n+    }\n+}\n+\n+_ASYNCRTIMP void __cdecl inplace_tolower(std::wstring& target) CPPREST_NOEXCEPT\n+{\n+    for (auto& ch : target)\n+    {\n+        ch = to_lower_ch(ch);\n+    }\n+}\n+\n+#if !defined(ANDROID) && !defined(__ANDROID__)\n+std::once_flag g_c_localeFlag;\n+std::unique_ptr<scoped_c_thread_locale::xplat_locale, void (*)(scoped_c_thread_locale::xplat_locale*)> g_c_locale(\n+    nullptr, [](scoped_c_thread_locale::xplat_locale*) {});\n+scoped_c_thread_locale::xplat_locale scoped_c_thread_locale::c_locale()\n+{\n+    std::call_once(g_c_localeFlag, [&]() {\n+        scoped_c_thread_locale::xplat_locale* clocale = new scoped_c_thread_locale::xplat_locale();\n+#ifdef _WIN32\n+        *clocale = _create_locale(LC_ALL, ""C"");\n+        if (clocale == nullptr || *clocale == nullptr)\n+        {\n+            throw std::runtime_error(""Unable to create \'C\' locale."");\n+        }\n+        auto deleter = [](scoped_c_thread_locale::xplat_locale* clocale) {\n+            _free_locale(*clocale);\n+            delete clocale;\n+        };\n+#else\n+        *clocale = newlocale(LC_ALL, ""C"", nullptr);\n+        if (clocale == nullptr || *clocale == nullptr)\n+        {\n+            throw std::runtime_error(""Unable to create \'C\' locale."");\n+        }\n+        auto deleter = [](scoped_c_thread_locale::xplat_locale *clocale)\n+        {\n+            freelocale(*clocale);\n+            delete clocale;\n+        };\n+#endif\n+        g_c_locale =\n+            std::unique_ptr<scoped_c_thread_locale::xplat_locale, void (*)(scoped_c_thread_locale::xplat_locale*)>(\n+                clocale, deleter);\n+    });\n+    return *g_c_locale;\n+}\n+#endif\n+\n+#ifdef _WIN32\n+scoped_c_thread_locale::scoped_c_thread_locale() : m_prevLocale(), m_prevThreadSetting(-1)\n+{\n+    char* prevLocale = setlocale(LC_ALL, nullptr);\n+    if (prevLocale == nullptr)\n+    {\n+        throw std::runtime_error(""Unable to retrieve current locale."");\n+    }\n+\n+    if (std::strcmp(prevLocale, ""C"") != 0)\n+    {\n+        m_prevLocale = prevLocale;\n+        m_prevThreadSetting = _configthreadlocale(_ENABLE_PER_THREAD_LOCALE);\n+        if (m_prevThreadSetting == -1)\n+        {\n+            throw std::runtime_error(""Unable to enable per thread locale."");\n+        }\n+        if (setlocale(LC_ALL, ""C"") == nullptr)\n+        {\n+            _configthreadlocale(m_prevThreadSetting);\n+            throw std::runtime_error(""Unable to set locale"");\n+        }\n+    }\n+}\n+\n+scoped_c_thread_locale::~scoped_c_thread_locale()\n+{\n+    if (m_prevThreadSetting != -1)\n+    {\n+        setlocale(LC_ALL, m_prevLocale.c_str());\n+        _configthreadlocale(m_prevThreadSetting);\n+    }\n+}\n+#elif (defined(ANDROID) || defined(__ANDROID__))\n+scoped_c_thread_locale::scoped_c_thread_locale() {}\n+scoped_c_thread_locale::~scoped_c_thread_locale() {}\n+#else\n+scoped_c_thread_locale::scoped_c_thread_locale() : m_prevLocale(nullptr)\n+{\n+    char* prevLocale = setlocale(LC_ALL, nullptr);\n+    if (prevLocale == nullptr)\n+    {\n+        throw std::runtime_error(""Unable to retrieve current locale."");\n+    }\n+\n+    if (std::strcmp(prevLocale, ""C"") != 0)\n+    {\n+        m_prevLocale = uselocale(c_locale());\n+        if (m_prevLocale == nullptr)\n+        {\n+            throw std::runtime_error(""Unable to set locale"");\n+        }\n+    }\n+}\n+\n+scoped_c_thread_locale::~scoped_c_thread_locale()\n+{\n+    if (m_prevLocale != nullptr)\n+    {\n+        uselocale(m_prevLocale);\n+    }\n+}\n+#endif\n+} // namespace details\n+\n+namespace details\n+{\n+const std::error_category& __cdecl platform_category()\n+{\n+#ifdef _WIN32\n+    return windows_category();\n+#else\n+    return linux_category();\n+#endif\n+}\n+\n+#ifdef _WIN32\n+\n+// Remove once VS 2013 is no longer supported.\n+#if _MSC_VER < 1900\n+static details::windows_category_impl instance;\n+#endif\n+const std::error_category& __cdecl windows_category()\n+{\n+#if _MSC_VER >= 1900\n+    static details::windows_category_impl instance;\n+#endif\n+    return instance;\n+}\n+\n+std::string windows_category_impl::message(int errorCode) const CPPREST_NOEXCEPT\n+{\n+    const size_t buffer_size = 4096;\n+    DWORD dwFlags = FORMAT_MESSAGE_FROM_SYSTEM;\n+    LPCVOID lpSource = NULL;\n+\n+#if !defined(__cplusplus_winrt)\n+    if (errorCode >= 12000)\n+    {\n+        dwFlags = FORMAT_MESSAGE_FROM_HMODULE;\n+        lpSource = GetModuleHandleA(""winhttp.dll""); // this handle DOES NOT need to be freed\n+    }\n+#endif\n+\n+    std::wstring buffer(buffer_size, 0);\n+\n+    const auto result = ::FormatMessageW(dwFlags, lpSource, errorCode, 0, &buffer[0], buffer_size, NULL);\n+\n+    if (result == 0)\n+    {\n+        return ""Unable to get an error message for error code: "" + std::to_string(errorCode) + ""."";\n+    }\n+\n+    // strip exceeding characters of the initial resize call\n+    buffer.resize(result);\n+\n+    return utility::conversions::to_utf8string(buffer);\n+}\n+\n+std::error_condition windows_category_impl::default_error_condition(int errorCode) const CPPREST_NOEXCEPT\n+{\n+    // First see if the STL implementation can handle the mapping for common cases.\n+    const std::error_condition errCondition = std::system_category().default_error_condition(errorCode);\n+    const std::string errConditionMsg = errCondition.message();\n+    if (!utility::details::str_iequal(errConditionMsg, ""unknown error""))\n+    {\n+        return errCondition;\n+    }\n+\n+    switch (errorCode)\n+    {\n+      /*\n+#ifndef __cplusplus_winrt\n+\n+        case ERROR_WINHTTP_TIMEOUT: return std::errc::timed_out;\n+        case ERROR_WINHTTP_CANNOT_CONNECT: return std::errc::host_unreachable;\n+        case ERROR_WINHTTP_CONNECTION_ERROR: return std::errc::connection_aborted;\n+#endif*/\n+        case INET_E_RESOURCE_NOT_FOUND:\n+        case INET_E_CANNOT_CONNECT: return std::errc::host_unreachable;\n+        case INET_E_CONNECTION_TIMEOUT: return std::errc::timed_out;\n+        case INET_E_DOWNLOAD_FAILURE: return std::errc::connection_aborted;\n+        default: break;\n+    }\n+\n+    return std::error_condition(errorCode, *this);\n+}\n+\n+#else\n+\n+const std::error_category& __cdecl linux_category()\n+{\n+    // On Linux we are using boost error codes which have the exact same\n+    // mapping and are equivalent with std::generic_category error codes.\n+    return std::generic_category();\n+}\n+\n+#endif\n+\n+} // namespace details\n+\n+#define LOW_3BITS 0x7\n+#define LOW_4BITS 0xF\n+#define LOW_5BITS 0x1F\n+#define LOW_6BITS 0x3F\n+#define BIT4 0x8\n+#define BIT5 0x10\n+#define BIT6 0x20\n+#define BIT7 0x40\n+#define BIT8 0x80\n+#define L_SURROGATE_START 0xDC00\n+#define L_SURROGATE_END 0xDFFF\n+#define H_SURROGATE_START 0xD800\n+#define H_SURROGATE_END 0xDBFF\n+#define SURROGATE_PAIR_START 0x10000\n+\n+// Create a dedicated type for characters to avoid the issue\n+// of different platforms defaulting char to be either signed\n+// or unsigned.\n+using UtilCharInternal_t = signed char;\n+\n+inline size_t count_utf8_to_utf16(const std::string& s)\n+{\n+    const size_t sSize = s.size();\n+    auto const sData = reinterpret_cast<const UtilCharInternal_t*>(s.data());\n+    size_t result {sSize};\n+\n+    for (size_t index = 0; index < sSize;)\n+    {\n+        if (sData[index] >= 0)\n+        {\n+            // use fast inner loop to skip single byte code points (which are\n+            // expected to be the most frequent)\n+            while ((++index < sSize) && (sData[index] >= 0))\n+                ;\n+\n+            if (index >= sSize) break;\n+        }\n+\n+        // start special handling for multi-byte code points\n+        const UtilCharInternal_t c {sData[index++]};\n+\n+        if ((c & BIT7) == 0)\n+        {\n+            throw std::range_error(""UTF-8 string character can never start with 10xxxxxx"");\n+        }\n+        else if ((c & BIT6) == 0) // 2 byte character, 0x80 to 0x7FF\n+        {\n+            if (index == sSize)\n+            {\n+                throw std::range_error(""UTF-8 string is missing bytes in character"");\n+            }\n+\n+            const UtilCharInternal_t c2 {sData[index++]};\n+            if ((c2 & 0xC0) != BIT8)\n+            {\n+                throw std::range_error(""UTF-8 continuation byte is missing leading bit mask"");\n+            }\n+\n+            // can\'t require surrogates for 7FF\n+            --result;\n+        }\n+        else if ((c & BIT5) == 0) // 3 byte character, 0x800 to 0xFFFF\n+        {\n+            if (sSize - index < 2)\n+            {\n+                throw std::range_error(""UTF-8 string is missing bytes in character"");\n+            }\n+\n+            const UtilCharInternal_t c2 {sData[index++]};\n+            const UtilCharInternal_t c3 {sData[index++]};\n+            if (((c2 | c3) & 0xC0) != BIT8)\n+            {\n+                throw std::range_error(""UTF-8 continuation byte is missing leading bit mask"");\n+            }\n+\n+            result -= 2;\n+        }\n+        else if ((c & BIT4) == 0) // 4 byte character, 0x10000 to 0x10FFFF\n+        {\n+            if (sSize - index < 3)\n+            {\n+                throw std::range_error(""UTF-8 string is missing bytes in character"");\n+            }\n+\n+            const UtilCharInternal_t c2 {sData[index++]};\n+            const UtilCharInternal_t c3 {sData[index++]};\n+            const UtilCharInternal_t c4 {sData[index++]};\n+            if (((c2 | c3 | c4) & 0xC0) != BIT8)\n+            {\n+                throw std::range_error(""UTF-8 continuation byte is missing leading bit mask"");\n+            }\n+\n+            const uint32_t codePoint =\n+                ((c & LOW_3BITS) << 18) | ((c2 & LOW_6BITS) << 12) | ((c3 & LOW_6BITS) << 6) | (c4 & LOW_6BITS);\n+            result -= (3 - (codePoint >= SURROGATE_PAIR_START));\n+        }\n+        else\n+        {\n+            throw std::range_error(""UTF-8 string has invalid Unicode code point"");\n+        }\n+    }\n+\n+    return result;\n+}\n+\n+utf16string __cdecl conversions::utf8_to_utf16(const std::string& s)\n+{\n+    // Save repeated heap allocations, use the length of resulting sequence.\n+    const size_t srcSize = s.size();\n+    auto const srcData = reinterpret_cast<const UtilCharInternal_t*>(s.data());\n+    utf16string dest(count_utf8_to_utf16(s), L\'\\0\');\n+    utf16string::value_type* const destData = &dest[0];\n+    size_t destIndex = 0;\n+\n+    for (size_t index = 0; index < srcSize; ++index)\n+    {\n+        UtilCharInternal_t src = srcData[index];\n+        switch (src & 0xF0)\n+        {\n+            case 0xF0: // 4 byte character, 0x10000 to 0x10FFFF\n+            {\n+                const UtilCharInternal_t c2 {srcData[++index]};\n+                const UtilCharInternal_t c3 {srcData[++index]};\n+                const UtilCharInternal_t c4 {srcData[++index]};\n+                uint32_t codePoint =\n+                    ((src & LOW_3BITS) << 18) | ((c2 & LOW_6BITS) << 12) | ((c3 & LOW_6BITS) << 6) | (c4 & LOW_6BITS);\n+                if (codePoint >= SURROGATE_PAIR_START)\n+                {\n+                    // In UTF-16 U+10000 to U+10FFFF are represented as two 16-bit code units, surrogate pairs.\n+                    //  - 0x10000 is subtracted from the code point\n+                    //  - high surrogate is 0xD800 added to the top ten bits\n+                    //  - low surrogate is 0xDC00 added to the low ten bits\n+                    codePoint -= SURROGATE_PAIR_START;\n+                    destData[destIndex++] = static_cast<utf16string::value_type>((codePoint >> 10) | H_SURROGATE_START);\n+                    destData[destIndex++] =\n+                        static_cast<utf16string::value_type>((codePoint & 0x3FF) | L_SURROGATE_START);\n+                }\n+                else\n+                {\n+                    // In UTF-16 U+0000 to U+D7FF and U+E000 to U+FFFF are represented exactly as the Unicode code point\n+                    // value. U+D800 to U+DFFF are not valid characters, for simplicity we assume they are not present\n+                    // but will encode them if encountered.\n+                    destData[destIndex++] = static_cast<utf16string::value_type>(codePoint);\n+                }\n+            }\n+            break;\n+            case 0xE0: // 3 byte character, 0x800 to 0xFFFF\n+            {\n+                const UtilCharInternal_t c2 {srcData[++index]};\n+                const UtilCharInternal_t c3 {srcData[++index]};\n+                destData[destIndex++] = static_cast<utf16string::value_type>(\n+                    ((src & LOW_4BITS) << 12) | ((c2 & LOW_6BITS) << 6) | (c3 & LOW_6BITS));\n+            }\n+            break;\n+            case 0xD0: // 2 byte character, 0x80 to 0x7FF\n+            case 0xC0:\n+            {\n+                const UtilCharInternal_t c2 {srcData[++index]};\n+                destData[destIndex++] =\n+                    static_cast<utf16string::value_type>(((src & LOW_5BITS) << 6) | (c2 & LOW_6BITS));\n+            }\n+            break;\n+            default: // single byte character, 0x0 to 0x7F\n+                // try to use a fast inner loop for following single byte characters,\n+                // since they are quite probable\n+                do\n+                {\n+                    destData[destIndex++] = static_cast<utf16string::value_type>(srcData[index++]);\n+                } while (index < srcSize && srcData[index] > 0);\n+                // adjust index since it will be incremented by the for loop\n+                --index;\n+        }\n+    }\n+    return dest;\n+}\n+\n+inline size_t count_utf16_to_utf8(const utf16string& w)\n+{\n+    const utf16string::value_type* const srcData = &w[0];\n+    const size_t srcSize = w.size();\n+    size_t destSize(srcSize);\n+    for (size_t index = 0; index < srcSize; ++index)\n+    {\n+        const utf16string::value_type ch(srcData[index]);\n+        if (ch <= 0x7FF)\n+        {\n+            if (ch > 0x7F) // 2 bytes needed (11 bits used)\n+            {\n+                ++destSize;\n+            }\n+        }\n+        // Check for high surrogate.\n+        else if (ch >= H_SURROGATE_START && ch <= H_SURROGATE_END) // 4 bytes needed (21 bits used)\n+        {\n+            ++index;\n+            if (index == srcSize)\n+            {\n+                throw std::range_error(""UTF-16 string is missing low surrogate"");\n+            }\n+\n+            const auto lowSurrogate = srcData[index];\n+            if (lowSurrogate < L_SURROGATE_START || lowSurrogate > L_SURROGATE_END)\n+            {\n+                throw std::range_error(""UTF-16 string has invalid low surrogate"");\n+            }\n+\n+            destSize += 2;\n+        }\n+        else // 3 bytes needed (16 bits used)\n+        {\n+            destSize += 2;\n+        }\n+    }\n+\n+    return destSize;\n+}\n+\n+std::string __cdecl conversions::utf16_to_utf8(const utf16string& w)\n+{\n+    const size_t srcSize = w.size();\n+    const utf16string::value_type* const srcData = &w[0];\n+    std::string dest(count_utf16_to_utf8(w), \'\\0\');\n+    std::string::value_type* const destData = &dest[0];\n+    size_t destIndex(0);\n+\n+    for (size_t index = 0; index < srcSize; ++index)\n+    {\n+        const utf16string::value_type src = srcData[index];\n+        if (src <= 0x7FF)\n+        {\n+            if (src <= 0x7F) // single byte character\n+            {\n+                destData[destIndex++] = static_cast<char>(src);\n+            }\n+            else // 2 bytes needed (11 bits used)\n+            {\n+                destData[destIndex++] = static_cast<char>(char((src >> 6) | 0xC0));        // leading 5 bits\n+                destData[destIndex++] = static_cast<char>(char((src & LOW_6BITS) | BIT8)); // trailing 6 bits\n+            }\n+        }\n+        // Check for high surrogate.\n+        else if (src >= H_SURROGATE_START && src <= H_SURROGATE_END)\n+        {\n+            const auto highSurrogate = src;\n+            const auto lowSurrogate = srcData[++index];\n+\n+            // To get from surrogate pair to Unicode code point:\n+            // - subtract 0xD800 from high surrogate, this forms top ten bits\n+            // - subtract 0xDC00 from low surrogate, this forms low ten bits\n+            // - add 0x10000\n+            // Leaves a code point in U+10000 to U+10FFFF range.\n+            uint32_t codePoint = highSurrogate - H_SURROGATE_START;\n+            codePoint <<= 10;\n+            codePoint |= lowSurrogate - L_SURROGATE_START;\n+            codePoint += SURROGATE_PAIR_START;\n+\n+            // 4 bytes needed (21 bits used)\n+            destData[destIndex++] = static_cast<char>((codePoint >> 18) | 0xF0);               // leading 3 bits\n+            destData[destIndex++] = static_cast<char>(((codePoint >> 12) & LOW_6BITS) | BIT8); // next 6 bits\n+            destData[destIndex++] = static_cast<char>(((codePoint >> 6) & LOW_6BITS) | BIT8);  // next 6 bits\n+            destData[destIndex++] = static_cast<char>((codePoint & LOW_6BITS) | BIT8);         // trailing 6 bits\n+        }\n+        else // 3 bytes needed (16 bits used)\n+        {\n+            destData[destIndex++] = static_cast<char>((src >> 12) | 0xE0);              // leading 4 bits\n+            destData[destIndex++] = static_cast<char>(((src >> 6) & LOW_6BITS) | BIT8); // middle 6 bits\n+            destData[destIndex++] = static_cast<char>((src & LOW_6BITS) | BIT8);        // trailing 6 bits\n+        }\n+    }\n+\n+    return dest;\n+}\n+\n+utf16string __cdecl conversions::usascii_to_utf16(const std::string& s)\n+{\n+    // Ascii is a subset of UTF-8 so just convert to UTF-16\n+    return utf8_to_utf16(s);\n+}\n+\n+utf16string __cdecl conversions::latin1_to_utf16(const std::string& s)\n+{\n+    // Latin1 is the first 256 code points in Unicode.\n+    // In UTF-16 encoding each of these is represented as exactly the numeric code point.\n+    utf16string dest;\n+    // Prefer resize combined with for-loop over constructor dest(s.begin(), s.end())\n+    // for faster assignment.\n+    dest.resize(s.size());\n+    for (size_t i = 0; i < s.size(); ++i)\n+    {\n+        dest[i] = utf16char(static_cast<unsigned char>(s[i]));\n+    }\n+    return dest;\n+}\n+\n+utf8string __cdecl conversions::latin1_to_utf8(const std::string& s) { return utf16_to_utf8(latin1_to_utf16(s)); }\n+\n+#ifndef _UTF16_STRINGS\n+utility::string_t __cdecl conversions::to_string_t(utf16string&& s) { return utf16_to_utf8(std::move(s)); }\n+#endif\n+\n+#ifdef _UTF16_STRINGS\n+utility::string_t __cdecl conversions::to_string_t(std::string&& s) { return utf8_to_utf16(std::move(s)); }\n+#endif\n+\n+#ifndef _UTF16_STRINGS\n+utility::string_t __cdecl conversions::to_string_t(const utf16string& s) { return utf16_to_utf8(s); }\n+#endif\n+\n+#ifdef _UTF16_STRINGS\n+utility::string_t __cdecl conversions::to_string_t(const std::string& s) { return utf8_to_utf16(s); }\n+#endif\n+\n+std::string __cdecl conversions::to_utf8string(const utf16string& value) { return utf16_to_utf8(value); }\n+\n+utf16string __cdecl conversions::to_utf16string(const std::string& value) { return utf8_to_utf16(value); }\n+\n+static const int64_t NtToUnixOffsetSeconds = 11644473600; // diff between windows and unix epochs (seconds)\n+\n+static bool year_is_leap_year(int year) { return (year % 4 == 0 && (year % 100 != 0 || year % 400 == 0)); }\n+\n+static const int SecondsInMinute = 60;\n+static const int SecondsInHour = SecondsInMinute * 60;\n+static const int SecondsInDay = SecondsInHour * 24;\n+\n+static const int DaysInYear = 365;\n+static const int DaysIn4Years = DaysInYear * 4 + 1;\n+static const int DaysIn100Years = DaysIn4Years * 25 - 1;\n+static const int DaysIn400Years = DaysIn100Years * 4 + 1;\n+\n+static const int SecondsInYear = SecondsInDay * DaysInYear;\n+static const int SecondsIn4Years = SecondsInDay * DaysIn4Years;\n+static const int64_t SecondsIn100Years = static_cast<int64_t>(SecondsInDay) * DaysIn100Years;\n+static const int64_t SecondsIn400Years = static_cast<int64_t>(SecondsInDay) * DaysIn400Years;\n+static const int64_t SecondsFrom1900To2001 = INT64_C(3187296000);\n+\n+static const int64_t NtTo1900OffsetInterval = INT64_C(0x014F373BFDE04000);\n+\n+static int count_leap_years(const int yearsSince1900)\n+{\n+    int tmpYears = yearsSince1900 + 299; // shift into 1601, the first 400 year cycle including 1900\n+\n+    int year400 = tmpYears / 400;\n+    tmpYears -= year400 * 400;\n+    int result = year400 * 97;\n+\n+    int year100 = tmpYears / 100;\n+    tmpYears -= year100 * 100;\n+    result += year100 * 24;\n+\n+    result += tmpYears / 4;\n+\n+    // subtract off leap years from 1601\n+    result -= 72;\n+\n+    return result;\n+}\n+\n+// The following table assumes no leap year; leap year is added separately\n+static const unsigned short cumulative_days_to_month[12] = {\n+    0,   // Jan\n+    31,  // Feb\n+    59,  // Mar\n+    90,  // Apr\n+    120, // May\n+    151, // Jun\n+    181, // Jul\n+    212, // Aug\n+    243, // Sep\n+    273, // Oct\n+    304, // Nov\n+    334  // Dec\n+};\n+\n+static const unsigned short cumulative_days_to_month_leap[12] = {\n+    0,   // Jan\n+    31,  // Feb\n+    60,  // Mar\n+    91,  // Apr\n+    121, // May\n+    152, // Jun\n+    182, // Jul\n+    213, // Aug\n+    244, // Sep\n+    274, // Oct\n+    305, // Nov\n+    335  // Dec\n+};\n+\n+datetime __cdecl datetime::utc_now()\n+{\n+#ifdef _WIN32\n+    ULARGE_INTEGER largeInt;\n+    FILETIME fileTime;\n+    GetSystemTimeAsFileTime(&fileTime);\n+\n+    largeInt.LowPart = fileTime.dwLowDateTime;\n+    largeInt.HighPart = fileTime.dwHighDateTime;\n+\n+    return datetime(largeInt.QuadPart);\n+#else // LINUX\n+    struct timeval time;\n+    gettimeofday(&time, nullptr);\n+    int64_t result = NtToUnixOffsetSeconds + time.tv_sec;\n+    result *= _secondTicks;      // convert to 10e-7\n+    result += time.tv_usec * 10; // convert and add microseconds, 10e-6 to 10e-7\n+    return datetime(static_cast<interval_type>(result));\n+#endif\n+}\n+\n+static const char dayNames[] = ""Sun\\0Mon\\0Tue\\0Wed\\0Thu\\0Fri\\0Sat"";\n+static const char monthNames[] = ""Jan\\0Feb\\0Mar\\0Apr\\0May\\0Jun\\0Jul\\0Aug\\0Sep\\0Oct\\0Nov\\0Dec"";\n+\n+struct compute_year_result\n+{\n+    int year;\n+    int secondsLeftThisYear;\n+};\n+\n+static const int64_t secondsFrom1601To1900 = INT64_C(9435484800);\n+\n+static compute_year_result compute_year(int64_t secondsSince1900)\n+{\n+    int64_t secondsLeft = secondsSince1900 + secondsFrom1601To1900; // shift to start of this 400 year cycle\n+\n+    int year400 = static_cast<int>(secondsLeft / SecondsIn400Years);\n+    secondsLeft -= year400 * SecondsIn400Years;\n+\n+    int year100 = static_cast<int>(secondsLeft / SecondsIn100Years);\n+    secondsLeft -= year100 * SecondsIn100Years;\n+\n+    int year4 = static_cast<int>(secondsLeft / SecondsIn4Years);\n+    int secondsInt = static_cast<int>(secondsLeft - year4 * SecondsIn4Years);\n+\n+    int year1 = secondsInt / SecondsInYear;\n+    secondsInt -= year1 * SecondsInYear;\n+\n+    // shift back to 1900 base from 1601:\n+    return {year400 * 400 + year100 * 100 + year4 * 4 + year1 - 299, secondsInt};\n+}\n+\n+utility::string_t datetime::to_string(date_format format) const\n+{\n+    if (m_interval > INT64_C(2650467743990000000))\n+    {\n+        throw std::out_of_range(""The requested year exceeds the year 9999."");\n+    }\n+\n+    const int64_t epochAdjusted = static_cast<int64_t>(m_interval) - NtTo1900OffsetInterval;\n+    const int64_t secondsSince1900 = epochAdjusted / _secondTicks; // convert to seconds\n+    const int fracSec = static_cast<int>(epochAdjusted % _secondTicks);\n+\n+    const auto yearData = compute_year(secondsSince1900);\n+    const int year = yearData.year;\n+    const int yearDay = yearData.secondsLeftThisYear / SecondsInDay;\n+    int leftover = yearData.secondsLeftThisYear % SecondsInDay;\n+    const int hour = leftover / SecondsInHour;\n+    leftover = leftover % SecondsInHour;\n+    const int minute = leftover / SecondsInMinute;\n+    leftover = leftover % SecondsInMinute;\n+\n+    const auto& monthTable = year_is_leap_year(year) ? cumulative_days_to_month_leap : cumulative_days_to_month;\n+    int month = 0;\n+    while (month < 11 && monthTable[month + 1] <= yearDay)\n+    {\n+        ++month;\n+    }\n+\n+    const auto monthDay = yearDay - monthTable[month] + 1;\n+    const auto weekday = static_cast<int>((secondsSince1900 / SecondsInDay + 1) % 7);\n+\n+    char outBuffer[38]; // Thu, 01 Jan 1970 00:00:00 GMT\\0\n+                        // 1970-01-01T00:00:00.1234567Z\\0\n+    char* outCursor = outBuffer;\n+    switch (format)\n+    {\n+        case RFC_1123:\n+#ifdef _MSC_VER\n+            sprintf_s(outCursor,\n+                      26,\n+                      ""%s, %02d %s %04d %02d:%02d:%02d"",\n+                      dayNames + 4 * weekday,\n+                      monthDay,\n+                      monthNames + 4 * month,\n+                      year + 1900,\n+                      hour,\n+                      minute,\n+                      leftover);\n+#else  // ^^^ _MSC_VER // !_MSC_VER vvv\n+            sprintf(outCursor,\n+                    ""%s, %02d %s %04d %02d:%02d:%02d"",\n+                    dayNames + 4 * weekday,\n+                    monthDay,\n+                    monthNames + 4 * month,\n+                    year + 1900,\n+                    hour,\n+                    minute,\n+                    leftover);\n+#endif // _MSC_VER\n+            outCursor += 25;\n+            memcpy(outCursor, "" GMT"", 4);\n+            outCursor += 4;\n+            return utility::string_t(outBuffer, outCursor);\n+        case ISO_8601:\n+#ifdef _MSC_VER\n+            sprintf_s(outCursor,\n+                      20,\n+                      ""%04d-%02d-%02dT%02d:%02d:%02d"",\n+                      year + 1900,\n+                      month + 1,\n+                      monthDay,\n+                      hour,\n+                      minute,\n+                      leftover);\n+#else  // ^^^ _MSC_VER // !_MSC_VER vvv\n+            sprintf(\n+                outCursor, ""%04d-%02d-%02dT%02d:%02d:%02d"", year + 1900, month + 1, monthDay, hour, minute, leftover);\n+#endif // _MSC_VER\n+            outCursor += 19;\n+            if (fracSec != 0)\n+            {\n+                // Append fractional second, which is a 7-digit value with no trailing zeros\n+                // This way, \'1200\' becomes \'00012\'\n+#ifdef _MSC_VER\n+                size_t appended = sprintf_s(outCursor, 9, "".%07d"", fracSec);\n+#else  // ^^^ _MSC_VER // !_MSC_VER vvv\n+                size_t appended = sprintf(outCursor, "".%07d"", fracSec);\n+#endif // _MSC_VER\n+                while (outCursor[appended - 1] == \'0\')\n+                {\n+                    --appended; // trim trailing zeros\n+                }\n+\n+                outCursor += appended;\n+            }\n+\n+            *outCursor = \'Z\';\n+            ++outCursor;\n+            return utility::string_t(outBuffer, outCursor);\n+        default: throw std::invalid_argument(""Unrecognized date format."");\n+    }\n+}\n+\n+template<class CharT>\n+static bool string_starts_with(const CharT* haystack, const char* needle)\n+{\n+    while (*needle)\n+    {\n+        if (*haystack != static_cast<CharT>(*needle))\n+        {\n+            return false;\n+        }\n+\n+        ++haystack;\n+        ++needle;\n+    }\n+\n+    return true;\n+}\n+\n+#define ascii_isdigit(c) ((unsigned char)((unsigned char)(c) - \'0\') <= 9)\n+#define ascii_isdigit6(c) ((unsigned char)((unsigned char)(c) - \'0\') <= 6)\n+#define ascii_isdigit5(c) ((unsigned char)((unsigned char)(c) - \'0\') <= 5)\n+#define ascii_isdigit3(c) ((unsigned char)((unsigned char)(c) - \'0\') <= 3)\n+#define ascii_isdigit2(c) ((unsigned char)((unsigned char)(c) - \'0\') <= 2)\n+#define ascii_isdigit1(c) ((unsigned char)((unsigned char)(c) - \'0\') <= 1)\n+\n+static const unsigned char max_days_in_month[12] = {\n+    31, // Jan\n+    00, // Feb, special handling for leap years\n+    31, // Mar\n+    30, // Apr\n+    31, // May\n+    30, // Jun\n+    31, // Jul\n+    31, // Aug\n+    30, // Sep\n+    31, // Oct\n+    30, // Nov\n+    31  // Dec\n+};\n+\n+static bool validate_day_month(int day, int month, int year)\n+{\n+    int maxDaysThisMonth;\n+    if (month == 1)\n+    { // Feb needs leap year testing\n+        maxDaysThisMonth = 28 + year_is_leap_year(year);\n+    }\n+    else\n+    {\n+        maxDaysThisMonth = max_days_in_month[month];\n+    }\n+\n+    return day >= 1 && day <= maxDaysThisMonth;\n+}\n+\n+static int get_year_day(int month, int monthDay, int year)\n+{\n+    return cumulative_days_to_month[month] + monthDay + (year_is_leap_year(year) && month > 1) - 1;\n+}\n+\n+template<class CharT>\n+static int atoi2(const CharT* str)\n+{\n+    return (static_cast<unsigned char>(str[0]) - \'0\') * 10 + (static_cast<unsigned char>(str[1]) - \'0\');\n+}\n+\n+static int64_t timezone_adjust(int64_t result, unsigned char chSign, int adjustHours, int adjustMinutes)\n+{\n+    if (adjustHours > 23)\n+    {\n+        return -1;\n+    }\n+\n+    // adjustMinutes > 59 is impossible due to digit 5 check\n+    const int tzAdjust = adjustMinutes * 60 + adjustHours * 60 * 60;\n+    if (chSign == \'-\')\n+    {\n+        if (INT64_MAX - result < tzAdjust)\n+        {\n+            return -1;\n+        }\n+\n+        result += tzAdjust;\n+    }\n+    else\n+    {\n+        if (tzAdjust > result)\n+        {\n+            return -1;\n+        }\n+\n+        result -= tzAdjust;\n+    }\n+\n+    return result;\n+}\n+\n+/*\n+https://tools.ietf.org/html/rfc822\n+https://tools.ietf.org/html/rfc1123\n+\n+date-time   =  [ day "","" ] date time        ; dd mm yy\n+                                            ;  hh:mm:ss zzz\n+\n+day         =  ""Mon""  / ""Tue"" /  ""Wed""  / ""Thu""\n+            /  ""Fri""  / ""Sat"" /  ""Sun""\n+\n+date        =  1*2DIGIT month 2DIGIT        ; day month year\n+                                            ;  e.g. 20 Jun 82\n+RFC1123 changes this to:\n+date        =  1*2DIGIT month 2*4DIGIT        ; day month year\n+                                              ;  e.g. 20 Jun 1982\n+This implementation only accepts 4 digit years.\n+\n+month       =  ""Jan""  /  ""Feb"" /  ""Mar""  /  ""Apr""\n+            /  ""May""  /  ""Jun"" /  ""Jul""  /  ""Aug""\n+            /  ""Sep""  /  ""Oct"" /  ""Nov""  /  ""Dec""\n+\n+time        =  hour zone                    ; ANSI and Military\n+\n+hour        =  2DIGIT "":"" 2DIGIT ["":"" 2DIGIT]\n+                                            ; 00:00:00 - 23:59:59\n+\n+zone        =  ""UT""  / ""GMT""                ; Universal Time\n+                                            ; North American : UT\n+            /  ""EST"" / ""EDT""                ;  Eastern:  - 5/ - 4\n+            /  ""CST"" / ""CDT""                ;  Central:  - 6/ - 5\n+            /  ""MST"" / ""MDT""                ;  Mountain: - 7/ - 6\n+            /  ""PST"" / ""PDT""                ;  Pacific:  - 8/ - 7\n+\n+// military time deleted by RFC 1123\n+\n+            / ( (""+"" / ""-"") 4DIGIT )        ; Local differential\n+                                            ;  hours+min. (HHMM)\n+*/\n+\n+\n+datetime __cdecl datetime::from_string(const utility::string_t& dateString, date_format format)\n+{\n+    datetime result;\n+    int64_t secondsSince1900;\n+    uint64_t fracSec = 0;\n+    auto str = dateString.c_str();\n+    if (format == RFC_1123)\n+    {\n+        int parsedWeekday = 0;\n+        for (; parsedWeekday < 7; ++parsedWeekday)\n+        {\n+            if (string_starts_with(str, dayNames + parsedWeekday * 4) && str[3] == _XPLATSTR(\',\') &&\n+                str[4] == _XPLATSTR(\' \'))\n+            {\n+                str += 5; // parsed day of week\n+                break;\n+            }\n+        }\n+\n+        int monthDay;\n+        if (ascii_isdigit3(str[0]) && ascii_isdigit(str[1]) && str[2] == _XPLATSTR(\' \'))\n+        {\n+            monthDay = atoi2(str); // validity checked later\n+            str += 3;              // parsed day\n+        }\n+        else if (ascii_isdigit(str[0]) && str[1] == _XPLATSTR(\' \'))\n+        {\n+            monthDay = str[0] - _XPLATSTR(\'0\');\n+            str += 2; // parsed day\n+        }\n+        else\n+        {\n+            return result;\n+        }\n+\n+        if (monthDay == 0)\n+        {\n+            return result;\n+        }\n+\n+        int month = 0;\n+        for (;;)\n+        {\n+            if (string_starts_with(str, monthNames + month * 4))\n+            {\n+                break;\n+            }\n+\n+            ++month;\n+            if (month == 12)\n+            {\n+                return result;\n+            }\n+        }\n+\n+        if (str[3] != _XPLATSTR(\' \'))\n+        {\n+            return result;\n+        }\n+\n+        str += 4; // parsed month\n+\n+        if (!ascii_isdigit(str[0]) || !ascii_isdigit(str[1]) || !ascii_isdigit(str[2]) || !ascii_isdigit(str[3]) ||\n+            str[4] != \' \')\n+        {\n+            return result;\n+        }\n+\n+        int year = (str[0] - _XPLATSTR(\'0\')) * 1000 + (str[1] - _XPLATSTR(\'0\')) * 100 + (str[2] - _XPLATSTR(\'0\')) * 10 +\n+                   (str[3] - _XPLATSTR(\'0\'));\n+        if (year < 1900)\n+        {\n+            return result;\n+        }\n+\n+        // days in month validity check\n+        if (!validate_day_month(monthDay, month, year))\n+        {\n+            return result;\n+        }\n+\n+        str += 5; // parsed year\n+        const int yearDay = get_year_day(month, monthDay, year);\n+\n+        if (!ascii_isdigit2(str[0]) || !ascii_isdigit(str[1]) || str[2] != _XPLATSTR(\':\') || !ascii_isdigit5(str[3]) ||\n+            !ascii_isdigit(str[4]))\n+        {\n+            return result;\n+        }\n+\n+        const int hour = atoi2(str);\n+        if (hour > 23)\n+        {\n+            return result;\n+        }\n+\n+        str += 3; // parsed hour\n+        const int minute = atoi2(str);\n+        str += 2; // parsed mins\n+\n+        int sec;\n+        if (str[0] == \':\')\n+        {\n+            if (!ascii_isdigit6(str[1]) || !ascii_isdigit(str[2]) || str[3] != _XPLATSTR(\' \'))\n+            {\n+                return result;\n+            }\n+\n+            sec = atoi2(str + 1);\n+            str += 4; // parsed seconds\n+        }\n+        else if (str[0] == _XPLATSTR(\' \'))\n+        {\n+            sec = 0;\n+            str += 1; // parsed seconds\n+        }\n+        else\n+        {\n+            return result;\n+        }\n+\n+        if (sec > 60)\n+        { // 60 to allow leap seconds\n+            return result;\n+        }\n+\n+        year -= 1900;\n+        int daysSince1900 = year * DaysInYear + count_leap_years(year) + yearDay;\n+\n+        if (parsedWeekday != 7)\n+        {\n+            const int actualWeekday = (daysSince1900 + 1) % 7;\n+\n+            if (parsedWeekday != actualWeekday)\n+            {\n+                return result;\n+            }\n+        }\n+\n+        secondsSince1900 =\n+            static_cast<int64_t>(daysSince1900) * SecondsInDay + hour * SecondsInHour + minute * SecondsInMinute + sec;\n+\n+        if (!string_starts_with(str, ""GMT"") && !string_starts_with(str, ""UT""))\n+        {\n+            // some timezone adjustment necessary\n+            auto tzCh = _XPLATSTR(\'-\');\n+            int tzHours;\n+            int tzMinutes = 0;\n+            if (string_starts_with(str, ""EDT""))\n+            {\n+                tzHours = 4;\n+            }\n+            else if (string_starts_with(str, ""EST"") || string_starts_with(str, ""CDT""))\n+            {\n+                tzHours = 5;\n+            }\n+            else if (string_starts_with(str, ""CST"") || string_starts_with(str, ""MDT""))\n+            {\n+                tzHours = 6;\n+            }\n+            else if (string_starts_with(str, ""MST"") || string_starts_with(str, ""PDT""))\n+            {\n+                tzHours = 7;\n+            }\n+            else if (string_starts_with(str, ""PST""))\n+            {\n+                tzHours = 8;\n+            }\n+            else if ((tzCh == _XPLATSTR(\'+\') || tzCh == _XPLATSTR(\'-\')) && ascii_isdigit2(str[1]) &&\n+                     ascii_isdigit(str[2]) && ascii_isdigit5(str[3]) && ascii_isdigit(str[4]))\n+            {\n+                tzCh = str[0];\n+                tzHours = atoi2(str + 1);\n+                tzMinutes = atoi2(str + 3);\n+            }\n+            else\n+            {\n+                return result;\n+            }\n+\n+            secondsSince1900 = timezone_adjust(secondsSince1900, static_cast<unsigned char>(tzCh), tzHours, tzMinutes);\n+            if (secondsSince1900 < 0)\n+            {\n+                return result;\n+            }\n+        }\n+    }\n+    else if (format == ISO_8601)\n+    {\n+        // parse year\n+        if (!ascii_isdigit(str[0]) || !ascii_isdigit(str[1]) || !ascii_isdigit(str[2]) || !ascii_isdigit(str[3]))\n+        {\n+            return result;\n+        }\n+\n+        int year = (str[0] - _XPLATSTR(\'0\')) * 1000 + (str[1] - _XPLATSTR(\'0\')) * 100 + (str[2] - _XPLATSTR(\'0\')) * 10 +\n+                   (str[3] - _XPLATSTR(\'0\'));\n+        if (year < 1900)\n+        {\n+            return result;\n+        }\n+\n+        str += 4;\n+        if (*str == _XPLATSTR(\'-\'))\n+        {\n+            ++str;\n+        }\n+\n+        // parse month\n+        if (!ascii_isdigit1(str[0]) || !ascii_isdigit(str[1]))\n+        {\n+            return result;\n+        }\n+\n+        int month = atoi2(str);\n+        if (month < 1 || month > 12)\n+        {\n+            return result;\n+        }\n+\n+        month -= 1;\n+        str += 2;\n+\n+        if (*str == _XPLATSTR(\'-\'))\n+        {\n+            ++str;\n+        }\n+\n+        // parse day\n+        if (!ascii_isdigit3(str[0]) || !ascii_isdigit(str[1]))\n+        {\n+            return result;\n+        }\n+\n+        int monthDay = atoi2(str);\n+        if (!validate_day_month(monthDay, month, year))\n+        {\n+            return result;\n+        }\n+\n+        const int yearDay = get_year_day(month, monthDay, year);\n+\n+        str += 2;\n+        year -= 1900;\n+        int daysSince1900 = year * DaysInYear + count_leap_years(year) + yearDay;\n+\n+        if (str[0] != _XPLATSTR(\'T\') && str[0] != _XPLATSTR(\'t\'))\n+        {\n+            // No time\n+            secondsSince1900 = static_cast<int64_t>(daysSince1900) * SecondsInDay;\n+\n+            result.m_interval =\n+                static_cast<interval_type>(secondsSince1900 * _secondTicks + fracSec + NtTo1900OffsetInterval);\n+            return result;\n+        }\n+\n+        ++str; // skip \'T\'\n+\n+        // parse hour\n+        if (!ascii_isdigit2(str[0]) || !ascii_isdigit(str[1]))\n+        {\n+            return result;\n+        }\n+\n+        const int hour = atoi2(str);\n+        str += 2;\n+        if (hour > 23)\n+        {\n+            return result;\n+        }\n+\n+        if (*str == _XPLATSTR(\':\'))\n+        {\n+            ++str;\n+        }\n+\n+        // parse minute\n+        if (!ascii_isdigit5(str[0]) || !ascii_isdigit(str[1]))\n+        {\n+            return result;\n+        }\n+\n+        const int minute = atoi2(str);\n+        // minute > 59 is impossible because we checked that the first digit is <= 5 in the basic format\n+        // check above\n+\n+        str += 2;\n+\n+        if (*str == _XPLATSTR(\':\'))\n+        {\n+            ++str;\n+        }\n+\n+        // parse seconds\n+        if (!ascii_isdigit6(str[0]) || !ascii_isdigit(str[1]))\n+        {\n+            return result;\n+        }\n+\n+        const int sec = atoi2(str);\n+        // We allow 60 to account for leap seconds\n+        if (sec > 60)\n+        {\n+            return result;\n+        }\n+\n+        str += 2;\n+        if (str[0] == _XPLATSTR(\'.\') && ascii_isdigit(str[1]))\n+        {\n+            ++str;\n+            int digits = 7;\n+            for (;;)\n+            {\n+                fracSec *= 10;\n+                fracSec += *str - _XPLATSTR(\'0\');\n+                --digits;\n+                ++str;\n+                if (digits == 0)\n+                {\n+                    while (ascii_isdigit(*str))\n+                    {\n+                        // consume remaining fractional second digits we can\'t use\n+                        ++str;\n+                    }\n+\n+                    break;\n+                }\n+\n+                if (!ascii_isdigit(*str))\n+                {\n+                    // no more digits in the input, do the remaining multiplies we need\n+                    for (; digits != 0; --digits)\n+                    {\n+                        fracSec *= 10;\n+                    }\n+\n+                    break;\n+                }\n+            }\n+        }\n+\n+        secondsSince1900 =\n+            static_cast<int64_t>(daysSince1900) * SecondsInDay + hour * SecondsInHour + minute * SecondsInMinute + sec;\n+\n+        if (str[0] == _XPLATSTR(\'Z\') || str[0] == _XPLATSTR(\'z\'))\n+        {\n+            // no adjustment needed for zulu time\n+        }\n+        else if (str[0] == _XPLATSTR(\'+\') || str[0] == _XPLATSTR(\'-\'))\n+        {\n+            const unsigned char offsetDirection = static_cast<unsigned char>(str[0]);\n+            if (!ascii_isdigit2(str[1]) || !ascii_isdigit(str[2]) || str[3] != _XPLATSTR(\':\') ||\n+                !ascii_isdigit5(str[4]) || !ascii_isdigit(str[5]))\n+            {\n+                return result;\n+            }\n+\n+            secondsSince1900 = timezone_adjust(secondsSince1900, offsetDirection, atoi2(str + 1), atoi2(str + 4));\n+            if (secondsSince1900 < 0)\n+            {\n+                return result;\n+            }\n+        }\n+        else\n+        {\n+            // the timezone is malformed, but cpprestsdk currently accepts this as no timezone\n+        }\n+    }\n+    else\n+    {\n+        throw std::invalid_argument(""unrecognized date format"");\n+    }\n+\n+    result.m_interval = static_cast<interval_type>(secondsSince1900 * _secondTicks + fracSec + NtTo1900OffsetInterval);\n+    return result;\n+}\n+\n+/// <summary>\n+/// Converts a timespan/interval in seconds to xml duration string as specified by\n+/// http://www.w3.org/TR/xmlschema-2/#duration\n+/// </summary>\n+utility::string_t __cdecl timespan::seconds_to_xml_duration(utility::seconds durationSecs)\n+{\n+    auto numSecs = durationSecs.count();\n+\n+    // Find the number of minutes\n+    auto numMins = numSecs / 60;\n+    if (numMins > 0)\n+    {\n+        numSecs = numSecs % 60;\n+    }\n+\n+    // Hours\n+    auto numHours = numMins / 60;\n+    if (numHours > 0)\n+    {\n+        numMins = numMins % 60;\n+    }\n+\n+    // Days\n+    auto numDays = numHours / 24;\n+    if (numDays > 0)\n+    {\n+        numHours = numHours % 24;\n+    }\n+\n+    // The format is:\n+    // PdaysDThoursHminutesMsecondsS\n+    utility::string_t result;\n+    // (approximate mins/hours/secs as 2 digits each + 1 prefix character) + 1 for P prefix + 1 for T\n+    size_t baseReserveSize = ((numHours > 0) + (numMins > 0) + (numSecs > 0)) * 3 + 1;\n+    if (numDays > 0)\n+    {\n+        utility::string_t daysStr = utility::conversions::details::to_string_t(numDays);\n+        result.reserve(baseReserveSize + daysStr.size() + 1);\n+        result += _XPLATSTR(\'P\');\n+        result += daysStr;\n+        result += _XPLATSTR(\'D\');\n+    }\n+    else\n+    {\n+        result.reserve(baseReserveSize);\n+        result += _XPLATSTR(\'P\');\n+    }\n+\n+    result += _XPLATSTR(\'T\');\n+\n+    if (numHours > 0)\n+    {\n+        result += utility::conversions::details::to_string_t(numHours);\n+        result += _XPLATSTR(\'H\');\n+    }\n+\n+    if (numMins > 0)\n+    {\n+        result += utility::conversions::details::to_string_t(numMins);\n+        result += _XPLATSTR(\'M\');\n+    }\n+\n+    if (numSecs > 0)\n+    {\n+        result += utility::conversions::details::to_string_t(numSecs);\n+        result += _XPLATSTR(\'S\');\n+    }\n+\n+    return result;\n+}\n+\n+utility::seconds __cdecl timespan::xml_duration_to_seconds(const utility::string_t& timespanString)\n+{\n+    // The format is:\n+    // PnDTnHnMnS\n+    // if n == 0 then the field could be omitted\n+    // The final S could be omitted\n+\n+    int64_t numSecs = 0;\n+    auto cursor = timespanString.c_str();\n+    auto c = *cursor++; // skip \'P\'\n+    while (c)\n+    {\n+        int val = 0;\n+        c = *cursor++;\n+\n+        while (ascii_isdigit(c))\n+        {\n+            val = val * 10 + (c - _XPLATSTR(\'0\'));\n+            c = *cursor++;\n+\n+            if (c == _XPLATSTR(\'.\'))\n+            {\n+                // decimal point is not handled\n+                do\n+                {\n+                    c = *cursor++;\n+                } while (ascii_isdigit(c));\n+            }\n+        }\n+\n+        if (c == _XPLATSTR(\'D\')) numSecs += val * 24 * 3600; // days\n+        if (c == _XPLATSTR(\'H\')) numSecs += val * 3600;      // Hours\n+        if (c == _XPLATSTR(\'M\')) numSecs += val * 60;        // Minutes\n+        if (c == _XPLATSTR(\'S\') || c == _XPLATSTR(\'\\0\'))\n+        {\n+            numSecs += val; // seconds\n+            break;\n+        }\n+    }\n+\n+    return utility::seconds(numSecs);\n+}\n+\n+static const char c_allowed_chars[] = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"";\n+static const int chars_count = static_cast<int>(sizeof(c_allowed_chars) - 1);\n+\n+utility::string_t nonce_generator::generate()\n+{\n+    std::uniform_int_distribution<> distr(0, chars_count - 1);\n+    utility::string_t result;\n+    result.reserve(length());\n+    std::generate_n(std::back_inserter(result), length(), [&] {\n+        return static_cast<utility::char_t>(c_allowed_chars[distr(m_random)]);\n+    });\n+    return result;\n+}\n+\n+} // namespace utility'}, {'Name': 'deps/cpprestsdk/src/utilities/base64.cpp', 'Line Additions': 260, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,260 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+#include ""pch.h""\n+\n+using namespace web;\n+using namespace utility;\n+\n+std::vector<unsigned char> _from_base64(const utility::string_t& str);\n+utility::string_t _to_base64(const unsigned char* ptr, size_t size);\n+\n+std::vector<unsigned char> __cdecl conversions::from_base64(const utility::string_t& str) { return _from_base64(str); }\n+\n+utility::string_t __cdecl conversions::to_base64(const std::vector<unsigned char>& input)\n+{\n+    if (input.size() == 0)\n+    {\n+        // return empty string\n+        return utility::string_t();\n+    }\n+\n+    return _to_base64(&input[0], input.size());\n+}\n+\n+utility::string_t __cdecl conversions::to_base64(uint64_t input)\n+{\n+    return _to_base64(reinterpret_cast<const unsigned char*>(&input), sizeof(input));\n+}\n+\n+static const char* _base64_enctbl = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"";\n+const std::array<unsigned char, 128> _base64_dectbl = {\n+    {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n+     255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62,\n+     255, 255, 255, 63,  52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  255, 255, 255, 254, 255, 255, 255, 0,\n+     1,   2,   3,   4,   5,   6,   7,   8,   9,   10,  11,  12,  13,  14,  15,  16,  17,  18,  19,  20,  21,  22,\n+     23,  24,  25,  255, 255, 255, 255, 255, 255, 26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,\n+     39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  255, 255, 255, 255, 255}};\n+\n+struct _triple_byte\n+{\n+    unsigned char _1_1 : 2;\n+    unsigned char _0 : 6;\n+    unsigned char _2_1 : 4;\n+    unsigned char _1_2 : 4;\n+    unsigned char _3 : 6;\n+    unsigned char _2_2 : 2;\n+};\n+\n+struct _double_byte\n+{\n+    unsigned char _1_1 : 2;\n+    unsigned char _0 : 6;\n+    unsigned char _2_1 : 4;\n+    unsigned char _1_2 : 4;\n+};\n+\n+struct _single_byte\n+{\n+    unsigned char _1_1 : 2;\n+    unsigned char _0 : 6;\n+};\n+\n+//\n+// A note on the implementation of BASE64 encoding and decoding:\n+//\n+// This is a fairly basic and naive implementation; there is probably a lot of room for\n+// performance improvement, as well as for adding options such as support for URI-safe base64,\n+// ignoring CRLF, relaxed validation rules, etc. The decoder is currently pretty strict.\n+//\n+\n+#ifdef __GNUC__\n+// gcc is concerned about the bitfield uses in the code, something we simply need to ignore.\n+#pragma GCC diagnostic ignored ""-Wconversion""\n+#endif\n+std::vector<unsigned char> _from_base64(const utility::string_t& input)\n+{\n+    std::vector<unsigned char> result;\n+\n+    if (input.empty()) return result;\n+\n+    size_t padding = 0;\n+\n+    // Validation\n+    {\n+        auto size = input.size();\n+\n+        if ((size % 4) != 0)\n+        {\n+            throw std::runtime_error(""length of base64 string is not an even multiple of 4"");\n+        }\n+\n+        for (auto iter = input.begin(); iter != input.end(); ++iter, --size)\n+        {\n+            const size_t ch_sz = static_cast<size_t>(*iter);\n+            if (ch_sz >= _base64_dectbl.size() || _base64_dectbl[ch_sz] == 255)\n+            {\n+                throw std::runtime_error(""invalid character found in base64 string"");\n+            }\n+            if (_base64_dectbl[ch_sz] == 254)\n+            {\n+                padding++;\n+                // padding only at the end\n+                if (size > 2)\n+                {\n+                    throw std::runtime_error(""invalid padding character found in base64 string"");\n+                }\n+                if (size == 2)\n+                {\n+                    const size_t ch2_sz = static_cast<size_t>(*(iter + 1));\n+                    if (ch2_sz >= _base64_dectbl.size() || _base64_dectbl[ch2_sz] != 254)\n+                    {\n+                        throw std::runtime_error(""invalid padding character found in base64 string"");\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    auto size = input.size();\n+    const char_t* ptr = &input[0];\n+\n+    auto outsz = (size / 4) * 3;\n+    outsz -= padding;\n+\n+    result.resize(outsz);\n+\n+    size_t idx = 0;\n+    for (; size > 4; ++idx)\n+    {\n+        unsigned char target[3];\n+        memset(target, 0, sizeof(target));\n+        _triple_byte* record = reinterpret_cast<_triple_byte*>(target);\n+\n+        unsigned char val0 = _base64_dectbl[ptr[0]];\n+        unsigned char val1 = _base64_dectbl[ptr[1]];\n+        unsigned char val2 = _base64_dectbl[ptr[2]];\n+        unsigned char val3 = _base64_dectbl[ptr[3]];\n+\n+        record->_0 = val0;\n+        record->_1_1 = val1 >> 4;\n+        result[idx] = target[0];\n+\n+        record->_1_2 = val1 & 0xF;\n+        record->_2_1 = val2 >> 2;\n+        result[++idx] = target[1];\n+\n+        record->_2_2 = val2 & 0x3;\n+        record->_3 = val3 & 0x3F;\n+        result[++idx] = target[2];\n+\n+        ptr += 4;\n+        size -= 4;\n+    }\n+\n+    // Handle the last four bytes separately, to avoid having the conditional statements\n+    // in all the iterations (a performance issue).\n+\n+    {\n+        unsigned char target[3];\n+        memset(target, 0, sizeof(target));\n+        _triple_byte* record = reinterpret_cast<_triple_byte*>(target);\n+\n+        unsigned char val0 = _base64_dectbl[ptr[0]];\n+        unsigned char val1 = _base64_dectbl[ptr[1]];\n+        unsigned char val2 = _base64_dectbl[ptr[2]];\n+        unsigned char val3 = _base64_dectbl[ptr[3]];\n+\n+        record->_0 = val0;\n+        record->_1_1 = val1 >> 4;\n+        result[idx] = target[0];\n+\n+        record->_1_2 = val1 & 0xF;\n+        if (val2 != 254)\n+        {\n+            record->_2_1 = val2 >> 2;\n+            result[++idx] = target[1];\n+        }\n+        else\n+        {\n+            // There shouldn\'t be any information (ones) in the unused bits,\n+            if (record->_1_2 != 0)\n+            {\n+                throw std::runtime_error(""Invalid end of base64 string"");\n+            }\n+            return result;\n+        }\n+\n+        record->_2_2 = val2 & 0x3;\n+        if (val3 != 254)\n+        {\n+            record->_3 = val3 & 0x3F;\n+            result[++idx] = target[2];\n+        }\n+        else\n+        {\n+            // There shouldn\'t be any information (ones) in the unused bits.\n+            if (record->_2_2 != 0)\n+            {\n+                throw std::runtime_error(""Invalid end of base64 string"");\n+            }\n+            return result;\n+        }\n+    }\n+\n+    return result;\n+}\n+\n+utility::string_t _to_base64(const unsigned char* ptr, size_t size)\n+{\n+    utility::string_t result;\n+\n+    for (; size >= 3;)\n+    {\n+        const _triple_byte* record = reinterpret_cast<const _triple_byte*>(ptr);\n+        unsigned char idx0 = record->_0;\n+        unsigned char idx1 = (record->_1_1 << 4) | record->_1_2;\n+        unsigned char idx2 = (record->_2_1 << 2) | record->_2_2;\n+        unsigned char idx3 = record->_3;\n+        result.push_back(char_t(_base64_enctbl[idx0]));\n+        result.push_back(char_t(_base64_enctbl[idx1]));\n+        result.push_back(char_t(_base64_enctbl[idx2]));\n+        result.push_back(char_t(_base64_enctbl[idx3]));\n+        size -= 3;\n+        ptr += 3;\n+    }\n+    switch (size)\n+    {\n+        case 1:\n+        {\n+            const _single_byte* record = reinterpret_cast<const _single_byte*>(ptr);\n+            unsigned char idx0 = record->_0;\n+            unsigned char idx1 = (record->_1_1 << 4);\n+            result.push_back(char_t(_base64_enctbl[idx0]));\n+            result.push_back(char_t(_base64_enctbl[idx1]));\n+            result.push_back(\'=\');\n+            result.push_back(\'=\');\n+            break;\n+        }\n+        case 2:\n+        {\n+            const _double_byte* record = reinterpret_cast<const _double_byte*>(ptr);\n+            unsigned char idx0 = record->_0;\n+            unsigned char idx1 = (record->_1_1 << 4) | record->_1_2;\n+            unsigned char idx2 = (record->_2_1 << 2);\n+            result.push_back(char_t(_base64_enctbl[idx0]));\n+            result.push_back(char_t(_base64_enctbl[idx1]));\n+            result.push_back(char_t(_base64_enctbl[idx2]));\n+            result.push_back(\'=\');\n+            break;\n+        }\n+    }\n+    return result;\n+}'}, {'Name': 'deps/cpprestsdk/src/utilities/web_utilities.cpp', 'Line Additions': 157, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,157 @@\n+/***\n+ * Copyright (C) Microsoft. All rights reserved.\n+ * Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n+ *\n+ * =+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+\n+ *\n+ * Credential and proxy utilities.\n+ *\n+ * For the latest on this and related APIs, please see: https://github.com/Microsoft/cpprestsdk\n+ *\n+ * =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n+ ****/\n+\n+#include ""pch.h""\n+\n+#include <assert.h>\n+\n+#if defined(_WIN32) && !defined(__cplusplus_winrt)\n+#include <Wincrypt.h>\n+#endif\n+\n+#if defined(__cplusplus_winrt)\n+#include <robuffer.h>\n+#endif\n+\n+namespace web\n+{\n+namespace details\n+{\n+#if defined(_WIN32) && !defined(CPPREST_TARGET_XP)\n+#if defined(__cplusplus_winrt)\n+\n+// Helper function to zero out memory of an IBuffer.\n+void winrt_secure_zero_buffer(Windows::Storage::Streams::IBuffer ^ buffer)\n+{\n+    Microsoft::WRL::ComPtr<IInspectable> bufferInspectable(reinterpret_cast<IInspectable*>(buffer));\n+    Microsoft::WRL::ComPtr<Windows::Storage::Streams::IBufferByteAccess> bufferByteAccess;\n+    bufferInspectable.As(&bufferByteAccess);\n+\n+    // This shouldn\'t happen but if can\'t get access to the raw bytes for some reason\n+    // then we can\'t zero out.\n+    byte* rawBytes;\n+    if (bufferByteAccess->Buffer(&rawBytes) == S_OK)\n+    {\n+        SecureZeroMemory(rawBytes, buffer->Length);\n+    }\n+}\n+\n+winrt_encryption::winrt_encryption(const std::wstring& data)\n+{\n+    auto provider = ref new Windows::Security::Cryptography::DataProtection::DataProtectionProvider(\n+        ref new Platform::String(L""Local=user""));\n+\n+    // Create buffer containing plain text password.\n+    Platform::ArrayReference<unsigned char> arrayref(\n+        reinterpret_cast<unsigned char*>(const_cast<std::wstring::value_type*>(data.c_str())),\n+        static_cast<unsigned int>(data.size()) * sizeof(std::wstring::value_type));\n+    Windows::Storage::Streams::IBuffer ^ plaintext =\n+        Windows::Security::Cryptography::CryptographicBuffer::CreateFromByteArray(arrayref);\n+    m_buffer = pplx::create_task(provider->ProtectAsync(plaintext));\n+    m_buffer.then(\n+        [plaintext](pplx::task<Windows::Storage::Streams::IBuffer ^>) { winrt_secure_zero_buffer(plaintext); });\n+}\n+\n+plaintext_string winrt_encryption::decrypt() const\n+{\n+    // To fully guarantee asynchrony would require significant impact on existing code. This code path\n+    // is never run on a user\'s thread and is only done once when setting up a connection.\n+    auto encrypted = m_buffer.get();\n+    auto provider = ref new Windows::Security::Cryptography::DataProtection::DataProtectionProvider();\n+    auto plaintext = pplx::create_task(provider->UnprotectAsync(encrypted)).get();\n+\n+    // Get access to raw bytes in plain text buffer.\n+    Microsoft::WRL::ComPtr<IInspectable> bufferInspectable(reinterpret_cast<IInspectable*>(plaintext));\n+    Microsoft::WRL::ComPtr<Windows::Storage::Streams::IBufferByteAccess> bufferByteAccess;\n+    bufferInspectable.As(&bufferByteAccess);\n+    byte* rawPlaintext;\n+    const auto& result = bufferByteAccess->Buffer(&rawPlaintext);\n+    if (result != S_OK)\n+    {\n+        throw ::utility::details::create_system_error(result);\n+    }\n+\n+    // Construct string and zero out memory from plain text buffer.\n+    auto data = plaintext_string(\n+        new std::wstring(reinterpret_cast<const std::wstring::value_type*>(rawPlaintext), plaintext->Length / 2));\n+    SecureZeroMemory(rawPlaintext, plaintext->Length);\n+    return std::move(data);\n+}\n+\n+#else\n+\n+win32_encryption::win32_encryption(const std::wstring& data) : m_numCharacters(data.size())\n+{\n+    // Early return because CryptProtectMemory crashes with empty string\n+    if (m_numCharacters == 0)\n+    {\n+        return;\n+    }\n+\n+    if (data.size() > (std::numeric_limits<DWORD>::max)() / sizeof(wchar_t))\n+    {\n+        throw std::length_error(""Encryption string too long"");\n+    }\n+\n+    const auto dataSizeDword = static_cast<DWORD>(data.size() * sizeof(wchar_t));\n+\n+    // Round up dataSizeDword to be a multiple of CRYPTPROTECTMEMORY_BLOCK_SIZE\n+    static_assert(CRYPTPROTECTMEMORY_BLOCK_SIZE == 16, ""Power of 2 assumptions in this bit masking violated"");\n+    const auto mask = static_cast<DWORD>(CRYPTPROTECTMEMORY_BLOCK_SIZE - 1u);\n+    const auto dataNumBytes = (dataSizeDword & ~mask) + ((dataSizeDword & mask) != 0) * CRYPTPROTECTMEMORY_BLOCK_SIZE;\n+    assert((dataNumBytes % CRYPTPROTECTMEMORY_BLOCK_SIZE) == 0);\n+    assert(dataNumBytes >= dataSizeDword);\n+    m_buffer.resize(dataNumBytes);\n+    memcpy_s(m_buffer.data(), m_buffer.size(), data.c_str(), dataNumBytes);\n+    if (!CryptProtectMemory(m_buffer.data(), dataNumBytes, CRYPTPROTECTMEMORY_SAME_PROCESS))\n+    {\n+        throw ::utility::details::create_system_error(GetLastError());\n+    }\n+}\n+\n+win32_encryption::~win32_encryption() { SecureZeroMemory(m_buffer.data(), m_buffer.size()); }\n+\n+plaintext_string win32_encryption::decrypt() const\n+{\n+    // Copy the buffer and decrypt to avoid having to re-encrypt.\n+    auto result = plaintext_string(new std::wstring(reinterpret_cast<const std::wstring::value_type*>(m_buffer.data()),\n+                                                    m_buffer.size() / sizeof(wchar_t)));\n+    auto& data = *result;\n+    if (!m_buffer.empty())\n+    {\n+        if (!CryptUnprotectMemory(&data[0], static_cast<DWORD>(m_buffer.size()), CRYPTPROTECTMEMORY_SAME_PROCESS))\n+        {\n+            throw ::utility::details::create_system_error(GetLastError());\n+        }\n+\n+        assert(m_numCharacters <= m_buffer.size());\n+        SecureZeroMemory(&data[m_numCharacters], data.size() - m_numCharacters);\n+        data.erase(m_numCharacters);\n+    }\n+\n+    return result;\n+}\n+#endif\n+#endif\n+\n+void zero_memory_deleter::operator()(::utility::string_t* data) const\n+{\n+    CASABLANCA_UNREFERENCED_PARAMETER(data);\n+#if defined(_WIN32)\n+    SecureZeroMemory(&(*data)[0], data->size() * sizeof(::utility::string_t::value_type));\n+    delete data;\n+#endif\n+}\n+} // namespace details\n+\n+} // namespace web'}, {'Name': 'doc/coding/organization.md', 'Line Additions': 29, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,29 @@\n+# Code Organization\n+\n+## Rules\n+\n+- **Follow the pattern of what you already see in the code**\n+- Try to package new ideas/components into libraries that have nicely defined interfaces\n+- Package new ideas into classes or refactor existing ideas into a class as you extend\n+\n+## Code Overview\n+\n+General project organization:\n+\n+#### The [`build`](/build) folder\n+Contains the Azure pipeline CI build scripts.\n+\n+#### The [`deps`](/deps) folder\n+Contains other projects, that PowerToys uses as dependency.\n+\n+#### The [`doc`](/doc) folder\n+Documentation for the project, including a [coding guide](/doc/coding) and [design docs](/doc/specs).\n+\n+#### The [`installer`](/installer) folder\n+Contains the source code of the PowerToys installer.\n+\n+#### The [`src`](/src) folder\n+Contains the source code of the PowerToys runner and of all of the PowerToys modules. **This is where the most of the magic happens.**\n+\n+#### The [`tools`](/tools) folder\n+Various tools used by PowerToys. Includes the Visual Studio 2019 project template for new PowerToys.'}, {'Name': 'doc/coding/style.md', 'Line Additions': 5, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,5 @@\n+# Coding Style\n+\n+## Philosophy\n+1. If it's inserting something into the existing classes/functions, try to follow the existing style as closely as possible.\n+1. If it's brand new code or refactoring a complete class or area of the code, please follow as Modern C++ of a style as you can and reference the [C++ Core Guidelines](https://github.com/isocpp/CppCoreGuidelines) as much as you possibly can.""}, {'Name': 'doc/images/FZTutorial.jpg', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'doc/images/Logo.jpg', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'doc/images/MTNDWidget.jpg', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'doc/images/WindowsKeyShortcutGuide.jpg', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'doc/images/example_powertoy/settings.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'doc/images/runner/tray.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'doc/images/shortcut_guide/settings.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'doc/images/shortcut_guide/usage.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'doc/planning/FancyZonesBacklog.md', 'Line Additions': 27, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,27 @@\n+# Backlog\n+\n+This file captures the prioritized list of issues the FancyZones team will tackle\n+\n+## On deck\n+Implement multi-mon editor support [331](https://github.com/JaneaSystems/powertoys/issues/331)  \n+Add telemetry to new editor [332](https://github.com/JaneaSystems/powertoys/issues/332)  \n+\n+## Backlog\n+Add tests to the new editor [333](https://github.com/JaneaSystems/powertoys/issues/333)  \n+Hitting Esc while dragging should cancel the drag and not move the window into a zone [140](https://github.com/JaneaSystems/powertoys/issues/140)  \n+Flash Zones is wayyyy too slow with multiple large monitors [137](https://github.com/JaneaSystems/powertoys/issues/137)  \n+Cycle through windows in a Zone [145](https://github.com/JaneaSystems/powertoys/issues/145)  \n+Minimize/restore windows in a zone as a group [144](https://github.com/JaneaSystems/powertoys/issues/144)  \n+FancyZones should support custom layouts for different ""environments"" [149](https://github.com/JaneaSystems/powertoys/issues/149)  \n+Win+arrow works between monitors [130](https://github.com/JaneaSystems/powertoys/issues/130)  \n+Win+arrow is directional based on zone rect [131](https://github.com/JaneaSystems/powertoys/issues/131)  \n+Dragging a zoned window should restore size to a checkpointed size instead of current rect [136](https://github.com/JaneaSystems/powertoys/issues/136)  \n+FancyZones should merge with MTND and include zone moves in the pop-up [150](https://github.com/JaneaSystems/powertoys/issues/150)  \n+Drag to edge of screen automatically switches virtual desktops [150](https://github.com/JaneaSystems/powertoys/issues/138)  \n+Different color schemes [134](https://github.com/JaneaSystems/powertoys/issues/134)  \n+Ensure you can easily see zone while dragging [131](https://github.com/JaneaSystems/powertoys/issues/131)  \n+Visual updates for Win+Arrow [141](https://github.com/JaneaSystems/powertoys/issues/141)  \n+Add a CLI for FancyZones [152](https://github.com/JaneaSystems/powertoys/issues/152)  \n+Add ""magnetic dragging and resizing"" mode to FancyZones [153](https://github.com/JaneaSystems/powertoys/issues/153)  \n+Create layout from current windows [127](https://github.com/JaneaSystems/powertoys/issues/127)  \n+Zone sets that have a dynamic number of zones [128](https://github.com/JaneaSystems/powertoys/issues/128)  '}, {'Name': 'doc/planning/PowerToysBacklog.md', 'Line Additions': 25, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,25 @@\n+# PowerToys Backlog\n+\n+The list below is the set of utilities we're considering and the rough priority order of the utilities.  If you have feedback on the order of the utilities, please use the issues for each one to provide that feedback.  Note that new features for existing utilities (dock / undock zone layouts for FancyZones) are tracked in teh abcklog for each utility. \n+\n+## On deck\n+\n+* Maximize to new desktop widget - The MTND widget shows a pop-up button when a user hovers over the maximize / restore button on any window.  Clicking it creates a new desktop, sends the app to that desktop and maximizes the app on the new desktop.\n+* [Process terminate tool](https://github.com/indierawk2k2/PowerToys-1/blob/master/specs/Terminate%20Spec.md)\n+* [Batch file renamer](https://github.com/indierawk2k2/PowerToys-1/blob/master/specs/File%20Classification%20Spec.md)\n+* [Animated gif screen recorder](https://github.com/indierawk2k2/PowerToys-1/blob/master/specs/GIF%20Maker%20Spec.md)\n+\n+## Backlog\n+\n+HPlease use issues and votes to guide the project to suggest new ideas and help us prioritize the list below.\n+\n+1. [Keyboard shortcut manager](https://github.com/microsoft/PowerToys/issues/6)\n+2. [Win+R replacement](https://github.com/microsoft/PowerToys/issues/44)\n+3. Resrouce use tool (maps between a resource like a file handle to an app and vice-versa)\n+4. Performance analysis over time to track which processes have been slowing down your machine\n+5. Better Alt+Tab including browser tab integration and search for running apps\n+6. [Battery tracker](https://github.com/microsoft/PowerToys/issues/7)\n+7. [Quick resolution swaps in taskbar](https://github.com/microsoft/PowerToys/issues/27)\n+8. Mouse events without focus\n+9. Cmd (or PS or Bash) from here\n+10. Contents menu file browsing""}, {'Name': 'doc/planning/ShortcutGuideBacklog.md', 'Line Additions': 13, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,13 @@\n+# Backlog\n+\n+This file captures the prioritized list of issues for the Windows key shortcut guide\n+\n+## On deck\n+Windows key shortcut guide animation performance is choppy [335](https://github.com/JaneaSystems/powertoys/issues/335)  \n+Shortcut guide strings should be localized [336](https://github.com/JaneaSystems/powertoys/issues/336)  \n+\n+## Backlog\n+Add Win+Shift+S to the WKSG (screenshot tool) [151](https://github.com/JaneaSystems/powertoys/issues/151)  \n+Replace SVG with software-generated content. [90](https://github.com/JaneaSystems/powertoys/issues/90)  \n+Shortcut sorting [21](https://github.com/JaneaSystems/powertoys/issues/21)  \n+Make shortcut descriptors clickable [6](https://github.com/JaneaSystems/powertoys/issues/6)  '}, {'Name': 'doc/specs/PowerToys-fancyzones.md', 'Line Additions': 215, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,215 @@\n+# FancyZones\n+\n+## FancyZones\n+FancyZones is the base class that runs the show. It uses hooks to monitor for windows entering and exiting the move/size loop and to listen for key presses for hotkey interception. For every connected display, it creates a ZoneWindow which is used to display the active ZoneSet per monitor for use when editing the layout or displaying the drop targets. A ZoneSet is composed of one or more Zones which are the locations where windows can be easily positioned.\n+\n+### SetWinEventHook\n+The main driving force behind FancyZones is the accessibility hook used to know when a window enters the move/size loop. It listens for EVENT_SYSTEM_MOVESIZESTART, EVENT_SYSTEM_MOVESIZEEND, and EVENT_OBJECT_LOCATIONCHANGE. For each of these three events, it forwards on to the ZoneWindow associated with the monitor that the window being dragged is currently on.\n+\n+### Keyboard Hook\n+A low-level keyboard hook is installed in order to, optionally, intercept Window+Arrow hotkeys. Traditionally, Win+Left/Right arrow will move a window between Windows Snap regions. This hook allows FancyZones to use Win+Left/Right arrow to move windows between Zones.\n+The hook also allows using 0-9 to change the active ZoneSet during a drag operation. \n+\n+### Display Changes\n+During initial standup, FancyZones creates a ZoneWindow for each connected monitor. When it receives a WM_DISPLAYCHANGE, it updates the available ZoneWindows to reflect the state of the system (eg add a new ZoneWindow for newly connected monitor, delete ZoneWindow for disconnected monitor, etc)\n+\n+### Interface\n+```\n+interface IFancyZones : public IUnknown\n+{\n+    // Returns the main application window\n+    IFACEMETHOD_(HWND, GetWindow)() = 0;\n+\n+    // Returns the global HINSTANCE for the process\n+    IFACEMETHOD_(HINSTANCE, GetHInstance)() = 0;\n+\n+    // Returns the global Settings object used to look up individual settings throughout the product\n+    IFACEMETHOD_(Settings, GetSettings)() = 0;\n+\n+    // Used in WinMain to initialize FancyZones and enter the message loop\n+    IFACEMETHOD_(void, Run)() = 0;\n+\n+    // Toggles the visibility of all ZoneWindows\n+    IFACEMETHOD_(void, ToggleZoneViewers)() = 0;\n+\n+    // Shows a single ZoneWindow in editor mode on the provided monitor\n+    IFACEMETHOD_(void, ShowZoneEditorForMonitor)(_In_ HMONITOR monitor) = 0;\n+\n+    // Returns true if we are currently detecting a movesize loop\n+    IFACEMETHOD_(bool, InMoveSize)() = 0;\n+\n+    // Called by the event hook in response to EVENT_SYSTEM_MOVESIZESTART\n+    IFACEMETHOD(MoveSizeEnter)(_In_ HWND window, _In_ HMONITOR monitor, POINT ptScreen) = 0;\n+\n+    // Called by the event hook in response to EVENT_SYSTEM_MOVESIZEEND\n+    IFACEMETHOD(MoveSizeExit)(_In_ HWND window, POINT ptScreen) = 0;\n+\n+    // Called by the event hook in response to EVENT_OBJECT_LOCATIONCHANGE\n+    IFACEMETHOD(MoveSizeUpdate)(_In_ HMONITOR monitor, POINT ptScreen) = 0;\n+\n+    // Called during startup or on WM_DISPLAYCHANGE to add a ZoneWindow to the collection\n+    // There will be one ZoneWindow per connected monitor\n+    IFACEMETHOD(AddZoneWindow)(_In_ IZoneWindow* zoneWindow, _In_ HMONITOR monitor) = 0;\n+\n+    // Called in response to WM_DISPLAYCHANGE from the main application window\n+    IFACEMETHOD_(void, OnDisplayChange)(DisplayChangeType changeType) = 0;\n+\n+    // Used to move the specified HWND into Zone\n+    // The ZoneSet used is found by looking up the monitor that window is currently on\n+    // This gets called to keep windows in their current zones after a WM_DISPLAYCHANGE\n+    IFACEMETHOD_(void, MoveWindowIntoZoneByIndex)(_In_ HWND window, int index) = 0;\n+\n+    // Used to filter out windows that the hook should not be processing\n+    // Currently checks if the window's GWL_STYLE has WS_MAXIMIZEBOX\n+    IFACEMETHOD_(bool, IsInterestingWindow)(_In_ HWND window) = 0;\n+\n+    // Called byt the event hook in response to EVENT_OBJECT_NAMECHANGE on the Desktop window\n+    // The accessible name of the desktop window changes when the current virtual desktop changes\n+    IFACEMETHOD_(void, VirtualDesktopChanged)() = 0;\n+\n+    // Returns the GUID of the current active virtual desktop\n+    IFACEMETHOD_(GUID, GetCurrentVirtualDesktopId)() = 0;\n+\n+    // Called by the LL keyboard hook\n+    // Used to override snap hotkeys and to change the active ZoneSet during a drag\n+    IFACEMETHOD_(bool, OnKeyDown)(LPARAM lparam) = 0;\n+\n+    // Keep windows positioned inside their zones when the active ZoneSet changes\n+    IFACEMETHOD_(void, MoveWindowsOnActiveZoneSetChange)() = 0;\n+};\n+```\n+\n+## ZoneWindow\n+ZoneWindow is used to display the Zones a user can drop a window in during a drag operation, flash the Zones when the ZoneSet changes, and draw the Zone Editor UI when in edit mode. Basically, when a ZoneSet needs to be visualized, ZoneWindow does it.\n+\n+### Interface\n+```\n+interface IZoneWindow : public IUnknown\n+{\n+    // Shows the ZoneWindow\n+    // If activate is true, set foreground to the window otherwise just show\n+    IFACEMETHOD(ShowZoneWindow)(bool activate) = 0;\n+\n+    // Hide the ZoneWindow\n+    IFACEMETHOD(HideZoneWindow)() = 0;\n+    \n+    // Called when the drag enters the monitor this ZoneWindow is assigned to\n+    IFACEMETHOD(MoveSizeEnter)(_In_ HWND window, POINT ptScreen, DragMode dragMode) = 0;\n+\n+    // Called when the drag exits the monitor\n+    IFACEMETHOD(MoveSizeExit)(_In_ HWND window, POINT ptScreen) = 0;\n+\n+    // Called when the drag updates position on this monitor\n+    IFACEMETHOD(MoveSizeUpdate)(POINT ptScreen, DragMode dragMode) = 0;\n+\n+    // Called when a drag ends and the window is not dropped in a Zone\n+    IFACEMETHOD(MoveSizeCancel)() = 0;\n+\n+    // Returns the DragMode of the current drag operation\n+    // DragMode allows for overriding drag behavior via settings or via hotkey\n+    IFACEMETHOD_(DragMode, GetDragMode)() = 0;\n+\n+    // Part of the chain to move a window into a specific Zone\n+    IFACEMETHOD_(void, MoveWindowIntoZoneByIndex)(_In_ HWND window, int index) = 0;\n+    \n+    // Used to cycle a window between zones via the hijacked snap hotkeys\n+    IFACEMETHOD_(void, MoveWindowIntoZoneByDirection)(_In_ HWND window, DWORD vkCode) = 0;\n+\n+    // Called in response to WM_DISPLAYCHANGE\n+    // Allows cleanup, if necessary, since ZoneWindow will be destroyed shortly thereafter\n+    IFACEMETHOD_(void, OnDisplayChange)(DisplayChangeType type) = 0;\n+\n+    // Allows changing the active ZoneSet via key press either during a drag or while the ZoneWindow is in foreground\n+    IFACEMETHOD_(void, CycleActiveZoneSet)(DWORD vkCode) = 0;\n+};\n+```\n+\n+## ZoneSet\n+Collection of one or more Zones. Only one ZoneSet is active at a time per monitor.\n+\n+### Interface\n+```\n+interface IZoneSet : public IUnknown\n+{\n+    // Gets the unique ID used to identify this ZoneSet\n+    IFACEMETHOD_(GUID, GetId)() = 0;\n+\n+    // Adds a Zone to the collection\n+    IFACEMETHOD(AddZone)(_In_ Microsoft::WRL::ComPtr<IZone> zone, bool front) = 0;\n+\n+    // Removes a Zone from the collection\n+    IFACEMETHOD(RemoveZone)(_In_ Microsoft::WRL::ComPtr<IZone> zone) = 0;\n+\n+    // Returns the topmost Zone at the given point\n+    IFACEMETHOD_(Microsoft::WRL::ComPtr<IZone>, ZoneFromPoint)(POINT pt) = 0;\n+\n+    // Returns a Zone that the window is in\n+    // Will return nullptr if the window is not in a Zone\n+    IFACEMETHOD_(Microsoft::WRL::ComPtr<IZone>, ZoneFromWindow)(_In_ HWND window) = 0;\n+\n+    // Gets all the Zones\n+    IFACEMETHOD_(std::vector<Microsoft::WRL::ComPtr<IZone>>, GetZones)() = 0;\n+    \n+    // ZoneSetLayout\n+    // * Grid - Pregenerated layout (2x2, 3x3, etc)\n+    // * Row - Pregenerated layout in a single row\n+    // * Focus - Pregenerated layout with a central focus Zone and fanned peripheral Zones\n+    // * Custom - User generated Zone\n+    IFACEMETHOD_(ZoneSetLayout, GetLayout)() = 0;\n+\n+    // The amount of default padding between Zones in a generated layout\n+    IFACEMETHOD_(int, GetInnerPadding)() = 0;\n+\n+    // Makes a copy of the IZoneSet and marks it as ZoneSetLayout::Custom\n+    IFACEMETHOD_(Microsoft::WRL::ComPtr<IZoneSet>, MakeCustomClone)() = 0;\n+\n+    // Persists ZoneSet data to the registry\n+    IFACEMETHOD_(void, Save)() = 0;\n+\n+    // Moves a Zone to the front of the collection\n+    IFACEMETHOD_(void, MoveZoneToFront)(_In_ Microsoft::WRL::ComPtr<IZone> zone) = 0;\n+\n+    // Moves a Zone to the back of the collection\n+    IFACEMETHOD_(void, MoveZoneToBack)(_In_ Microsoft::WRL::ComPtr<IZone> zone) = 0;\n+    \n+    // Part of the chain to move a window into a specific Zone\n+    IFACEMETHOD_(void, MoveWindowIntoZoneByIndex)(_In_ HWND window, _In_ HWND zoneWindow, int index) = 0;\n+\n+    // Part of the chain to move a window into a specific Zone\n+    IFACEMETHOD_(void, MoveWindowIntoZoneByDirection)(_In_ HWND window, _In_ HWND zoneWindow, DWORD vkCode) = 0;\n+\n+    // Called when a drag ends or leaves the monitor this ZoneWindow is on\n+    // This will remove the window from its currently assigned Zone and assign it\n+    // to a different Zone based on the current cursor position\n+    IFACEMETHOD_(void, MoveSizeExit)(_In_ HWND window, _In_ HWND zoneWindow, _In_ POINT ptClient) = 0;\n+};\n+```\n+\n+## Zone\n+Basically a RECT and a map of HWND->RECT to keep track of where windows can be placed and which windows are currently in the Zone.\n+\n+### Interface\n+```\n+interface IZone : public IUnknown\n+{\n+    // Returns the RECT that this Zone represents\n+    IFACEMETHOD_(RECT, GetZoneRect)() = 0;\n+\n+    // Returns true if the specified window is in this Zone's collection\n+    IFACEMETHOD_(bool, ContainsWindow)(_In_ HWND window) = 0;\n+\n+    // Adds the window the collection\n+    IFACEMETHOD_(void, AddWindowToZone)(_In_ HWND window, _In_ HWND zoneWindow, bool stampZone) = 0;\n+\n+    // Removes the window from the collection\n+    IFACEMETHOD_(void, RemoveWindowFromZone)(_In_ HWND window, bool restoreSize) = 0;\n+\n+    // Sets an id for this Zone\n+    // The id will be unique per ZoneSet\n+    IFACEMETHOD_(void, SetId)(size_t id) = 0;\n+\n+    // Returns the id given to this Zone\n+    IFACEMETHOD_(size_t, GetId)() = 0;\n+};\n+```\n+""}, {'Name': 'doc/specs/PowerToys-settings.md', 'Line Additions': 57, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,57 @@\n+# Power Toys Settings Framework and Core Infrastructure\n+The Power  Toys app will have a settings framework that each Power Toy can plug into.  The settings framework has a UI frame that creates a page for each Power Toy.  The UI frame should use the Navigation View “hamburger” UI.  Each Power Toy will represent its settings as a json blob as described below.  \n+\n+Each Power Toy will line in a separate .dll and be run in a separate thread by the main Power Toys process.  The main Power Toys .exe will expose key global Windows event handlers so that there is only one system-level hook for these critical events.  The current set of Power Toys require these global events.  This list will be amended as new Power Toys are authored that require additional global hooks.\n+* SetWinEventHook - FancyZones requires knowledge of when a window enters the move/size loop. It listens for EVENT_SYSTEM_MOVESIZESTART, EVENT_SYSTEM_MOVESIZEEND, and EVENT_OBJECT_LOCATIONCHANGE messages from SetWinEventHook.\n+* Low-level keyboard hook - The Windows key Shortcut Guide and FancyZones both require low-level keybord hooks to intercept keyboard input and get a first chance to process it.  Other Power Toys will require this as well\n+\n+* Each Power Toy must listen for 4 events:\n+    * Enable – When invoked, enables the Power Toys’ functionality and performs any necessary initialization.  Invoked with a JSON string from the persisted settings store\n+    * Disable – When invoked, disables the Power Toys’ functionality and performs any clean-up to suspend all resource use\n+    * OutputSettings – Return a json serialized blob of the settings for the Power Toy\n+    * InputSettings – Invoked with a JSON string with updated settings from the UI which is then deserialized and the state is applied.  If the settings cannot be applied by the Power Toy, the PT must return an error and an error string for the end user\n+* Each Power Toy may optionally provide one or more custom configuration UIs that can be invoked from its settings page\n+    * Each custom UI is specified as a JSON string in the settings property bag\n+    * The Power Toy must provide a named method that returns a serialized JSON settings string for the settings framework to call\n+    * The method should launch UI to edit the settings but the UI shown must be asynchronous and not block the setting UI\n+* The Power Toys main .exe will provide a method called InvokeSettingsUI that will show the settings dialog for the calling Power Toy.   \n+* Settings will be serialized by the settings framework and will be read at launch of the Power Toys framework and each Power Toy’s settings will be passed into the PT’s Enable method\n+* Settings will be serialized on a per-user basis\n+* The Settings JSON format will be versioned nad each payload must specify it's version attribute.  The initial version is 1.0\n+ \n+## Power Toys Settings Object\n+The settings JSON object for each Power Toy should provide:\n+* Title string\n+* Icon\n+* Logo Image\n+* Credits string\n+* Credits link\n+* Settings property bag.  Each item in the property bag has two items:\n+   * String: display name\n+   * String: property / editor type\n+* Version number: Currently only 1.0 is supported\n+\n+Property Bag of settings in priority order (type->editor)\n+* Bool->slide switch\n+* Int->free text box\n+* String->free text box\n+* Int ->Up/Down spinner\n+* Color-> Color picker\n+* Image->File picker, preview area, drag and drop\n+* Cursor->file picker and drop down, possibly an image\n+* Property Bag JSON string->Button to launch a custom editor from the Power Toy\n+* Method name to invoke.  The method will return a serialized JSON string with the updated custom editor settings\n+* String to display on the button\n+* Percentage->Slider\n+* Time->Time picker\n+* Date->Date picker\n+* IP address->masked text box\n+ \n+## PowerToys Main Settings Page\n+* Need to get Nick to help with the settings UI design (see attached for a whiteboard sketch)\n+* Need to have a settings page for overall PowerToys which will include the following\n+    * Check for updates\n+    * Startup at launch\n+    * Enable / disable for each utility.  \n+        * This invokes the Enable and Disable events for the PowerToy and suspends all resource use including CPU, GPU, Networking, Disk I/O and memory commit\n+* The settings UI should have an “Apply” button which will push the settings object to ""}, {'Name': 'doc/specs/Shared-hooks.md', 'Line Additions': 85, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,85 @@\n+# Shared hooks\r\n+\r\n+To minimize the performance impact on the machine only `runner` installs global hooks, passing the events to registered callbacks in each PowerToy module.\r\n+\r\n+When a PowerToy module is loaded, the `runner` calls the [`get_events()`](/src/modules/interface/powertoy_module_interface.h#L40) method to get a NULL-terminated array of NULL-terminated strings with the names of the events that the PowerToy wants to subscribe to. A `const wchar_t*` string is provided for each of the event names.\r\n+\r\n+Events are signalled by the `runner` calling the [`signal_event(name, data)`](/src/modules/interface/powertoy_module_interface.h#L53) method of the PowerToy module. The `name` parameter contains the NULL-terminated name of the event. The `data` parameter and the method return value are specific for each event.\r\n+\r\n+Currently supported hooks:\r\n+ * `""ll_keyboard""` - [Low Level Keyboard Hook](#low-level-keyboard-hook)\r\n+ * `""win_hook_event""` - [Windows Event Hook](#windows-event-hook)\r\n+\r\n+## Low Level Keyboard Hook\r\n+\r\n+This event is signaled whenever the user presses or releases a key on the keyboard. To subscribe to this event, add `""ll_keyboard""` to the table returned by the `get_events()` method.\r\n+\r\n+The PowerToys runner installs low-level keyboard hook using `SetWindowsHookEx(WH_KEYBOARD_LL, ...)`. See [this MSDN page](https://docs.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ms644985(v%3Dvs.85)) for details.\r\n+\r\n+When a keyboard event is signaled and `ncCode` equals `HC_ACTION`, the `wParam` and `lParam` event parameters are passed to all subscribed clients in the [`LowlevelKeyboardEvent`](/src/modules/interface/lowlevel_keyboard_event_data.h#L38-L41) struct.\r\n+\r\n+The `intptr_t data` event argument is a pointer to the `LowlevelKeyboardEvent` struct.\r\n+\r\n+A non-zero return value from any of the subscribed PowerToys will cause the runner hook proc to return 1, thus swallowing the keyboard event.\r\n+\r\n+Example usage, that makes Windows ignore the L key:\r\n+\r\n+```c++\r\n+virtual const wchar_t** get_events() override {\r\n+  static const wchar_t* events[2] = { ll_keyboard,\r\n+                                      nullptr };\r\n+  return events;\r\n+}\r\n+\r\n+virtual intptr_t signal_event(const wchar_t* name, intptr_t data) override {\r\n+  if (wcscmp(name, ll_keyboard) == 0) {\r\n+    auto& event = *(reinterpret_cast<LowlevelKeyboardEvent*>(data));\r\n+    // The L key has vkCode of 0x4C, see:\r\n+    // https://docs.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes\r\n+    if (event.wParam == WM_KEYDOWN && event.lParam->vkCode == 0x4C) {\r\n+      return 1;\r\n+    } else {\r\n+      return 0;\r\n+    }\r\n+  } else {\r\n+    return 0;\r\n+  }\r\n+}\r\n+```\r\n+\r\n+## Windows Event Hook\r\n+\r\n+This event is signaled for [a range of events](https://docs.microsoft.com/pl-pl/windows/win32/winauto/event-constants). To subscribe to this event, add `""win_hook_event""` to the table returned by the `get_events()` method. See [this MSDN doc](https://docs.microsoft.com/pl-pl/windows/win32/api/winuser/nf-winuser-setwineventhook) for details.\r\n+  \r\n+The `intptr_t data` event argument is a pointer to the [`WinHookEvent`](/src/modules/interface/win_hook_event_data.h#L43-L50) struct.\r\n+\r\n+The return value of the event handler is ignored.\r\n+\r\n+Example usage, that detects a window being resized:\r\n+\r\n+```c++\r\n+virtual const wchar_t** get_events() override {\r\n+  static const wchar_t* events[2] = { win_hook_event,\r\n+                                      nullptr };\r\n+  return events;\r\n+}\r\n+\r\n+virtual intptr_t signal_event(const wchar_t* name, intptr_t data) override {\r\n+  if (wcscmp(name, win_hook_event) == 0) {\r\n+    auto& event = *(reinterpret_cast<WinHookEvent*>(data));\r\n+    switch (event.event) {\r\n+    case EVENT_SYSTEM_MOVESIZESTART:\r\n+      size_start(event.hwnd);\r\n+      break;\r\n+    case EVENT_SYSTEM_MOVESIZEEND:\r\n+      size_end(event.hwnd);\r\n+      break;\r\n+    default:\r\n+      break;\r\n+    }\r\n+  }\r\n+  return 0;\r\n+}\r\n+```\r\n+\r\n+Taking too long to process the events has negative impact on the whole system performance. To address this, the events are signaled from a different thread, not from the event hook callback itself.\r'}, {'Name': 'installer/PowerToysSetup.sln', 'Line Additions': 31, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,31 @@\n+\ufeff\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio Version 16\n+VisualStudioVersion = 16.0.29215.179\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(""{930C7802-8A8C-48F9-8165-68863BCCD9DD}"") = ""PowerToysSetup"", ""PowerToysSetup\\PowerToysSetup.wixproj"", ""{022A9D30-7C4F-416D-A9DF-5FF2661CC0AD}""\n+EndProject\n+Project(""{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}"") = ""PowerToysSetupCustomActions"", ""PowerToysSetupCustomActions\\PowerToysSetupCustomActions.vcxproj"", ""{32F3882B-F2D6-4586-B5ED-11E39E522BD3}""\n+EndProject\n+Global\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n+\t\tDebug|x64 = Debug|x64\n+\t\tRelease|x64 = Release|x64\n+\tEndGlobalSection\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n+\t\t{022A9D30-7C4F-416D-A9DF-5FF2661CC0AD}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{022A9D30-7C4F-416D-A9DF-5FF2661CC0AD}.Debug|x64.Build.0 = Debug|x64\n+\t\t{022A9D30-7C4F-416D-A9DF-5FF2661CC0AD}.Release|x64.ActiveCfg = Release|x64\n+\t\t{022A9D30-7C4F-416D-A9DF-5FF2661CC0AD}.Release|x64.Build.0 = Release|x64\n+\t\t{32F3882B-F2D6-4586-B5ED-11E39E522BD3}.Debug|x64.ActiveCfg = Debug|x64\n+\t\t{32F3882B-F2D6-4586-B5ED-11E39E522BD3}.Debug|x64.Build.0 = Debug|x64\n+\t\t{32F3882B-F2D6-4586-B5ED-11E39E522BD3}.Release|x64.ActiveCfg = Release|x64\n+\t\t{32F3882B-F2D6-4586-B5ED-11E39E522BD3}.Release|x64.Build.0 = Release|x64\n+\tEndGlobalSection\n+\tGlobalSection(SolutionProperties) = preSolution\n+\t\tHideSolutionNode = FALSE\n+\tEndGlobalSection\n+\tGlobalSection(ExtensibilityGlobals) = postSolution\n+\t\tSolutionGuid = {B7A3DA30-D443-40FF-AC51-988AD41E3962}\n+\tEndGlobalSection\n+EndGlobal'}, {'Name': 'installer/PowerToysSetup/Bitmaps/banner.bmp', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'installer/PowerToysSetup/Bitmaps/dialog.bmp', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'installer/PowerToysSetup/CustomDialogs/PTInstallDirDlg.wxs', 'Line Additions': 30, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,30 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the Microsoft Reciprocal License. See LICENSE.TXT file in the project root for full license information. -->\n+\n+\n+<Wix xmlns=""http://schemas.microsoft.com/wix/2006/wi"">\n+    <Fragment>\n+        <UI>\n+            <Dialog Id=""PTInstallDirDlg"" Width=""370"" Height=""270"" Title=""!(loc.InstallDirDlg_Title)"">\n+                <Control Id=""Next"" Type=""PushButton"" X=""236"" Y=""243"" Width=""56"" Height=""17"" Default=""yes"" Text=""!(loc.WixUINext)"" />\n+                <Control Id=""Back"" Type=""PushButton"" X=""180"" Y=""243"" Width=""56"" Height=""17"" Text=""!(loc.WixUIBack)"" />\n+                <Control Id=""Cancel"" Type=""PushButton"" X=""304"" Y=""243"" Width=""56"" Height=""17"" Cancel=""yes"" Text=""!(loc.WixUICancel)"">\n+                    <Publish Event=""SpawnDialog"" Value=""CancelDlg"">1</Publish>\n+                </Control>\n+\n+                <Control Id=""Description"" Type=""Text"" X=""25"" Y=""23"" Width=""280"" Height=""15"" Transparent=""yes"" NoPrefix=""yes"" Text=""!(loc.InstallDirDlgDescription)"" />\n+                <Control Id=""Title"" Type=""Text"" X=""15"" Y=""6"" Width=""200"" Height=""15"" Transparent=""yes"" NoPrefix=""yes"" Text=""!(loc.InstallDirDlgTitle)"" />\n+                <Control Id=""BannerBitmap"" Type=""Bitmap"" X=""0"" Y=""0"" Width=""370"" Height=""44"" TabSkip=""no"" Text=""!(loc.InstallDirDlgBannerBitmap)"" />\n+                <Control Id=""BannerLine"" Type=""Line"" X=""0"" Y=""44"" Width=""370"" Height=""0"" />\n+                <Control Id=""BottomLine"" Type=""Line"" X=""0"" Y=""234"" Width=""370"" Height=""0"" />\n+\n+                <Control Id=""FolderLabel"" Type=""Text"" X=""20"" Y=""60"" Width=""290"" Height=""30"" NoPrefix=""yes"" Text=""!(loc.InstallDirDlgFolderLabel)"" />\n+                <Control Id=""Folder"" Type=""PathEdit"" X=""20"" Y=""100"" Width=""320"" Height=""18"" Property=""WIXUI_INSTALLDIR"" Indirect=""yes"" />\n+                <Control Id=""ChangeFolder"" Type=""PushButton"" X=""20"" Y=""120"" Width=""56"" Height=""17"" Text=""!(loc.InstallDirDlgChange)"" />\n+                <Control Id=""StartMenuShortcutCheckBox"" Type=""CheckBox"" X=""20"" Y=""160"" Width=""290"" Height=""17"" Property=""INSTALLSTARTMENUSHORTCUT"" CheckBoxValue=""1"" Text=""Create a shortcut for [ProductName] in the start menu."" />\n+                <Control Id=""DesktopShortcutCheckBox"" Type=""CheckBox"" X=""20"" Y=""180"" Width=""290"" Height=""17"" Property=""INSTALLDESKTOPSHORTCUT"" CheckBoxValue=""1"" Text=""Create a shortcut for [ProductName] in the desktop."" />\n+                <Control Id=""ScheduledTaskCheckBox"" Type=""CheckBox"" X=""20"" Y=""200"" Width=""330"" Height=""17"" Property=""CREATESCHEDULEDTASK"" CheckBoxValue=""1"" Text=""Automatically start [ProductName] at logon."" />\n+            </Dialog>\n+        </UI>\n+    </Fragment>\n+</Wix>'}, {'Name': 'installer/PowerToysSetup/CustomDialogs/WixUI_PTInstallDir.wxs', 'Line Additions': 81, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,81 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<!-- Copyright (c) .NET Foundation and contributors. All rights reserved. Licensed under the Microsoft Reciprocal License. See LICENSE.TXT file in the project root for full license information. -->\n+\n+\n+\n+<!--\n+First-time install dialog sequence:\n+ - WixUI_WelcomeDlg\n+ - WixUI_LicenseAgreementDlg\n+ - WixUI_PTInstallDirDlg\n+ - WixUI_VerifyReadyDlg\n+ - WixUI_DiskCostDlg\n+\n+Maintenance dialog sequence:\n+ - WixUI_MaintenanceWelcomeDlg\n+ - WixUI_MaintenanceTypeDlg\n+ - WixUI_PTInstallDirDlg\n+ - WixUI_VerifyReadyDlg\n+\n+Patch dialog sequence:\n+ - WixUI_WelcomeDlg\n+ - WixUI_VerifyReadyDlg\n+\n+-->\n+\n+<Wix xmlns=""http://schemas.microsoft.com/wix/2006/wi"">\n+    <Fragment>\n+        <UI Id=""WixUI_PTInstallDir"">\n+            <TextStyle Id=""WixUI_Font_Normal"" FaceName=""Tahoma"" Size=""8"" />\n+            <TextStyle Id=""WixUI_Font_Bigger"" FaceName=""Tahoma"" Size=""12"" />\n+            <TextStyle Id=""WixUI_Font_Title"" FaceName=""Tahoma"" Size=""9"" Bold=""yes"" />\n+\n+            <Property Id=""DefaultUIFont"" Value=""WixUI_Font_Normal"" />\n+            <Property Id=""WixUI_Mode"" Value=""InstallDir"" />\n+\n+            <DialogRef Id=""BrowseDlg"" />\n+            <DialogRef Id=""DiskCostDlg"" />\n+            <DialogRef Id=""ErrorDlg"" />\n+            <DialogRef Id=""FatalError"" />\n+            <DialogRef Id=""FilesInUse"" />\n+            <DialogRef Id=""MsiRMFilesInUse"" />\n+            <DialogRef Id=""PrepareDlg"" />\n+            <DialogRef Id=""ProgressDlg"" />\n+            <DialogRef Id=""ResumeDlg"" />\n+            <DialogRef Id=""UserExit"" />\n+            \n+            <Publish Dialog=""BrowseDlg"" Control=""OK"" Event=""DoAction"" Value=""WixUIValidatePath"" Order=""3"">1</Publish>\n+            <Publish Dialog=""BrowseDlg"" Control=""OK"" Event=""SpawnDialog"" Value=""InvalidDirDlg"" Order=""4""><![CDATA[NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID<>""1""]]></Publish>\n+\n+            <Publish Dialog=""ExitDialog"" Control=""Finish"" Event=""EndDialog"" Value=""Return"" Order=""999"">1</Publish>\n+\n+            <Publish Dialog=""WelcomeDlg"" Control=""Next"" Event=""NewDialog"" Value=""LicenseAgreementDlg"">NOT Installed</Publish>\n+            <Publish Dialog=""WelcomeDlg"" Control=""Next"" Event=""NewDialog"" Value=""VerifyReadyDlg"">Installed AND PATCH</Publish>\n+\n+            <Publish Dialog=""LicenseAgreementDlg"" Control=""Back"" Event=""NewDialog"" Value=""WelcomeDlg"">1</Publish>\n+            <Publish Dialog=""LicenseAgreementDlg"" Control=""Next"" Event=""NewDialog"" Value=""PTInstallDirDlg"">LicenseAccepted = ""1""</Publish>\n+\n+            <Publish Dialog=""PTInstallDirDlg"" Control=""Back"" Event=""NewDialog"" Value=""LicenseAgreementDlg"">1</Publish>\n+            <Publish Dialog=""PTInstallDirDlg"" Control=""Next"" Event=""SetTargetPath"" Value=""[WIXUI_INSTALLDIR]"" Order=""1"">1</Publish>\n+            <Publish Dialog=""PTInstallDirDlg"" Control=""Next"" Event=""DoAction"" Value=""WixUIValidatePath"" Order=""2"">NOT WIXUI_DONTVALIDATEPATH</Publish>\n+            <Publish Dialog=""PTInstallDirDlg"" Control=""Next"" Event=""SpawnDialog"" Value=""InvalidDirDlg"" Order=""3""><![CDATA[NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID<>""1""]]></Publish>\n+            <Publish Dialog=""PTInstallDirDlg"" Control=""Next"" Event=""NewDialog"" Value=""VerifyReadyDlg"" Order=""4"">WIXUI_DONTVALIDATEPATH OR WIXUI_INSTALLDIR_VALID=""1""</Publish>\n+            <Publish Dialog=""PTInstallDirDlg"" Control=""ChangeFolder"" Property=""_BrowseProperty"" Value=""[WIXUI_INSTALLDIR]"" Order=""1"">1</Publish>\n+            <Publish Dialog=""PTInstallDirDlg"" Control=""ChangeFolder"" Event=""SpawnDialog"" Value=""BrowseDlg"" Order=""2"">1</Publish>\n+            \n+            <Publish Dialog=""VerifyReadyDlg"" Control=""Back"" Event=""NewDialog"" Value=""PTInstallDirDlg"" Order=""1"">NOT Installed</Publish>\n+            <Publish Dialog=""VerifyReadyDlg"" Control=""Back"" Event=""NewDialog"" Value=""MaintenanceTypeDlg"" Order=""2"">Installed AND NOT PATCH</Publish>\n+            <Publish Dialog=""VerifyReadyDlg"" Control=""Back"" Event=""NewDialog"" Value=""WelcomeDlg"" Order=""2"">Installed AND PATCH</Publish>\n+\n+            <Publish Dialog=""MaintenanceWelcomeDlg"" Control=""Next"" Event=""NewDialog"" Value=""MaintenanceTypeDlg"">1</Publish>\n+\n+            <Publish Dialog=""MaintenanceTypeDlg"" Control=""RepairButton"" Event=""NewDialog"" Value=""VerifyReadyDlg"">1</Publish>\n+            <Publish Dialog=""MaintenanceTypeDlg"" Control=""RemoveButton"" Event=""NewDialog"" Value=""VerifyReadyDlg"">1</Publish>\n+            <Publish Dialog=""MaintenanceTypeDlg"" Control=""Back"" Event=""NewDialog"" Value=""MaintenanceWelcomeDlg"">1</Publish>\n+\n+            <Property Id=""ARPNOMODIFY"" Value=""1"" />\n+        </UI>\n+\n+        <UIRef Id=""WixUI_Common"" />\n+    </Fragment>\n+</Wix>'}, {'Name': 'installer/PowerToysSetup/PowerToysSetup.wixproj', 'Line Additions': 62, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,62 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project ToolsVersion=""4.0"" DefaultTargets=""Build"" InitialTargets=""EnsureWixToolsetInstalled"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <PropertyGroup>\r\n+    <Configuration Condition="" \'$(Configuration)\' == \'\' "">Release</Configuration>\r\n+    <Platform Condition="" \'$(Platform)\' == \'\' "">x64</Platform>\r\n+    <ProductVersion>3.10</ProductVersion>\r\n+    <ProjectGuid>022a9d30-7c4f-416d-a9df-5ff2661cc0ad</ProjectGuid>\r\n+    <SchemaVersion>2.0</SchemaVersion>\r\n+    <OutputName>PowerToysSetup</OutputName>\r\n+    <OutputType>Package</OutputType>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition="" \'$(Configuration)|$(Platform)\' == \'Debug|x64\' "">\r\n+    <DefineConstants>Debug</DefineConstants>\r\n+    <OutputPath>$(Platform)\\$(Configuration)\\</OutputPath>\r\n+    <IntermediateOutputPath>obj\\$(Platform)\\$(Configuration)\\</IntermediateOutputPath>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition="" \'$(Configuration)|$(Platform)\' == \'Release|x64\' "">\r\n+    <OutputPath>$(Platform)\\$(Configuration)\\</OutputPath>\r\n+    <IntermediateOutputPath>obj\\$(Platform)\\$(Configuration)\\</IntermediateOutputPath>\r\n+  </PropertyGroup>\r\n+  <ItemGroup>\r\n+    <Compile Include=""CustomDialogs\\PTInstallDirDlg.wxs"" />\r\n+    <Compile Include=""CustomDialogs\\WixUI_PTInstallDir.wxs"" />\r\n+    <Compile Include=""Product.wxs"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <WixExtension Include=""WixUtilExtension"">\r\n+      <HintPath>$(WixExtDir)\\WixUtilExtension.dll</HintPath>\r\n+      <Name>WixUtilExtension</Name>\r\n+    </WixExtension>\r\n+    <WixExtension Include=""WixUIExtension"">\r\n+      <HintPath>$(WixExtDir)\\WixUIExtension.dll</HintPath>\r\n+      <Name>WixUIExtension</Name>\r\n+    </WixExtension>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <Folder Include=""CustomDialogs"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=""..\\PowerToysSetupCustomActions\\PowerToysSetupCustomActions.vcxproj"">\r\n+      <Name>PowerToysSetupCustomActions</Name>\r\n+      <Project>{32f3882b-f2d6-4586-b5ed-11e39e522bd3}</Project>\r\n+      <Private>True</Private>\r\n+      <DoNotHarvest>True</DoNotHarvest>\r\n+      <RefProjectOutputGroups>Binaries;Content;Satellites</RefProjectOutputGroups>\r\n+      <RefTargetDir>INSTALLFOLDER</RefTargetDir>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <Import Project=""$(WixTargetsPath)"" Condition="" \'$(WixTargetsPath)\' != \'\' "" />\r\n+  <Import Project=""$(MSBuildExtensionsPath32)\\Microsoft\\WiX\\v3.x\\Wix.targets"" Condition="" \'$(WixTargetsPath)\' == \'\' AND Exists(\'$(MSBuildExtensionsPath32)\\Microsoft\\WiX\\v3.x\\Wix.targets\') "" />\r\n+  <Target Name=""EnsureWixToolsetInstalled"" Condition="" \'$(WixTargetsImported)\' != \'true\' "">\r\n+    <Error Text=""The WiX Toolset v3.11 (or newer) build tools must be installed to build this project. To download the WiX Toolset, see http://wixtoolset.org/releases/"" />\r\n+  </Target>\r\n+  <!--\r\n+\tTo modify your build process, add your task inside one of the targets below and uncomment it.\r\n+\tOther similar extension points exist, see Wix.targets.\r\n+\t<Target Name=""BeforeBuild"">\r\n+\t</Target>\r\n+\t<Target Name=""AfterBuild"">\r\n+\t</Target>\r\n+\t-->\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'installer/PowerToysSetup/Product.wxs', 'Line Additions': 285, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,285 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<Wix xmlns=""http://schemas.microsoft.com/wix/2006/wi""\n+     xmlns:util=""http://schemas.microsoft.com/wix/UtilExtension"">\n+\n+  <?define RepoDir=""$(var.ProjectDir)..\\..\\"" ?>\n+  <?define BinX64Dir=""$(var.RepoDir)x64\\$(var.Configuration)\\"" ?>\n+  <Product Id=""*""\n+       Name=""PowerToys""\n+       Language=""1033""\n+       Version=""0.11.0""\n+       Manufacturer=""Microsoft""\n+       UpgradeCode=""42B84BF7-5FBF-473B-9C8B-049DC16F7708"">\n+\n+    <Package InstallerVersion=""200"" Compressed=""yes"" InstallScope=""perMachine"" InstallPrivileges=""elevated"" Platform=""x64"" />\n+\n+    <MajorUpgrade DowngradeErrorMessage=""A later version of [ProductName] is already installed."" />\n+    <MediaTemplate EmbedCab=""yes"" />\n+\n+    <Property Id=""WINDOWSBUILDNUMBER"" Secure=""yes"">\n+      <RegistrySearch Id=""BuildNumberSearch"" Root=""HKLM"" Key=""SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion"" Name=""CurrentBuildNumber"" Type=""raw"" />\n+    </Property>\n+    <Condition Message=""This application is only supported on Windows 10 version 1803 (build 17134) or higher."">\n+      <![CDATA[(WINDOWSBUILDNUMBER >= 17134)]]>\n+    </Condition>\n+\n+    <Icon Id=""powertoys.ico"" SourceFile=""$(var.BinX64Dir)\\svgs\\icon.ico""/>\n+    <Property Id=""ARPPRODUCTICON"" Value=""powertoys.ico"" />\n+    <Feature Id=""ProductFeature"" Title=""PowerToys"" Level=""1"">\n+      <ComponentGroupRef Id=""ProductComponents"" />\n+    </Feature>\n+    <Property Id=""WIXUI_INSTALLDIR"" Value=""INSTALLFOLDER"" />\n+    <UI>\n+      <UIRef Id=""WixUI_PTInstallDir""/>\n+      <Publish Dialog=""ExitDialog""\n+            Control=""Finish""\n+            Event=""DoAction""\n+            Value=""LaunchApplication"">WIXUI_EXITDIALOGOPTIONALCHECKBOX = 1 and NOT Installed</Publish>\n+      <Publish Dialog=""MaintenanceTypeDlg"" Control=""RemoveButton"" Property=""_REMOVE_ALL"" Value=""Yes"">1</Publish>\n+      <Publish Dialog=""UserExit"" Control=""Finish"" Event=""DoAction"" Value=""TelemetryLogInstallCancel"">NOT Installed</Publish>\n+      <Publish Dialog=""FatalError"" Control=""Finish"" Event=""DoAction"" Value=""TelemetryLogInstallFail"">NOT Installed</Publish>\n+      <Publish Dialog=""UserExit"" Control=""Finish"" Event=""DoAction"" Value=""TelemetryLogUninstallCancel"">Installed AND _REMOVE_ALL=""Yes""</Publish>\n+      <Publish Dialog=""FatalError"" Control=""Finish"" Event=""DoAction"" Value=""TelemetryLogUninstallFail"">Installed AND _REMOVE_ALL=""Yes""</Publish>\n+      <Publish Dialog=""UserExit"" Control=""Finish"" Event=""DoAction"" Value=""TelemetryLogRepairCancel"">Installed AND NOT (_REMOVE_ALL=""Yes"")</Publish>\n+      <Publish Dialog=""FatalError"" Control=""Finish"" Event=""DoAction"" Value=""TelemetryLogRepairFail"">Installed AND NOT (_REMOVE_ALL=""Yes"")</Publish>\n+    </UI>\n+    <WixVariable Id=""WixUIBannerBmp"" Value=""$(var.ProjectDir)\\Bitmaps\\banner.bmp"" />\n+    <WixVariable Id=""WixUIDialogBmp"" Value=""$(var.ProjectDir)\\Bitmaps\\dialog.bmp"" />\n+    <WixVariable Id=""WixUILicenseRtf"" Value=""$(var.RepoDir)\\License.rtf"" />\n+    <Property Id=""INSTALLSTARTMENUSHORTCUT"" Value=""1""/>\n+    <Property Id=""CREATESCHEDULEDTASK"" Value=""1""/>\n+    <Property Id=""WIXUI_EXITDIALOGOPTIONALCHECKBOX"" Value=""1""/>\n+    <Property Id=""WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT"" Value=""Launch PowerToys"" />\n+    <Property Id=""WixShellExecTarget"" Value=""[#PowerToys.exe]"" />\n+    <CustomAction Id=""LaunchApplication"" BinaryKey=""WixCA"" DllEntry=""WixShellExec"" Impersonate=""yes"" />\n+\n+    <InstallExecuteSequence>\n+      <Custom Action=""SetRegisterPowerToysSchTaskParam"" Before=""RegisterPowerToysSchTask"" />\n+      <Custom Action=""RegisterPowerToysSchTask"" After=""InstallFiles"">\n+        NOT Installed and CREATESCHEDULEDTASK = 1\n+      </Custom>\n+      <Custom Action=""WixCloseApplications"" Before=""RemoveFiles"" />\n+      <Custom Action=""RemovePowerToysSchTasks"" After=""RemoveFiles"">\n+        Installed and (NOT UPGRADINGPRODUCTCODE) AND (REMOVE=""ALL"")\n+      </Custom>\n+      <Custom Action=""TelemetryLogInstallSuccess"" After=""InstallFinalize"">\n+        NOT Installed\n+      </Custom>\n+      <Custom Action=""TelemetryLogUninstallSuccess"" After=""InstallFinalize"">\n+        Installed and (NOT UPGRADINGPRODUCTCODE) AND (REMOVE=""ALL"")\n+      </Custom>\n+    </InstallExecuteSequence>\n+\n+    <CustomAction Id=""SetRegisterPowerToysSchTaskParam""\n+                  Property=""RegisterPowerToysSchTask""\n+                  Value=""[#PowerToys.exe]"" />\n+\n+    <!-- Needs to Impersonate=""no"" and Execute=""deferred"" in order to run elevated. -->\n+    <CustomAction Id=""RegisterPowerToysSchTask""\n+                  Return=""ignore""\n+                  Impersonate=""no""\n+                  Execute=""deferred""\n+                  BinaryKey=""PTCustomActions""\n+                  DllEntry=""CreateScheduledTaskCA""\n+                   />\n+\n+    <!-- Needs to Impersonate=""no"" and Execute=""deferred"" in order to run elevated. -->\n+    <CustomAction Id=""RemovePowerToysSchTasks""\n+                  Return=""ignore""\n+                  Impersonate=""no""\n+                  Execute=""deferred""\n+                  BinaryKey=""PTCustomActions""\n+                  DllEntry=""RemoveScheduledTasksCA""\n+                   />\n+\n+    <CustomAction Id=""TelemetryLogInstallSuccess""\n+                  Return=""ignore""\n+                  Impersonate=""yes""\n+                  BinaryKey=""PTCustomActions""\n+                  DllEntry=""TelemetryLogInstallSuccessCA""\n+                   />\n+\n+    <CustomAction Id=""TelemetryLogInstallCancel""\n+                  Return=""ignore""\n+                  Impersonate=""yes""\n+                  BinaryKey=""PTCustomActions""\n+                  DllEntry=""TelemetryLogInstallCancelCA""\n+                   />\n+\n+    <CustomAction Id=""TelemetryLogInstallFail""\n+                  Return=""ignore""\n+                  Impersonate=""yes""\n+                  BinaryKey=""PTCustomActions""\n+                  DllEntry=""TelemetryLogInstallFailCA""\n+                   />\n+\n+    <CustomAction Id=""TelemetryLogUninstallSuccess""\n+                  Return=""ignore""\n+                  Impersonate=""yes""\n+                  BinaryKey=""PTCustomActions""\n+                  DllEntry=""TelemetryLogUninstallSuccessCA""\n+                   />\n+\n+    <CustomAction Id=""TelemetryLogUninstallCancel""\n+                  Return=""ignore""\n+                  Impersonate=""yes""\n+                  BinaryKey=""PTCustomActions""\n+                  DllEntry=""TelemetryLogUninstallCancelCA""\n+                   />\n+\n+    <CustomAction Id=""TelemetryLogUninstallFail""\n+                  Return=""ignore""\n+                  Impersonate=""yes""\n+                  BinaryKey=""PTCustomActions""\n+                  DllEntry=""TelemetryLogUninstallFailCA""\n+                   />\n+    \n+    <CustomAction Id=""TelemetryLogRepairCancel""\n+                  Return=""ignore""\n+                  Impersonate=""yes""\n+                  BinaryKey=""PTCustomActions""\n+                  DllEntry=""TelemetryLogRepairCancelCA""\n+                   />\n+\n+    <CustomAction Id=""TelemetryLogRepairFail""\n+                  Return=""ignore""\n+                  Impersonate=""yes""\n+                  BinaryKey=""PTCustomActions""\n+                  DllEntry=""TelemetryLogRepairFailCA""\n+                   />\n+\n+    <!-- Close \'PowerToys.exe\' before uninstall-->\n+    <Property Id=""MSIRESTARTMANAGERCONTROL"" Value=""Disable"" />\n+    <util:CloseApplication CloseMessage=""yes"" Target=""PowerToys.exe"" ElevatedCloseMessage=""yes"" RebootPrompt=""no"" TerminateProcess=""0"" />\n+  </Product>\n+\n+  <Fragment>\n+    <Binary Id=""PTCustomActions"" SourceFile=""$(var.PowerToysSetupCustomActions.TargetPath)"" />\n+  </Fragment>\n+\n+  <Fragment>\n+    <Directory Id=""TARGETDIR"" Name=""SourceDir"">\n+      <Directory Id=""ProgramFiles64Folder"">\n+        <Directory Id=""INSTALLFOLDER"" Name=""PowerToys"">\n+          <Directory Id=""SvgsInstallFolder"" Name=""svgs""/>\n+          <Directory Id=""ModulesInstallFolder"" Name=""modules""/>\n+          <Directory Id=""SettingsHtmlInstallFolder"" Name=""settings-html"">\n+            <Directory Id=""SettingsHtmlDistInstallFolder"" Name=""dist""/>\n+          </Directory>\n+        </Directory>\n+      </Directory>\n+      <Directory Id=""ProgramMenuFolder"">\n+        <Directory Id =""ApplicationProgramsFolder"" Name =""PowerToys""/>\n+      </Directory>\n+      <Directory Id=""DesktopFolder"" Name=""Desktop""/>\n+    </Directory>\n+  </Fragment>\n+\n+  <Fragment>\n+    <DirectoryRef Id=""INSTALLFOLDER"" FileSource=""$(var.BinX64Dir)"">\n+      <Component Id=""powertoys_exe"" Guid=""A2C66D91-3485-4D00-B04D-91844E6B345B"" Win64=""yes"">\n+        <File Id=""PowerToys.exe"" KeyPath=""yes"" Checksum=""yes"" />\n+      </Component>\n+      <Component Id=""settings_exe"" Guid=""A5A461A9-7097-4CBA-9D39-3DBBB6B7B80C"" Win64=""yes"">\n+        <File Id=""PowerToysSettings.exe"" KeyPath=""yes"" Checksum=""yes"" />\n+      </Component>\n+      <Component Id=""License_rtf"" Guid=""3E5AE43B-CFB4-449B-A346-94CAAFF3312E"" Win64=""yes"">\n+        <File Source=""$(var.RepoDir)\\License.rtf"" Id=""License.rtf"" KeyPath=""yes"" />\n+      </Component>\n+    </DirectoryRef>\n+    <DirectoryRef Id=""SvgsInstallFolder"" FileSource=""$(var.BinX64Dir)\\svgs\\"">\n+      <Component Id=""PowerToysSvgs"" Guid=""7C4D4EED-9338-423D-992C-DCE02F3E2D35"" Win64=""yes"">\n+        <File Source=""$(var.BinX64Dir)\\svgs\\0.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\1.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\2.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\3.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\4.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\5.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\6.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\7.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\8.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\9.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\no_active_window.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\overlay.svg"" />\n+        <File Source=""$(var.BinX64Dir)\\svgs\\overlay_portrait.svg"" />\n+      </Component>\n+    </DirectoryRef>\n+    <DirectoryRef Id=""ModulesInstallFolder"" FileSource=""$(var.BinX64Dir)\\modules\\"">\n+      <Component Id=""Module_ShortcutGuide"" Guid=""CBD0AC09-91D3-428E-B2B3-05745ADF3473"" Win64=""yes"">\n+        <File Source=""$(var.BinX64Dir)\\modules\\shortcut_guide.dll"" KeyPath=""yes"" />\n+      </Component>\n+      <Component Id=""Module_FancyZones"" Guid=""C6B5272E-6ED4-4B80-B0E7-2FF0355D8CF4"" Win64=""yes"">\n+        <File Source=""$(var.BinX64Dir)\\modules\\fancyzones.dll"" KeyPath=""yes"" />\n+        <File Source=""$(var.BinX64Dir)\\modules\\FancyZonesEditor.exe"" />\n+        <File Source=""$(var.BinX64Dir)\\modules\\ControlzEx.dll"" />\n+        <File Source=""$(var.BinX64Dir)\\modules\\MahApps.Metro.dll"" />\n+        <File Source=""$(var.BinX64Dir)\\modules\\Microsoft.Xaml.Behaviors.dll"" />\n+      </Component>\n+    </DirectoryRef>\n+    <DirectoryRef Id=""SettingsHtmlInstallFolder"" FileSource=""$(var.RepoDir)\\editor\\settings-html\\"">\n+      <Component Id=""settings_html"" Guid=""87881A99-E917-4B0D-B1D8-5C6EB9709F96"" Win64=""yes"">\n+        <File Source=""$(var.RepoDir)\\src\\editor\\settings-html\\index.html"" KeyPath=""yes"" />\n+      </Component>\n+    </DirectoryRef>\n+    <DirectoryRef Id=""SettingsHtmlDistInstallFolder"" FileSource=""$(var.RepoDir)\\editor\\settings-html\\dist\\"">\n+      <Component Id=""settings_js_bundle"" Guid=""9EF539C1-2F50-421E-B074-C58ED3A9785C"" Win64=""yes"">\n+        <File Source=""$(var.RepoDir)\\src\\editor\\settings-html\\dist\\bundle.js"" KeyPath=""yes"" />\n+      </Component>\n+    </DirectoryRef>\n+\n+    <DirectoryRef Id=""ApplicationProgramsFolder"">\n+      <Component Id=""ApplicationShortcut"" Guid=""43184672-485D-4632-A16C-12D5E33B1F11"">\n+        <Condition>INSTALLSTARTMENUSHORTCUT</Condition>\n+        <Shortcut Id=""ApplicationStartMenuShortcut""\n+                  Name=""PowerToys""\n+                  Description=""PowerToys - Windows system utilities to maximize productivity""\n+                  Target=""[!PowerToys.exe]""\n+                  WorkingDirectory=""INSTALLFOLDER""\n+                  Icon=""powertoys.ico""\n+                  IconIndex=""0""/>\n+        <RemoveFolder Id=""RemoveApplicationProgramsFolder"" Directory=""ApplicationProgramsFolder"" On=""uninstall""/>\n+        <RegistryValue Root=""HKCU""\n+                       Key=""Software\\[Manufacturer]\\[ProductName]""\n+                       Name=""startshorcutinstalled""\n+                       Type=""integer""\n+                       Value=""1""\n+                       KeyPath=""yes""/>\n+      </Component>\n+    </DirectoryRef>\n+  </Fragment>\n+  <Fragment>\n+    <DirectoryRef Id=""DesktopFolder"">\n+      <Component Id=""DesktopShortcut"" Guid=""87321F2B-CC48-4326-881E-9C62CC260DC8"">\n+        <Condition>INSTALLDESKTOPSHORTCUT</Condition>\n+        <RegistryValue Root=""HKCU""\n+                        Key=""Software\\[Manufacturer]\\[ProductName]""\n+                        Name=""desktopshorcutinstalled""\n+                        Type=""integer""\n+                        Value=""1""\n+                        KeyPath=""yes""/>\n+        <Shortcut Id=""DesktopShortcutId""\n+                  Name=""PowerToys""\n+                  Description=""PowerToys - Windows system utilities to maximize productivity""\n+                  Target=""[!PowerToys.exe]""\n+                  WorkingDirectory=""INSTALLFOLDER""\n+                  Icon=""powertoys.ico""\n+                  Directory=""DesktopFolder""/>\n+      </Component>\n+    </DirectoryRef>\n+  </Fragment>\n+\n+  <Fragment>\n+    <ComponentGroup Id=""ProductComponents"" Directory=""INSTALLFOLDER"">\n+      <ComponentRef Id=""powertoys_exe"" />\n+      <ComponentRef Id=""License_rtf"" />\n+      <ComponentRef Id=""PowerToysSvgs"" />\n+      <ComponentRef Id=""Module_ShortcutGuide"" />\n+      <ComponentRef Id=""Module_FancyZones"" />\n+      <ComponentRef Id=""ApplicationShortcut"" />\n+      <ComponentRef Id=""DesktopShortcut"" />\n+      <ComponentRef Id=""settings_exe"" />\n+      <ComponentRef Id=""settings_html"" />\n+      <ComponentRef Id=""settings_js_bundle"" />\n+    </ComponentGroup>\n+  </Fragment>\n+</Wix>'}, {'Name': 'installer/PowerToysSetupCustomActions/CustomAction.cpp', 'Line Additions': 528, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,528 @@\n+#include ""stdafx.h""\n+\n+#define SECURITY_WIN32\n+#include <Security.h>\n+#pragma comment(lib, ""Secur32.lib"")\n+#include <Lmcons.h>\n+\n+#include <comdef.h>\n+#include <taskschd.h>\n+#pragma comment(lib, ""taskschd.lib"")\n+#pragma comment(lib, ""comsupp.lib"")\n+\n+#include <iostream>\n+#include <strutil.h>\n+#include <ProjectTelemetry.h>\n+\n+using namespace std;\n+\n+TRACELOGGING_DEFINE_PROVIDER(\n+  g_hProvider,\n+  ""Microsoft.PowerToysInstaller"",\n+  // {e1d8165d-5cb6-5c74-3b51-bdfbfe4f7a3b}\n+  (0xe1d8165d, 0x5cb6, 0x5c74, 0x3b, 0x51, 0xbd, 0xfb, 0xfe, 0x4f, 0x7a, 0x3b),\n+  TraceLoggingOptionProjectTelemetry());\n+\n+const DWORD USERNAME_DOMAIN_LEN = DNLEN + UNLEN + 2; // Domain Name + \'\\\' + User Name + \'\\0\'\n+const DWORD USERNAME_LEN = UNLEN + 1; // User Name + \'\\0\'\n+\n+// Creates a Scheduled Task to run at logon for the current user.\n+// The path of the executable to run should be passed as the CustomActionData (Value).\n+// Based on the Task Scheduler Logon Trigger Example:\n+// https://docs.microsoft.com/en-us/windows/desktop/taskschd/logon-trigger-example--c---/\n+UINT __stdcall CreateScheduledTaskCA(MSIHANDLE hInstall) {\n+  HRESULT hr = S_OK;\n+  UINT er = ERROR_SUCCESS;\n+\n+  TCHAR username_domain[USERNAME_DOMAIN_LEN];\n+  TCHAR username[USERNAME_LEN];\n+\n+  std::wstring wstrTaskName;\n+\n+  ITaskService *pService = NULL;\n+  ITaskFolder *pTaskFolder = NULL;\n+  ITaskDefinition *pTask = NULL;\n+  IRegistrationInfo *pRegInfo = NULL;\n+  ITaskSettings *pSettings = NULL;\n+  ITriggerCollection *pTriggerCollection = NULL;\n+  IRegisteredTask *pRegisteredTask = NULL;\n+\n+  hr = WcaInitialize(hInstall, ""CreateScheduledTaskCA"");\n+  ExitOnFailure(hr, ""Failed to initialize"");\n+\n+  WcaLog(LOGMSG_STANDARD, ""Initialized."");\n+\n+  // ------------------------------------------------------\n+  // Get the Domain/Username for the trigger.\n+  //\n+  // This action needs to run as the system to get elevated privileges from the installation,\n+  // so GetUserNameEx can\'t be used to get the current user details.\n+  // The USERNAME and USERDOMAIN environment variables are used instead.\n+  if (!GetEnvironmentVariable(L""USERNAME"", username, USERNAME_LEN)) {\n+    ExitWithLastError(hr, ""Getting username failed: %x"", hr);\n+  }\n+  if (!GetEnvironmentVariable(L""USERDOMAIN"", username_domain, USERNAME_DOMAIN_LEN)) {\n+    ExitWithLastError(hr, ""Getting the user\'s domain failed: %x"", hr);\n+  }\n+  wcscat_s(username_domain, L""\\\\"");\n+  wcscat_s(username_domain, username);\n+\n+  WcaLog(LOGMSG_STANDARD, ""Current user detected: %ls"", username_domain);\n+\n+  // Task Name.\n+  wstrTaskName = L""Autorun for "";\n+  wstrTaskName += username;\n+\n+  // Get the executable path passed to the custom action.\n+  LPWSTR wszExecutablePath = NULL;\n+  hr = WcaGetProperty(L""CustomActionData"", &wszExecutablePath);\n+  ExitOnFailure(hr, ""Failed to get the executable path from CustomActionData."");\n+\n+  // COM and Security Initialization is expected to have been done by the MSI.\n+  // It couldn\'t be done in the DLL, anyway.\n+  // ------------------------------------------------------\n+  // Create an instance of the Task Service.\n+  hr = CoCreateInstance(CLSID_TaskScheduler,\n+    NULL,\n+    CLSCTX_INPROC_SERVER,\n+    IID_ITaskService,\n+    (void**)&pService);\n+  ExitOnFailure(hr, ""Failed to create an instance of ITaskService: %x"", hr);\n+\n+  // Connect to the task service.\n+  hr = pService->Connect(_variant_t(), _variant_t(),\n+    _variant_t(), _variant_t());\n+  ExitOnFailure(hr, ""ITaskService::Connect failed: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Get the PowerToys task folder. Creates it if it doesn\'t exist.\n+  hr = pService->GetFolder(_bstr_t(L""\\\\PowerToys""), &pTaskFolder);\n+  if (FAILED(hr)) {\n+    // Folder doesn\'t exist. Get the Root folder and create the PowerToys subfolder.\n+    ITaskFolder *pRootFolder = NULL;\n+    hr = pService->GetFolder(_bstr_t(L""\\\\""), &pRootFolder);\n+    ExitOnFailure(hr, ""Cannot get Root Folder pointer: %x"", hr);\n+    hr = pRootFolder->CreateFolder(_bstr_t(L""\\\\PowerToys""), _variant_t(L""""), &pTaskFolder);\n+    if (FAILED(hr)) {\n+      pRootFolder->Release();\n+      ExitOnFailure(hr, ""Cannot create PowerToys task folder: %x"", hr);\n+    }\n+    WcaLog(LOGMSG_STANDARD, ""PowerToys task folder created."");\n+  }\n+\n+  // If the same task exists, remove it.\n+  pTaskFolder->DeleteTask(_bstr_t(wstrTaskName.c_str()), 0);\n+\n+  // Create the task builder object to create the task.\n+  hr = pService->NewTask(0, &pTask);\n+  ExitOnFailure(hr, ""Failed to create a task definition: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Get the registration info for setting the identification.\n+  hr = pTask->get_RegistrationInfo(&pRegInfo);\n+  ExitOnFailure(hr, ""Cannot get identification pointer: %x"", hr);\n+  hr = pRegInfo->put_Author(_bstr_t(username_domain));\n+  ExitOnFailure(hr, ""Cannot put identification info: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Create the settings for the task\n+  hr = pTask->get_Settings(&pSettings);\n+  ExitOnFailure(hr, ""Cannot get settings pointer: %x"", hr);\n+\n+  hr = pSettings->put_StartWhenAvailable(VARIANT_FALSE);\n+  ExitOnFailure(hr, ""Cannot put_StartWhenAvailable setting info: %x"", hr);\n+  hr = pSettings->put_StopIfGoingOnBatteries(VARIANT_FALSE);\n+  ExitOnFailure(hr, ""Cannot put_StopIfGoingOnBatteries setting info: %x"", hr);\n+  hr = pSettings->put_ExecutionTimeLimit(_bstr_t(L""PT0S"")); //Unlimited\n+  ExitOnFailure(hr, ""Cannot put_ExecutionTimeLimit setting info: %x"", hr);\n+  hr = pSettings->put_DisallowStartIfOnBatteries(VARIANT_FALSE);\n+  ExitOnFailure(hr, ""Cannot put_DisallowStartIfOnBatteries setting info: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Get the trigger collection to insert the logon trigger.\n+  hr = pTask->get_Triggers(&pTriggerCollection);\n+  ExitOnFailure(hr, ""Cannot get trigger collection: %x"", hr);\n+\n+  // Add the logon trigger to the task.\n+  ITrigger *pTrigger = NULL;\n+  hr = pTriggerCollection->Create(TASK_TRIGGER_LOGON, &pTrigger);\n+  ExitOnFailure(hr, ""Cannot create the trigger: %x"", hr);\n+\n+  ILogonTrigger *pLogonTrigger = NULL;\n+  hr = pTrigger->QueryInterface(\n+    IID_ILogonTrigger, (void**)&pLogonTrigger);\n+  pTrigger->Release();\n+  ExitOnFailure(hr, ""QueryInterface call failed for ILogonTrigger: %x"", hr);\n+\n+  hr = pLogonTrigger->put_Id(_bstr_t(L""Trigger1""));\n+  if (FAILED(hr)) {\n+    WcaLogError(hr, ""Cannot put the trigger ID: %x"", hr);\n+  }\n+\n+  // Timing issues may make explorer not be started when the task runs.\n+  // Add a little delay to mitigate this.\n+  hr = pLogonTrigger->put_Delay(_bstr_t(L""PT03S""));\n+  if (FAILED(hr)) {\n+    WcaLogError(hr, ""Cannot put the trigger delay: %x"", hr);\n+  }\n+\n+  // Define the user. The task will execute when the user logs on.\n+  // The specified user must be a user on this computer.\n+  hr = pLogonTrigger->put_UserId(_bstr_t(username_domain));\n+  pLogonTrigger->Release();\n+  ExitOnFailure(hr, ""Cannot add user ID to logon trigger: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Add an Action to the task. This task will execute the path passed to this custom action.\n+  IActionCollection *pActionCollection = NULL;\n+\n+  // Get the task action collection pointer.\n+  hr = pTask->get_Actions(&pActionCollection);\n+  ExitOnFailure(hr, ""Cannot get Task collection pointer: %x"", hr);\n+\n+  // Create the action, specifying that it is an executable action.\n+  IAction *pAction = NULL;\n+  hr = pActionCollection->Create(TASK_ACTION_EXEC, &pAction);\n+  pActionCollection->Release();\n+  ExitOnFailure(hr, ""Cannot create the action: %x"", hr);\n+\n+  IExecAction *pExecAction = NULL;\n+  // QI for the executable task pointer.\n+  hr = pAction->QueryInterface(\n+    IID_IExecAction, (void**)&pExecAction);\n+  pAction->Release();\n+  ExitOnFailure(hr, ""QueryInterface call failed for IExecAction: %x"", hr);\n+\n+  // Set the path of the executable to PowerToys (passed as CustomActionData).\n+  hr = pExecAction->put_Path(_bstr_t(wszExecutablePath));\n+  pExecAction->Release();\n+  ExitOnFailure(hr, ""Cannot set path of executable: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Create the principal for the task\n+  IPrincipal *pPrincipal = NULL;\n+  hr = pTask->get_Principal(&pPrincipal);\n+  ExitOnFailure(hr, ""Cannot get principal pointer: %x"", hr);\n+\n+  // Set up principal information:\n+  hr = pPrincipal->put_Id(_bstr_t(L""Principal1""));\n+  if (FAILED(hr)) {\n+    WcaLogError(hr, ""Cannot put the principal ID: %x"", hr);\n+  }\n+\n+  hr = pPrincipal->put_UserId(_bstr_t(username_domain));\n+  if (FAILED(hr)) {\n+    WcaLogError(hr, ""Cannot put principal user Id: %x"", hr);\n+  }\n+\n+  hr = pPrincipal->put_LogonType(TASK_LOGON_INTERACTIVE_TOKEN);\n+  if (FAILED(hr)) {\n+    WcaLogError(hr, ""Cannot put principal logon type: %x"", hr);\n+  }\n+\n+  // Run the task with the highest available privileges.\n+  hr = pPrincipal->put_RunLevel(TASK_RUNLEVEL_HIGHEST);\n+  pPrincipal->Release();\n+  ExitOnFailure(hr, ""Cannot put principal run level: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  //  Save the task in the PowerToys folder.\n+  hr = pTaskFolder->RegisterTaskDefinition(\n+    _bstr_t(wstrTaskName.c_str()),\n+    pTask,\n+    TASK_CREATE_OR_UPDATE,\n+    _variant_t(username_domain),\n+    _variant_t(),\n+    TASK_LOGON_INTERACTIVE_TOKEN,\n+    _variant_t(L""""),\n+    &pRegisteredTask);\n+  ExitOnFailure(hr, ""Error saving the Task : %x"", hr);\n+\n+  WcaLog(LOGMSG_STANDARD, ""Scheduled task created for the current user."");\n+\n+LExit:\n+  ReleaseStr(wszExecutablePath);\n+  if (pService) pService->Release();\n+  if (pTaskFolder) pTaskFolder->Release();\n+  if (pTask) pTask->Release();\n+  if (pRegInfo) pRegInfo->Release();\n+  if (pSettings) pSettings->Release();\n+  if (pTriggerCollection) pTriggerCollection->Release();\n+  if (pRegisteredTask) pRegisteredTask->Release();\n+\n+  if (!SUCCEEDED(hr)) {\n+    PMSIHANDLE hRecord = MsiCreateRecord(0);\n+    MsiRecordSetString(hRecord, 0, TEXT(""Failed to create a scheduled task to start PowerToys at user login. You can re-try to create the scheduled task using the PowerToys settings.""));\n+    MsiProcessMessage(hInstall, INSTALLMESSAGE(INSTALLMESSAGE_WARNING + MB_OK), hRecord);\n+  }\n+\n+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;\n+  return WcaFinalize(er);\n+}\n+\n+// Removes all Scheduled Tasks in the PowerToys folder and deletes the folder afterwards.\n+// Based on the Task Scheduler Displaying Task Names and State example:\n+// https://docs.microsoft.com/en-us/windows/desktop/TaskSchd/displaying-task-names-and-state--c---/\n+UINT __stdcall RemoveScheduledTasksCA(MSIHANDLE hInstall) {\n+  HRESULT hr = S_OK;\n+  UINT er = ERROR_SUCCESS;\n+\n+  ITaskService *pService = NULL;\n+  ITaskFolder *pTaskFolder = NULL;\n+  IRegisteredTaskCollection* pTaskCollection = NULL;\n+\n+  hr = WcaInitialize(hInstall, ""RemoveScheduledTasksCA"");\n+  ExitOnFailure(hr, ""Failed to initialize"");\n+\n+  WcaLog(LOGMSG_STANDARD, ""Initialized."");\n+\n+  // COM and Security Initialization is expected to have been done by the MSI.\n+  // It couldn\'t be done in the DLL, anyway.\n+  // ------------------------------------------------------\n+  // Create an instance of the Task Service.\n+  hr = CoCreateInstance(CLSID_TaskScheduler,\n+    NULL,\n+    CLSCTX_INPROC_SERVER,\n+    IID_ITaskService,\n+    (void**)&pService);\n+  ExitOnFailure(hr, ""Failed to create an instance of ITaskService: %x"", hr);\n+\n+  // Connect to the task service.\n+  hr = pService->Connect(_variant_t(), _variant_t(),\n+    _variant_t(), _variant_t());\n+  ExitOnFailure(hr, ""ITaskService::Connect failed: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Get the PowerToys task folder.\n+  hr = pService->GetFolder(_bstr_t(L""\\\\PowerToys""), &pTaskFolder);\n+  if (FAILED(hr)) {\n+    // Folder doesn\'t exist. No need to delete anything.\n+    WcaLog(LOGMSG_STANDARD, ""The PowerToys scheduled task folder wasn\'t found. Nothing to delete."");\n+    hr = S_OK;\n+    ExitFunction();\n+  }\n+\n+  // -------------------------------------------------------\n+  // Get the registered tasks in the folder.\n+  hr = pTaskFolder->GetTasks(TASK_ENUM_HIDDEN, &pTaskCollection);\n+  ExitOnFailure(hr, ""Cannot get the registered tasks: %x"", hr);\n+\n+  LONG numTasks = 0;\n+  hr = pTaskCollection->get_Count(&numTasks);\n+  for (LONG i = 0; i < numTasks; i++) {\n+    // Delete all the tasks found.\n+    // If some tasks can\'t be deleted, the folder won\'t be deleted later and the user will still be notified.\n+    IRegisteredTask* pRegisteredTask = NULL;\n+    hr = pTaskCollection->get_Item(_variant_t(i + 1), &pRegisteredTask);\n+    if (SUCCEEDED(hr)) {\n+      BSTR taskName = NULL;\n+      hr = pRegisteredTask->get_Name(&taskName);\n+      if (SUCCEEDED(hr)) {\n+        hr = pTaskFolder->DeleteTask(taskName, NULL);\n+        if (FAILED(hr)) {\n+          WcaLogError(hr, ""Cannot delete the \'%S\' task: %x"", taskName, hr);\n+        }\n+        SysFreeString(taskName);\n+      } else {\n+        WcaLogError(hr, ""Cannot get the registered task name: %x"", hr);\n+      }\n+      pRegisteredTask->Release();\n+    } else {\n+      WcaLogError(hr, ""Cannot get the registered task item at index=%d: %x"", i + 1, hr);\n+    }\n+  }\n+\n+  // ------------------------------------------------------\n+  // Get the pointer to the root task folder and delete the PowerToys subfolder.\n+  ITaskFolder *pRootFolder = NULL;\n+  hr = pService->GetFolder(_bstr_t(L""\\\\""), &pRootFolder);\n+  ExitOnFailure(hr, ""Cannot get Root Folder pointer: %x"", hr);\n+  hr = pRootFolder->DeleteFolder(_bstr_t(L""PowerToys""), NULL);\n+  pRootFolder->Release();\n+  ExitOnFailure(hr, ""Cannot delete the PowerToys folder: %x"", hr);\n+\n+  WcaLog(LOGMSG_STANDARD, ""Deleted the PowerToys Task Scheduler folder."");\n+\n+LExit:\n+  if (pService) pService->Release();\n+  if (pTaskFolder) pTaskFolder->Release();\n+  if (pTaskCollection) pTaskCollection->Release();\n+\n+  if (!SUCCEEDED(hr)) {\n+    PMSIHANDLE hRecord = MsiCreateRecord(0);\n+    MsiRecordSetString(hRecord, 0, TEXT(""Failed to remove the PowerToys folder from the scheduled task. These can be removed manually later.""));\n+    MsiProcessMessage(hInstall, INSTALLMESSAGE(INSTALLMESSAGE_WARNING + MB_OK), hRecord);\n+  }\n+\n+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;\n+  return WcaFinalize(er);\n+}\n+\n+UINT __stdcall TelemetryLogInstallSuccessCA(MSIHANDLE hInstall) {\n+  HRESULT hr = S_OK;\n+  UINT er = ERROR_SUCCESS;\n+\n+  hr = WcaInitialize(hInstall, ""TelemetryLogInstallSuccessCA"");\n+  ExitOnFailure(hr, ""Failed to initialize"");\n+\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""Install::Success"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+\n+LExit:\n+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;\n+  return WcaFinalize(er);\n+}\n+\n+UINT __stdcall TelemetryLogInstallCancelCA(MSIHANDLE hInstall) {\n+  HRESULT hr = S_OK;\n+  UINT er = ERROR_SUCCESS;\n+\n+  hr = WcaInitialize(hInstall, ""TelemetryLogInstallCancelCA"");\n+  ExitOnFailure(hr, ""Failed to initialize"");\n+\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""Install::Cancel"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+\n+LExit:\n+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;\n+  return WcaFinalize(er);\n+}\n+\n+UINT __stdcall TelemetryLogInstallFailCA(MSIHANDLE hInstall) {\n+  HRESULT hr = S_OK;\n+  UINT er = ERROR_SUCCESS;\n+\n+  hr = WcaInitialize(hInstall, ""TelemetryLogInstallFailCA"");\n+  ExitOnFailure(hr, ""Failed to initialize"");\n+\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""Install::Fail"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+\n+LExit:\n+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;\n+  return WcaFinalize(er);\n+}\n+\n+UINT __stdcall TelemetryLogUninstallSuccessCA(MSIHANDLE hInstall) {\n+  HRESULT hr = S_OK;\n+  UINT er = ERROR_SUCCESS;\n+\n+  hr = WcaInitialize(hInstall, ""TelemetryLogUninstallSuccessCA"");\n+  ExitOnFailure(hr, ""Failed to initialize"");\n+\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""Uninstall::Success"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+\n+LExit:\n+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;\n+  return WcaFinalize(er);\n+}\n+\n+UINT __stdcall TelemetryLogUninstallCancelCA(MSIHANDLE hInstall) {\n+  HRESULT hr = S_OK;\n+  UINT er = ERROR_SUCCESS;\n+\n+  hr = WcaInitialize(hInstall, ""TelemetryLogUninstallCancelCA"");\n+  ExitOnFailure(hr, ""Failed to initialize"");\n+\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""Uninstall::Cancel"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+\n+LExit:\n+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;\n+  return WcaFinalize(er);\n+}\n+\n+UINT __stdcall TelemetryLogUninstallFailCA(MSIHANDLE hInstall) {\n+  HRESULT hr = S_OK;\n+  UINT er = ERROR_SUCCESS;\n+\n+  hr = WcaInitialize(hInstall, ""TelemetryLogUninstallFailCA"");\n+  ExitOnFailure(hr, ""Failed to initialize"");\n+\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""Uninstall::Fail"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+\n+LExit:\n+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;\n+  return WcaFinalize(er);\n+}\n+\n+UINT __stdcall TelemetryLogRepairCancelCA(MSIHANDLE hInstall) {\n+  HRESULT hr = S_OK;\n+  UINT er = ERROR_SUCCESS;\n+\n+  hr = WcaInitialize(hInstall, ""TelemetryLogRepairCancelCA"");\n+  ExitOnFailure(hr, ""Failed to initialize"");\n+\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""Repair::Cancel"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+\n+LExit:\n+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;\n+  return WcaFinalize(er);\n+}\n+\n+UINT __stdcall TelemetryLogRepairFailCA(MSIHANDLE hInstall) {\n+  HRESULT hr = S_OK;\n+  UINT er = ERROR_SUCCESS;\n+\n+  hr = WcaInitialize(hInstall, ""TelemetryLogRepairFailCA"");\n+  ExitOnFailure(hr, ""Failed to initialize"");\n+\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""Repair::Fail"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+\n+LExit:\n+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;\n+  return WcaFinalize(er);\n+}\n+\n+// DllMain - Initialize and cleanup WiX custom action utils.\n+extern ""C"" BOOL WINAPI DllMain(__in HINSTANCE hInst, __in ULONG ulReason, __in LPVOID) {\n+  switch (ulReason) {\n+  case DLL_PROCESS_ATTACH:\n+    WcaGlobalInitialize(hInst);\n+    TraceLoggingRegister(g_hProvider);\n+    break;\n+\n+  case DLL_PROCESS_DETACH:\n+    TraceLoggingUnregister(g_hProvider);\n+    WcaGlobalFinalize();\n+    break;\n+  }\n+\n+  return TRUE;\n+}'}, {'Name': 'installer/PowerToysSetupCustomActions/CustomAction.def', 'Line Additions': 13, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,13 @@\n+LIBRARY ""PowerToysSetupCustomActions""\n+\n+EXPORTS\n+\tCreateScheduledTaskCA\n+\tRemoveScheduledTasksCA\n+\tTelemetryLogInstallSuccessCA\n+\tTelemetryLogInstallCancelCA\n+\tTelemetryLogInstallFailCA\n+\tTelemetryLogUninstallSuccessCA\n+\tTelemetryLogUninstallCancelCA\n+\tTelemetryLogUninstallFailCA\n+\tTelemetryLogRepairCancelCA\n+\tTelemetryLogRepairFailCA\n\\ No newline at end of file'}, {'Name': 'installer/PowerToysSetupCustomActions/PowerToysSetupCustomActions.vcxproj', 'Line Additions': 116, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,116 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\n+<Project ToolsVersion=""15.0"" DefaultTargets=""Build"" InitialTargets=""EnsureWixToolsetInstalled"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\n+  <ItemGroup Label=""ProjectConfigurations"">\n+    <ProjectConfiguration Include=""Debug|x64"">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=""Release|x64"">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=""Globals"">\n+    <ProjectGuid>{32f3882b-f2d6-4586-b5ed-11e39e522bd3}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>PowerToysSetupCustomActions</RootNamespace>\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\n+  </PropertyGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <PlatformToolset>v142</PlatformToolset>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <PlatformToolset>v142</PlatformToolset>\n+  </PropertyGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\n+  <ImportGroup Label=""ExtensionSettings"">\n+  </ImportGroup>\n+  <ImportGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""PropertySheets"">\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\n+  </ImportGroup>\n+  <ImportGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""PropertySheets"">\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\n+  </ImportGroup>\n+  <PropertyGroup Label=""UserMacros"" />\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <LinkIncremental>true</LinkIncremental>\n+    <OutDir>$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <LinkIncremental>false</LinkIncremental>\n+    <OutDir>$(Platform)\\$(Configuration)\\</OutDir>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <ClCompile>\n+      <Optimization>Disabled</Optimization>\n+      <AdditionalIncludeDirectories>inc;telemetry;$(WIX)sdk\\$(WixPlatformToolset)\\inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN64;_DEBUG;_WINDOWS;_USRDLL;CUSTOMACTIONTEST_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <PrecompiledHeader>Use</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>msi.lib;dutil.lib;wcautil.lib;Version.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalLibraryDirectories>$(WIX)sdk\\$(WixPlatformToolset)\\lib\\x64;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>\n+      <ModuleDefinitionFile>CustomAction.def</ModuleDefinitionFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Windows</SubSystem>\n+      <UACExecutionLevel>HighestAvailable</UACExecutionLevel>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <ClCompile>\n+      <Optimization>MaxSpeed</Optimization>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <AdditionalIncludeDirectories>inc;telemetry;$(WIX)sdk\\$(WixPlatformToolset)\\inc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>WIN64;NDEBUG;_WINDOWS;_USRDLL;CUSTOMACTIONTEST_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <PrecompiledHeader>Use</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>\n+    </ClCompile>\n+    <Link>\n+      <AdditionalDependencies>msi.lib;dutil.lib;wcautil.lib;Version.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+      <AdditionalLibraryDirectories>$(WIX)sdk\\$(WixPlatformToolset)\\lib\\x64;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>\n+      <ModuleDefinitionFile>CustomAction.def</ModuleDefinitionFile>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <SubSystem>Windows</SubSystem>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <TargetMachine>MachineX64</TargetMachine>\n+      <UACExecutionLevel>HighestAvailable</UACExecutionLevel>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=""CustomAction.cpp"" />\n+    <ClCompile Include=""stdafx.cpp"">\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\n+    </ClCompile>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=""CustomAction.def"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=""stdafx.h"" />\n+    <ClInclude Include=""Telemetry\\ProjectTelemetry.h"" />\n+    <ClInclude Include=""Telemetry\\TraceLoggingDefines.h"" />\n+  </ItemGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\n+  <Import Project=""$(WixNativeCATargetsPath)"" Condition="" \'$(WixNativeCATargetsPath)\' != \'\' "" />\n+  <Import Project=""$(MSBuildExtensionsPath32)\\Microsoft\\WiX\\v3.x\\Wix.NativeCA.targets"" Condition="" \'$(WixNativeCATargetsPath)\' == \'\' AND Exists(\'$(MSBuildExtensionsPath32)\\Microsoft\\WiX\\v3.x\\Wix.NativeCA.targets\') "" />\n+  <Target Name=""EnsureWixToolsetInstalled"" Condition="" \'$(WixNativeCATargetsImported)\' != \'true\' "">\n+    <Error Text=""The WiX Toolset v3.11 (or newer) build tools must be installed to build this project. To download the WiX Toolset, see http://wixtoolset.org/releases/"" />\n+  </Target>\n+  <ImportGroup Label=""ExtensionTargets"">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file'}, {'Name': 'installer/PowerToysSetupCustomActions/PowerToysSetupCustomActions.vcxproj.filters', 'Line Additions': 24, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,24 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\n+  <ItemGroup>\n+    <ClCompile Include=""CustomAction.cpp"" />\n+    <ClCompile Include=""stdafx.cpp"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=""stdafx.h"" />\n+    <ClInclude Include=""Telemetry\\ProjectTelemetry.h"">\n+      <Filter>Telemetry</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""Telemetry\\TraceLoggingDefines.h"">\n+      <Filter>Telemetry</Filter>\n+    </ClInclude>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <None Include=""CustomAction.def"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <Filter Include=""Telemetry"">\n+      <UniqueIdentifier>{6e73ce5d-e715-4e7e-b796-c5d180b07ff2}</UniqueIdentifier>\n+    </Filter>\n+  </ItemGroup>\n+</Project>\n\\ No newline at end of file'}, {'Name': 'installer/PowerToysSetupCustomActions/Telemetry/ProjectTelemetry.h', 'Line Additions': 6, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,6 @@\n+#pragma once\n+\n+#include <TraceLoggingProvider.h>\n+#include <TraceLoggingDefines.h>\n+\n+TRACELOGGING_DECLARE_PROVIDER(g_hProvider);'}, {'Name': 'installer/PowerToysSetupCustomActions/Telemetry/TraceLoggingDefines.h', 'Line Additions': 6, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,6 @@\n+#pragma once\n+\n+#define TraceLoggingOptionProjectTelemetry() TraceLoggingOptionGroup(0x42749043, 0x438c, 0x46a2, 0x82, 0xbe, 0xc6, 0xcb, 0xeb, 0x19, 0x2f, 0xf2)\n+#define ProjectTelemetryPrivacyDataTag(tag) TraceLoggingUInt64((tag), ""Ignore"")\n+#define ProjectTelemetryTag_ProductAndServicePerformance 0x0u\n+#define PROJECT_KEYWORD_MEASURE 0x0'}, {'Name': 'installer/PowerToysSetupCustomActions/stdafx.cpp', 'Line Additions': 4, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,4 @@\n+#include ""stdafx.h""\n+\n+// TODO: reference any additional headers you need in STDAFX.H\n+// and not in this file'}, {'Name': 'installer/PowerToysSetupCustomActions/stdafx.h', 'Line Additions': 13, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,13 @@\n+#pragma once\n+\n+#define WIN32_LEAN_AND_MEAN             // Exclude rarely-used stuff from Windows headers\n+// Windows Header Files:\n+#include <windows.h>\n+#include <strsafe.h>\n+#include <msiquery.h>\n+\n+// WiX Header Files:\n+#include <wcautil.h>\n+\n+\n+// TODO: reference additional headers your program requires here'}, {'Name': 'installer/README.md', 'Line Additions': 7, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,7 @@\n+# PowerToys Setup Project\n+\n+## Build instructions\n+  * Install the [WiX Toolset Visual Studio 2019 Extension](https://marketplace.visualstudio.com/items?itemName=RobMensching.WiXToolset).\n+  * Install the [WiX Toolset build tools](https://wixtoolset.org/releases/) in the development machine.\n+  * Open `powertoys.sln`, select the ""Release"" and ""x64"" configurations and build the `PowerToysSetup` project.\n+  * The resulting installer will be built to `PowerToysSetup\\bin\\Release\\PowerToysSetup.msi`.'}, {'Name': 'src/README.md', 'Line Additions': 8, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,8 @@\n+# PowerToys Source Code\r\n+\r\n+## Code organization\r\n+The PowerToys are splitted into DLLs for each PowerToy module ([`modules`](/src/modules) folder), and an executable ([`runner`](/src/runner) folder) that loads and manages those DLLs.\r\n+\r\n+The settings window is a separate executable, contained in [`editor`](/src/editor) folder. In utilizes a WebView to display a HTML-based settings window (contained in [`settings-web`](/src/settings-web) folder).\r\n+\r\n+The [`common`](/src/common) contains code for a static libary with helper functions, used by both the runner and the PowerToys modules.\r'}, {'Name': 'src/common/README.md', 'Line Additions': 48, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,48 @@\n+# Introduction\n+The common lib, as the name suggests, contains code shared by multiple PowerToys components and modules.\n+\n+# Classes and structures\n+\n+#### class Animation: [header](./animation.h) [source](./animation.cpp)\n+Animation helper class with two easing-in animations: linear and exponential.\n+\n+#### class AsyncMessageQueue: [header](./async_message_queue.h)\n+Header-only asynchronous message queue. Used by `TwoWayPipeMessageIPC`.\n+\n+#### class TwoWayPipeMessageIPC: [header](./two_way_pipe_message_ipc.h)\n+Header-only asynchronous IPC messaging class. Used by the runner to communicate with the settings window.\n+\n+#### class D2DSVG: [header](./d2d_svg.h) [source](./d2d_svg.cpp)\n+Class for loading, rendering and for some basic modifications of SVG graphics.\n+\n+#### class D2DText: [header](./d2d_text.h) [source](./d2d_text.cpp)\n+Class for rendering text using DirectX.\n+\n+#### class D2DWindow: [header](./d2d_window.h) [source](./d2d_window.cpp)\n+Base class for creating borderless windows, with DirectX enabled rendering pipeline.\n+\n+#### class DPIAware: [header](./dpi_aware.h) [source](./dpi_aware.cpp)\n+Helper class for creating DPI-aware applications.\n+\n+#### struct MonitorInfo: [header](./monitors.h) [source](./monitors.cpp)\n+Class for obtaining information about physical displays connected to the machine.\n+\n+#### class Settings, class PowerToyValues, class CustomActionObject: [header](./settings_objects.h) [source](./settings_objects.cpp)\n+Classes used to define settings screens for the PowerToys modules.\n+\n+#### class Tasklist: [header](./tasklist_positions.h) [source](./tasklist_positions.cpp)\n+Class that can detect the position of the windows buttons on the taskbar. It also detects which window will react to pressing `WinKey + number`.\n+\n+#### struct WindowsColors: [header](./windows_colors.h) [source](./windows_colors.cpp)\n+Class for detecting the current Windows color scheme.\n+\n+# Helpers\n+\n+#### Common helpers: [header](./common.h) [source](./common.cpp)\n+Various helper functions.\n+\n+#### Settings helpers: [header](./settings_helpers.h)\n+Helper methods for the settings.\n+\n+#### Start visible helper: [header](./start_visible.h) [source](./start_visible.cpp)\n+Contains function to test if the Start menu is visible.'}, {'Name': 'src/common/Telemetry/PowerToys.wprp', 'Line Additions': 22, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,22 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\n+<WindowsPerformanceRecorder Version=""1.0"" Author=""Microsoft Corporation"" Copyright=""Microsoft Corporation"" Company=""Microsoft Corporation"">\n+  <Profiles>\n+    <EventCollector Id=""EventCollector_Microsoft.PowerToys"" Name=""Microsoft.PowerToys"">\n+      <BufferSize Value=""64"" />\n+      <Buffers Value=""4"" />\n+    </EventCollector>\n+    <EventProvider Id=""EventProvider_Microsoft.PowerToys"" Name=""38e8889b-9731-53f5-e901-e8a7c1753074"" />\n+    <Profile Id=""Microsoft.PowerToys.Verbose.File"" Name=""Microsoft.PowerToys"" Description=""Microsoft.PowerToys"" LoggingMode=""File"" DetailLevel=""Verbose"">\n+      <Collectors>\n+        <EventCollectorId Value=""EventCollector_Microsoft.PowerToys"">\n+          <EventProviders>\n+            <EventProviderId Value=""EventProvider_Microsoft.PowerToys"" />\n+          </EventProviders>\n+        </EventCollectorId>\n+      </Collectors>\n+    </Profile>\n+    <Profile Id=""Microsoft.PowerToys.Light.File"" Name=""Microsoft.PowerToys"" Description=""Microsoft.PowerToys"" Base=""Microsoft.PowerToys.Verbose.File"" LoggingMode=""File"" DetailLevel=""Light"" />\n+    <Profile Id=""Microsoft.PowerToys.Verbose.Memory"" Name=""Microsoft.PowerToys"" Description=""Microsoft.PowerToys"" Base=""Microsoft.PowerToys.Verbose.File"" LoggingMode=""Memory"" DetailLevel=""Verbose"" />\n+    <Profile Id=""Microsoft.PowerToys.Light.Memory"" Name=""Microsoft.PowerToys"" Description=""Microsoft.PowerToys"" Base=""Microsoft.PowerToys.Verbose.File"" LoggingMode=""Memory"" DetailLevel=""Light"" />\n+  </Profiles>\n+</WindowsPerformanceRecorder>\n\\ No newline at end of file'}, {'Name': 'src/common/Telemetry/ProjectTelemetry.h', 'Line Additions': 6, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,6 @@\n+#pragma once\n+\n+#include <TraceLoggingProvider.h>\n+#include <TraceLoggingDefines.h>\n+\n+TRACELOGGING_DECLARE_PROVIDER(g_hProvider);'}, {'Name': 'src/common/Telemetry/TraceLoggingDefines.h', 'Line Additions': 6, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,6 @@\n+#pragma once\n+\n+#define TraceLoggingOptionProjectTelemetry() TraceLoggingOptionGroup(0x42749043, 0x438c, 0x46a2, 0x82, 0xbe, 0xc6, 0xcb, 0xeb, 0x19, 0x2f, 0xf2)\n+#define ProjectTelemetryPrivacyDataTag(tag) TraceLoggingUInt64((tag), ""Ignore"")\n+#define ProjectTelemetryTag_ProductAndServicePerformance 0x0u\n+#define PROJECT_KEYWORD_MEASURE 0x0'}, {'Name': 'src/common/Telemetry/readme.md', 'Line Additions': 25, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,25 @@\n+\n+# Overview\n+\n+Telemetry from the PowerToys provider can be captured using the PowerToys.wprp file and WPR.\n+\n+## Starting trace capture\n+\n+To capture a trace for the PowerToys provider, run the following:\n+\n+`wpr.exe -start ""PowerToys.wprp""`\n+\n+## Stopping trace capture\n+\n+To capture a trace for the PowerToys provider, run the following:\n+\n+`wpr.exe -Stop ""Trace.etl""`\n+\n+## Viewing Events\n+\n+Open the trace.etl file in WPA.\n+\n+## Additional Resources\n+[Tracelogging on MSDN](https://docs.microsoft.com/en-us/windows/win32/tracelogging/trace-logging-portal)\n+\n+[Recording and Viewing Events](https://docs.microsoft.com/en-us/windows/win32/tracelogging/tracelogging-record-and-display-tracelogging-events)\n\\ No newline at end of file'}, {'Name': 'src/common/UnitTests-CommonLib/Settings.Tests.cpp', 'Line Additions': 62, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,62 @@\n+#include ""pch.h""\n+#include <settings_objects.h>\n+\n+using namespace Microsoft::VisualStudio::CppUnitTestFramework;\n+using namespace PowerToysSettings;\n+\n+namespace UnitTestsCommonLib\n+{\n+  TEST_CLASS(SettingsUnitTests)\n+  {\n+  private:\n+    const std::wstring m_json = L""{\\""name\\"":\\""Module Name\\"",\\""properties\\"" : {\\""bool_toggle_true\\"":{\\""value\\"":true},\\""bool_toggle_false\\"":{\\""value\\"":false},\\""color_picker\\"" : {\\""value\\"":\\""#ff8d12\\""},\\""int_spinner\\"" : {\\""value\\"":10},\\""string_text\\"" : {\\""value\\"":\\""a quick fox\\""}},\\""version\\"" : \\""1.0\\"" }"";\n+ \n+  public:\n+    TEST_METHOD(LoadFromJsonBoolTrue)\n+    {\n+      PowerToyValues values = PowerToyValues::from_json_string(m_json);\n+      Assert::IsTrue(values.is_bool_value(L""bool_toggle_true""));\n+\n+      bool value = values.get_bool_value(L""bool_toggle_true"");\n+      Assert::AreEqual(true, value);\n+    }\n+\n+    TEST_METHOD(LoadFromJsonBoolFalse)\n+    {\n+      PowerToyValues values = PowerToyValues::from_json_string(m_json);\n+      Assert::IsTrue(values.is_bool_value(L""bool_toggle_false""));\n+\n+      bool value = values.get_bool_value(L""bool_toggle_false"");\n+      Assert::AreEqual(false, value);\n+    }\n+\n+    TEST_METHOD(LoadFromJsonInt)\n+    {\n+      PowerToyValues values = PowerToyValues::from_json_string(m_json);\n+      Assert::IsTrue(values.is_int_value(L""int_spinner""));\n+\n+      int value = values.get_int_value(L""int_spinner"");\n+      Assert::AreEqual(10, value);\n+    }\n+\n+    TEST_METHOD(LoadFromJsonString)\n+    {\n+      PowerToyValues values = PowerToyValues::from_json_string(m_json);\n+      Assert::IsTrue(values.is_string_value(L""string_text""));\n+\n+      std::wstring value = values.get_string_value(L""string_text"");\n+      std::wstring expected = L""a quick fox"";\n+      Assert::AreEqual(expected, value);\n+    }\n+\n+    TEST_METHOD(LoadFromJsonColorPicker)\n+    {\n+      PowerToyValues values = PowerToyValues::from_json_string(m_json);\n+      Assert::IsTrue(values.is_string_value(L""color_picker""));\n+\n+      std::wstring value = values.get_string_value(L""color_picker"");\n+      std::wstring expected = L""#ff8d12"";\n+      Assert::AreEqual(expected, value);\n+    }\n+  };\n+}'}, {'Name': 'src/common/UnitTests-CommonLib/UnitTests-CommonLib.vcxproj', 'Line Additions': 115, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,115 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\n+<Project DefaultTargets=""Build"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\n+  <ItemGroup Label=""ProjectConfigurations"">\n+    <ProjectConfiguration Include=""Debug|x64"">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=""Release|x64"">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=""Globals"">\n+    <VCProjectVersion>16.0</VCProjectVersion>\n+    <ProjectGuid>{1A066C63-64B3-45F8-92FE-664E1CCE8077}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>UnitTestsCommonLib</RootNamespace>\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\n+    <ProjectSubType>NativeUnitTestProject</ProjectSubType>\n+  </PropertyGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <UseOfMfc>false</UseOfMfc>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+    <UseOfMfc>false</UseOfMfc>\n+  </PropertyGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\n+  <ImportGroup Label=""ExtensionSettings"">\n+  </ImportGroup>\n+  <ImportGroup Label=""Shared"">\n+  </ImportGroup>\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\n+  </ImportGroup>\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\n+  </ImportGroup>\n+  <PropertyGroup Label=""UserMacros"" />\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <ClCompile>\n+      <PrecompiledHeader>Use</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>..\\;..\\Telemetry;..\\..\\..\\deps\\cpprestsdk\\include;$(VCInstallDir)UnitTest\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <UseFullPaths>true</UseFullPaths>\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Windows</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <AdditionalLibraryDirectories>$(VCInstallDir)UnitTest\\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>\n+      <AdditionalDependencies>RuntimeObject.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <ClCompile>\n+      <PrecompiledHeader>Use</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <SDLCheck>true</SDLCheck>\n+      <AdditionalIncludeDirectories>$(VCInstallDir)UnitTest\\include;..\\;..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <UseFullPaths>true</UseFullPaths>\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Windows</SubSystem>\n+      <AdditionalLibraryDirectories>$(VCInstallDir)UnitTest\\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>\n+      <AdditionalDependencies>RuntimeObject.lib;%(AdditionalDependencies)</AdditionalDependencies>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClCompile Include=""pch.cpp"">\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\n+    </ClCompile>\n+    <ClCompile Include=""Settings.Tests.cpp"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=""pch.h"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=""..\\common.vcxproj"">\n+      <Project>{74485049-c722-400f-abe5-86ac52d929b3}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\n+  <ImportGroup Label=""ExtensionTargets"">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/common/UnitTests-CommonLib/UnitTests-CommonLib.vcxproj.filters', 'Line Additions': 30, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,30 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\n+  <ItemGroup>\n+    <Filter Include=""Source Files"">\n+      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>\n+      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>\n+    </Filter>\n+    <Filter Include=""Header Files"">\n+      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>\n+      <Extensions>h;hh;hpp;hxx;hm;inl;inc;ipp;xsd</Extensions>\n+    </Filter>\n+    <Filter Include=""Resource Files"">\n+      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>\n+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>\n+    </Filter>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=""pch.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""Settings.Tests.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=""pch.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+  </ItemGroup>\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/common/UnitTests-CommonLib/pch.cpp', 'Line Additions': 5, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,5 @@\n+// pch.cpp: source file corresponding to the pre-compiled header\n+\n+#include ""pch.h""\n+\n+// When you are using pre-compiled headers, this source file is necessary for compilation to succeed.'}, {'Name': 'src/common/UnitTests-CommonLib/pch.h', 'Line Additions': 16, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,16 @@\n+// pch.h: This is a precompiled header file.\n+// Files listed below are compiled only once, improving build performance for future builds.\n+// This also affects IntelliSense performance, including code completion and many code browsing features.\n+// However, files listed here are ALL re-compiled if any one of them is updated between builds.\n+// Do not add files here that you will be updating frequently as this negates the performance advantage.\n+\n+#ifndef PCH_H\n+#define PCH_H\n+\n+// add headers that you want to pre-compile here\n+#include <Windows.h>\n+#include <winrt\\base.h>\n+\n+#include ""CppUnitTest.h""\n+\n+#endif //PCH_H'}, {'Name': 'src/common/animation.cpp', 'Line Additions': 43, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,43 @@\n+#include ""pch.h""\n+#include ""animation.h""\n+\n+Animation::Animation(double duration, double start, double stop) :\n+  start_value(start), end_value(stop), duration(duration), start(std::chrono::high_resolution_clock::now()) { }\n+\n+void Animation::reset() {\n+  start = std::chrono::high_resolution_clock::now();\n+}\n+void Animation::reset(double duration) {\n+  this->duration = duration;\n+  reset();\n+}\n+void Animation::reset(double duration, double start, double stop) {\n+  start_value = start;\n+  end_value = stop;\n+  reset(duration);\n+}\n+\n+static double ease_out_expo(double t) {\n+  return 1 - pow(2, -8 * t);\n+}\n+\n+double Animation::apply_animation_function(double t, AnimFunctions apply_function) const {\n+  switch (apply_function) {\n+  case EASE_OUT_EXPO:\n+    return ease_out_expo(t);\n+  case LINEAR:\n+  default:\n+    return t;\n+  }\n+}\n+\n+double Animation::value(AnimFunctions apply_function) const {\n+  auto anim_duration = std::chrono::high_resolution_clock::now() - start;\n+  double t = std::chrono::duration<double>(anim_duration).count() / duration;\n+  if (t >= 1)\n+    return end_value;\n+  return start_value + (end_value - start_value) * apply_animation_function(t, apply_function);\n+}\n+bool Animation::done() const {\n+  return std::chrono::high_resolution_clock::now() - start >= std::chrono::duration<double>(duration);\n+}'}, {'Name': 'src/common/animation.h', 'Line Additions': 31, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,31 @@\n+#pragma once\n+#include <chrono>\n+\n+/*\n+  Usage:\n+    When creating animation contstructor takes one parameter - how long\n+    should the animation take in seconds.\n+\n+    Call reset() when starting animation.\n+\n+    When redering, call value() to get value from 0 to 1 - depending on animation\n+    progress.\n+*/\n+class Animation {\n+public:\n+  enum AnimFunctions {\n+    LINEAR = 0,\n+    EASE_OUT_EXPO\n+  };\n+\n+  Animation(double duration = 1, double start = 0, double stop = 1);\n+  void reset();\n+  void reset(double duration);\n+  void reset(double duration, double start, double stop);\n+  double value(AnimFunctions apply_function) const;\n+  bool done() const;\n+private:\n+  double apply_animation_function(double t, AnimFunctions apply_function) const;\n+  std::chrono::high_resolution_clock::time_point start;\n+  double start_value, end_value, duration;\n+};'}, {'Name': 'src/common/async_message_queue.h', 'Line Additions': 47, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,47 @@\n+#pragma once\n+#include <queue>\n+#include <thread>\n+#include <mutex>\n+#include <condition_variable>\n+#include <string>\n+\n+class AsyncMessageQueue {\n+private:\n+  std::mutex queue_mutex;\n+  std::queue<std::wstring> message_queue;\n+  std::condition_variable message_ready;\n+  bool interrupted = false;\n+\n+  //Disable copy\n+  AsyncMessageQueue(const AsyncMessageQueue&);\n+  AsyncMessageQueue& operator=(const AsyncMessageQueue&);\n+\n+public:\n+  AsyncMessageQueue() {\n+  }\n+  void queue_message(std::wstring message) {\n+    this->queue_mutex.lock();\n+    this->message_queue.push(message);\n+    this->queue_mutex.unlock();\n+    this->message_ready.notify_one();\n+  }\n+  std::wstring pop_message() {\n+    std::unique_lock<std::mutex> lock(this->queue_mutex);\n+    while (message_queue.empty() && !this->interrupted) {\n+      this->message_ready.wait(lock);\n+    }\n+    if (this->interrupted) {\n+      //Just returns a empty string if the queue was interrupted.\n+      return std::wstring(L"""");\n+    }\n+    std::wstring message = this->message_queue.front();\n+    this->message_queue.pop();\n+    return message;\n+  }\n+  void interrupt() {\n+    this->queue_mutex.lock();\n+    this->interrupted = true;\n+    this->queue_mutex.unlock();\n+    this->message_ready.notify_all();\n+  }\n+};'}, {'Name': 'src/common/common.cpp', 'Line Additions': 152, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,152 @@\n+#include ""pch.h""\n+#include ""common.h""\n+#include <dwmapi.h>\n+#pragma comment(lib, ""dwmapi.lib"")\n+#include <strsafe.h>\n+\n+\n+std::optional<RECT> get_button_pos(HWND hwnd) {\n+  RECT button;\n+  if (DwmGetWindowAttribute(hwnd, DWMWA_CAPTION_BUTTON_BOUNDS, &button, sizeof(RECT)) == S_OK) {\n+    return button;\n+  } else {\n+    return {};\n+  }\n+}\n+\n+std::optional<RECT> get_window_pos(HWND hwnd) {\n+  RECT window;\n+  if (DwmGetWindowAttribute(hwnd, DWMWA_EXTENDED_FRAME_BOUNDS, &window, sizeof(window)) == S_OK) {\n+    return window;\n+  } else {\n+    return {};\n+  }\n+}\n+\n+std::optional<POINT> get_mouse_pos() {\n+  POINT point;\n+  if (GetCursorPos(&point) == 0) {\n+    return {};\n+  } else {\n+    return point;\n+  }\n+}\n+\n+int width(const RECT& rect) {\n+  return rect.right - rect.left;\n+}\n+\n+int height(const RECT& rect) {\n+  return rect.bottom - rect.top;\n+}\n+\n+bool operator<(const RECT& lhs, const RECT& rhs) {\n+  auto lhs_tuple = std::make_tuple(lhs.left, lhs.right, lhs.top, lhs.bottom);\n+  auto rhs_tuple = std::make_tuple(rhs.left, rhs.right, rhs.top, rhs.bottom); \n+  return lhs_tuple < rhs_tuple;\n+}\n+\n+RECT keep_rect_inside_rect(const RECT& small_rect, const RECT& big_rect) {\n+  RECT result = small_rect;\n+  if ((result.right - result.left) > (big_rect.right - big_rect.left)) {\n+    // small_rect is too big horizontally. resize it.\n+    result.right = big_rect.right;\n+    result.left = big_rect.left;\n+  } else {\n+    if (result.right > big_rect.right) {\n+      // move the rect left.\n+      result.left -= result.right-big_rect.right;\n+      result.right -= result.right-big_rect.right;\n+    }\n+    if (result.left < big_rect.left) {\n+      // move the rect right.\n+      result.right += big_rect.left-result.left;\n+      result.left += big_rect.left-result.left;\n+    }\n+  }\n+  if ((result.bottom - result.top) > (big_rect.bottom - big_rect.top)) {\n+    // small_rect is too big vertically. resize it.\n+    result.bottom = big_rect.bottom;\n+    result.top = big_rect.top;\n+  } else {\n+    if (result.bottom > big_rect.bottom) {\n+      // move the rect up.\n+      result.top -= result.bottom-big_rect.bottom;\n+      result.bottom -= result.bottom-big_rect.bottom;\n+    }\n+    if (result.top < big_rect.top) {\n+      // move the rect down.\n+      result.bottom += big_rect.top-result.top;\n+      result.top += big_rect.top-result.top;\n+    }\n+  }\n+  return result;\n+}\n+\n+int run_message_loop() {\n+  MSG msg;\n+  while (GetMessage(&msg, NULL, 0, 0)) {\n+    TranslateMessage(&msg);\n+    DispatchMessage(&msg);\n+  }\n+  return static_cast<int>(msg.wParam);\n+}\n+\n+void show_last_error_message(LPCWSTR lpszFunction, DWORD dw) {\n+  // Retrieve the system error message for the error code\n+  LPWSTR lpMsgBuf = NULL;\n+  if (FormatMessageW(FORMAT_MESSAGE_ALLOCATE_BUFFER |\n+                     FORMAT_MESSAGE_FROM_SYSTEM |\n+                     FORMAT_MESSAGE_IGNORE_INSERTS,\n+                     NULL,\n+                     dw,\n+                     MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n+                     lpMsgBuf,\n+                     0, NULL) > 0) {\n+    // Display the error message and exit the process\n+    LPWSTR lpDisplayBuf = (LPWSTR)LocalAlloc(LMEM_ZEROINIT, (lstrlenW(lpMsgBuf) + lstrlenW(lpszFunction) + 40) * sizeof(WCHAR));\n+    if (lpDisplayBuf != NULL) {\n+      StringCchPrintfW(lpDisplayBuf,\n+        LocalSize(lpDisplayBuf) / sizeof(WCHAR),\n+        L""%s failed with error %d: %s"",\n+        lpszFunction, dw, lpMsgBuf);\n+      MessageBoxW(NULL, (LPCTSTR)lpDisplayBuf, L""Error"", MB_OK);\n+      LocalFree(lpDisplayBuf);\n+    }\n+    LocalFree(lpMsgBuf);\n+  }\n+}\n+\n+WindowState get_window_state(HWND hwnd) {\n+  WINDOWPLACEMENT placement;\n+  placement.length = sizeof(WINDOWPLACEMENT);\n+  if (GetWindowPlacement(hwnd, &placement) == 0) {\n+    return UNKNONW;\n+  }\n+  if (placement.showCmd == SW_MINIMIZE || placement.showCmd == SW_SHOWMINIMIZED || IsIconic(hwnd)) {\n+    return MINIMIZED;\n+  }\n+  if (placement.showCmd == SW_MAXIMIZE || placement.showCmd == SW_SHOWMAXIMIZED) {\n+    return MAXIMIZED;\n+  }\n+  auto rectp = get_window_pos(hwnd);\n+  if (!rectp) {\n+    return UNKNONW;\n+  }\n+  auto rect = *rectp;\n+  MONITORINFO monitor;\n+  monitor.cbSize = sizeof(MONITORINFO);\n+  auto h_monitor = MonitorFromWindow(hwnd, MONITOR_DEFAULTTONEAREST);\n+  GetMonitorInfo(h_monitor, &monitor);\n+  bool top_left = monitor.rcWork.top == rect.top && monitor.rcWork.left == rect.left;\n+  bool bottom_left = monitor.rcWork.bottom == rect.bottom && monitor.rcWork.left == rect.left;\n+  bool top_right = monitor.rcWork.top == rect.top && monitor.rcWork.right == rect.right;\n+  bool bottom_right = monitor.rcWork.bottom == rect.bottom && monitor.rcWork.right == rect.right;\n+  if (top_left && bottom_left) return SNAPED_LEFT;\n+  if (top_left) return SNAPED_TOP_LEFT;\n+  if (bottom_left) return SNAPED_BOTTOM_LEFT;\n+  if (top_right && bottom_right) return SNAPED_RIGHT;\n+  if (top_right) return SNAPED_TOP_RIGHT;\n+  if (bottom_right) return SNAPED_BOTTOM_RIGHT;\n+  return RESTORED;\n+}\n\\ No newline at end of file'}, {'Name': 'src/common/common.h', 'Line Additions': 36, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,36 @@\n+#pragma once\n+#include <optional>\n+#include <Windows.h>\n+\n+// Returns RECT with positions of the minmize/maximize buttons of the given window.\n+// Does not always work, since some apps draw custom toolbars.\n+std::optional<RECT> get_button_pos(HWND hwnd);\n+// Gets position of given window.\n+std::optional<RECT> get_window_pos(HWND hwnd);\n+// Gets mouse postion.\n+std::optional<POINT> get_mouse_pos();\n+// Calculate sizes\n+int width(const RECT& rect);\n+int height(const RECT& rect);\n+// Compare rects\n+bool operator<(const RECT& lhs, const RECT& rhs);\n+// Moves and/or resizes small_rect to fit inside big_rect.\n+RECT keep_rect_inside_rect(const RECT& small_rect, const RECT& big_rect);\n+// Initializes and runs windows message loop\n+int run_message_loop();\n+\n+void show_last_error_message(LPCWSTR lpszFunction, DWORD dw);\n+\n+enum WindowState {\n+  UNKNONW,\n+  MINIMIZED,\n+  MAXIMIZED,\n+  SNAPED_TOP_LEFT,\n+  SNAPED_LEFT,\n+  SNAPED_BOTTOM_LEFT,\n+  SNAPED_TOP_RIGHT,\n+  SNAPED_RIGHT,\n+  SNAPED_BOTTOM_RIGHT,\n+  RESTORED\n+};\n+WindowState get_window_state(HWND hwnd);'}, {'Name': 'src/common/common.vcxproj', 'Line Additions': 138, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,138 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\n+<Project DefaultTargets=""Build"" ToolsVersion=""15.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\n+  <ItemGroup Label=""ProjectConfigurations"">\n+    <ProjectConfiguration Include=""Debug|x64"">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=""Release|x64"">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=""Globals"">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{74485049-C722-400F-ABE5-86AC52D929B3}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>common</RootNamespace>\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\n+    <ProjectName>common</ProjectName>\n+  </PropertyGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\n+  <ImportGroup Label=""ExtensionSettings"">\n+  </ImportGroup>\n+  <ImportGroup Label=""Shared"">\n+  </ImportGroup>\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\n+  </ImportGroup>\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\n+  </ImportGroup>\n+  <PropertyGroup Label=""UserMacros"" />\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <LinkIncremental>true</LinkIncremental>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <LinkIncremental>false</LinkIncremental>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <ClCompile>\n+      <PrecompiledHeader>Use</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <SDLCheck>true</SDLCheck>\n+      <PreprocessorDefinitions>_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ConformanceMode>true</ConformanceMode>\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <AdditionalIncludeDirectories>inc;telemetry;..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Windows</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <ClCompile>\n+      <PrecompiledHeader>Use</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <SDLCheck>true</SDLCheck>\n+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ConformanceMode>true</ConformanceMode>\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <AdditionalIncludeDirectories>inc;telemetry;..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Windows</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClInclude Include=""animation.h"" />\n+    <ClInclude Include=""async_message_queue.h"" />\n+    <ClInclude Include=""d2d_svg.h"" />\n+    <ClInclude Include=""d2d_text.h"" />\n+    <ClInclude Include=""d2d_window.h"" />\n+    <ClInclude Include=""dpi_aware.h"" />\n+    <ClInclude Include=""monitors.h"" />\n+    <ClInclude Include=""pch.h"" />\n+    <ClInclude Include=""settings_helpers.h"" />\n+    <ClInclude Include=""settings_objects.h"" />\n+    <ClInclude Include=""start_visible.h"" />\n+    <ClInclude Include=""tasklist_positions.h"" />\n+    <ClInclude Include=""common.h"" />\n+    <ClInclude Include=""Telemetry\\ProjectTelemetry.h"" />\n+    <ClInclude Include=""Telemetry\\TraceLoggingDefines.h"" />\n+    <ClInclude Include=""two_way_pipe_message_ipc.h"" />\n+    <ClInclude Include=""windows_colors.h"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=""animation.cpp"" />\n+    <ClCompile Include=""d2d_svg.cpp"" />\n+    <ClCompile Include=""d2d_text.cpp"" />\n+    <ClCompile Include=""d2d_window.cpp"" />\n+    <ClCompile Include=""dpi_aware.cpp"" />\n+    <ClCompile Include=""monitors.cpp"" />\n+    <ClCompile Include=""pch.cpp"">\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\n+    </ClCompile>\n+    <ClCompile Include=""settings_helpers.cpp"" />\n+    <ClCompile Include=""settings_objects.cpp"" />\n+    <ClCompile Include=""start_visible.cpp"" />\n+    <ClCompile Include=""tasklist_positions.cpp"" />\n+    <ClCompile Include=""common.cpp"" />\n+    <ClCompile Include=""windows_colors.cpp"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=""..\\..\\deps\\cpprestsdk\\cpprestsdk.vcxproj"">\n+      <Project>{4e577735-dfab-41af-8a6e-b6e8872a2928}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\n+  <ImportGroup Label=""ExtensionTargets"">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/common/common.vcxproj.filters', 'Line Additions': 109, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,109 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\n+  <ItemGroup>\n+    <Filter Include=""Source Files"">\n+      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>\n+      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>\n+    </Filter>\n+    <Filter Include=""Header Files"">\n+      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>\n+      <Extensions>h;hh;hpp;hxx;hm;inl;inc;ipp;xsd</Extensions>\n+    </Filter>\n+    <Filter Include=""Header Files\\Direct2D"">\n+      <UniqueIdentifier>{ed0f9961-6b12-408b-8dbc-fed779a557ac}</UniqueIdentifier>\n+    </Filter>\n+    <Filter Include=""Header Files\\Telemetry"">\n+      <UniqueIdentifier>{3e9f944e-5d97-4a28-8865-2eff3a3568e7}</UniqueIdentifier>\n+    </Filter>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=""d2d_svg.h"">\n+      <Filter>Header Files\\Direct2D</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""d2d_text.h"">\n+      <Filter>Header Files\\Direct2D</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""d2d_window.h"">\n+      <Filter>Header Files\\Direct2D</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""pch.h"" />\n+    <ClInclude Include=""animation.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""monitors.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""tasklist_positions.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""windows_colors.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""start_visible.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""common.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""Telemetry\\ProjectTelemetry.h"">\n+      <Filter>Header Files\\Telemetry</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""Telemetry\\TraceLoggingDefines.h"">\n+      <Filter>Header Files\\Telemetry</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""two_way_pipe_message_ipc.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""async_message_queue.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""settings_helpers.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""settings_objects.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+    <ClInclude Include=""dpi_aware.h"">\n+      <Filter>Header Files</Filter>\n+    </ClInclude>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=""d2d_svg.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""d2d_text.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""d2d_window.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""pch.cpp"" />\n+    <ClCompile Include=""animation.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""monitors.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""tasklist_positions.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""windows_colors.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""start_visible.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""common.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""settings_helpers.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""settings_objects.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+    <ClCompile Include=""dpi_aware.cpp"">\n+      <Filter>Source Files</Filter>\n+    </ClCompile>\n+  </ItemGroup>\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/common/d2d_svg.cpp', 'Line Additions': 105, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,105 @@\n+#include ""pch.h""\n+#include ""d2d_svg.h""\n+\n+D2DSVG& D2DSVG::load(const std::wstring& filename, ID2D1DeviceContext5* d2d_dc) {\n+  svg = nullptr;\n+  winrt::com_ptr<IStream> svg_stream;\n+  winrt::check_hresult(SHCreateStreamOnFileEx(filename.c_str(),\n+    STGM_READ, FILE_ATTRIBUTE_NORMAL, FALSE,\n+    nullptr,\n+    svg_stream.put()));\n+\n+  winrt::check_hresult(d2d_dc->CreateSvgDocument(\n+    svg_stream.get(),\n+    D2D1::SizeF(1, 1),\n+    svg.put()));\n+\n+  winrt::com_ptr<ID2D1SvgElement> root;\n+  svg->GetRoot(root.put());\n+  float tmp;\n+  winrt::check_hresult(root->GetAttributeValue(L""width"", &tmp));\n+  svg_width = (int)tmp;\n+  winrt::check_hresult(root->GetAttributeValue(L""height"", &tmp));\n+  svg_height = (int)tmp;\n+  return *this;\n+}\n+\n+D2DSVG& D2DSVG::resize(int x, int y, int width, int height, float fill, float max_scale) {\n+  // Center \n+  transform = D2D1::Matrix3x2F::Identity();\n+  transform = transform * D2D1::Matrix3x2F::Translation((width - svg_width) / 2.0f, (height - svg_height) / 2.0f);\n+  float h_scale = fill * height / svg_height;\n+  float v_scale = fill * width / svg_width;\n+  used_scale = min(h_scale, v_scale);\n+  if (max_scale > 0) {\n+    used_scale = min(used_scale, max_scale);\n+  }\n+  transform = transform * D2D1::Matrix3x2F::Scale(used_scale, used_scale, D2D1::Point2F(width / 2.0f, height / 2.0f));\n+  transform = transform * D2D1::Matrix3x2F::Translation((float)x, (float)y);\n+  return *this;\n+}\n+\n+D2DSVG& D2DSVG::recolor(uint32_t oldcolor, uint32_t newcolor) {\n+  auto new_color = D2D1::ColorF(newcolor & 0xFFFFFF, 1);\n+  auto old_color = D2D1::ColorF(oldcolor & 0xFFFFFF, 1);\n+  std::function<void(ID2D1SvgElement* element)> recurse = [&](ID2D1SvgElement* element) {\n+    if (!element)\n+      return;\n+    if (element->IsAttributeSpecified(L""fill"")) {\n+      D2D1_COLOR_F elem_fill;\n+      winrt::com_ptr<ID2D1SvgPaint> paint;\n+      element->GetAttributeValue(L""fill"", paint.put());\n+      paint->GetColor(&elem_fill);\n+      if (elem_fill.r == old_color.r && elem_fill.g == old_color.g && elem_fill.b == old_color.b) {\n+        winrt::check_hresult(element->SetAttributeValue(L""fill"", new_color));\n+      }\n+    }\n+    winrt::com_ptr<ID2D1SvgElement> sub;\n+    element->GetFirstChild(sub.put());\n+    while (sub) {\n+      recurse(sub.get());\n+      winrt::com_ptr<ID2D1SvgElement> next;\n+      element->GetNextChild(sub.get(), next.put());\n+      sub = next;\n+    }\n+  };\n+  winrt::com_ptr<ID2D1SvgElement> root;\n+  svg->GetRoot(root.put());\n+  recurse(root.get());\n+  return *this;\n+}\n+\n+\n+D2DSVG& D2DSVG::render(ID2D1DeviceContext5* d2d_dc) {\n+  D2D1_MATRIX_3X2_F current;\n+  d2d_dc->GetTransform(&current);\n+  d2d_dc->SetTransform(transform * current);\n+  d2d_dc->DrawSvgDocument(svg.get());\n+  d2d_dc->SetTransform(current);\n+  return *this;\n+}\n+\n+D2DSVG& D2DSVG::toggle_element(const wchar_t* id, bool visible) {\n+  winrt::com_ptr<ID2D1SvgElement> element;\n+  if (svg->FindElementById(id, element.put()) != S_OK)\n+    return *this;\n+  if (!element)\n+    return *this;\n+  element->SetAttributeValue(L""display"", visible ? D2D1_SVG_DISPLAY::D2D1_SVG_DISPLAY_INLINE : D2D1_SVG_DISPLAY::D2D1_SVG_DISPLAY_NONE);\n+  return *this;\n+}\n+\n+winrt::com_ptr<ID2D1SvgElement> D2DSVG::find_element(const std::wstring& id) {\n+  winrt::com_ptr< ID2D1SvgElement> element;\n+  winrt::check_hresult(svg->FindElementById(id.c_str(), element.put()));\n+  return element;\n+}\n+\n+D2D1_RECT_F D2DSVG::rescale(D2D1_RECT_F rect) {\n+  D2D1_RECT_F result;\n+  auto src = reinterpret_cast<D2D1_POINT_2F*>(&rect);\n+  auto dst = reinterpret_cast<D2D1_POINT_2F*>(&result);\n+  dst[0] = src[0] * transform;\n+  dst[1] = src[1] * transform;\n+  return result;\n+}'}, {'Name': 'src/common/d2d_svg.h', 'Line Additions': 24, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,24 @@\n+#pragma once\n+#include <d2d1_3.h>\n+#include <d2d1_3helper.h>\n+#include <winrt/base.h>\n+#include <string>\n+\n+class D2DSVG {\n+public:\n+  D2DSVG& load(const std::wstring& filename, ID2D1DeviceContext5* d2d_dc);\n+  D2DSVG& resize(int x, int y, int width, int height, float fill, float max_scale = -1.0f);\n+  D2DSVG& render(ID2D1DeviceContext5* d2d_dc);\n+  D2DSVG& recolor(uint32_t oldcolor, uint32_t newcolor);\n+  float get_scale() const { return used_scale; }\n+  int width() const { return svg_width; }\n+  int height() const { return svg_height; }\n+  D2DSVG& toggle_element(const wchar_t* id, bool visible);\n+  winrt::com_ptr<ID2D1SvgElement> find_element(const std::wstring& id);\n+  D2D1_RECT_F rescale(D2D1_RECT_F rect);\n+protected:\n+  float used_scale = 1.0f;\n+  winrt::com_ptr<ID2D1SvgDocument> svg;\n+  int svg_width = -1, svg_height = -1;\n+  D2D1::Matrix3x2F transform;\n+};'}, {'Name': 'src/common/d2d_text.cpp', 'Line Additions': 48, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,48 @@\n+#include ""pch.h""\n+#include ""d2d_text.h""\n+\n+D2DText::D2DText(float text_size, float scale) {\n+  winrt::check_hresult(DWriteCreateFactory(DWRITE_FACTORY_TYPE_SHARED, __uuidof(factory), reinterpret_cast<IUnknown**>(factory.put_void())));\n+  resize(text_size, scale);\n+  winrt::check_hresult(format->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_CENTER));\n+  winrt::check_hresult(format->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER));\n+}\n+\n+D2DText & D2DText::resize(float text_size, float scale) {\n+  format = nullptr;\n+  winrt::check_hresult(factory->CreateTextFormat(L""Segoe UI"",\n+                       nullptr,\n+                       DWRITE_FONT_WEIGHT_NORMAL,\n+                       DWRITE_FONT_STYLE_NORMAL,\n+                       DWRITE_FONT_STRETCH_NORMAL,\n+                       text_size * scale,\n+                       L""en-us"",\n+                       format.put()));\n+  winrt::check_hresult(format->SetParagraphAlignment(DWRITE_PARAGRAPH_ALIGNMENT_CENTER));\n+  return *this;\n+}\n+\n+D2DText & D2DText::set_aligment_left() {\n+  winrt::check_hresult(format->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_LEADING));\n+  return *this;\n+}\n+\n+D2DText & D2DText::set_aligment_center() {\n+  winrt::check_hresult(format->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_CENTER));\n+  return *this;\n+}\n+\n+D2DText & D2DText::set_aligment_right() {\n+  winrt::check_hresult(format->SetTextAlignment(DWRITE_TEXT_ALIGNMENT_TRAILING));\n+  return *this;\n+}\n+\n+void D2DText::write(ID2D1DeviceContext5 * d2d_dc, D2D1_COLOR_F color, D2D1_RECT_F rect, std::wstring text) {\n+  winrt::com_ptr<ID2D1SolidColorBrush> brush;\n+  d2d_dc->CreateSolidColorBrush(color, brush.put());\n+  d2d_dc->DrawText(text.c_str(),\n+                  (UINT32)text.length(),\n+                  format.get(),\n+                  rect,\n+                  brush.get());\n+}'}, {'Name': 'src/common/d2d_text.h', 'Line Additions': 16, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,16 @@\n+#pragma once\n+#include <winrt/base.h>\n+#include <dwrite.h>\n+\n+class D2DText {\n+public:\n+  D2DText(float text_size = 15.0f, float scale = 1.0f);\n+  D2DText& resize(float text_size, float scale);\n+  D2DText& set_aligment_left();\n+  D2DText& set_aligment_center();\n+  D2DText& set_aligment_right();\n+  void write(ID2D1DeviceContext5* d2d_dc, D2D1_COLOR_F color, D2D1_RECT_F rect, std::wstring text);\n+private:\n+  winrt::com_ptr<IDWriteFactory> factory;\n+  winrt::com_ptr<IDWriteTextFormat> format;\n+};'}, {'Name': 'src/common/d2d_window.cpp', 'Line Additions': 184, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,184 @@\n+#include ""pch.h""\n+#include ""d2d_window.h""\n+\n+extern ""C"" IMAGE_DOS_HEADER __ImageBase;\n+\n+D2DWindow::D2DWindow() {\n+  static const WCHAR* class_name = L""PToyD2DPopup"";\n+  WNDCLASS wc = {};\n+  wc.hCursor = LoadCursor(nullptr, IDC_ARROW);\n+  wc.hInstance = reinterpret_cast<HINSTANCE>(&__ImageBase);\n+  wc.lpszClassName = class_name;\n+  wc.style = CS_HREDRAW | CS_VREDRAW;\n+  wc.lpfnWndProc = d2d_window_proc;\n+  RegisterClass(&wc);\n+  hwnd = CreateWindowExW(WS_EX_TOOLWINDOW | WS_EX_TOPMOST | WS_EX_NOREDIRECTIONBITMAP | WS_EX_LAYERED,\n+                         wc.lpszClassName,\n+                         L""PToyD2DPopup"",\n+                         WS_POPUP| WS_VISIBLE,\n+                         CW_USEDEFAULT, CW_USEDEFAULT,\n+                         CW_USEDEFAULT, CW_USEDEFAULT,\n+                         nullptr, nullptr, wc.hInstance, this);\n+  WINRT_VERIFY(hwnd);\n+}\n+\n+void D2DWindow::show(UINT x, UINT y, UINT width, UINT height) {\n+  if (!initialized) {\n+    base_init();\n+  }\n+  base_resize(width, height);\n+  render_empty();\n+  on_show();\n+  SetWindowPos(hwnd, HWND_TOPMOST, x, y, width, height, 0);\n+  ShowWindow(hwnd, SW_SHOWNORMAL);\n+  UpdateWindow(hwnd);\n+}\n+\n+void D2DWindow::hide() {\n+  ShowWindow(hwnd, SW_HIDE);\n+  on_hide();\n+}\n+\n+void D2DWindow::initialize() {\n+  base_init();\n+}\n+\n+void D2DWindow::base_init() {\n+  std::unique_lock lock(mutex);\n+  // D2D1Factory is independent from the device, no need to recreate it if we need to recreate the device.\n+  if (!d2d_factory) {\n+#ifdef _DEBUG\n+    D2D1_FACTORY_OPTIONS options = { D2D1_DEBUG_LEVEL_INFORMATION };\n+#else\n+    D2D1_FACTORY_OPTIONS options = {};\n+#endif\n+    winrt::check_hresult(D2D1CreateFactory(D2D1_FACTORY_TYPE_MULTI_THREADED,\n+                                           __uuidof(d2d_factory),\n+                                           &options,\n+                                           d2d_factory.put_void()));\n+  }\n+  // For all other stuff - assing nullptr first to release the object, to reset the com_ptr.\n+  d2d_dc = nullptr;\n+  d2d_device = nullptr;\n+  dxgi_factory = nullptr;\n+  dxgi_device = nullptr;\n+  d3d_device = nullptr;\n+  winrt::check_hresult(D3D11CreateDevice(nullptr,\n+                                         D3D_DRIVER_TYPE_HARDWARE,\n+                                         nullptr,\n+                                         D3D11_CREATE_DEVICE_BGRA_SUPPORT,\n+                                         nullptr,\n+                                         0,\n+                                         D3D11_SDK_VERSION,\n+                                         d3d_device.put(),\n+                                         nullptr,\n+                                         nullptr));\n+  winrt::check_hresult(d3d_device->QueryInterface(__uuidof(dxgi_device), dxgi_device.put_void()));\n+  winrt::check_hresult(CreateDXGIFactory2(0, __uuidof(dxgi_factory), dxgi_factory.put_void()));\n+  winrt::check_hresult(d2d_factory->CreateDevice(dxgi_device.get(), d2d_device.put()));\n+  winrt::check_hresult(d2d_device->CreateDeviceContext(D2D1_DEVICE_CONTEXT_OPTIONS_NONE, d2d_dc.put()));\n+  init();\n+  initialized = true;\n+}\n+\n+void D2DWindow::base_resize(UINT width, UINT height) {\n+  std::unique_lock lock(mutex);\n+  if (!initialized) {\n+    return;\n+  }\n+  window_width = width;\n+  window_height = height;\n+  if (window_width == 0 || window_height == 0) {\n+    return;\n+  }\n+  DXGI_SWAP_CHAIN_DESC1 sc_description = {};\n+  sc_description.Format = DXGI_FORMAT_B8G8R8A8_UNORM;\n+  sc_description.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n+  sc_description.SwapEffect = DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL;\n+  sc_description.BufferCount = 2;\n+  sc_description.SampleDesc.Count = 1;\n+  sc_description.AlphaMode = DXGI_ALPHA_MODE_PREMULTIPLIED;\n+  sc_description.Width = window_width;\n+  sc_description.Height = window_height;\n+  dxgi_swap_chain = nullptr;\n+  winrt::check_hresult(dxgi_factory->CreateSwapChainForComposition(dxgi_device.get(),\n+                                                                   &sc_description,\n+                                                                   nullptr,\n+                                                                   dxgi_swap_chain.put()));\n+  composition_device = nullptr;\n+  winrt::check_hresult(DCompositionCreateDevice(dxgi_device.get(),\n+                                                __uuidof(composition_device),\n+                                                composition_device.put_void()));\n+\n+  composition_target = nullptr;\n+  winrt::check_hresult(composition_device->CreateTargetForHwnd(hwnd, true, composition_target.put()));\n+  \n+  composition_visual = nullptr;\n+  winrt::check_hresult(composition_device->CreateVisual(composition_visual.put()));\n+  winrt::check_hresult(composition_visual->SetContent(dxgi_swap_chain.get()));\n+  winrt::check_hresult(composition_target->SetRoot(composition_visual.get()));\n+  \n+  dxgi_surface = nullptr;\n+  winrt::check_hresult(dxgi_swap_chain->GetBuffer(0, __uuidof(dxgi_surface), dxgi_surface.put_void()));\n+  D2D1_BITMAP_PROPERTIES1 properties = {};\n+  properties.pixelFormat.alphaMode = D2D1_ALPHA_MODE_PREMULTIPLIED;\n+  properties.pixelFormat.format = DXGI_FORMAT_B8G8R8A8_UNORM;\n+  properties.bitmapOptions = D2D1_BITMAP_OPTIONS_TARGET | D2D1_BITMAP_OPTIONS_CANNOT_DRAW;\n+  \n+  d2d_bitmap = nullptr;\n+  winrt::check_hresult(d2d_dc->CreateBitmapFromDxgiSurface(dxgi_surface.get(),\n+                                                           properties,\n+                                                           d2d_bitmap.put()));\n+  d2d_dc->SetTarget(d2d_bitmap.get());\n+  resize();\n+}\n+\n+void D2DWindow::base_render() {\n+  std::unique_lock lock(mutex);\n+  if (!initialized || !d2d_dc || !d2d_bitmap)\n+    return;\n+  d2d_dc->BeginDraw();\n+  render(d2d_dc.get());\n+  winrt::check_hresult(d2d_dc->EndDraw());\n+  winrt::check_hresult(dxgi_swap_chain->Present(1, 0));\n+  winrt::check_hresult(composition_device->Commit());\n+}\n+\n+void D2DWindow::render_empty() {\n+  std::unique_lock lock(mutex);\n+  if (!initialized || !d2d_dc || !d2d_bitmap)\n+    return;\n+  d2d_dc->BeginDraw();\n+  d2d_dc->Clear();\n+  winrt::check_hresult(d2d_dc->EndDraw());\n+  winrt::check_hresult(dxgi_swap_chain->Present(1, 0));\n+  winrt::check_hresult(composition_device->Commit());\n+}\n+\n+D2DWindow::~D2DWindow() {\n+  ShowWindow(hwnd, SW_HIDE);\n+  DestroyWindow(hwnd);\n+}\n+\n+D2DWindow* D2DWindow::this_from_hwnd(HWND window) {\n+  return reinterpret_cast<D2DWindow*>(GetWindowLongPtr(window, GWLP_USERDATA));\n+}\n+\n+LRESULT __stdcall D2DWindow::d2d_window_proc(HWND window, UINT message, WPARAM wparam, LPARAM lparam) {\n+  switch (message) {\n+  case WM_NCCREATE: {\n+    auto create_struct = reinterpret_cast<CREATESTRUCT*>(lparam);\n+    SetWindowLongPtr(window, GWLP_USERDATA, reinterpret_cast<LONG_PTR>(create_struct->lpCreateParams));\n+    return TRUE;\n+  }\n+  case WM_MOVE:\n+  case WM_SIZE:\n+    this_from_hwnd(window)->base_resize((unsigned)lparam & 0xFFFF, (unsigned)lparam >> 16);\n+    // Fall through to call \'base_render()\'\n+  case WM_PAINT:\n+    this_from_hwnd(window)->base_render();\n+    return 0;\n+  default:\n+    return DefWindowProc(window, message, wparam, lparam);\n+  }\n+}'}, {'Name': 'src/common/d2d_window.h', 'Line Additions': 60, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,60 @@\n+#pragma once\n+#include <winrt/base.h>\n+#include <Windows.h>\n+#include <dxgi1_3.h>\n+#include <d3d11_2.h>\n+#include <d2d1_3.h>\n+#include <d2d1_3helper.h>\n+#include <d2d1helper.h>\n+#include <dcomp.h>\n+#include <dwmapi.h>\n+#include <string>\n+#include ""d2d_svg.h""\n+\n+class D2DWindow\n+{\n+public:\n+  D2DWindow();\n+  void show(UINT x, UINT y, UINT width, UINT height);\n+  void hide();\n+  void initialize();\n+  virtual ~D2DWindow();\n+protected:\n+  // Implement this:\n+\n+  // Initialization - called when D2D device needs to be created.\n+  //   When called all D2DWindow members will be initialized, including d2d_dc\n+  virtual void init() = 0;\n+  // resize - when called, window_width and window_height will have current window size\n+  virtual void resize() = 0;\n+  // render - called on WM_PAIT, BeginPaint/EndPaint is handled by D2DWindow\n+  virtual void render(ID2D1DeviceContext5* d2d_dc) = 0;\n+  // on_show, on_hide - called when the window is about to be shown or about to be hidden\n+  virtual void on_show() = 0;\n+  virtual void on_hide() = 0;\n+\n+  static LRESULT __stdcall d2d_window_proc(HWND window, UINT message, WPARAM wparam, LPARAM lparam);\n+  static D2DWindow* this_from_hwnd(HWND window);\n+  \n+  void base_init();\n+  void base_resize(UINT width, UINT height);\n+  void base_render();\n+  void render_empty();\n+\n+  std::recursive_mutex mutex;\n+  bool initialized = false;\n+  HWND hwnd;\n+  UINT window_width, window_height;\n+  winrt::com_ptr<ID3D11Device> d3d_device;\n+  winrt::com_ptr<IDXGIDevice> dxgi_device;\n+  winrt::com_ptr<IDXGIFactory2> dxgi_factory;\n+  winrt::com_ptr<IDXGISwapChain1> dxgi_swap_chain;\n+  winrt::com_ptr<IDCompositionDevice> composition_device;\n+  winrt::com_ptr<IDCompositionTarget> composition_target;\n+  winrt::com_ptr<IDCompositionVisual> composition_visual;\n+  winrt::com_ptr<IDXGISurface2> dxgi_surface;\n+  winrt::com_ptr<ID2D1Bitmap1> d2d_bitmap;\n+  winrt::com_ptr<ID2D1Factory6> d2d_factory;\n+  winrt::com_ptr<ID2D1Device5> d2d_device;\n+  winrt::com_ptr<ID2D1DeviceContext5> d2d_dc;\n+};'}, {'Name': 'src/common/dpi_aware.cpp', 'Line Additions': 28, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,28 @@\n+#include ""pch.h""\n+#include ""dpi_aware.h""\n+#include ""monitors.h""\n+#include <ShellScalingApi.h>\n+\n+HRESULT DPIAware::GetScreenDPIForWindow(HWND hwnd, UINT &dpi_x, UINT &dpi_y) {\n+  auto monitor_handle = MonitorFromWindow(hwnd, MONITOR_DEFAULTTONEAREST);\n+  dpi_x = 0;\n+  dpi_y = 0;\n+  if (monitor_handle != nullptr) {\n+    return GetDpiForMonitor(monitor_handle, MDT_EFFECTIVE_DPI, &dpi_x, &dpi_y);\n+  } else {\n+    return E_FAIL;\n+  }\n+}\n+\n+void DPIAware::Convert(HMONITOR monitor_handle, int &width, int &height) {\n+  if (monitor_handle == NULL) {\n+    const POINT ptZero = { 0, 0 };\n+    monitor_handle = MonitorFromPoint(ptZero, MONITOR_DEFAULTTOPRIMARY);\n+  }\n+\n+  UINT dpi_x, dpi_y;\n+  if (GetDpiForMonitor(monitor_handle, MDT_EFFECTIVE_DPI, &dpi_x, &dpi_y) == S_OK) {\n+    width = width * dpi_x / DEFAULT_DPI;\n+    height = height * dpi_y / DEFAULT_DPI;\n+  }\n+}\n\\ No newline at end of file'}, {'Name': 'src/common/dpi_aware.h', 'Line Additions': 11, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,11 @@\n+#pragma once\n+#include ""windef.h""\n+\n+class DPIAware {\n+private:\n+  static const int DEFAULT_DPI = 96;\n+\n+public:\n+  static HRESULT GetScreenDPIForWindow(HWND hwnd, UINT & dpi_x, UINT & dpi_y);\n+  static void Convert(HMONITOR monitor_handle, int &width, int &high);\n+};'}, {'Name': 'src/common/monitors.cpp', 'Line Additions': 67, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,67 @@\n+#include ""pch.h""\n+#include ""monitors.h""\n+\n+bool operator==(const ScreenSize& lhs, const ScreenSize& rhs) {\n+  auto lhs_tuple = std::make_tuple(lhs.rect.left, lhs.rect.right, lhs.rect.top, lhs.rect.bottom);\n+  auto rhs_tuple = std::make_tuple(rhs.rect.left, rhs.rect.right, rhs.rect.top, rhs.rect.bottom);\n+  return lhs_tuple == rhs_tuple;\n+}\n+\n+static BOOL CALLBACK get_displays_enum_cb(HMONITOR monitor, HDC hdc, LPRECT rect, LPARAM data) {\n+  MONITORINFOEX monitor_info;\n+  monitor_info.cbSize = sizeof(MONITORINFOEX);\n+  GetMonitorInfo(monitor, &monitor_info);\n+  reinterpret_cast<std::vector<MonitorInfo>*>(data)->emplace_back(monitor, monitor_info.rcWork);\n+  return true;\n+};\n+\n+static BOOL CALLBACK get_displays_enum_cb_with_toolbar(HMONITOR monitor, HDC hdc, LPRECT rect, LPARAM data) {\n+  MONITORINFOEX monitor_info;\n+  monitor_info.cbSize = sizeof(MONITORINFOEX);\n+  GetMonitorInfo(monitor, &monitor_info);\n+  reinterpret_cast<std::vector<MonitorInfo>*>(data)->emplace_back(monitor, monitor_info.rcMonitor);\n+  return true;\n+};\n+\n+std::vector<MonitorInfo> MonitorInfo::GetMonitors(bool include_toolbars) {\n+  std::vector<MonitorInfo> monitors;\n+  EnumDisplayMonitors(NULL, NULL, include_toolbars ? get_displays_enum_cb_with_toolbar : get_displays_enum_cb, reinterpret_cast<LPARAM>(&monitors));\n+  std::sort(begin(monitors), end(monitors), [](const MonitorInfo& lhs, const MonitorInfo& rhs) {\n+    return lhs.rect < rhs.rect;\n+    });\n+  return monitors;\n+}\n+\n+static BOOL CALLBACK get_primary_display_enum_cb(HMONITOR monitor, HDC hdc, LPRECT rect, LPARAM data) {\n+  MONITORINFOEX monitor_info;\n+  monitor_info.cbSize = sizeof(MONITORINFOEX);\n+  GetMonitorInfo(monitor, &monitor_info);\n+  if (monitor_info.dwFlags & MONITORINFOF_PRIMARY) {\n+    reinterpret_cast<MonitorInfo*>(data)->handle = monitor;\n+    reinterpret_cast<MonitorInfo*>(data)->rect = monitor_info.rcWork;\n+  }\n+  return true;\n+};\n+\n+MonitorInfo MonitorInfo::GetPrimaryMonitor() {\n+  MonitorInfo primary({}, {});\n+  EnumDisplayMonitors(NULL, NULL, get_primary_display_enum_cb, reinterpret_cast<LPARAM>(&primary));\n+  return primary;\n+}\n+\n+MonitorInfo MonitorInfo::GetFromWindow(HWND hwnd) {\n+  auto monitor = MonitorFromWindow(hwnd, MONITOR_DEFAULTTONEAREST);\n+  return GetFromHandle(monitor);\n+}\n+\n+MonitorInfo MonitorInfo::GetFromPoint(POINT p) {\n+  auto monitor = MonitorFromPoint(p, MONITOR_DEFAULTTONEAREST);\n+  return GetFromHandle(monitor);\n+}\n+\n+MonitorInfo MonitorInfo::GetFromHandle(HMONITOR monitor) {\n+  MONITORINFOEX monitor_info;\n+  monitor_info.cbSize = sizeof(MONITORINFOEX);\n+  GetMonitorInfo(monitor, &monitor_info);\n+  return MonitorInfo(monitor, monitor_info.rcWork);\n+}'}, {'Name': 'src/common/monitors.h', 'Line Additions': 41, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,41 @@\n+#pragma once\n+#include <Windows.h>\n+#include <vector>\n+\n+struct ScreenSize {\n+  explicit ScreenSize(RECT rect) : rect(rect) {}\n+  RECT rect;\n+  int left()    const { return rect.left; }\n+  int right()   const { return rect.right; }\n+  int top()     const { return rect.top; }\n+  int bottom()  const { return rect.bottom; }\n+  int height()  const { return rect.bottom - rect.top; };\n+  int width()   const { return rect.right - rect.left; };\n+  POINT top_left()     const { return { rect.left,               rect.top }; };\n+  POINT top_middle()   const { return { rect.left + width() / 2, rect.top }; };\n+  POINT top_right()    const { return { rect.right,              rect.top }; };\n+  POINT middle_left()  const { return { rect.left,               rect.top + height() / 2 }; };\n+  POINT middle()       const { return { rect.left + width() / 2, rect.top + height() / 2 }; };\n+  POINT middle_right() const { return { rect.right,              rect.top + height() / 2 }; };\n+  POINT bottom_left()  const { return { rect.left,               rect.bottom }; };\n+  POINT bottm_midle()  const { return { rect.left + width() / 2, rect.bottom }; };\n+  POINT bottom_right() const { return { rect.right,              rect.bottom }; };\n+};\n+\n+struct MonitorInfo : ScreenSize {\n+  explicit MonitorInfo(HMONITOR monitor,  RECT rect) : handle(monitor), ScreenSize(rect) {}\n+  HMONITOR handle;\n+\n+  // Returns monitor rects ordered from left to right\n+  static std::vector<MonitorInfo> GetMonitors(bool include_toolbar);\n+  // Return primary display\n+  static MonitorInfo GetPrimaryMonitor();\n+  // Return monitor on which hwnd window is displayed\n+  static MonitorInfo GetFromWindow(HWND hwnd);\n+  // Return monitor nearest to a point\n+  static MonitorInfo GetFromPoint(POINT p);\n+  // Return monitor info given a HMONITOR\n+  static MonitorInfo GetFromHandle(HMONITOR monitor);\n+};\n+\n+bool operator==(const ScreenSize& lhs, const ScreenSize& rhs);'}, {'Name': 'src/common/pch.cpp', 'Line Additions': 1, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1 @@\n+#include ""pch.h""'}, {'Name': 'src/common/pch.h', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+#include <winrt/base.h>\n+#include <Windows.h>\n+#include <dxgi1_3.h>\n+#include <d3d11_2.h>\n+#include <d2d1_3.h>\n+#include <d2d1_3helper.h>\n+#include <d2d1helper.h>\n+#include <dwrite.h>\n+#include <dcomp.h>\n+#include <dwmapi.h>\n+#include <Shobjidl.h>\n+#include <Shlwapi.h>\n+#include <string>\n+#include <algorithm>\n+#include <chrono>\n+#include <mutex>\n+#include <thread>\n+#include <functional>\n+#include <condition_variable>\n+#include <stdexcept>\n+#include <tuple>\n+#include <unordered_set>\n+#include <string>\n+#include <vector>\n+\n+#include ""common.h""'}, {'Name': 'src/common/settings_helpers.cpp', 'Line Additions': 75, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,75 @@\n+#include ""pch.h""\n+#include ""settings_helpers.h""\n+#include <filesystem>\n+#include <fstream>\n+\n+namespace PTSettingsHelper {\n+  std::wstring get_root_save_folder_location() {\n+    PWSTR local_app_path;\n+    std::wstring result(L"""");\n+\n+    winrt::check_hresult(SHGetKnownFolderPath(FOLDERID_LocalAppData, 0, NULL, &local_app_path));\n+    result = std::wstring(local_app_path);\n+    CoTaskMemFree(local_app_path);\n+\n+    result += L""\\\\Microsoft\\\\PowerToys"";\n+    std::filesystem::path save_path(result);\n+    if (!std::filesystem::exists(save_path)) {\n+      std::filesystem::create_directories(save_path);\n+    }\n+    return result;\n+  }\n+\n+  std::wstring get_module_save_folder_location(const std::wstring& powertoy_name) {\n+    std::wstring result = get_root_save_folder_location();\n+    result += L""\\\\"";\n+    result += powertoy_name;\n+    std::filesystem::path save_path(result);\n+    if (!std::filesystem::exists(save_path)) {\n+      std::filesystem::create_directories(save_path);\n+    }\n+    return result;\n+  }\n+\n+  std::wstring get_module_save_file_location(const std::wstring& powertoy_name) {\n+    std::wstring result = get_module_save_folder_location(powertoy_name);\n+    result += L""\\\\settings.json"";\n+    return result;\n+  }\n+\n+  std::wstring get_powertoys_general_save_file_location() {\n+    std::wstring result = get_root_save_folder_location();\n+    result += L""\\\\settings.json"";\n+    return result;\n+  }\n+\n+  void save_module_settings(const std::wstring& powertoy_name, web::json::value& settings) {\n+    std::wstring save_file_location = get_module_save_file_location(powertoy_name);\n+    std::ofstream save_file(save_file_location, std::ios::binary);\n+    settings.serialize(save_file);\n+    save_file.close();\n+  }\n+\n+  web::json::value load_module_settings(const std::wstring& powertoy_name) {\n+    std::wstring save_file_location = get_module_save_file_location(powertoy_name);\n+    std::ifstream save_file(save_file_location, std::ios::binary);\n+    web::json::value result = web::json::value::parse(save_file);\n+    save_file.close();\n+    return result;\n+  }\n+\n+  void save_general_settings(web::json::value& settings) {\n+    std::wstring save_file_location = get_powertoys_general_save_file_location();\n+    std::ofstream save_file(save_file_location, std::ios::binary);\n+    settings.serialize(save_file);\n+    save_file.close();\n+  }\n+\n+  web::json::value load_general_settings() {\n+    std::wstring save_file_location = get_powertoys_general_save_file_location();\n+    std::ifstream save_file(save_file_location, std::ios::binary);\n+    web::json::value result = web::json::value::parse(save_file);\n+    save_file.close();\n+    return result;\n+  }\n+}'}, {'Name': 'src/common/settings_helpers.h', 'Line Additions': 13, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,13 @@\n+#pragma once\n+#include <string>\n+#include <Shlobj.h>\n+#include <cpprest/json.h>\n+\n+namespace PTSettingsHelper {\n+\n+  void save_module_settings(const std::wstring& powertoy_name, web::json::value& settings);\n+  web::json::value load_module_settings(const std::wstring& powertoy_name);\n+  void save_general_settings(web::json::value& settings);\n+  web::json::value load_general_settings();\n+\n+}'}, {'Name': 'src/common/settings_objects.cpp', 'Line Additions': 237, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,237 @@\n+#include ""pch.h""\n+#include ""settings_objects.h""\n+#include ""settings_helpers.h""\n+\n+namespace PowerToysSettings {\n+\n+  Settings::Settings(const HINSTANCE hinstance, const std::wstring& powertoy_name) {\n+    m_instance = hinstance;\n+    m_json = web::json::value::object();\n+    m_json.as_object()[L""version""] = web::json::value::string(L""1.0"");\n+    m_json.as_object()[L""name""] = web::json::value::string(powertoy_name);\n+    m_json.as_object()[L""properties""] = web::json::value::object();\n+  }\n+\n+  void Settings::set_description(UINT resource_id) {\n+    m_json.as_object()[L""description""] = web::json::value::string(get_resource(resource_id));\n+  }\n+\n+  void Settings::set_description(const std::wstring& description) {\n+    m_json.as_object()[L""description""] = web::json::value::string(description);\n+  }\n+\n+  void Settings::set_icon_key(const std::wstring& icon_key) {\n+    m_json.as_object()[L""icon_key""] = web::json::value::string(icon_key);\n+  }\n+\n+  void Settings::set_overview_link(const std::wstring& overview_link) {\n+    m_json.as_object()[L""overview_link""] = web::json::value::string(overview_link);\n+  }\n+\n+  void Settings::set_video_link(const std::wstring& video_link) {\n+    m_json.as_object()[L""video_link""] = web::json::value::string(video_link);\n+  }\n+\n+  // add_bool_toogle overloads.\n+  void Settings::add_bool_toogle(const std::wstring& name, UINT description_resource_id, bool value) {\n+    add_bool_toogle(name, get_resource(description_resource_id), value);\n+  }\n+\n+  void Settings::add_bool_toogle(const std::wstring& name, const std::wstring& description, bool value) {\n+    web::json::value item = web::json::value::object();\n+    item.as_object()[L""display_name""] = web::json::value::string(description);\n+    item.as_object()[L""editor_type""] = web::json::value::string(L""bool_toggle"");\n+    item.as_object()[L""value""] = web::json::value::boolean(value);\n+    item.as_object()[L""order""] = web::json::value::number(++m_curr_priority);\n+\n+    m_json.as_object()[L""properties""].as_object()[name] = item;\n+  }\n+\n+  // add_int_spinner overloads.\n+  void Settings::add_int_spinner(const std::wstring& name, UINT description_resource_id, int value, int min, int max, int step) {\n+    add_int_spinner(name, get_resource(description_resource_id), value, min, max, step);\n+  }\n+\n+  void Settings::add_int_spinner(const std::wstring& name, const std::wstring& description, int value, int min, int max, int step) {\n+    web::json::value item = web::json::value::object();\n+    item.as_object()[L""display_name""] = web::json::value::string(description);\n+    item.as_object()[L""editor_type""] = web::json::value::string(L""int_spinner"");\n+    item.as_object()[L""value""] = web::json::value::number(value);\n+    item.as_object()[L""min""] = web::json::value::number(min);\n+    item.as_object()[L""max""] = web::json::value::number(max);\n+    item.as_object()[L""step""] = web::json::value::number(step);\n+    item.as_object()[L""order""] = web::json::value::number(++m_curr_priority);\n+\n+    m_json.as_object()[L""properties""].as_object()[name] = item;\n+  }\n+\n+  // add_string overloads.\n+  void Settings::add_string(const std::wstring& name, UINT description_resource_id, const std::wstring& value) {\n+    add_string(name, get_resource(description_resource_id), value);\n+  }\n+\n+  void Settings::add_string(const std::wstring& name, const std::wstring& description, const std::wstring& value) {\n+    web::json::value item = web::json::value::object();\n+    item.as_object()[L""display_name""] = web::json::value::string(description);\n+    item.as_object()[L""editor_type""] = web::json::value::string(L""string_text"");\n+    item.as_object()[L""value""] = web::json::value::string(value);\n+    item.as_object()[L""order""] = web::json::value::number(++m_curr_priority);\n+\n+    m_json.as_object()[L""properties""].as_object()[name] = item;\n+  }\n+\n+  // add_color_picker overloads.\n+  void Settings::add_color_picker(const std::wstring& name, UINT description_resource_id, const std::wstring& value) {\n+    add_color_picker(name, get_resource(description_resource_id), value);\n+  }\n+\n+  void Settings::add_color_picker(const std::wstring& name, const std::wstring& description, const std::wstring& value) {\n+    web::json::value item = web::json::value::object();\n+    item.as_object()[L""display_name""] = web::json::value::string(description);\n+    item.as_object()[L""editor_type""] = web::json::value::string(L""color_picker"");\n+    item.as_object()[L""value""] = web::json::value::string(value);\n+    item.as_object()[L""order""] = web::json::value::number(++m_curr_priority);\n+\n+    m_json.as_object()[L""properties""].as_object()[name] = item;\n+  }\n+\n+  // add_custom_action overloads.\n+  void Settings::add_custom_action(const std::wstring& name, UINT description_resource_id, UINT button_text_resource_id, UINT ext_description_resource_id) {\n+    add_custom_action(name, get_resource(description_resource_id), get_resource(button_text_resource_id), get_resource(ext_description_resource_id));\n+  }\n+\n+  void Settings::add_custom_action(const std::wstring& name, UINT description_resource_id, UINT button_text_resource_id, const std::wstring& value) {\n+    add_custom_action(name, get_resource(description_resource_id), get_resource(button_text_resource_id), value);\n+  }\n+\n+  void Settings::add_custom_action(const std::wstring& name, const std::wstring& description, const std::wstring& button_text, const std::wstring& value) {\n+    web::json::value item = web::json::value::object();\n+    item.as_object()[L""display_name""] = web::json::value::string(description);\n+    item.as_object()[L""button_text""] = web::json::value::string(button_text);\n+    item.as_object()[L""editor_type""] = web::json::value::string(L""custom_action"");\n+    item.as_object()[L""value""] = web::json::value::string(value);\n+    item.as_object()[L""order""] = web::json::value::number(++m_curr_priority);\n+\n+    m_json.as_object()[L""properties""].as_object()[name] = item;\n+  }\n+\n+  // Serialization methods.\n+  std::wstring Settings::serialize() {\n+    return m_json.serialize();\n+  }\n+\n+  bool Settings::serialize_to_buffer(wchar_t* buffer, int *buffer_size) {\n+    std::wstring result = m_json.serialize();\n+    int result_len = (int)result.length();\n+\n+    if (buffer == nullptr || *buffer_size < result_len) {\n+      *buffer_size = result_len + 1;\n+      return false;\n+    } else {\n+      wcscpy_s(buffer, *buffer_size, result.c_str());\n+      return true;\n+    }\n+  }\n+\n+  // Resource helper.\n+  std::wstring Settings::get_resource(UINT resource_id) {\n+    if (resource_id != 0) {\n+      wchar_t buffer[512];\n+      if (LoadString(m_instance, resource_id, buffer, ARRAYSIZE(buffer)) > 0) {\n+        return std::wstring(buffer);\n+      }\n+    }\n+\n+    return L""RESOURCE ID NOT FOUND: "" + std::to_wstring(resource_id);\n+  }\n+\n+    PowerToyValues::PowerToyValues(const std::wstring& powertoy_name) {\n+    _name = powertoy_name;\n+    m_json = web::json::value::object();\n+    set_version();\n+    m_json.as_object()[L""name""] = web::json::value::string(powertoy_name);\n+    m_json.as_object()[L""properties""] = web::json::value::object();\n+  }\n+\n+  PowerToyValues PowerToyValues::from_json_string(const std::wstring& json) {\n+    PowerToyValues result = PowerToyValues();\n+    result.m_json = web::json::value::parse(json);\n+    result._name = result.m_json.as_object()[L""name""].as_string();\n+    return result;\n+  }\n+\n+  PowerToyValues PowerToyValues::load_from_settings_file(const std::wstring & powertoy_name) {\n+    PowerToyValues result = PowerToyValues();\n+    result.m_json = PTSettingsHelper::load_module_settings(powertoy_name);\n+    result._name = powertoy_name;\n+    return result;\n+  }\n+\n+  template <typename T>\n+  web::json::value add_property_generic(const std::wstring& name, T value) {\n+    std::vector<std::pair<std::wstring, web::json::value>> vector = { std::make_pair(L""value"", web::json::value(value)) };\n+    return web::json::value::object(vector);\n+  }\n+\n+  template <>\n+  void PowerToyValues::add_property(const std::wstring& name, bool value) {\n+    m_json.as_object()[L""properties""].as_object()[name] = add_property_generic(name, value);\n+  };\n+  \n+  template <>\n+  void PowerToyValues::add_property(const std::wstring& name, int value) {\n+    m_json.as_object()[L""properties""].as_object()[name] = add_property_generic(name, value);\n+  };\n+\n+  template <>\n+  void PowerToyValues::add_property(const std::wstring& name, std::wstring value) {\n+    m_json.as_object()[L""properties""].as_object()[name] = add_property_generic(name, value);\n+  };\n+\n+  bool PowerToyValues::is_bool_value(const std::wstring& property_name) {\n+    return m_json.is_object() &&\n+      m_json.has_object_field(L""properties"") &&\n+      m_json[L""properties""].has_object_field(property_name) &&\n+      m_json[L""properties""][property_name].has_boolean_field(L""value"");\n+  }\n+\n+  bool PowerToyValues::is_int_value(const std::wstring& property_name) {\n+    return m_json.is_object() &&\n+      m_json.has_object_field(L""properties"") &&\n+      m_json[L""properties""].has_object_field(property_name) &&\n+      m_json[L""properties""][property_name].has_integer_field(L""value"");\n+  }\n+\n+  bool PowerToyValues::is_string_value(const std::wstring& property_name) {\n+    return m_json.is_object() &&\n+      m_json.has_object_field(L""properties"") &&\n+      m_json[L""properties""].has_object_field(property_name) &&\n+      m_json[L""properties""][property_name].has_string_field(L""value"");\n+  }\n+\n+  bool PowerToyValues::get_bool_value(const std::wstring& property_name) {\n+    return m_json[L""properties""][property_name][L""value""].as_bool();\n+  }\n+\n+  int PowerToyValues::get_int_value(const std::wstring& property_name) {\n+    return m_json[L""properties""][property_name][L""value""].as_integer();\n+  }\n+\n+  std::wstring PowerToyValues::get_string_value(const std::wstring& property_name) {\n+    return m_json[L""properties""][property_name][L""value""].as_string();\n+  }\n+\n+  std::wstring PowerToyValues::serialize() {\n+    set_version();\n+    return m_json.serialize();\n+  }\n+\n+  void PowerToyValues::save_to_settings_file() {\n+    set_version();\n+    PTSettingsHelper::save_module_settings(_name, m_json);\n+  }\n+\n+  void PowerToyValues::set_version() {\n+    m_json.as_object()[L""version""] = web::json::value::string(m_version);\n+  }\n+}\n\\ No newline at end of file'}, {'Name': 'src/common/settings_objects.h', 'Line Additions': 96, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,96 @@\n+#pragma once\n+#include <string>\n+#include <cpprest/json.h>\n+\n+namespace PowerToysSettings {\n+\n+  class Settings {\n+  public:\n+    Settings(\n+      const HINSTANCE hinstance, // Module handle of the PowerToy DLL \'IMAGE_DOS_HEADER __ImageBase\'\n+      const std::wstring& powertoy_name\n+    );\n+\n+    // Add additional general information to the PowerToy settings.\n+    void set_description(UINT resource_id);\n+    void set_description(const std::wstring& description);\n+\n+    void set_icon_key(const std::wstring& icon_key);\n+    void set_overview_link(const std::wstring& overview_link);\n+    void set_video_link(const std::wstring& video_link);\n+\n+    // Add properties to the PowerToy settings.\n+    void add_bool_toogle(const std::wstring& name, UINT description_resource_id, bool value);\n+    void add_bool_toogle(const std::wstring& name, const std::wstring& description, bool value);\n+\n+    void add_int_spinner(const std::wstring& name, UINT description_resource_id, int value, int min, int max, int step);\n+    void add_int_spinner(const std::wstring& name, const std::wstring& description, int value, int min, int max, int step);\n+\n+    void add_string(const std::wstring& name, UINT description_resource_id, const std::wstring& value);\n+    void add_string(const std::wstring& name, const std::wstring& description, const std::wstring& value);\n+\n+    void add_color_picker(const std::wstring& name, UINT description_resource_id, const std::wstring& value);\n+    void add_color_picker(const std::wstring& name, const std::wstring& description, const std::wstring& value);\n+\n+    void add_custom_action(const std::wstring& name, UINT description_resource_id, UINT button_text_resource_id, UINT ext_description_resource_id);\n+    void add_custom_action(const std::wstring& name, UINT description_resource_id, UINT button_text_resource_id, const std::wstring& value);\n+    void add_custom_action(const std::wstring& name, const std::wstring& description, const std::wstring& button_text, const std::wstring& value);\n+\n+    // Serialize the internal json to a string.\n+    std::wstring serialize();\n+    // Serialize the internal json to the input buffer.\n+    bool serialize_to_buffer(wchar_t* buffer, int *buffer_size);\n+\n+  private:\n+    web::json::value m_json;\n+    int m_curr_priority = 0; // For keeping order when adding elements.\n+    HINSTANCE m_instance;\n+\n+    std::wstring get_resource(UINT resource_id);\n+  };\n+\n+  class PowerToyValues {\n+  public:\n+    PowerToyValues(const std::wstring& powertoy_name);\n+    static PowerToyValues from_json_string(const std::wstring& json);\n+    static PowerToyValues load_from_settings_file(const std::wstring& powertoy_name);\n+\n+    template <typename T>\n+    void add_property(const std::wstring& name, T value);\n+\n+    // Check property value type\n+    bool is_bool_value(const std::wstring& property_name);\n+    bool is_int_value(const std::wstring& property_name);\n+    bool is_string_value(const std::wstring& property_name);\n+\n+    // Get property value\n+    bool get_bool_value(const std::wstring& property_name);\n+    int get_int_value(const std::wstring& property_name);\n+    std::wstring get_string_value(const std::wstring& property_name);\n+\n+    std::wstring serialize();\n+    void save_to_settings_file();\n+\n+  private:\n+    const std::wstring m_version = L""1.0"";\n+    void set_version();\n+    web::json::value m_json;\n+    std::wstring _name;\n+    PowerToyValues() {}\n+  };\n+\n+  class CustomActionObject {\n+  public:\n+    static CustomActionObject from_json_string(const std::wstring& json) {\n+      web::json::value parsed_json = web::json::value::parse(json);\n+      return CustomActionObject(parsed_json);\n+    }\n+\n+    std::wstring get_name() { return m_json[L""action_name""].as_string(); }\n+    std::wstring get_value() { return m_json[L""value""].as_string(); }\n+\n+  protected:\n+    CustomActionObject(web::json::value action_json) : m_json(action_json) {};\n+    web::json::value m_json;\n+  };\n+}'}, {'Name': 'src/common/start_visible.cpp', 'Line Additions': 16, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,16 @@\n+#include ""pch.h""\n+#include ""start_visible.h""\n+\n+bool is_start_visible() {\n+  static winrt::com_ptr<IAppVisibility> app_visibility;\n+  if (!app_visibility) {\n+    winrt::check_hresult(CoCreateInstance(CLSID_AppVisibility,\n+                                          nullptr,\n+                                          CLSCTX_INPROC_SERVER,\n+                                          __uuidof(app_visibility),\n+                                          app_visibility.put_void()));\n+  }\n+  BOOL visible;\n+  auto result = app_visibility->IsLauncherVisible(&visible);\n+  return SUCCEEDED(result) && visible;\n+}'}, {'Name': 'src/common/start_visible.h', 'Line Additions': 4, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,4 @@\n+#pragma once\n+\n+bool is_start_visible();\n+'}, {'Name': 'src/common/tasklist_positions.cpp', 'Line Additions': 93, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,93 @@\n+#include ""pch.h""\n+#include ""tasklist_positions.h""\n+\n+void Tasklist::update() {\n+  // Get HWND of the tasklist\n+  auto tasklist_hwnd = FindWindowA(""Shell_TrayWnd"", nullptr);\n+  if (!tasklist_hwnd) return;\n+  tasklist_hwnd = FindWindowExA(tasklist_hwnd, 0, ""ReBarWindow32"", nullptr);\n+  if (!tasklist_hwnd) return;\n+  tasklist_hwnd = FindWindowExA(tasklist_hwnd, 0, ""MSTaskSwWClass"", nullptr);\n+  if (!tasklist_hwnd) return;\n+  tasklist_hwnd = FindWindowExA(tasklist_hwnd, 0, ""MSTaskListWClass"", nullptr);\n+  if (!tasklist_hwnd) return;\n+  if (!automation) {\n+    winrt::check_hresult(CoCreateInstance(CLSID_CUIAutomation,\n+                                          nullptr,\n+                                          CLSCTX_INPROC_SERVER,\n+                                          IID_IUIAutomation,\n+                                          automation.put_void()));\n+    winrt::check_hresult(automation->CreateTrueCondition(true_condition.put()));\n+  }\n+  element = nullptr;\n+  winrt::check_hresult(automation->ElementFromHandle(tasklist_hwnd, element.put()));\n+}\n+\n+bool Tasklist::update_buttons(std::vector<TasklistButton>& buttons) {  \n+  if (!automation || !element) {\n+    return false;\n+  }\n+  winrt::com_ptr<IUIAutomationElementArray> elements;\n+  if (element->FindAll(TreeScope_Children, true_condition.get(), elements.put()) < 0)\n+    return false;\n+  if (!elements)\n+    return false;\n+  int count;\n+  if (elements->get_Length(&count) < 0)\n+    return false;\n+  winrt::com_ptr<IUIAutomationElement> child;\n+  std::vector<TasklistButton> found_butttons;\n+  found_butttons.reserve(count);\n+  for (int i = 0; i < count; ++i) {\n+    child = nullptr;\n+    if (elements->GetElement(i, child.put()) < 0)\n+      return false;\n+    TasklistButton button;\n+    if (VARIANT var_rect; child->GetCurrentPropertyValue(UIA_BoundingRectanglePropertyId, &var_rect) >= 0) {\n+      if (var_rect.vt == (VT_R8 | VT_ARRAY)) {\n+        LONG pos;\n+        double value;\n+        pos = 0; SafeArrayGetElement(var_rect.parray, &pos, &value);\n+        button.x = (long)value;\n+        pos = 1; SafeArrayGetElement(var_rect.parray, &pos, &value);\n+        button.y = (long)value;\n+        pos = 2; SafeArrayGetElement(var_rect.parray, &pos, &value);\n+        button.width = (long)value;\n+        pos = 3; SafeArrayGetElement(var_rect.parray, &pos, &value);\n+        button.height = (long)value;\n+      }\n+      VariantClear(&var_rect);\n+    } else {\n+      return false;\n+    }\n+    if (BSTR automation_id; child->get_CurrentAutomationId(&automation_id) >= 0) {\n+      button.name = automation_id;\n+      SysFreeString(automation_id);\n+    }\n+    found_butttons.push_back(button);\n+  }\n+  // assign keynums\n+  buttons.clear();\n+  for (auto& button : found_butttons) {\n+    if (buttons.empty()) {\n+      button.keynum = 1;\n+      buttons.push_back(std::move(button));\n+    } else {\n+      if (button.x < buttons.back().x || button.y < buttons.back().y) // skip 2nd row\n+        break;\n+      if (button.name == buttons.back().name)\n+        continue; // skip buttons from the same app\n+      button.keynum = buttons.back().keynum + 1;\n+      buttons.push_back(std::move(button));\n+      if (button.keynum == 10)\n+        break; // no more than 10 buttons\n+    }\n+  }\n+  return true;\n+}\n+\n+std::vector<TasklistButton> Tasklist::get_buttons() {\n+  std::vector<TasklistButton> buttons;\n+  update_buttons(buttons);\n+  return buttons;\n+}\n\\ No newline at end of file'}, {'Name': 'src/common/tasklist_positions.h', 'Line Additions': 22, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,22 @@\n+#pragma once\n+#include <vector>\n+#include <unordered_set>\n+#include <string>\n+#include <Windows.h>\n+#include <UIAutomationClient.h>\n+\n+struct TasklistButton {\n+  std::wstring name;\n+  long x, y, width, height, keynum;\n+};\n+\n+class Tasklist {\n+public:\n+  void update();\n+  std::vector<TasklistButton> get_buttons();\n+  bool update_buttons(std::vector<TasklistButton>& buttons);\n+private:\n+  winrt::com_ptr<IUIAutomation> automation;\n+  winrt::com_ptr<IUIAutomationElement> element;\n+  winrt::com_ptr<IUIAutomationCondition> true_condition;\n+};'}, {'Name': 'src/common/two_way_pipe_message_ipc.h', 'Line Additions': 429, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,429 @@\n+#pragma once\n+#include <Windows.h>\n+#include ""async_message_queue.h""\n+#include <WinSafer.h>\n+#include <Sddl.h>\n+#include <accctrl.h>\n+#include <aclapi.h>\n+\n+class TwoWayPipeMessageIPC {\n+public:\n+  typedef void(*callback_function)(const std::wstring&);\n+  void send(std::wstring msg) {\n+    output_queue.queue_message(msg);\n+  }\n+  TwoWayPipeMessageIPC(std::wstring _input_pipe_name, std::wstring _output_pipe_name, callback_function p_func) {\n+    input_pipe_name = _input_pipe_name;\n+    output_pipe_name = _output_pipe_name;\n+    dispatch_inc_message_function = p_func;\n+  }\n+  void start(HANDLE _restricted_pipe_token) {\n+    output_queue_thread = std::thread(&TwoWayPipeMessageIPC::consume_output_queue_thread, this);\n+    input_queue_thread = std::thread(&TwoWayPipeMessageIPC::consume_input_queue_thread, this);\n+    input_pipe_thread = std::thread(&TwoWayPipeMessageIPC::start_named_pipe_server, this, _restricted_pipe_token);\n+  }\n+\n+  void end() {\n+    closed = true;\n+    input_queue.interrupt();\n+    input_queue_thread.join();\n+    output_queue.interrupt();\n+    output_queue_thread.join();\n+    pipe_connect_handle_mutex.lock();\n+    if (current_connect_pipe_handle != NULL) {\n+      //Cancels the Pipe currently waiting for a connection.\n+      CancelIoEx(current_connect_pipe_handle,NULL);\n+    }\n+    pipe_connect_handle_mutex.unlock();\n+    input_pipe_thread.join();\n+  }\n+\n+private:\n+  AsyncMessageQueue input_queue;\n+  AsyncMessageQueue output_queue;\n+  std::wstring output_pipe_name;\n+  std::wstring input_pipe_name;\n+  std::thread input_queue_thread;\n+  std::thread output_queue_thread;\n+  std::thread input_pipe_thread;\n+  std::mutex pipe_connect_handle_mutex; // For manipulating the current_connect_pipe\n+\n+  HANDLE current_connect_pipe_handle = NULL;\n+  bool closed = false;\n+  TwoWayPipeMessageIPC::callback_function dispatch_inc_message_function;\n+  const DWORD BUFSIZE = 1024;\n+\n+  void send_pipe_message(std::wstring message) {\n+    // Adapted from https://docs.microsoft.com/en-us/windows/win32/ipc/named-pipe-client\n+    HANDLE output_pipe_handle;\n+    const wchar_t* message_send = message.c_str();\n+    BOOL   fSuccess = FALSE;\n+    DWORD  cbToWrite, cbWritten, dwMode;\n+    const wchar_t* lpszPipename = output_pipe_name.c_str();\n+\n+    // Try to open a named pipe; wait for it, if necessary. \n+\n+    while (1) {\n+      output_pipe_handle = CreateFile(\n+        lpszPipename,   // pipe name \n+        GENERIC_READ |  // read and write access \n+        GENERIC_WRITE,\n+        0,              // no sharing \n+        NULL,           // default security attributes\n+        OPEN_EXISTING,  // opens existing pipe \n+        0,              // default attributes \n+        NULL);          // no template file \n+\n+      // Break if the pipe handle is valid. \n+\n+      if (output_pipe_handle != INVALID_HANDLE_VALUE)\n+        break;\n+\n+      // Exit if an error other than ERROR_PIPE_BUSY occurs. \n+      DWORD curr_error = 0;\n+      if ((curr_error = GetLastError()) != ERROR_PIPE_BUSY) {\n+\n+        return;\n+      }\n+\n+      // All pipe instances are busy, so wait for 20 seconds. \n+\n+      if (!WaitNamedPipe(lpszPipename, 20000)) {\n+        return;\n+      }\n+    }\n+    dwMode = PIPE_READMODE_MESSAGE;\n+    fSuccess = SetNamedPipeHandleState(\n+      output_pipe_handle,    // pipe handle \n+      &dwMode,  // new pipe mode \n+      NULL,     // don\'t set maximum bytes \n+      NULL);    // don\'t set maximum time \n+    if (!fSuccess) {\n+      return;\n+    }\n+\n+    // Send a message to the pipe server. \n+\n+    cbToWrite = (lstrlen(message_send)) * sizeof(WCHAR); // no need to send final \'\\0\'. Pipe is in message mode.\n+\n+    fSuccess = WriteFile(\n+      output_pipe_handle,                  // pipe handle \n+      message_send,           // message \n+      cbToWrite,              // message length \n+      &cbWritten,             // bytes written \n+      NULL);                  // not overlapped \n+    if (!fSuccess) {\n+      return;\n+    }\n+    CloseHandle(output_pipe_handle);\n+    return;\n+  }\n+\n+  void consume_output_queue_thread() {\n+    while (!closed) {\n+      std::wstring message = output_queue.pop_message();\n+      if (message.length() == 0) {\n+        break;\n+      }\n+      send_pipe_message(message);\n+    }\n+  }\n+\n+  BOOL GetLogonSID(HANDLE hToken, PSID *ppsid) {\n+    // From https://docs.microsoft.com/en-us/previous-versions/aa446670(v=vs.85)\n+    BOOL bSuccess = FALSE;\n+    DWORD dwIndex;\n+    DWORD dwLength = 0;\n+    PTOKEN_GROUPS ptg = NULL;\n+\n+    // Verify the parameter passed in is not NULL.\n+    if (NULL == ppsid)\n+      goto Cleanup;\n+\n+    // Get required buffer size and allocate the TOKEN_GROUPS buffer.\n+\n+    if (!GetTokenInformation(\n+      hToken,         // handle to the access token\n+      TokenGroups,    // get information about the token\'s groups \n+      (LPVOID)ptg,   // pointer to TOKEN_GROUPS buffer\n+      0,              // size of buffer\n+      &dwLength       // receives required buffer size\n+    )) {\n+      if (GetLastError() != ERROR_INSUFFICIENT_BUFFER)\n+        goto Cleanup;\n+\n+      ptg = (PTOKEN_GROUPS)HeapAlloc(GetProcessHeap(),\n+        HEAP_ZERO_MEMORY, dwLength);\n+\n+      if (ptg == NULL)\n+        goto Cleanup;\n+    }\n+\n+    // Get the token group information from the access token.\n+\n+    if (!GetTokenInformation(\n+      hToken,         // handle to the access token\n+      TokenGroups,    // get information about the token\'s groups \n+      (LPVOID)ptg,   // pointer to TOKEN_GROUPS buffer\n+      dwLength,       // size of buffer\n+      &dwLength       // receives required buffer size\n+    )) {\n+      goto Cleanup;\n+    }\n+\n+    // Loop through the groups to find the logon SID.\n+\n+    for (dwIndex = 0; dwIndex < ptg->GroupCount; dwIndex++)\n+      if ((ptg->Groups[dwIndex].Attributes & SE_GROUP_LOGON_ID)\n+        == SE_GROUP_LOGON_ID) {\n+        // Found the logon SID; make a copy of it.\n+\n+        dwLength = GetLengthSid(ptg->Groups[dwIndex].Sid);\n+        *ppsid = (PSID)HeapAlloc(GetProcessHeap(),\n+          HEAP_ZERO_MEMORY, dwLength);\n+        if (*ppsid == NULL)\n+          goto Cleanup;\n+        if (!CopySid(dwLength, *ppsid, ptg->Groups[dwIndex].Sid)) {\n+          HeapFree(GetProcessHeap(), 0, (LPVOID)*ppsid);\n+          goto Cleanup;\n+        }\n+        break;\n+      }\n+\n+    bSuccess = TRUE;\n+\n+  Cleanup:\n+\n+    // Free the buffer for the token groups.\n+\n+    if (ptg != NULL)\n+      HeapFree(GetProcessHeap(), 0, (LPVOID)ptg);\n+\n+    return bSuccess;\n+  }\n+\n+  VOID FreeLogonSID(PSID *ppsid) {\n+    // From https://docs.microsoft.com/en-us/previous-versions/aa446670(v=vs.85)\n+    HeapFree(GetProcessHeap(), 0, (LPVOID)*ppsid);\n+  }\n+\n+\n+  int change_pipe_security_allow_restricted_token(HANDLE handle, HANDLE token) {\n+    PACL old_dacl, new_dacl;\n+    PSECURITY_DESCRIPTOR sd;\n+    EXPLICIT_ACCESS ea;\n+    PSID user_restricted;\n+    int error;\n+\n+    if (!GetLogonSID(token, &user_restricted)) {\n+      error = 5; // No access error.\n+      goto Ldone;\n+    }\n+\n+    if (GetSecurityInfo(handle,\n+      SE_KERNEL_OBJECT,\n+      DACL_SECURITY_INFORMATION,\n+      NULL,\n+      NULL,\n+      &old_dacl,\n+      NULL,\n+      &sd)) {\n+      error = GetLastError();\n+      goto Lclean_sid;\n+    }\n+\n+    memset(&ea, 0, sizeof(EXPLICIT_ACCESS));\n+    ea.grfAccessPermissions |= GENERIC_READ | FILE_WRITE_ATTRIBUTES;\n+    ea.grfAccessPermissions |= GENERIC_WRITE | FILE_READ_ATTRIBUTES;\n+    ea.grfAccessPermissions |= SYNCHRONIZE;\n+    ea.grfAccessMode = SET_ACCESS;\n+    ea.grfInheritance = NO_INHERITANCE;\n+    ea.Trustee.TrusteeForm = TRUSTEE_IS_SID;\n+    ea.Trustee.TrusteeType = TRUSTEE_IS_USER;\n+    ea.Trustee.ptstrName = (LPTSTR)user_restricted;\n+\n+    if (SetEntriesInAcl(1, &ea, old_dacl, &new_dacl)) {\n+      error = GetLastError();\n+      goto Lclean_sd;\n+    }\n+\n+    if (SetSecurityInfo(handle,\n+      SE_KERNEL_OBJECT,\n+      DACL_SECURITY_INFORMATION,\n+      NULL,\n+      NULL,\n+      new_dacl,\n+      NULL)) {\n+      error = GetLastError();\n+      goto Lclean_dacl;\n+    }\n+\n+    error = 0;\n+\n+  Lclean_dacl:\n+    LocalFree((HLOCAL)new_dacl);\n+  Lclean_sd:\n+    LocalFree((HLOCAL)sd);\n+  Lclean_sid:\n+    FreeLogonSID(&user_restricted);\n+  Ldone:\n+    return error;\n+  }\n+\n+  HANDLE create_medium_integrity_token() {\n+    HANDLE restricted_token_handle;\n+    SAFER_LEVEL_HANDLE level_handle = NULL;\n+    DWORD sid_size = SECURITY_MAX_SID_SIZE;\n+    BYTE medium_sid[SECURITY_MAX_SID_SIZE];\n+    if (!SaferCreateLevel(SAFER_SCOPEID_USER, SAFER_LEVELID_NORMALUSER, SAFER_LEVEL_OPEN, &level_handle, NULL)) {\n+      return NULL;\n+    }\n+    if (!SaferComputeTokenFromLevel(level_handle, NULL, &restricted_token_handle, 0, NULL)) {\n+      SaferCloseLevel(level_handle);\n+      return NULL;\n+    }\n+    SaferCloseLevel(level_handle);\n+\n+    if (!CreateWellKnownSid(WinMediumLabelSid, nullptr, medium_sid, &sid_size)) {\n+      CloseHandle(restricted_token_handle);\n+      return NULL;\n+    }\n+\n+    TOKEN_MANDATORY_LABEL integrity_level = { 0 };\n+    integrity_level.Label.Attributes = SE_GROUP_INTEGRITY;\n+    integrity_level.Label.Sid = reinterpret_cast<PSID>(medium_sid);\n+\n+    if (!SetTokenInformation(restricted_token_handle, TokenIntegrityLevel, &integrity_level, sizeof(integrity_level))) {\n+      CloseHandle(restricted_token_handle);\n+      return NULL;\n+    }\n+\n+    return restricted_token_handle;\n+  }\n+\n+  void handle_pipe_connection(HANDLE input_pipe_handle) {\n+    //Adapted from https://docs.microsoft.com/en-us/windows/win32/ipc/multithreaded-pipe-server\n+    HANDLE hHeap = GetProcessHeap();\n+    uint8_t* pchRequest = (uint8_t*)HeapAlloc(hHeap, 0, BUFSIZE * sizeof(uint8_t));\n+\n+    DWORD cbBytesRead = 0, cbReplyBytes = 0, cbWritten = 0;\n+    BOOL fSuccess = FALSE;\n+    \n+    // Do some extra error checking since the app will keep running even if this thread fails.\n+    std::list<std::vector<uint8_t>> message_parts;\n+\n+    if (input_pipe_handle == NULL) {\n+      if (pchRequest != NULL) HeapFree(hHeap, 0, pchRequest);\n+      return;\n+    }\n+\n+    if (pchRequest == NULL) {\n+      return;\n+    }\n+\n+    // Loop until done reading\n+    do {\n+      // Read client requests from the pipe. This simplistic code only allows messages\n+      // up to BUFSIZE characters in length.\n+      ZeroMemory(pchRequest, BUFSIZE * sizeof(uint8_t));\n+      fSuccess = ReadFile(\n+        input_pipe_handle,          // handle to pipe \n+        pchRequest,                 // buffer to receive data \n+        BUFSIZE * sizeof(uint8_t),  // size of buffer \n+        &cbBytesRead,               // number of bytes read \n+        NULL);                      // not overlapped I/O \n+\n+      if (!fSuccess && GetLastError() != ERROR_MORE_DATA) {\n+        break;\n+      }\n+      std::vector<uint8_t> part_vector;\n+      part_vector.reserve(cbBytesRead);\n+      std::copy(pchRequest, pchRequest + cbBytesRead, std::back_inserter(part_vector));\n+      message_parts.push_back(part_vector);\n+    } while (!fSuccess);\n+\n+    if (fSuccess) {\n+      // Reconstruct the total_message.\n+      std::vector<uint8_t> reconstructed_message;\n+      size_t total_size = 0;\n+      for (auto& part_vector : message_parts) {\n+        total_size += part_vector.size();\n+      }\n+      reconstructed_message.reserve(total_size);\n+      for (auto& part_vector : message_parts) {\n+        std::move(part_vector.begin(), part_vector.end(), std::back_inserter(reconstructed_message));\n+      }\n+      std::wstring unicode_msg;\n+      unicode_msg.assign(reinterpret_cast<std::wstring::const_pointer>(reconstructed_message.data()), reconstructed_message.size() / sizeof(std::wstring::value_type));\n+      input_queue.queue_message(unicode_msg);\n+    }\n+\n+    // Flush the pipe to allow the client to read the pipe\'s contents \n+    // before disconnecting. Then disconnect the pipe, and close the \n+    // handle to this pipe instance. \n+\n+    FlushFileBuffers(input_pipe_handle);\n+    DisconnectNamedPipe(input_pipe_handle);\n+    CloseHandle(input_pipe_handle);\n+\n+    HeapFree(hHeap, 0, pchRequest);\n+\n+    printf(""InstanceThread exitting.\\n"");\n+  }\n+\n+  void start_named_pipe_server(HANDLE token) {\n+    // Adapted from https://docs.microsoft.com/en-us/windows/win32/ipc/multithreaded-pipe-server\n+    const wchar_t* pipe_name = input_pipe_name.c_str();\n+    BOOL connected = FALSE;\n+    HANDLE connect_pipe_handle = INVALID_HANDLE_VALUE;\n+    while(!closed) {\n+      {\n+        std::unique_lock lock(pipe_connect_handle_mutex);\n+        connect_pipe_handle = CreateNamedPipe(\n+          pipe_name,\n+          PIPE_ACCESS_DUPLEX |\n+          WRITE_DAC,\n+          PIPE_TYPE_MESSAGE |\n+          PIPE_READMODE_MESSAGE |\n+          PIPE_WAIT,\n+          PIPE_UNLIMITED_INSTANCES,\n+          BUFSIZE,\n+          BUFSIZE,\n+          0,\n+          NULL\n+        );\n+\n+        if (connect_pipe_handle == INVALID_HANDLE_VALUE) {\n+          return;\n+        }\n+\n+        if (token != NULL) {\n+          int err = change_pipe_security_allow_restricted_token(connect_pipe_handle, token);\n+        }\n+        current_connect_pipe_handle = connect_pipe_handle;\n+      }\n+      connected = ConnectNamedPipe(connect_pipe_handle, NULL) ? TRUE : (GetLastError() == ERROR_PIPE_CONNECTED);\n+      {\n+        std::unique_lock lock(pipe_connect_handle_mutex);\n+        current_connect_pipe_handle = NULL;\n+      }\n+      if (connected) {\n+        std::thread(&TwoWayPipeMessageIPC::handle_pipe_connection, this, connect_pipe_handle).detach();\n+      } else {\n+        // Client could not connect.\n+        CloseHandle(connect_pipe_handle);\n+      }\n+    }\n+  }\n+\n+  void consume_input_queue_thread() {\n+    while (!closed) {\n+      std::wstring message = input_queue.pop_message();\n+      if (message.length() == 0) {\n+        break;\n+      }\n+      dispatch_inc_message_function(message);\n+    }\n+  }\n+\n+};'}, {'Name': 'src/common/windows_colors.cpp', 'Line Additions': 71, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,71 @@\n+#include ""pch.h""\n+#include ""windows_colors.h""\n+\n+DWORD WindowsColors::rgb_color(DWORD abgr_color) {\n+  // registry keeps the colors in ABGR format, we want RGB\n+  auto r = (abgr_color & 0xFF);\n+  auto g = (abgr_color & 0xFF00) >> 8;\n+  auto b = (abgr_color & 0xFF0000) >> 16;\n+  return (r << 16) | (g << 8) | b;\n+}\n+DWORD WindowsColors::rgb_color(winrt::Windows::UI::Color color) {\n+  return ((DWORD)color.R << 16) | ((DWORD)color.G << 8) | ((DWORD)color.B);\n+}\n+WindowsColors::Color WindowsColors::get_button_face_color() {\n+  winrt::Windows::UI::ViewManagement::UISettings uiSettings;\n+  return uiSettings.UIElementColor(winrt::Windows::UI::ViewManagement::UIElementType::ButtonFace);\n+}\n+WindowsColors::Color WindowsColors::get_button_text_color() {\n+  winrt::Windows::UI::ViewManagement::UISettings uiSettings;\n+  return uiSettings.UIElementColor(winrt::Windows::UI::ViewManagement::UIElementType::ButtonText);\n+}\n+WindowsColors::Color WindowsColors::get_highlight_color() {\n+  winrt::Windows::UI::ViewManagement::UISettings uiSettings;\n+  return uiSettings.UIElementColor(winrt::Windows::UI::ViewManagement::UIElementType::Highlight);\n+}\n+WindowsColors::Color WindowsColors::get_hotlight_color() {\n+  winrt::Windows::UI::ViewManagement::UISettings uiSettings;\n+  return uiSettings.UIElementColor(winrt::Windows::UI::ViewManagement::UIElementType::Hotlight);\n+}\n+WindowsColors::Color WindowsColors::get_highlight_text_color() {\n+  winrt::Windows::UI::ViewManagement::UISettings uiSettings;\n+  return uiSettings.UIElementColor(winrt::Windows::UI::ViewManagement::UIElementType::HighlightText);\n+}\n+WindowsColors::Color WindowsColors::get_accent_light_1_color() {\n+  winrt::Windows::UI::ViewManagement::UISettings uiSettings;\n+  return uiSettings.GetColorValue(winrt::Windows::UI::ViewManagement::UIColorType::AccentLight1);\n+}\n+WindowsColors::Color WindowsColors::get_accent_light_2_color() {\n+  winrt::Windows::UI::ViewManagement::UISettings uiSettings;\n+  return uiSettings.GetColorValue(winrt::Windows::UI::ViewManagement::UIColorType::AccentLight2);\n+}\n+WindowsColors::Color WindowsColors::get_accent_dark_1_color() {\n+  winrt::Windows::UI::ViewManagement::UISettings uiSettings;\n+  return uiSettings.GetColorValue(winrt::Windows::UI::ViewManagement::UIColorType::AccentDark1);\n+}\n+WindowsColors::Color WindowsColors::get_accent_color() {\n+  winrt::Windows::UI::ViewManagement::UISettings uiSettings;\n+  return uiSettings.GetColorValue(winrt::Windows::UI::ViewManagement::UIColorType::Accent);\n+}\n+WindowsColors::Color WindowsColors::get_background_color() {\n+  winrt::Windows::UI::ViewManagement::UISettings uiSettings;\n+  return uiSettings.GetColorValue(winrt::Windows::UI::ViewManagement::UIColorType::Background);\n+}\n+\n+bool WindowsColors::update() {\n+  auto new_accent_color_menu = rgb_color(get_accent_color());\n+  auto new_start_color_menu = new_accent_color_menu;\n+  auto new_desktop_fill_color = rgb_color(GetSysColor(COLOR_DESKTOP));\n+  auto new_light_mode = rgb_color(get_background_color()) != 0; //Dark mode will have black as the background color.\n+\n+  bool changed = new_accent_color_menu != accent_color_menu ||\n+                 new_start_color_menu != start_color_menu ||\n+                 new_light_mode != light_mode ||\n+                 new_desktop_fill_color != desktop_fill_color;\n+  accent_color_menu = new_accent_color_menu;\n+  start_color_menu = new_start_color_menu;\n+  light_mode = new_light_mode;\n+  desktop_fill_color = new_desktop_fill_color;\n+\n+  return changed;\n+}'}, {'Name': 'src/common/windows_colors.h', 'Line Additions': 27, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,27 @@\n+#pragma once\n+#include <winrt/Windows.UI.ViewManagement.h>\n+\n+struct WindowsColors {\n+  using Color = winrt::Windows::UI::Color;\n+  \n+  static DWORD rgb_color(DWORD abgr_color);\n+  static DWORD rgb_color(Color color);\n+  static Color get_button_face_color();\n+  static Color get_button_text_color();\n+  static Color get_highlight_color();\n+  static Color get_hotlight_color();\n+  static Color get_highlight_text_color();\n+  static Color get_accent_light_1_color();\n+  static Color get_accent_light_2_color();\n+  static Color get_accent_dark_1_color();\n+  static Color get_accent_color();\n+  static Color get_background_color();\n+  \n+  // Update colors - returns true if the values where changed\n+  bool update();\n+\n+  DWORD accent_color_menu = 0,\n+        start_color_menu = 0,\n+        desktop_fill_color = 0;\n+  bool light_mode = true;\n+};'}, {'Name': 'src/editor/README.md', 'Line Additions': 21, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,21 @@\n+# PowerToys Settings project\n+\n+## Introduction\n+\n+This path contains the WebView project for editing the PowerToys settings.\n+\n+The html portion of the project that is shown in the WebView is contained in `settings-html`.\n+Instructions on how build a new version and update this project are in the [Web project for the Settings UI](../settings-web).\n+\n+While developing, it's possible to connect the WebView to the development server running in localhost by setting the `_DEBUG_WITH_LOCALHOST` flag to `1` and following the instructions near it in `./main.cpp`.\n+\n+## Code Organization\n+\n+#### [main.cpp](./main.cpp)\n+Contains the main executable code, initializing and managing the Window containing the WebView and communication with the main PowerToys executable.\n+\n+#### [StreamURIResolverFromFile.cpp](./StreamURIResolverFromFile.cpp)\n+Defines a class implementing `IUriToStreamResolver`. Allows the WebView to navigate to filesystem files in this Win32 project.\n+\n+#### [settings-html/](./settings-html/)\n+Contains the assets file from building the [Web project for the Settings UI](../settings-web). It will be loaded by the WebView.""}, {'Name': 'src/editor/StreamURIResolverFromFile.cpp', 'Line Additions': 24, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,24 @@\n+#include ""pch.h""\n+#include ""StreamUriResolverFromFile.h""\n+\n+winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Storage::Streams::IInputStream> StreamUriResolverFromFile::UriToStreamAsync(const winrt::Windows::Foundation::Uri & uri) const {\n+\n+  winrt::Windows::Storage::StorageFolder folder = winrt::Windows::Storage::StorageFolder::GetFolderFromPathAsync(winrt::param::hstring(base_path)).get();\n+\n+  std::wstring myuri = uri.Path().c_str();\n+  myuri.erase(0, 1); // Removes the first slash from the URI\n+\n+  std::replace(myuri.begin(), myuri.end(), \'/\', \'\\\\\');\n+  winrt::Windows::Storage::StorageFile file = nullptr;\n+\n+  try {\n+    file = folder.GetFileAsync(winrt::param::hstring(myuri)).get();\n+  }\n+  catch (winrt::hresult_error const& e) {\n+    WCHAR message[1024] = L"""";\n+    StringCchPrintf(message, ARRAYSIZE(message), L""failed: %ls"", e.message().c_str());\n+    MessageBox(NULL, message, L""Error"", MB_OK);\n+  }\n+ \n+  return file.OpenSequentialReadAsync();\n+}'}, {'Name': 'src/editor/StreamUriResolverFromFile.h', 'Line Additions': 8, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,8 @@\n+#pragma once\n+#include ""pch.h""\n+\n+struct StreamUriResolverFromFile : winrt::implements <StreamUriResolverFromFile, winrt::Windows::Web::IUriToStreamResolver> {\n+  WCHAR base_path[MAX_PATH];\n+  winrt::Windows::Foundation::IAsyncOperation<winrt::Windows::Storage::Streams::IInputStream> UriToStreamAsync(const winrt::Windows::Foundation::Uri & uri) const;\n+};\n+'}, {'Name': 'src/editor/main.cpp', 'Line Additions': 444, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,444 @@\n+#include ""pch.h""\n+#include <Commdlg.h>\n+#include ""StreamUriResolverFromFile.h""\n+#include <Shellapi.h>\n+#include <common/two_way_pipe_message_ipc.h>\n+#include <ShellScalingApi.h>\n+#include ""resource.h""\n+#include <common/dpi_aware.h>\n+\n+#pragma comment(lib, ""shlwapi.lib"")\n+#pragma comment(lib, ""shcore.lib"")\n+#pragma comment(lib, ""windowsapp"")\n+#pragma comment(lib, ""dxgi"")\n+#pragma comment(lib, ""d3d11"")\n+#pragma comment(lib, ""d2d1"")\n+#pragma comment(lib, ""dcomp"")\n+#pragma comment(lib, ""dwmapi"")\n+\n+#ifdef _DEBUG\n+#define _DEBUG_WITH_LOCALHOST 0\n+// Define as 1 For debug purposes, to access localhost servers.\n+// webview_process_options.PrivateNetworkClientServerCapability(winrt::Windows::Web::UI::Interop::WebViewControlProcessCapabilityState::Enabled);\n+// To access localhost:8080 for development, you\'ll also need to disable loopback restrictions for the webview:\n+// > checknetisolation LoopbackExempt -a -n=Microsoft.Win32WebViewHost_cw5n1h2txyewy\n+// To remove the exception after development:\n+// > checknetisolation LoopbackExempt -d -n=Microsoft.Win32WebViewHost_cw5n1h2txyewy\n+// Source: https://github.com/windows-toolkit/WindowsCommunityToolkit/issues/2226#issuecomment-396360314\n+#endif\n+HINSTANCE m_hInst;\n+HWND main_window_handler = nullptr;\n+using namespace winrt;\n+using namespace winrt::Windows::Foundation;\n+using namespace winrt::Windows::Storage::Streams;\n+using namespace winrt::Windows::Web::Http;\n+using namespace winrt::Windows::Web::Http::Headers;\n+using namespace winrt::Windows::Web::UI;\n+using namespace winrt::Windows::Web::UI::Interop;\n+using namespace winrt::Windows::System;\n+\n+winrt::Windows::Web::UI::Interop::WebViewControl webview_control = nullptr;\n+winrt::Windows::Web::UI::Interop::WebViewControlProcess webview_process = nullptr;\n+winrt::Windows::Web::UI::Interop::WebViewControlProcessOptions webview_process_options = nullptr;\n+StreamUriResolverFromFile local_uri_resolver;\n+\n+// Windows message for receiving copied data to send to the webview.\n+UINT wm_copydata_webview = 0;\n+\n+// Windows message to destroy the window. Used if:\n+// - Parent process has terminated.\n+// - WebView confirms that the Window can close.\n+UINT wm_my_destroy_window = 0;\n+\n+// mutex for checking if the window has already been created.\n+std::mutex m_window_created_mutex;\n+\n+TwoWayPipeMessageIPC* current_settings_ipc = NULL;\n+\n+// Set to true if waiting for webview confirmation before closing the Window.\n+bool m_waiting_for_close_confirmation = false;\n+\n+#ifdef _DEBUG\n+void NavigateToLocalhostReactServer() {\n+  // Useful for connecting to instance running in react development server.\n+  webview_control.Navigate(Uri(hstring(L""http://localhost:8080"")));\n+}\n+#endif\n+void NavigateToUri(_In_ LPCWSTR uri_as_string) {\n+  Uri url = webview_control.BuildLocalStreamUri(hstring(L""settings-html""), hstring(uri_as_string));\n+  webview_control.NavigateToLocalStreamUri(url, local_uri_resolver);\n+\n+}\n+\n+Rect hwnd_client_rect_to_bounds_rect(_In_ HWND hwnd) {\n+  RECT client_rect = { 0 };\n+  GetClientRect(hwnd, &client_rect);\n+\n+  Rect bounds =\n+  {\n+    0,\n+    0,\n+    static_cast<float>(client_rect.right - client_rect.left),\n+    static_cast<float>(client_rect.bottom - client_rect.top)\n+  };\n+\n+  return bounds;\n+}\n+\n+void resize_web_view() {\n+  Rect bounds = hwnd_client_rect_to_bounds_rect(main_window_handler);\n+  winrt::Windows::Web::UI::Interop::IWebViewControlSite webViewControlSite = (winrt::Windows::Web::UI::Interop::IWebViewControlSite) webview_control;\n+  webViewControlSite.Bounds(bounds);\n+\n+}\n+\n+#define SEND_TO_WEBVIEW_MSG 1\n+\n+void send_message_to_webview(const std::wstring& msg) {\n+  if (main_window_handler != NULL && wm_copydata_webview!=0) {\n+    // Allocate the COPYDATASTRUCT and message to pass to the Webview.\n+    // This is needed in order to use PostMessage, since COM calls to\n+    // webview_control.InvokeScriptAsync can\'t be made from \n+    PCOPYDATASTRUCT copy_data_message = new COPYDATASTRUCT();\n+    const wchar_t* orig_msg = msg.c_str();\n+    DWORD orig_len = (DWORD)wcslen(orig_msg);\n+    wchar_t* copy_msg = new wchar_t[orig_len + 1];\n+    wcscpy_s(copy_msg, orig_len + 1, orig_msg);\n+    copy_data_message->dwData = SEND_TO_WEBVIEW_MSG;\n+    copy_data_message->cbData = (orig_len + 1) * sizeof(wchar_t);\n+    copy_data_message->lpData = (PVOID)copy_msg;\n+    PostMessage(main_window_handler, wm_copydata_webview, (WPARAM)main_window_handler, (LPARAM)copy_data_message);\n+    // wnd_static_proc will be responsible for freeing these.\n+  }\n+}\n+\n+void send_message_to_powertoys(const std::wstring msg) {\n+  if (current_settings_ipc != NULL) {\n+    current_settings_ipc->send(msg);\n+  } else {\n+    // For Debug purposes, in case the webview is being run alone.\n+#ifdef _DEBUG\n+    MessageBox(main_window_handler, msg.c_str(), L""From Webview"", MB_OK);\n+    //throw in some sample data\n+    std::wstring debug_settings_info(LR""json({\n+            ""general"": {\n+              ""startup"": true,\n+              ""enabled"": {\n+                ""Shortcut Guide"":false,\n+                ""Example PowerToy"":true\n+              }\n+            },\n+            ""powertoys"": {\n+              ""Shortcut Guide"": {\n+                ""version"": ""1.0"",\n+                ""name"": ""Shortcut Guide"",\n+                ""description"": ""Shows a help overlay with Windows shortcuts when the Windows key is pressed."",\n+                ""icon_key"": ""pt-shortcut-guide"",\n+                ""properties"": {\n+                  ""press time"" : {\n+                    ""display_name"": ""How long to press the Windows key before showing the Shortcut Guide (ms)"",\n+                    ""editor_type"": ""int_spinner"",\n+                    ""value"": 300\n+                  }\n+                }\n+              },\n+              ""Example PowerToy"": {\n+                ""version"": ""1.0"",\n+                ""name"": ""Example PowerToy"",\n+                ""description"": ""Shows the different controls for the settings."",\n+                ""overview_link"": ""https://github.com/microsoft/PowerToys"",\n+                ""video_link"": ""https://www.youtube.com/watch?v=d3LHo2yXKoY&t=21462"",\n+                ""properties"": {\n+                  ""test bool_toggle"": {\n+                    ""display_name"": ""This is what a bool_toggle looks like"",\n+                    ""editor_type"": ""bool_toggle"",\n+                    ""value"": false\n+                  },\n+                  ""test int_spinner"": {\n+                    ""display_name"": ""This is what a int_spinner looks like"",\n+                    ""editor_type"": ""int_spinner"",\n+                    ""value"": 10\n+                  },\n+                  ""test string_text"": {\n+                    ""display_name"": ""This is what a string_text looks like"",\n+                    ""editor_type"": ""string_text"",\n+                    ""value"": ""A sample string value""\n+                  },\n+                  ""test color_picker"": {\n+                    ""display_name"": ""This is what a color_picker looks like"",\n+                    ""editor_type"": ""color_picker"",\n+                    ""value"": ""#0450fd""\n+                  },\n+                  ""test custom_action"": {\n+                    ""display_name"": ""This is what a custom_action looks like"",\n+                    ""editor_type"": ""custom_action"",\n+                    ""value"": ""This is to be custom data. It\\ncan\\nhave\\nmany\\nlines\\nthat\\nshould\\nmake\\nthe\\nfield\\nbigger."",\n+                    ""button_text"": ""Call a Custom Action!""\n+                  }\n+                }\n+              }\n+            }\n+          })json"");\n+    send_message_to_webview(debug_settings_info);\n+#endif\n+  }\n+}\n+\n+void receive_message_from_webview(const std::wstring& msg) {\n+  if (msg[0] == \'{\') {\n+    // It\'s a JSON, send message to PowerToys\n+    std::thread(send_message_to_powertoys, msg).detach();\n+  } else {\n+    // It\'s not a JSON, check for expected control messages.\n+    if (msg == L""exit"") {\n+      // WebView confirms the settings application can exit.\n+      PostMessage(main_window_handler, wm_my_destroy_window, 0, 0);\n+    } else if (msg == L""cancel-exit"") {\n+      // WebView canceled the exit request.\n+      m_waiting_for_close_confirmation = false;\n+    }\n+  }\n+}\n+\n+void initialize_win32_webview(HWND hwnd, int nCmdShow) {\n+  \n+  // initialize the base_path for the html content relative to the executable.\n+  WCHAR executable_path[MAX_PATH];\n+  GetModuleFileName(NULL, executable_path, MAX_PATH);\n+  PathRemoveFileSpec(executable_path);\n+  wcscat_s(executable_path, L""\\\\settings-html"");\n+  wcscpy_s(local_uri_resolver.base_path, executable_path);\n+  \n+  try {\n+    if (!webview_process_options) {\n+      webview_process_options = winrt::Windows::Web::UI::Interop::WebViewControlProcessOptions();\n+    }\n+\n+    if (!webview_process) {\n+      webview_process = winrt::Windows::Web::UI::Interop::WebViewControlProcess(webview_process_options);\n+    }\n+    auto asyncwebview = webview_process.CreateWebViewControlAsync((int64_t)main_window_handler, hwnd_client_rect_to_bounds_rect(main_window_handler));\n+    asyncwebview.Completed([=](IAsyncOperation<WebViewControl> const& sender, AsyncStatus args) {\n+      webview_control = sender.GetResults();\n+      \n+      // In order to receive window.external.notify() calls in ScriptNotify\n+      webview_control.Settings().IsScriptNotifyAllowed(true);\n+\n+      webview_control.Settings().IsJavaScriptEnabled(true);\n+      \n+      webview_control.NewWindowRequested([=](IWebViewControl sender_requester, WebViewControlNewWindowRequestedEventArgs args ) {\n+        // Open the requested link in the default browser registered in the Shell\n+        ShellExecute(NULL, L""open"", args.Uri().AbsoluteUri().c_str(), NULL, NULL, SW_SHOWNORMAL);\n+      });\n+\n+      webview_control.DOMContentLoaded([=](IWebViewControl sender_loaded, WebViewControlDOMContentLoadedEventArgs const& args_loaded) {\n+        // runs when the content has been loaded.\n+      });\n+      webview_control.ScriptNotify([=](IWebViewControl sender_script_notify, WebViewControlScriptNotifyEventArgs const& args_script_notify) {\n+        // content called window.external.notify()\n+        std::wstring message_sent = args_script_notify.Value().c_str();\n+        receive_message_from_webview(message_sent);\n+      });\n+      resize_web_view();\n+#if defined(_DEBUG) && _DEBUG_WITH_LOCALHOST\n+      // navigates to localhost:8080\n+      NavigateToLocalhostReactServer();\n+#else\n+      // navigates to settings-html/index.html\n+      ShowWindow(main_window_handler, nCmdShow);\n+      NavigateToUri(L""index.html"");\n+#endif\n+    });\n+  }\n+  catch (hresult_error const& e) {\n+    WCHAR message[1024] = L"""";\n+    StringCchPrintf(message, ARRAYSIZE(message), L""failed: %ls"", e.message().c_str());\n+    MessageBox(main_window_handler, message, L""Error"", MB_OK);\n+  }\n+}\n+\n+LRESULT CALLBACK wnd_proc_static(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam) {\n+  switch (message) {\n+  case WM_CLOSE:\n+    if(m_waiting_for_close_confirmation) {\n+      // If another WM_CLOSE is received while waiting for webview confirmation,\n+      // allow DefWindowProc to be called and destroy the window.\n+      break;\n+    } else {\n+      // Allow user to confirm exit in the WebView in case there\'s possible data loss.\n+      m_waiting_for_close_confirmation = true;\n+      if (webview_control != NULL) {\n+        webview_control.InvokeScriptAsync(hstring(L""exit_settings_app""), {});\n+      } else {\n+        break;\n+      }\n+      return 0;\n+    }\n+  case WM_DESTROY:\n+    PostQuitMessage(0);\n+    break;\n+  case WM_SIZE:\n+    if (webview_control != nullptr) {\n+      resize_web_view();\n+    }\n+    break;\n+  case WM_CREATE:\n+    wm_copydata_webview = RegisterWindowMessageW(L""PTSettingsCopyDataWebView"");\n+    wm_my_destroy_window = RegisterWindowMessageW(L""PTSettingsParentTerminated"");\n+    m_window_created_mutex.unlock();\n+    break;\n+  case WM_DPICHANGED:\n+    {\n+      // Resize the window using the suggested rect\n+      RECT* const prcNewWindow = (RECT*)lParam;\n+      SetWindowPos(hWnd,\n+        NULL,\n+        prcNewWindow->left,\n+        prcNewWindow->top,\n+        prcNewWindow->right - prcNewWindow->left,\n+        prcNewWindow->bottom - prcNewWindow->top,\n+        SWP_NOZORDER | SWP_NOACTIVATE);\n+    }\n+    break;\n+  case WM_NCCREATE:\n+    {\n+      // Enable auto-resizing the title bar\n+      EnableNonClientDpiScaling(hWnd);\n+    }\n+    break;\n+  default:\n+    if (message == wm_copydata_webview) {\n+      PCOPYDATASTRUCT msg = (PCOPYDATASTRUCT)lParam;\n+      if (msg->dwData == SEND_TO_WEBVIEW_MSG) {\n+        wchar_t* json_message = (wchar_t*)(msg->lpData);\n+        if (webview_control != NULL) {\n+          webview_control.InvokeScriptAsync(hstring(L""receive_from_settings_app""), { hstring(json_message) });\n+        }\n+        delete[] json_message;\n+      }\n+      // wnd_proc_static is responsible for freeing memory.\n+      delete msg;\n+    } else {\n+      if (message == wm_my_destroy_window) {\n+        DestroyWindow(hWnd);\n+      }\n+    }\n+    break;\n+  }\n+  return DefWindowProc(hWnd, message, wParam, lParam);;\n+}\n+\n+void register_classes(HINSTANCE hInstance) {\n+  WNDCLASSEXW wcex;\n+  wcex.cbSize = sizeof(WNDCLASSEX);\n+\n+  wcex.style = CS_HREDRAW | CS_VREDRAW;\n+  wcex.lpfnWndProc = wnd_proc_static;\n+  wcex.cbClsExtra = 0;\n+  wcex.cbWndExtra = 0;\n+  wcex.hInstance = hInstance;\n+  wcex.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(APPICON));\n+  wcex.hCursor = LoadCursor(nullptr, IDC_ARROW);\n+  wcex.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);\n+  wcex.lpszMenuName = nullptr;\n+  wcex.lpszClassName = L""PTSettingsClass"";\n+  wcex.hIconSm = nullptr;\n+\n+  RegisterClassExW(&wcex);\n+}\n+\n+int init_instance(HINSTANCE hInstance, int nCmdShow) {\n+  m_hInst = hInstance;\n+\n+  RECT desktopRect;\n+  const HWND hDesktop = GetDesktopWindow();\n+  GetWindowRect(hDesktop, &desktopRect);\n+\n+  int wind_width = 1024;\n+  int wind_height = 700;\n+  DPIAware::Convert(NULL, wind_width, wind_height);\n+  \n+  main_window_handler = CreateWindowW(\n+    L""PTSettingsClass"",\n+    L""PowerToys Settings"",\n+    WS_OVERLAPPEDWINDOW,\n+    (desktopRect.right - wind_width)/2,\n+    (desktopRect.bottom - wind_height)/2,\n+    wind_width,\n+    wind_height,\n+    nullptr,\n+    nullptr,\n+    hInstance,\n+    nullptr);\n+\n+  initialize_win32_webview(main_window_handler, nCmdShow);\n+  UpdateWindow(main_window_handler);\n+\n+  return TRUE;\n+}\n+\n+void wait_on_parent_process_thread(DWORD pid) {\n+  HANDLE process = OpenProcess(SYNCHRONIZE, FALSE, pid);\n+  if (process != NULL) {\n+    if (WaitForSingleObject(process, INFINITE) == WAIT_OBJECT_0) {\n+      // If it\'s possible to detect when the PowerToys process terminates, message the main window.\n+      CloseHandle(process);\n+      {\n+        // Send a terminated message only after the window has finished initializing.\n+        std::unique_lock lock(m_window_created_mutex);\n+      }\n+      PostMessage(main_window_handler, wm_my_destroy_window, 0, 0);\n+    } else {\n+      CloseHandle(process);\n+    }\n+  }\n+}\n+\n+void quit_when_parent_terminates(std::wstring parent_pid) {\n+  DWORD pid = std::stol(parent_pid);\n+  std::thread(wait_on_parent_process_thread,pid).detach();\n+}\n+\n+void read_arguments() {\n+  // Expected calling arguments:\n+  // [0] - This executable\'s path.\n+  // [1] - PowerToys pipe server.\n+  // [2] - Settings pipe server.\n+  // [3] - PowerToys process pid.\n+  LPWSTR *argument_list;\n+  int n_args;\n+\n+  argument_list = CommandLineToArgvW(GetCommandLineW(), &n_args);\n+  if (n_args > 3) {\n+    current_settings_ipc = new TwoWayPipeMessageIPC(std::wstring(argument_list[2]), std::wstring(argument_list[1]), send_message_to_webview);\n+    current_settings_ipc->start(NULL);\n+    quit_when_parent_terminates(std::wstring(argument_list[3]));\n+  } else {\n+#ifndef _DEBUG\n+    MessageBox(NULL, L""This executable isn\'t supposed to be called as a stand-alone process"", L""Error running settings"", MB_OK);\n+    exit(1);\n+#endif\n+  }\n+  LocalFree(argument_list);\n+}\n+\n+int start_webview_window(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {\n+  // To be unlocked after the Window has finished being created.\n+  m_window_created_mutex.lock();\n+  read_arguments();\n+  register_classes(hInstance);\n+  init_instance(hInstance, nCmdShow);\n+  MSG msg;\n+  // Main message loop:\n+  while (GetMessage(&msg, nullptr, 0, 0)) {\n+    TranslateMessage(&msg);\n+    DispatchMessage(&msg);\n+  }\n+\n+  return (int)msg.wParam;\n+}\n+\n+int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {\n+  HRESULT hrInit = CoInitialize(nullptr);\n+  return start_webview_window(hInstance, hPrevInstance, lpCmdLine, nCmdShow);\n+}'}, {'Name': 'src/editor/pch.cpp', 'Line Additions': 1, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1 @@\n+#include ""pch.h""'}, {'Name': 'src/editor/pch.h', 'Line Additions': 17, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,17 @@\n+#pragma once\n+#include <Windows.h>\n+#pragma push_macro(""GetCurrentTime"")\n+#undef GetCurrentTime\n+// include winrt headers with fix for ""warning C4002: Too many arguments for function-like macro invocation GetCurrentTime""\n+#include <winrt\\windows.system.h>\n+#include <winrt\\windows.web.ui.h>\n+#include <winrt\\windows.web.ui.interop.h>\n+#include <winrt\\windows.ui.xaml.controls.h>\n+#include <winrt\\windows.foundation.h>\n+#include <winrt\\windows.web.http.h>\n+#include <winrt\\windows.web.http.headers.h>\n+#include <winrt\\Windows.Storage.h>\n+#include <winrt\\Windows.Storage.Streams.h>\n+#pragma pop_macro(""GetCurrentTime"")\n+#include <strsafe.h>\n+#include <Shlwapi.h>'}, {'Name': 'src/editor/resource.h', 'Line Additions': 1, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1 @@\n+#define APPICON 101\r'}, {'Name': 'src/editor/settings-html/200.html', 'Line Additions': 25, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,25 @@\n+<!DOCTYPE html>\n+<html>\n+  <head>\n+    <script>\n+        window.output_from_webview = function(arg) {\n+          if (typeof (window.external) !== \'undefined\' && (\'notify\' in window.external)) {\n+            window.external.notify(arg);\n+          }\n+        }\n+        function receive_from_settings_app(arg) {\n+          window.react_app_component.receive_config_msg(JSON.parse(arg));\n+          return """";\n+        }\n+        function exit_settings_app() {\n+          window.react_app_component.receive_exit_request();\n+          return """";\n+        }\n+      </script>\n+         <title>PowerToys Settings</title>\n+  </head>\n+  <body>\n+    <div id=""app""></div>\n+    <script src=""dist/bundle.js"" charset=""UTF-8""></script>\n+  </body>\n+</html>'}, {'Name': 'src/editor/settings-html/dist/bundle.js', 'Line Additions': 31, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/editor/settings-html/index.html', 'Line Additions': 13, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,13 @@\n+<!DOCTYPE html><html dir=""ltr""><head><script>window.output_from_webview = function(arg) {\n+          if (typeof (window.external) !== \'undefined\' && (\'notify\' in window.external)) {\n+            window.external.notify(arg);\n+          }\n+        }\n+        function receive_from_settings_app(arg) {\n+          window.react_app_component.receive_config_msg(JSON.parse(arg));\n+          return """";\n+        }\n+        function exit_settings_app() {\n+          window.react_app_component.receive_exit_request();\n+          return """";\n+        }</script><title>PowerToys Settings</title><style data-merge-styles=""true"">@keyframes css-0{0%{opacity:0}100%{opacity:1}}@keyframes css-1{0%{opacity:1}100%{opacity:0}}@keyframes css-2{0%{transform:translate3d(-10px,0,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-3{0%{transform:translate3d(-20px,0,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-4{0%{transform:translate3d(-40px,0,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-5{0%{transform:translate3d(-400px,0,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-6{0%{transform:translate3d(10px,0,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-7{0%{transform:translate3d(20px,0,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-8{0%{transform:translate3d(40px,0,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-9{0%{transform:translate3d(400px,0,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-10{0%{transform:translate3d(0,10px,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-11{0%{transform:translate3d(0,20px,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-12{0%{transform:translate3d(0,-10px,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-13{0%{transform:translate3d(0,-20px,0)}100%{transform:translate3d(0,0,0)}}@keyframes css-14{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(10px,0,0)}}@keyframes css-15{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(20px,0,0)}}@keyframes css-16{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(40px,0,0)}}@keyframes css-17{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(400px,0,0)}}@keyframes css-18{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(-10px,0,0)}}@keyframes css-19{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(-20px,0,0)}}@keyframes css-20{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(-40px,0,0)}}@keyframes css-21{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(-400px,0,0)}}@keyframes css-22{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(0,-10px,0)}}@keyframes css-23{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(0,-20px,0)}}@keyframes css-24{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(0,10px,0)}}@keyframes css-25{0%{transform:translate3d(0,0,0)}100%{transform:translate3d(0,20px,0)}}@keyframes css-26{0%{transform:scale3d(.98,.98,1)}100%{transform:scale3d(1,1,1)}}@keyframes css-27{0%{transform:scale3d(1,1,1)}100%{transform:scale3d(.98,.98,1)}}@keyframes css-28{0%{transform:scale3d(1.03,1.03,1)}100%{transform:scale3d(1,1,1)}}@keyframes css-29{0%{transform:scale3d(1,1,1)}100%{transform:scale3d(1.03,1.03,1)}}@keyframes css-30{0%{transform:rotateZ(0)}100%{transform:rotateZ(90deg)}}@keyframes css-31{0%{transform:rotateZ(0)}100%{transform:rotateZ(-90deg)}}@font-face{font-family:""Leelawadee UI Web"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-light.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-light.woff) format(""woff"");font-weight:100;font-style:normal;font-display:swap}@font-face{font-family:""Leelawadee UI Web"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-semilight.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-semilight.woff) format(""woff"");font-weight:300;font-style:normal;font-display:swap}@font-face{font-family:""Leelawadee UI Web"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-regular.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-regular.woff) format(""woff"");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:""Leelawadee UI Web"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-semibold.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-semibold.woff) format(""woff"");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Arabic)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-arabic/segoeui-light.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-arabic/segoeui-light.woff) format(""woff"");font-weight:100;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Arabic)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-arabic/segoeui-semilight.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-arabic/segoeui-semilight.woff) format(""woff"");font-weight:300;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Arabic)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-arabic/segoeui-regular.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-arabic/segoeui-regular.woff) format(""woff"");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Arabic)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-arabic/segoeui-semibold.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-arabic/segoeui-semibold.woff) format(""woff"");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Cyrillic)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-cyrillic/segoeui-light.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-cyrillic/segoeui-light.woff) format(""woff"");font-weight:100;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Cyrillic)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-cyrillic/segoeui-semilight.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-cyrillic/segoeui-semilight.woff) format(""woff"");font-weight:300;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Cyrillic)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-cyrillic/segoeui-regular.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-cyrillic/segoeui-regular.woff) format(""woff"");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Cyrillic)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-cyrillic/segoeui-semibold.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-cyrillic/segoeui-semibold.woff) format(""woff"");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (East European)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-easteuropean/segoeui-light.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-easteuropean/segoeui-light.woff) format(""woff"");font-weight:100;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (East European)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-easteuropean/segoeui-semilight.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-easteuropean/segoeui-semilight.woff) format(""woff"");font-weight:300;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (East European)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-easteuropean/segoeui-regular.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-easteuropean/segoeui-regular.woff) format(""woff"");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (East European)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-easteuropean/segoeui-semibold.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-easteuropean/segoeui-semibold.woff) format(""woff"");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Greek)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-greek/segoeui-light.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-greek/segoeui-light.woff) format(""woff"");font-weight:100;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Greek)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-greek/segoeui-semilight.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-greek/segoeui-semilight.woff) format(""woff"");font-weight:300;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Greek)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-greek/segoeui-regular.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-greek/segoeui-regular.woff) format(""woff"");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Greek)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-greek/segoeui-semibold.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-greek/segoeui-semibold.woff) format(""woff"");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Hebrew)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-hebrew/segoeui-light.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-hebrew/segoeui-light.woff) format(""woff"");font-weight:100;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Hebrew)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-hebrew/segoeui-semilight.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-hebrew/segoeui-semilight.woff) format(""woff"");font-weight:300;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Hebrew)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-hebrew/segoeui-regular.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-hebrew/segoeui-regular.woff) format(""woff"");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Hebrew)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-hebrew/segoeui-semibold.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-hebrew/segoeui-semibold.woff) format(""woff"");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Vietnamese)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-vietnamese/segoeui-light.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-vietnamese/segoeui-light.woff) format(""woff"");font-weight:100;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Vietnamese)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-vietnamese/segoeui-semilight.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-vietnamese/segoeui-semilight.woff) format(""woff"");font-weight:300;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Vietnamese)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-vietnamese/segoeui-regular.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-vietnamese/segoeui-regular.woff) format(""woff"");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (Vietnamese)"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-vietnamese/segoeui-semibold.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-vietnamese/segoeui-semibold.woff) format(""woff"");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (West European)"";src:local(""Segoe UI Light""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-westeuropean/segoeui-light.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-westeuropean/segoeui-light.woff) format(""woff"");font-weight:100;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (West European)"";src:local(""Segoe UI SemiLight""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-westeuropean/segoeui-semilight.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-westeuropean/segoeui-semilight.woff) format(""woff"");font-weight:300;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (West European)"";src:local(""Segoe UI""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-westeuropean/segoeui-regular.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-westeuropean/segoeui-regular.woff) format(""woff"");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:""Segoe UI Web (West European)"";src:local(""Segoe UI SemiBold""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-westeuropean/segoeui-semibold.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/segoeui-westeuropean/segoeui-semibold.woff) format(""woff"");font-weight:600;font-style:normal;font-display:swap}@font-face{src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/selawik/selawik-light.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/selawik/selawik-light.woff) format(""woff"");font-weight:100;font-style:normal;font-display:swap}@font-face{src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/selawik/selawik-semilight.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/selawik/selawik-semilight.woff) format(""woff"");font-weight:300;font-style:normal;font-display:swap}@font-face{src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/selawik/selawik-regular.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/selawik/selawik-regular.woff) format(""woff"");font-weight:400;font-style:normal;font-display:swap}@font-face{src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/selawik/selawik-semibold.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/selawik/selawik-semibold.woff) format(""woff"");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:""Leelawadee UI Web"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-semilight.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-semilight.woff) format(""woff"");font-weight:100;font-style:normal;font-display:swap}@font-face{font-family:""Leelawadee UI Web"";src:url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-bold.woff2) format(""woff2""),url(https://static2.sharepointonline.com/files/fabric/assets/fonts/leelawadeeui-thai/leelawadeeui-bold.woff) format(""woff"");font-weight:600;font-style:normal;font-display:swap}.css-32{overflow:hidden!important}.css-33{animation-name:css-0,css-10;animation-duration:367ms;animation-timing-function:cubic-bezier(.1,.9,.2,1);animation-fill-mode:both}.css-34{animation-name:css-0,css-12;animation-duration:367ms;animation-timing-function:cubic-bezier(.1,.9,.2,1);animation-fill-mode:both}.css-35{animation-name:css-0,css-6;animation-duration:367ms;animation-timing-function:cubic-bezier(.1,.9,.2,1);animation-fill-mode:both}.css-36{animation-name:css-0,css-2;animation-duration:367ms;animation-timing-function:cubic-bezier(.1,.9,.2,1);animation-fill-mode:both}@keyframes css-37{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}#app,body,html{margin:0;padding:0;height:100vh}.css-39{animation-name:css-0,css-13;animation-duration:367ms;animation-timing-function:cubic-bezier(.1,.9,.2,1);animation-fill-mode:both}.root-40{font-family:""Segoe UI"",""Segoe UI Web (West European)"",""Segoe UI"",-apple-system,BlinkMacSystemFont,Roboto,""Helvetica Neue"",sans-serif;-webkit-font-smoothing:antialiased;font-size:14px;font-weight:400;overflow-y:auto;user-select:none}.linkText-41{margin:0 4px;overflow:hidden;vertical-align:middle;text-align:left;text-overflow:ellipsis}.compositeLink-42{display:block;position:relative;color:#323130;background-color:#f3f2f1}.compositeLink-42.is-selected button{background-color:#e1dfdd;color:#201f1e;font-weight:700}.compositeLink-42:hover button.ms-Nav-link{background-color:#e1dfdd;color:#323130}.compositeLink-42 i.ms-Button-icon{color:#201f1e;font-weight:400}.compositeLink-42:hover i.ms-Button-icon{color:#201f1e}.compositeLink-42:active i.ms-Button-icon{color:#201f1e}.link-43{outline:transparent;position:relative;display:block;height:36px;width:100%;line-height:36px;text-decoration:none;cursor:pointer;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;padding-left:20px;padding-right:20px;color:#323130}.ms-Fabric--isFocusVisible .link-43:focus::after{content:"""";position:absolute;left:1px;top:1px;bottom:1px;right:1px;border:1px solid #fff;outline:#605e5c solid 1px;z-index:1}.ms-Nav-compositeLink:hover .link-43{background-color:#faf9f8;color:#323130}.chevronButton-44{outline:transparent;position:relative;display:block;font-weight:400;font-size:18px;text-align:left;line-height:36px;margin:5px 0;padding-left:28px;border-top:none;border-right:none;border-left:none;border-image:initial;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;cursor:pointer;color:#323130;background-color:transparent;width:100%;height:36px;border-bottom:1px solid #edebe9;font-family:""Segoe UI"",""Segoe UI Web (West European)"",""Segoe UI"",-apple-system,BlinkMacSystemFont,Roboto,""Helvetica Neue"",sans-serif;-webkit-font-smoothing:antialiased}.ms-Fabric--isFocusVisible .chevronButton-44:focus::after{content:"""";position:absolute;left:1px;top:1px;bottom:1px;right:1px;border:1px solid #fff;outline:#605e5c solid 1px;z-index:1}.chevronButton-44:visited{color:inherit}.chevronButton-44:hover{color:#323130;background-color:#faf9f8}.compositeLink-42:hover .chevronButton-44{color:#323130;background-color:#faf9f8}.chevronIcon-45{position:absolute;left:8px;height:36px;line-height:36px;font-size:12px;transition:transform .1s linear 0s;transform:rotate(-180deg)}.navItem-46{padding:0}.navItems-47{list-style-type:none;padding:0;margin:0}.groupContent-49{display:block;margin-bottom:40px;animation-name:css-0,css-13;animation-duration:367ms;animation-timing-function:cubic-bezier(.1,.9,.2,1);animation-fill-mode:both}.chevronButton-50{outline:transparent;position:relative;display:block;font-weight:400;font-size:12px;text-align:left;line-height:36px;margin:5px 0;padding-left:28px;border:none;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;cursor:pointer;color:#323130;background-color:transparent}.ms-Fabric--isFocusVisible .chevronButton-50:focus::after{content:"""";position:absolute;left:1px;top:1px;bottom:1px;right:1px;border:1px solid #fff;outline:#605e5c solid 1px;z-index:1}.chevronButton-50:visited{color:inherit}.chevronButton-50:hover{color:#323130;background-color:#faf9f8}.compositeLink-42:hover .chevronButton-50{color:#323130;background-color:#faf9f8}.chevronIcon-51{position:absolute;left:8px;height:36px;line-height:36px;font-size:12px;transition:transform .1s linear 0s}.groupContent-52{display:none;margin-bottom:40px;animation-name:css-0,css-13;animation-duration:367ms;animation-timing-function:cubic-bezier(.1,.9,.2,1);animation-fill-mode:both}.link-53{outline:transparent;position:relative;display:block;height:36px;width:100%;line-height:36px;text-decoration:none;cursor:pointer;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;padding-left:20px;padding-right:20px;color:#0078d4;background-color:#f3f2f1}.ms-Fabric--isFocusVisible .link-53:focus::after{content:"""";position:absolute;left:1px;top:1px;bottom:1px;right:1px;border:1px solid #fff;outline:#605e5c solid 1px;z-index:1}.ms-Nav-compositeLink:hover .link-53{background-color:#faf9f8;color:#323130}.link-53::after{border-left:2px solid #0078d4;content:"""";position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.chevronButton-54{outline:transparent;position:absolute;display:block;font-weight:400;font-size:12px;text-align:left;line-height:36px;margin:0;padding:0;border:none;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;cursor:pointer;color:#0078d4;background-color:#faf9f8;width:26px;height:34px;top:1px;left:1px;z-index:1}.ms-Fabric--isFocusVisible .chevronButton-54:focus::after{content:"""";position:absolute;left:1px;top:1px;bottom:1px;right:1px;border:1px solid #fff;outline:#605e5c solid 1px;z-index:1}.chevronButton-54:visited{color:inherit}.chevronButton-54:hover{color:#323130;background-color:#faf9f8}.compositeLink-42:hover .chevronButton-54{color:#323130;background-color:#faf9f8}.chevronButton-54::after{border-left:2px solid #0078d4;content:"""";position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.chevronIcon-55{position:absolute;left:8px;height:36px;line-height:36px;font-size:12px;transition:transform .1s linear 0s;top:0}.link-56{outline:transparent;position:relative;display:block;height:36px;width:100%;line-height:36px;text-decoration:none;cursor:pointer;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;padding-left:3px;padding-right:20px;color:#0078d4;background-color:#f3f2f1}.ms-Fabric--isFocusVisible .link-56:focus::after{content:"""";position:absolute;left:1px;top:1px;bottom:1px;right:1px;border:1px solid #fff;outline:#605e5c solid 1px;z-index:1}.ms-Nav-compositeLink:hover .link-56{background-color:#faf9f8;color:#323130}.link-56::after{border-left:2px solid #0078d4;content:"""";position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.chevronButton-57{outline:transparent;position:relative;display:block;font-weight:400;font-size:12px;text-align:left;line-height:36px;margin:5px 0;padding-left:28px;border:none;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;cursor:pointer;color:#0078d4;background-color:#faf9f8}.ms-Fabric--isFocusVisible .chevronButton-57:focus::after{content:"""";position:absolute;left:1px;top:1px;bottom:1px;right:1px;border:1px solid #fff;outline:#605e5c solid 1px;z-index:1}.chevronButton-57:visited{color:inherit}.chevronButton-57:hover{color:#323130;background-color:#faf9f8}.compositeLink-42:hover .chevronButton-57{color:#323130;background-color:#faf9f8}.chevronButton-57::after{border-left:2px solid #0078d4;content:"""";position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.css-58:focus{outline:0}.link-59{outline:transparent;position:relative;font-family:""Segoe UI"",""Segoe UI Web (West European)"",""Segoe UI"",-apple-system,BlinkMacSystemFont,Roboto,""Helvetica Neue"",sans-serif;-webkit-font-smoothing:antialiased;font-size:14px;font-weight:400;box-sizing:border-box;border:1px solid transparent;display:block;text-decoration:none;text-align:center;cursor:pointer;vertical-align:top;padding:0 20px 0 3px;border-radius:2px;height:36px;color:#0078d4;background-color:#f3f2f1;width:100%;line-height:36px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;user-select:none}.ms-Fabric--isFocusVisible .link-59:focus::after{content:"""";position:absolute;left:1px;top:1px;bottom:1px;right:1px;border:1px solid #fff;outline:#605e5c solid 1px;z-index:1}@media not all{.ms-Fabric--isFocusVisible .link-59:focus::after{left:-2px;top:-2px;bottom:-2px;right:-2px;border:none;outline-color:buttontext}}.link-59:active>*{position:relative;left:0;top:0}.link-59:hover{color:#0078d4}@media not all{.link-59:hover{border-color:highlight;color:highlight}}.link-59:hover .ms-Button-icon{color:#0078d4}.link-59:active{color:#000}.link-59:active .ms-Button-icon{color:#004578}.ms-Nav-compositeLink:hover .link-59{background-color:#faf9f8;color:#323130}.link-59::after{border-left:2px solid #0078d4;content:"""";position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.flexContainer-60{display:flex;height:100%;flex-wrap:nowrap;justify-content:flex-start;align-items:center}.textContainer-61{flex-grow:0;overflow:hidden}.icon-62{font-size:16px;margin:0 4px;height:16px;line-height:16px;text-align:center;vertical-align:middle;flex-shrink:0;color:#106ebe}.label-63{margin:0 4px;line-height:36px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.menuIcon-64{font-size:12px;margin:0 4px;height:16px;line-height:16px;text-align:center;vertical-align:middle;flex-shrink:0;color:#605e5c}.screenReaderText-66{position:absolute;width:1px;height:1px;margin:-1px;padding:0;border:0;overflow:hidden}@font-face{font-family:FabricMDL2Icons;src:url(data:application/octet-stream;base64,d09GRgABAAAAAAu8AA4AAAAAFYgAA2PXAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABRAAAAEgAAABgMUZxSWNtYXAAAAGMAAAAWwAAAXqhL5+fY3Z0IAAAAegAAAAgAAAAKgnZCa9mcGdtAAACCAAAAPAAAAFZ/J7mjmdhc3AAAAL4AAAADAAAAAwACAAbZ2x5ZgAAAwQAAANmAAAFdLqlsAxoZWFkAAAGbAAAADIAAAA2AGEB92hoZWEAAAagAAAAFQAAACQQAQgDaG10eAAABrgAAAAmAAAAJhJIBzVsb2NhAAAG4AAAACQAAAAkDIYOZG1heHAAAAcEAAAAHQAAACAAKgH2bmFtZQAAByQAAAP2AAAJ+o+d8VFwb3N0AAALHAAAABQAAAAg/1EAiHByZXAAAAswAAAAiQAAANN4vfIOeJxjYGG/yjiBgZWBgXUWqzEDA6M0hGa+yJDGJMTBysrFyMQIBgxAIMCAAL7BCgoMDs8ZXllxgPkQkgGsjgXCU2BgAADopwgseJxjYGBgZoBgGQZGBhAoAfIYwXwWhgggLcQgABRhes7wnPc533PB58LPc16WvLL6/5+BAUks+2UuSEySUeKrxHeJTxIfJWaLzRa9BjUTDTCyYRMdWQAAVKwc+wB4nGPQYghlKGBoYFjFyMDYwOzAeIDBAYsIEAAAqhwHlXicXY+/TsNADMZzJLSEJ0A6IZ11KkOViJ3phksk1CUlDOelgNRKpO+AlIXFA8/ibhnzYgjMEf4utr/P+ny/c6f5yXx2nKVHKilWnDfhoNQLDurtmf35IU/vNmVhTNV5VvdlwWoJomtOF/VNsGjI0PWWTG0eH7acLWKXxY7w0nDShk7qbQB2qL/HHeJVPJLFI4QS30/xfYxL+rUsVobTiyasA/des/OoAUzFYxN49BoQf8ikP3VnE+NsOWXbwE5zgkSfygL3RJqE+0uPf/Wgkv+G+23Iv6tB9U3c9Bb0h2HBgrChl2fbUAkaYPkOhPxkxgABAAIACAAK//8AD3iclZPPaxtXEMdn3uzuSC1Waq/ktVJQa8mSECVqKlveQ0BxIZCkEB19WKOQUw6F6BISEASsQImbgi92bj2YRDR/QAKhxn9Arrnl1F5CqotzkFNoVrxdOrv6EQX3Uv3YNzvzmfedtzsDCp4CGD+Zd4GAAdz55fni8vzyU/pTv1Avgh/AvDv85ZHRBPkQAHYTYEkCJCEFFTiKvQTGN78DfHEIc2D9fQifAck1Edum2Oe/w+X6cmZ+eknAB/j4N7vdroZuV+H2NiDY+Be/s85JJqCTRBd539O2tj3at86JRe88fUu49/Ce53gOPgdIIiexLGwSHWNLPfOCa8E1Tz0Lmp56rp57BnxyGzQFgegUFlg85CG4cBt24FdRTC9m0lbGpKLFtkl5q5AvFahol8riWivV19brRdtcd8VVW1+tLa4KtOgUbWxgfa1UdstmFct2matYyFtcZjuFXGQnhZn0osNOMYcOOW4OV2vrruNSA13TxVpOZdIpVchXVX2toexaQ9aq3KfEn1PWP4hIB+HrpbOXwvuPkwtJ+T0O7186uxS+PkBCDIMDrEgUtydR3JYoVg7Cn5VhqOPNcPDV96WLrx45552lb5f2X10sbXwdDjaPR1E8czqKZzb1XvPhzQsXbj5sTlb3xpVK5coNd7waK/+vmGD2IOEfoiWKU7njT0udjZ4qVf04W1a0Bt2ZwuJVeoQUcWBtRb2UVNIg3NMt3fIooEARPdHXPQq1inob8TcgM+AgYovJqPPMnlYUevo6PaEow4tyY1ZJz1tbU1babma3FvWo52nSFLPA2GLfuhyNzahP0QDyT7Sv/ROSgOYBsfYH5E/4Q+F7ER/3vyTxiWbNJ8TEVm+gmfyB9olHdR+CONmP91eyv2P1ouAIYx7riKKwLWEvT9hoYFST/EkB7E9VhIWsynLf6kxZ5rbe03sd6lO/o7LUjm2d7UQs7nDf7I/OGE2hnFEi1KZ2R0tQMvRebI9q3oGs2eeYHz1rNts6O6GysUQsJs86C1mrM2ZHM65EeKI+FZGt4xeZkC98KRMNWDNyaiGTVillFPIrVSVTtdBQKzJfhsyX+FKGzJdhwC5ab44eXL364OhNONzdDYeTO7R277192buzsXGn9/LtvRk7Af9Jj3f60D2VMLalwn8BDliIAQAAeJxjYGRgYGBOvp43+b9GPL/NVwZuDgYQ2P/3YAOIvunUvwhEczCAxTkZmEAUAGSmCn0AAHicY2BkYOBgAAE4yciACpgAAsoAHQAAAAUqAKYIAAAAABMA8wAGAAMBpQIDAAcABwG5AV0AGQAZAYcCGQAAAAAAAAAWAEgAXAB+AW4BhAGaAbAByAHgAfYCDAIiAjoCUAJmArp4nGNgZGBgEGSYw8DCAAKMYJILhBkjQUwAFCoBIgAAAHictVQ/axxHFH+nO1sKjkUwBFxOEYIsjj1bKozsSthxZTWyEbgJzO3M7Q7e2xlmZr1scOHSRT5GGkM+RUggZep8gtSpUua9t7N3ku9ilEDu2NnfvHl/f+/NAsDd0dcwgv53jE+PR3AHdz3egV34JuExyp8nPEH8bcI34HNwCd+EL+BtwrtwAt8nvAdfwi8J34JD+D3h26OfR5OE9+Fw51eMMpp8hju182fCI/hqfJHwDuyPv0t4jPL3CU8Q/5jwDbg7/i3hmyDGfyS8C36yl/AeHE4GP7fg5eSHhG+P30/+SngfXu69++mDOLr/4KE4M7m3wS6ieGK9s15GY+tMnFaVODdFGYM410H7N1plz+Tcm1ycPX1+JE5D0DGc66KppN882JRcaB/QszjOjk/6Uzrsz17owmphgpAieqn0UvrXwi5ELPWl/ApvG0fi3C6drI0O2dbkyxjdo9msbdtsOZxnaDOLnbOFl67sZgtbxzBbm4fGucpoJeggE69sI5ayE03QmAQmRmIRrci9llFPhTLBVbKbClkr4bzB0xxVNL5lEE77pYkR3c07LqIyua7JFx4EYf0AFhRhulmq81Y1eZwKYh5tp2QzBDC1aEuTl5cyazGoqfOqUdimVfa2rjpxYO4JvZxjLmt19PCpbFldmboQXoeInSJW1wHIfOXrMTNwYDBK1EtqgTcYVdm2rqxUV9mTPVXaUzkWQ+HaRNdEoTSVSTqlrtxVRnEY6y6pU0PQIfJTmrnBnLPrdxs+gIAjuA8P4CGiMzCQgwcLAZ8FRJQ9QeTxztMqUWIQ1ZDhySlU+BdwjrICSjwLvNP41qj9BleFms/Qbo578k0xnuKX5YjtA2uSHVkV0KA/iZrXsbiOzgXnEVLOAr90GT4nV2wHy8t2Lzgbi6tAHapK4hOZAYXSJWf5GmXEEp2UrLuNv4L3DTI4aOf4XuJeYk6G2cr+BfPEc0TpI5jhv+V/hv4+ts9SnBnijr0U7Mehhw6lC/ZG1c62Rg+cs8OOGO6jWFlQ719xTYKZ6PDdMHc9Ez1jgzbJLFftUYPq0DDFvWI9xx3vWEJ8UBzHnelt8+RFp71k3477SjVHPiOrOecxdKLiishqyKu3CNwFvyFZrGqYXqurjvcKbXLcT5mvfub7uNNVnI8rMDyJLfOU47qdszZVSto5VtPw3Kmt3JNNxegA9e/hmyZ0nnjZ5r3P4b9yu/au2FOBMs9zHNOdGmZ1WwVD9M28Hl+aAaqkryVyvOEWkP++VoWSliu3fCs/NXvyylRp7otNa19Vjxu+WQ1bUrZDNwc/pFnxTf7nGe2/jHXqzNr7cENMYpnmh/KdM9N9b/+Hu/03eW84mAAAeJxjYGYAg/9+DOUMmEAQACk7Adl4nNvAoM2wiZGTSZtxExeI3M7Vmhtqq8rAob2dOzXYQU8GxOKJ8LDQkASxeJ3NteWFQSw+HRUZER4Qi19OQpiPA8QS4OPhZGcBsQTBAMQS2jChIMAAyGLYzgg3mgluNDPcaBa40axwo9nkJKFGs8ON5oAbzQk3epMwI7v2BgYF19pMCRcAxAEoGgAAAA==) format(""truetype"")}.css-67{-webkit-font-smoothing:antialiased;font-style:normal;font-weight:400;speak:none;font-family:FabricMDL2Icons}.icon-68{display:inline-block;-webkit-font-smoothing:antialiased;font-style:normal;font-weight:400;speak:none;font-family:FabricMDL2Icons;font-size:16px;margin:0 4px;height:16px;line-height:16px;text-align:center;vertical-align:middle;flex-shrink:0;color:#106ebe}.css-69{font-family:""Segoe UI"",""Segoe UI Web (West European)"",""Segoe UI"",-apple-system,BlinkMacSystemFont,Roboto,""Helvetica Neue"",sans-serif;-webkit-font-smoothing:antialiased;font-size:28px;font-weight:600;display:block;color:inherit;overflow:hidden;text-overflow:ellipsis}.css-70{display:flex;flex-flow:row nowrap;width:auto;height:auto;box-sizing:border-box}.css-70>*{text-overflow:ellipsis}.css-70>:not(:first-child){margin-left:16px}.css-70>:not(.ms-StackItem){flex-shrink:1}.root-71{outline:transparent;position:relative;font-family:""Segoe UI"",""Segoe UI Web (West European)"",""Segoe UI"",-apple-system,BlinkMacSystemFont,Roboto,""Helvetica Neue"",sans-serif;-webkit-font-smoothing:antialiased;font-size:14px;font-weight:400;box-sizing:border-box;border:none #f3f2f1;display:inline-block;text-decoration:none;text-align:center;cursor:default;vertical-align:top;padding:0 16px;border-radius:2px;min-width:100px;height:32px;background-color:#f3f2f1;color:#a19f9d;pointer-events:none;user-select:none}.ms-Fabric--isFocusVisible .root-71:focus::after{content:"""";position:absolute;left:2px;top:2px;bottom:2px;right:2px;border:1px solid #fff;outline:#605e5c solid 1px;z-index:1}@media not all{.ms-Fabric--isFocusVisible .root-71:focus::after{left:-2px;top:-2px;bottom:-2px;right:-2px;border:none;outline-color:buttontext}}.root-71:active>*{position:relative;left:0;top:0}@media not all{.root-71{color:graytext;background-color:window;border-color:graytext}}.root-71:hover{outline:0}.root-71:focus{outline:0}.flexContainer-72{display:flex;height:100%;flex-wrap:nowrap;justify-content:center;align-items:center}.textContainer-73{flex-grow:1}.icon-74{font-size:16px;margin:0 4px;height:16px;line-height:16px;text-align:center;vertical-align:middle;flex-shrink:0;color:#a19f9d}.label-75{margin:0 4px;line-height:100%;font-weight:600}.menuIcon-76{font-size:12px;margin:0 4px;height:16px;line-height:16px;text-align:center;vertical-align:middle;flex-shrink:0;color:#a19f9d}.root-77{font-family:""Segoe UI"",""Segoe UI Web (West European)"",""Segoe UI"",-apple-system,BlinkMacSystemFont,Roboto,""Helvetica Neue"",sans-serif;-webkit-font-smoothing:antialiased;font-size:14px;font-weight:400;position:absolute;top:0;right:0;bottom:0;left:0}.contentContainer-78{overflow-y:auto;position:absolute;top:0;right:0;bottom:0;left:0;padding-top:16px;padding-left:16px;padding-right:16px}.stickyAbove-79{top:0;position:absolute;pointer-events:auto}@media not all{.stickyAbove-79{border-bottom:1px solid windowtext}}.stickyBelow-80{bottom:0;position:absolute;pointer-events:auto}@media not all{.stickyBelow-80{border-top:1px solid windowtext}}.stickyBelowItems-81{bottom:0;position:absolute;pointer-events:auto;width:100%}.root-82{font-family:""Segoe UI"",""Segoe UI Web (West European)"",""Segoe UI"",-apple-system,BlinkMacSystemFont,Roboto,""Helvetica Neue"",sans-serif;-webkit-font-smoothing:antialiased;font-size:14px;font-weight:400}.main-83{width:288px;outline:transparent solid 3px}@media (min-width:480px){.main-83{width:auto;max-width:340px;min-width:288px}}</style><style type=""text/css"">.body{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;height:100%}.body .sidebar{-webkit-box-ordinal-group:0;order:-1;max-width:228px;min-width:228px;flex-basis:228px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;background-color:#f3f2f1}.body .sidebar.collapsed{max-width:48px;min-width:48px;flex-basis:48px}.body .editorzone{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-flex:1;flex-grow:1}.body .editorzone .editorhead{display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-flex:1;flex-grow:1;min-height:50px;max-height:50px;border-bottom:1px solid #f3f2f1;padding-left:16px;padding-right:16px}.body .editorzone .editorhead .editortitle{align-self:center;flex-basis:0;-webkit-box-flex:1;flex-grow:1;flex-shrink:1;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.body .editorzone .editorhead .editorheadbuttons{justify-self:right;-webkit-box-pack:right;justify-content:right;align-self:center}.body .editorzone .editorbody{display:-webkit-box;display:flex;position:relative;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-flex:1;flex-grow:1}</style></head><body><div id=""app""><div class=""body""><div class=""sidebar""><div class=""ms-FocusZone css-58"" data-focuszone-id=""FocusZone0"" role=""presentation""><nav class=""ms-Nav root-40"" role=""navigation""><div class=""ms-Nav-group is-expanded group-48""><div class=""ms-Nav-groupContent groupContent-49""><ul class=""ms-Nav-navItems navItems-47"" role=""list""><li class=""ms-Nav-navItem navItem-46"" role=""listitem""><div class=""ms-Nav-compositeLink is-selected compositeLink-42"" name=""General Settings""><button class=""ms-Button ms-Button--action ms-Button--command ms-Nav-link link-59"" data-is-focusable=""true"" type=""button"" tabindex=""0"" title=""General Settings""><div class=""ms-Button-flexContainer flexContainer-60""><i aria-hidden=""true"" class=""ms-Button-icon icon-68"" data-icon-name=""Settings"" role=""presentation"">\ue713</i><div class=""ms-Nav-linkText linkText-41"">General Settings</div></div></button></div></li></ul></div></div></nav></div></div><div class=""editorzone""><div class=""editorhead""><div class=""editortitle""><span class=""css-69"">PowerToys General Settings</span></div><div class=""editorheadbuttons""><div class=""ms-Stack css-70""><button class=""ms-Button ms-Button--primary is-disabled root-71"" data-is-focusable=""false"" type=""button"" aria-disabled=""true"" disabled><div class=""ms-Button-flexContainer flexContainer-72""><div class=""ms-Button-textContainer textContainer-73""><div class=""ms-Button-label label-75"" id=""id__4"">Save</div></div><span></span></div></button></div></div></div><div class=""editorbody""><div class=""ms-ScrollablePane root-77""><div class=""ms-ScrollablePane--contentContainer contentContainer-78"" data-is-scrollable=""true""></div><div class=""stickyAbove-79"" style=""height:0;left:0;right:0;top:0""></div><div class=""stickyBelow-80"" style=""height:0;left:0;right:0;bottom:0""><div class=""stickyBelowItems-81""></div></div></div></div></div></div></div><script charset=""UTF-8"" src=""dist/bundle.js""></script></body></html>\n\\ No newline at end of file'}, {'Name': 'src/editor/settings.rc', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/editor/settings.vcxproj', 'Line Additions': 137, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,137 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project DefaultTargets=""Build"" ToolsVersion=""15.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup Label=""ProjectConfigurations"">\r\n+    <ProjectConfiguration Include=""Debug|x64"">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=""Release|x64"">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=""Globals"">\r\n+    <VCProjectVersion>15.0</VCProjectVersion>\r\n+    <ProjectGuid>{07C389E3-6BC8-41CF-923E-307B1265FA2D}</ProjectGuid>\r\n+    <RootNamespace>PowerToysSettingsEditor</RootNamespace>\r\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\r\n+    <ProjectName>settings</ProjectName>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <UseDebugLibraries>true</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <UseDebugLibraries>false</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\r\n+  <ImportGroup Label=""ExtensionSettings"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""Shared"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=""UserMacros"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <TargetName>PowerToysSettings</TargetName>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <TargetName>PowerToysSettings</TargetName>\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <ClCompile>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+    </ClCompile>\r\n+    <CustomBuildStep>\r\n+      <Command>\r\n+      </Command>\r\n+    </CustomBuildStep>\r\n+    <PostBuildEvent>\r\n+      <Command>XCOPY ""$(ProjectDir)settings-html"" ""$(TargetDir)\\settings-html\\"" /S /I /Y</Command>\r\n+    </PostBuildEvent>\r\n+    <PostBuildEvent>\r\n+      <Message>Copying web assets</Message>\r\n+    </PostBuildEvent>\r\n+    <Manifest>\r\n+      <EnableDpiAwareness>PerMonitorHighDPIAware</EnableDpiAwareness>\r\n+    </Manifest>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <ClCompile>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <AdditionalIncludeDirectories>..;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+    </Link>\r\n+    <CustomBuildStep>\r\n+      <Command>\r\n+      </Command>\r\n+    </CustomBuildStep>\r\n+    <PostBuildEvent>\r\n+      <Command>XCOPY ""$(ProjectDir)settings-html"" ""$(TargetDir)\\settings-html\\"" /S /I /Y</Command>\r\n+    </PostBuildEvent>\r\n+    <PostBuildEvent>\r\n+      <Message>Copying web assets</Message>\r\n+    </PostBuildEvent>\r\n+    <Manifest>\r\n+      <EnableDpiAwareness>PerMonitorHighDPIAware</EnableDpiAwareness>\r\n+    </Manifest>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""pch.h"" />\r\n+    <ClInclude Include=""resource.h"" />\r\n+    <ClInclude Include=""StreamUriResolverFromFile.h"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""main.cpp"" />\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""StreamURIResolverFromFile.cpp"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""settings.rc"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <Image Include=""..\\runner\\svgs\\icon.ico"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=""..\\common\\common.vcxproj"">\r\n+      <Project>{74485049-c722-400f-abe5-86ac52d929b3}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\r\n+  <ImportGroup Label=""ExtensionTargets"">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/editor/settings.vcxproj.filters', 'Line Additions': 49, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,49 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup>\r\n+    <Filter Include=""Source Files"">\r\n+      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>\r\n+      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=""Header Files"">\r\n+      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>\r\n+      <Extensions>h;hh;hpp;hxx;hm;inl;inc;ipp;xsd</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=""Resource Files"">\r\n+      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>\r\n+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""pch.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""StreamUriResolverFromFile.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""resource.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""StreamURIResolverFromFile.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""main.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""settings.rc"">\r\n+      <Filter>Resource Files</Filter>\r\n+    </ResourceCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <Image Include=""..\\runner\\svgs\\icon.ico"">\r\n+      <Filter>Resource Files</Filter>\r\n+    </Image>\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/README.md', 'Line Additions': 18, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,18 @@\n+# PowerToys Modules\r\n+\r\n+The source code of the PowerToys modules:\r\n+\r\n+#### [`example_powertoy`](./example_powertoy)\r\n+An example PowerToy, that demonstrates how to create new ones.\r\n+\r\n+#### [`fancyzones`](./fancyzones)\r\n+The FancyZones PowerToy that alows users to create custom zones on the screen, to which the windows will snap when moved. \r\n+\r\n+#### [`FancyZonesEditor`](./FancyZonesEditor)\r\n+Editor for the snap-zones of the FancyZones PowerToy.\r\n+\r\n+#### [`interface`](./interface)\r\n+Definition of the interface used by the [`runner`](/src/runner) to manage the PowerToys. All PowerToys must implement this interface.\r\n+\r\n+#### [`shortcut_guide`](./shorcut_guide)\r\n+The Windows Shortcut Guide, displayed when the WinKey is held for some time.\r'}, {'Name': 'src/modules/example_powertoy/README.md', 'Line Additions': 22, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,22 @@\n+# Example PowerToy\n+\n+# Introduction\n+This PowerToy serves as a sample to show how to implement the [PowerToys interface](/src/modules/interface/) when creating a PowerToy. It also showcases the currently implemented settings.\n+\n+# Options\n+This module has a setting to serve as an example for each of the currently implemented settings property:\n+  - BoolToggle property\n+  - IntSpinner property\n+  - String property\n+  - ColorPicker property\n+  - CustomAction property\n+\n+![Image of the Options](/doc/images/example_powertoy/settings.png)\n+\n+# Code organization\n+\n+#### [`dllmain.cpp`](./dllmain.cpp)\n+Contains DLL boilerplate code and implementation of the [PowerToys interface](/src/modules/interface/).\n+\n+#### [`trace.cpp`](./trace.cpp)\n+Contains code for telemetry.'}, {'Name': 'src/modules/example_powertoy/dllmain.cpp', 'Line Additions': 292, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,292 @@\n+#include ""pch.h""\r\n+#include <interface/powertoy_module_interface.h>\r\n+#include <interface/lowlevel_keyboard_event_data.h>\r\n+#include <interface/win_hook_event_data.h>\r\n+#include ""trace.h""\r\n+#include <common/settings_objects.h>\r\n+\r\n+extern ""C"" IMAGE_DOS_HEADER __ImageBase;\r\n+\r\n+BOOL APIENTRY DllMain(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved) {\r\n+  switch (ul_reason_for_call) {\r\n+  case DLL_PROCESS_ATTACH:\r\n+    Trace::RegisterProvider();\r\n+    break;\r\n+  case DLL_THREAD_ATTACH:\r\n+  case DLL_THREAD_DETACH:\r\n+    break;\r\n+  case DLL_PROCESS_DETACH:\r\n+    Trace::UnregisterProvider();\r\n+    break;\r\n+  }\r\n+  return TRUE;\r\n+}\r\n+\r\n+// PowerToy sample settings.\r\n+struct SampleSettings {\r\n+  bool test_bool_prop = true;\r\n+  int test_int_prop = 10;\r\n+  std::wstring test_string_prop = L""The quick brown fox jumps over the lazy dog"";\r\n+  std::wstring test_color_prop = L""#1212FF"";\r\n+} g_settings;\r\n+\r\n+// Implement the PowerToy Module Interface and all the required methods.\r\n+class ExamplePowertoy : public PowertoyModuleIface {\r\n+private:\r\n+  // The PowerToy state.\r\n+  bool m_enabled = false;\r\n+\r\n+  // Load and save Settings.\r\n+  void init_settings();\r\n+  void save_settings();\r\n+\r\n+public:\r\n+  // Constructor\r\n+  ExamplePowertoy() {\r\n+    init_settings();\r\n+  };\r\n+\r\n+  // Destroy the powertoy and free memory\r\n+  virtual void destroy() override {\r\n+    delete this;\r\n+  }\r\n+\r\n+  // Return the display name of the powertoy, this will be cached\r\n+  virtual const wchar_t* get_name() override {\r\n+    return L""Example Powertoy"";\r\n+  }\r\n+\r\n+  // Return array of the names of all events that this powertoy listens for, with\r\n+  // nullptr as the last element of the array. Nullptr can also be retured for empty\r\n+  // list.\r\n+  // Right now there is only lowlevel keyboard hook event\r\n+  virtual const wchar_t** get_events() override {\r\n+    static const wchar_t* events[] = { ll_keyboard,\r\n+                                       win_hook_event,\r\n+                                       nullptr };\r\n+    return events;\r\n+  }\r\n+\r\n+  // Return JSON with the configuration options.\r\n+  virtual bool get_config(wchar_t* buffer, int* buffer_size) override {\r\n+    HINSTANCE hinstance = reinterpret_cast<HINSTANCE>(&__ImageBase);\r\n+\r\n+    // Create a Settings object.\r\n+    PowerToysSettings::Settings settings(hinstance, get_name());\r\n+    settings.set_description(L""Serves as an example powertoy, with example settings."");\r\n+\r\n+    // Show an overview link in the Settings page\r\n+    settings.set_overview_link(L""https://github.com/microsoft/PowerToys"");\r\n+\r\n+    // Show a video link in the Settings page.\r\n+    settings.set_video_link(L""https://www.youtube.com/watch?v=d3LHo2yXKoY&t=21462"");\r\n+\r\n+    // Add a bool property with a toggle editor.\r\n+    settings.add_bool_toogle(\r\n+      L""test_bool_toggle"", // property name.\r\n+      L""This is what a BoolToggle property looks like"", // description or resource id of the localized string.\r\n+      g_settings.test_bool_prop // property value.\r\n+    );\r\n+\r\n+    // Add an integer property with a spinner editor.\r\n+    settings.add_int_spinner(\r\n+      L""test_int_spinner"", // property name\r\n+      L""This is what a IntSpinner property looks like"", // description or resource id of the localized string.\r\n+      g_settings.test_int_prop, // property value.\r\n+      0, // min value.\r\n+      100, // max value.\r\n+      10 // incremental step.\r\n+    );\r\n+\r\n+    // Add a string property with a textbox editor.\r\n+    settings.add_string(\r\n+      L""test_string_text"", // property name.\r\n+      L""This is what a String property looks like"", // description or resource id of the localized string.\r\n+      g_settings.test_string_prop // property value.\r\n+    );\r\n+\r\n+    // Add a string property with a color picker editor.\r\n+    settings.add_color_picker(\r\n+      L""test_color_picker"", // property name.\r\n+      L""This is what a ColorPicker property looks like"", // description or resource id of the localized string.\r\n+      g_settings.test_color_prop // property value.\r\n+    );\r\n+\r\n+    // Add a custom action property. When using this settings type, the ""PowertoyModuleIface::call_custom_action()""\r\n+    // method should be overriden as well.\r\n+    settings.add_custom_action(\r\n+      L""test_custom_action"", // action name.\r\n+      L""This is what a CustomAction property looks like"", // label above the field.\r\n+      L""Call a custom action"", // button text.\r\n+      L""Press the button to call a custom action in the Example PowerToy"" // display values / extended info.\r\n+    );\r\n+\r\n+    return settings.serialize_to_buffer(buffer, buffer_size);\r\n+  }\r\n+\r\n+  // Signal from the Settings editor to call a custom action.\r\n+  // This can be used to spawn more complex editors.\r\n+  virtual void call_custom_action(const wchar_t* action) override {\r\n+    static UINT custom_action_num_calls = 0;\r\n+    try {\r\n+      // Parse the action values, including name.\r\n+      PowerToysSettings::CustomActionObject action_object =\r\n+        PowerToysSettings::CustomActionObject::from_json_string(action);\r\n+\r\n+      if (action_object.get_name() == L""test_custom_action"") {\r\n+        // Custom action code to increase and show a counter.\r\n+        ++custom_action_num_calls;\r\n+        std::wstring msg(L""I have been called "");\r\n+        msg += std::to_wstring(custom_action_num_calls);\r\n+        msg += L"" time(s)."";\r\n+        MessageBox(NULL, msg.c_str(), L""Custom action call."", MB_OK | MB_TOPMOST);\r\n+      }\r\n+    }\r\n+    catch (std::exception ex) {\r\n+      // Improper JSON.\r\n+    }\r\n+  }\r\n+\r\n+  // Called by the runner to pass the updated settings values as a serialized JSON.\r\n+  virtual void set_config(const wchar_t* config) override { \r\n+    try {\r\n+      // Parse the input JSON string.\r\n+      PowerToysSettings::PowerToyValues values =\r\n+        PowerToysSettings::PowerToyValues::from_json_string(config);\r\n+\r\n+      // Update the bool property.\r\n+      if (values.is_bool_value(L""test_bool_toggle"")) {\r\n+        g_settings.test_bool_prop = values.get_bool_value(L""test_bool_toggle"");\r\n+      }\r\n+\r\n+      // Update the int property.\r\n+      if (values.is_int_value(L""test_int_spinner"")) {\r\n+        g_settings.test_int_prop = values.get_int_value(L""test_int_spinner"");\r\n+      }\r\n+\r\n+      // Update the string property.\r\n+      if (values.is_string_value(L""test_string_text"")) {\r\n+        g_settings.test_string_prop = values.get_string_value(L""test_string_text"");\r\n+      }\r\n+\r\n+      // Update the color property.\r\n+      if (values.is_string_value(L""test_color_picker"")) {\r\n+        g_settings.test_color_prop = values.get_string_value(L""test_color_picker"");\r\n+      }\r\n+\r\n+      // If you don\'t need to do any custom processing of the settings, proceed\r\n+      // to persists the values calling:\r\n+      values.save_to_settings_file();\r\n+      // Otherwise call a custom function to process the settings before saving them to disk:\r\n+      // save_settings();\r\n+    }\r\n+    catch (std::exception ex) {\r\n+      // Improper JSON.\r\n+    }\r\n+  }\r\n+\r\n+  // Enable the powertoy\r\n+  virtual void enable() {\r\n+    m_enabled = true;\r\n+  }\r\n+\r\n+  // Disable the powertoy\r\n+  virtual void disable() {\r\n+    m_enabled = false;\r\n+  }\r\n+\r\n+  // Returns if the powertoys is enabled\r\n+  virtual bool is_enabled() override { \r\n+    return m_enabled;\r\n+  }\r\n+\r\n+  // Handle incoming event, data is event-specific\r\n+  virtual intptr_t signal_event(const wchar_t* name, intptr_t data)  override {\r\n+    if (wcscmp(name, ll_keyboard) == 0) {\r\n+      auto& event = *(reinterpret_cast<LowlevelKeyboardEvent*>(data));\r\n+      // Return 1 if the keypress is to be suppressed (not forwarded to Windows),\r\n+      // otherwise return 0.\r\n+      return 0;\r\n+    } else if (wcscmp(name, win_hook_event) == 0) {\r\n+      auto& event = *(reinterpret_cast<WinHookEvent*>(data));\r\n+      // Return value is ignored\r\n+      return 0;\r\n+    }\r\n+    return 0;\r\n+  }\r\n+};\r\n+\r\n+// Load the settings file.\r\n+void ExamplePowertoy::init_settings() {\r\n+  try {\r\n+    // Load and parse the settings file for this PowerToy.\r\n+    PowerToysSettings::PowerToyValues settings =\r\n+      PowerToysSettings::PowerToyValues::load_from_settings_file(get_name());\r\n+\r\n+    // Load the bool property.\r\n+    if (settings.is_bool_value(L""test_bool_toggle"")) {\r\n+      g_settings.test_bool_prop = settings.get_bool_value(L""test_bool_toggle"");\r\n+    }\r\n+\r\n+    // Load the int property.\r\n+    if (settings.is_int_value(L""test_int_spinner"")) {\r\n+      g_settings.test_int_prop = settings.get_int_value(L""test_int_spinner"");\r\n+    }\r\n+\r\n+    // Load the string property.\r\n+    if (settings.is_string_value(L""test_string_text"")) {\r\n+      g_settings.test_string_prop = settings.get_string_value(L""test_string_text"");\r\n+    }\r\n+\r\n+    // Load the color property.\r\n+    if (settings.is_string_value(L""test_color_picker"")) {\r\n+      g_settings.test_color_prop = settings.get_string_value(L""test_color_picker"");\r\n+    }\r\n+  }\r\n+  catch (std::exception ex) {\r\n+    // Error while loading from the settings file. Let default values stay as they are.\r\n+  }\r\n+}\r\n+\r\n+// This method of saving the module settings is only required if you need to do any\r\n+// custom processing of the settings before saving them to disk.\r\n+void ExamplePowertoy::save_settings() {\r\n+  try {\r\n+    // Create a PowerToyValues object for this PowerToy\r\n+    PowerToysSettings::PowerToyValues values(get_name());\r\n+\r\n+    // Save the bool property.\r\n+    values.add_property(\r\n+      L""test_bool_toggle"", // property name\r\n+      g_settings.test_bool_prop // property value\r\n+    );\r\n+\r\n+    // Save the int property.\r\n+    values.add_property(\r\n+      L""test_int_spinner"", // property name\r\n+      g_settings.test_int_prop // property value\r\n+    );\r\n+\r\n+    // Save the string property.\r\n+    values.add_property(\r\n+      L""test_string_text"", // property name\r\n+      g_settings.test_string_prop // property value\r\n+    );\r\n+\r\n+    // Save the color property.\r\n+    values.add_property(\r\n+      L""test_color_picker"", // property name\r\n+      g_settings.test_color_prop // property value\r\n+    );\r\n+\r\n+    // Save the PowerToyValues JSON to the power toy settings file.\r\n+    values.save_to_settings_file();\r\n+  }\r\n+  catch (std::exception ex) {\r\n+    // Couldn\'t save the settings.\r\n+  }\r\n+}\r\n+\r\n+extern ""C"" __declspec(dllexport) PowertoyModuleIface*  __cdecl powertoy_create() {\r\n+  return new ExamplePowertoy();\r\n+}\r'}, {'Name': 'src/modules/example_powertoy/example_powertoy.rc', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/example_powertoy/example_powertoy.vcxproj', 'Line Additions': 122, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,122 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project DefaultTargets=""Build"" ToolsVersion=""15.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup Label=""ProjectConfigurations"">\r\n+    <ProjectConfiguration Include=""Debug|x64"">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=""Release|x64"">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=""Globals"">\r\n+    <VCProjectVersion>15.0</VCProjectVersion>\r\n+    <ProjectGuid>{44CC9375-3E6E-4D99-8913-7FB748807EBD}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+    <RootNamespace>examplepowertoy</RootNamespace>\r\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseDebugLibraries>true</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseDebugLibraries>false</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\r\n+  <ImportGroup Label=""ExtensionSettings"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""Shared"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=""UserMacros"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <LinkIncremental>true</LinkIncremental>\r\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\modules\\</OutDir>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <LinkIncremental>false</LinkIncremental>\r\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\modules\\</OutDir>\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <ClCompile>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <PreprocessorDefinitions>_DEBUG;EXAMPLEPOWERTOY_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <AdditionalIncludeDirectories>..\\..\\common\\inc;..\\..\\common\\Telemetry;..\\;..\\..\\;..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <ClCompile>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <PreprocessorDefinitions>NDEBUG;EXAMPLEPOWERTOY_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <AdditionalIncludeDirectories>..\\..\\common\\inc;..\\..\\common\\Telemetry;..\\;..\\..\\;..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""pch.h"" />\r\n+    <ClInclude Include=""resource.h"" />\r\n+    <ClInclude Include=""trace.h"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""dllmain.cpp"" />\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\r\n+      <PrecompiledHeaderFile Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">pch.h</PrecompiledHeaderFile>\r\n+      <PrecompiledHeaderFile Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">pch.h</PrecompiledHeaderFile>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""trace.cpp"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=""..\\..\\common\\common.vcxproj"">\r\n+      <Project>{74485049-c722-400f-abe5-86ac52d929b3}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""example_powertoy.rc"" />\r\n+  </ItemGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\r\n+  <ImportGroup Label=""ExtensionTargets"">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/example_powertoy/example_powertoy.vcxproj.filters', 'Line Additions': 16, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,16 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""pch.cpp"" />\r\n+    <ClCompile Include=""dllmain.cpp"" />\r\n+    <ClCompile Include=""trace.cpp"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""pch.h"" />\r\n+    <ClInclude Include=""trace.h"" />\r\n+    <ClInclude Include=""resource.h"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""example_powertoy.rc"" />\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/example_powertoy/pch.cpp', 'Line Additions': 2, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,2 @@\n+#include ""pch.h""\r\n+#pragma comment(lib, ""windowsapp"")\n\\ No newline at end of file'}, {'Name': 'src/modules/example_powertoy/pch.h', 'Line Additions': 5, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,5 @@\n+#pragma once\r\n+#define WIN32_LEAN_AND_MEAN\r\n+#include <windows.h>\r\n+#include <common/common.h>\r\n+#include <ProjectTelemetry.h>\n\\ No newline at end of file'}, {'Name': 'src/modules/example_powertoy/resource.h', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/example_powertoy/trace.cpp', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+#include ""pch.h""\n+#include ""trace.h""\n+\n+TRACELOGGING_DEFINE_PROVIDER(\n+  g_hProvider,\n+  ""Microsoft.PowerToys"",\n+  // {38e8889b-9731-53f5-e901-e8a7c1753074}\n+  (0x38e8889b, 0x9731, 0x53f5, 0xe9, 0x01, 0xe8, 0xa7, 0xc1, 0x75, 0x30, 0x74),\n+  TraceLoggingOptionProjectTelemetry());\n+\n+void Trace::RegisterProvider() {\n+  TraceLoggingRegister(g_hProvider);\n+}\n+\n+void Trace::UnregisterProvider() {\n+  TraceLoggingUnregister(g_hProvider);\n+}\n+\n+void Trace::MyEvent() {\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""PowerToyName::Event::MyEvent"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+}'}, {'Name': 'src/modules/example_powertoy/trace.h', 'Line Additions': 8, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,8 @@\n+#pragma once\n+\n+class Trace {\n+public:\n+  static void RegisterProvider();\n+  static void UnregisterProvider();\n+  static void MyEvent();\n+};'}, {'Name': 'src/modules/fancyzones/FancyZones.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/FancyZonesSettings.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/Picker.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/README.md', 'Line Additions': 41, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,41 @@\n+# Fancy Zones\n+Fancy Zones is a window manager that is designed to make it easy to arrange and snap windows into efficient layouts for your workflow and also to restore these layouts quickly.  Fancy Zones allows the user to define a set of window locations for a desktop that are drag targets for windows.  When the user drags a window into a zone, the windows is resized and repositioned to fill that zone.  \n+\n+![Fancy Zones](FancyZones.png)\n+\n+To get started with Fancy Zones, you need to enable the utility in Power Toys settings and then invoke the Fancy Zones setup UI.  There is a button in settings to invoke this UI, or you can press Win+~ to launch it.  When first launched, the UI presents a list of zone layouts that can be quickly adjusted by how many windows are on the monitor.  Choosing a layout shows a preview of that layout on the monitor.  Pressing the save and close button sets that layout to the monitor.  \n+\n+![Fancy Zones Picker](Picker.png)\n+\n+The editor also supports creating and saving custom layouts.  This functionality is in the “Custom” tab in the editor UI.  There are two ways to create custom zone layouts, window layout and table layout.  These can also be thought of as additive and subtractive models.  The additive window layout model starts with a blank layout and supports adding zones that can be dragged and resized similar to windows.  \n+\n+![Fancy Zones Window Editor Mode](WindowEditor.png)\n+\n+The subtractive table layout model starts with a table layout and allows zones to be created by splitting and merging zones and then resizing the gutter between zones.  \n+\n+![Fancy Zones Table Editor Mode](TableEditor.png)\n+\n+The backlog for the utility can be found [here](https://github.com/Microsoft/PowerToys/tree/master/doc/planning/FancyZonesBacklog.md) and the source code is [here](https://github.com/Microsoft/PowerToys/tree/master/src/modules/fancyzones).\n+\n+## Shortcut Keys\n+| Shortcut      | Action |\n+| ----------- | ----------- |\n+| Win + ~      | Launches editor       |\n+| Win+Ctrl+<Number>   | Cycles through saved layouts with the coresponding number of zones        |\n+| Win+Left/Right Arrow | Move focused window between zones (only if Override snap hotkeys setting is enabled)  |\n+\n+## Settings\n+| Setting | Description |\n+| --------- | ------------- |\n+| Enable zones while dragging with the shift key | Toggles between auto-snap mode with the shift key disabling snapping during a drag and manual snap mode where pressing the shift key during a drag enables snapping |\n+| Override Windows Snap hotkeys (win+arrow) to move between zones | Enables or disables Windows Aero Snapping when Fancy Zones is running |\n+| Keep windows in their zones when the screen resolution changes | After a screen resolution change, if this setting is enabled, Fancy Zones will resize and reposition windows into the zones they were previously in |\n+| Keep windows in their zones when the active FancyZones layout changes | When this option is on, Fancy Zones will resize and position windows into the new zone layout by maintining the previous zone number location of each window |\n+| Flash zones when the active FancyZones layout changes | Briefly flash the zone layout when the layout changes or a new virtual desktop is activated |\n+| Keep windows in their zones when the active virtual desktop changes | If an application is pinned to all virtual desktops, this setting will keep that window in the same zone on all desktops |\n+| Zone Highlight Color (Default #0078D7) | the color that a zone becomes when it is the active drop target during a window drag \n+| Use new zone editing experience (Preview) | When enabled, the new editor is enabled.  The original editor has better support for multi-mon layouts |  \n+| Move newly created windows to the last known zone | Automatically move a newly opened window into the last zone location that application was in |\n+\n+![Fancy Zones Settings UI](FancyZonesSettings.png)\n+'}, {'Name': 'src/modules/fancyzones/TableEditor.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/WindowEditor.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/dll/FancyZonesModule.vcxproj', 'Line Additions': 137, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,137 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project DefaultTargets=""Build"" ToolsVersion=""15.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup Label=""ProjectConfigurations"">\r\n+    <ProjectConfiguration Include=""Debug|x64"">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=""Release|x64"">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=""Globals"">\r\n+    <VCProjectVersion>15.0</VCProjectVersion>\r\n+    <ProjectGuid>{48804216-2A0E-4168-A6D8-9CD068D14227}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+    <RootNamespace>fancyzones</RootNamespace>\r\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\r\n+    <ProjectName>fancyzones</ProjectName>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseDebugLibraries>true</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseDebugLibraries>false</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\r\n+  <ImportGroup Label=""ExtensionSettings"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""Shared"">\r\n+    <Import Project=""..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets"" Condition=""Exists(\'..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets\')"" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=""UserMacros"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <LinkIncremental>true</LinkIncremental>\r\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\modules\\</OutDir>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <LinkIncremental>false</LinkIncremental>\r\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\modules\\</OutDir>\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <ClCompile>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <PreprocessorDefinitions>_DEBUG;FANCYZONES_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <AdditionalIncludeDirectories>..\\;..\\..\\..\\common\\inc;..\\..\\..\\common\\Telemetry;..\\..\\;..\\..\\..\\;..\\..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\r\n+      <AdditionalDependencies>gdiplus.lib;dwmapi.lib;shlwapi.lib;uxtheme.lib;shcore.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <ModuleDefinitionFile>fancyzones.def</ModuleDefinitionFile>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <ClCompile>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <PreprocessorDefinitions>NDEBUG;FANCYZONES_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <AdditionalIncludeDirectories>..\\;..\\..\\..\\common\\inc;..\\..\\..\\common\\Telemetry;..\\..\\;..\\..\\..\\;..\\..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\r\n+      <AdditionalDependencies>gdiplus.lib;dwmapi.lib;shlwapi.lib;uxtheme.lib;shcore.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+      <ModuleDefinitionFile>fancyzones.def</ModuleDefinitionFile>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""pch.h"" />\r\n+    <ClInclude Include=""targetver.h"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""dllmain.cpp"" />\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\r\n+      <PrecompiledHeaderFile Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">pch.h</PrecompiledHeaderFile>\r\n+      <PrecompiledHeaderFile Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">pch.h</PrecompiledHeaderFile>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=""..\\..\\..\\common\\common.vcxproj"">\r\n+      <Project>{74485049-c722-400f-abe5-86ac52d929b3}</Project>\r\n+    </ProjectReference>\r\n+    <ProjectReference Include=""..\\lib\\FancyZonesLib.vcxproj"">\r\n+      <Project>{f9c68edf-ac74-4b77-9af1-005d9c9f6a99}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=""fancyzones.def"" />\r\n+    <None Include=""packages.config"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""..\\lib\\fancyzones.rc"" />\r\n+  </ItemGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\r\n+  <Target Name=""EnsureNuGetPackageBuildImports"" BeforeTargets=""PrepareForBuild"">\r\n+    <PropertyGroup>\r\n+      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>\r\n+    </PropertyGroup>\r\n+    <Error Condition=""!Exists(\'..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets\')"" Text=""$([System.String]::Format(\'$(ErrorText)\', \'..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets\'))"" />\r\n+  </Target>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/dll/FancyZonesModule.vcxproj.filters', 'Line Additions': 34, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,34 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""dllmain.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""targetver.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""pch.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <Filter Include=""Source Files"">\r\n+      <UniqueIdentifier>{21926bf1-03b3-482d-8f60-8bc4fbfc6564}</UniqueIdentifier>\r\n+    </Filter>\r\n+    <Filter Include=""Header Files"">\r\n+      <UniqueIdentifier>{2f10207d-d8d1-4a42-8027-8ca597b3cb23}</UniqueIdentifier>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=""packages.config"" />\r\n+    <None Include=""fancyzones.def"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""..\\lib\\fancyzones.rc"" />\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/dll/README.md', 'Line Additions': 53, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,53 @@\n+# Introduction\r\n+Super FancyZones! Just like FancyZones except super.\r\n+\r\n+# Getting Started\r\n+Grab FancyZones.exe from the bin directory or \\\\\\\\wexfs\\users\\bretan\\proto\\superfancyzones and run it\r\n+\r\n+## Dragging windows\r\n+* While dragging a window around, zones will appear that the window can be dropped in. Dropping the window in a zone will position it in the zone.\r\n+* While dragging a window, you can hit number keys to cycle the active zone set. Eg, drag a window around and hit the '3' key will change to a zone set with 3 zones.\r\n+\r\n+## Hotkeys\r\n+* Win+~ - opens the zone viewer/editor\r\n+* Win+ctrl+number - cycle through layouts with the corresponding number of zones (only if Override snap hotkeys setting is enabled)\r\n+* Win+left arrow, Win+right arrow - move foreground window between zones\r\n+\r\n+## Zone Viewer/Editor (Win + ~)\r\n+* Hitting a number key cycles through layouts matching the number of zones (eg 3 cycles through layouts with 3 zones)\r\n+* R resets the focused monitor back to defaults\r\n+* C clears the current layout so you can start fresh\r\n+* W opens a dialog to choose wallpaper\r\n+* Left click moves the zone to the top\r\n+* Right click moves the zone to the bottom\r\n+\r\n+### E enters editor mode (hit E or Escape to exit editor mode)\r\n+* Left/Right/Up/Down arrows adjust the grid spacing\r\n+* PgUp/PgDn adjust grid margins\r\n+* Ctrl+left click splits the clicked zone in half horizontally\r\n+* Ctrl+right click splits the clicked zone in half vertically\r\n+\r\n+# Options\r\n+### Default Drag Mode\r\n+* None - don't do anything when dragging windows around (shift enters normal mode, ctrl enters adjusted mode)\r\n+* Normal - show zones when dragging windows around (shift disables, ctrl enters adjusted mode)\r\n+* Adjusted - show zones when dragging windows around with an accelerated cursor\r\n+\r\n+### Display change\r\n+* Move windows - automatically move windows around when display changes\r\n+\r\n+### Virtual Desktop change\r\n+* Move windows - automatically move windows around when virtual desktop changes\r\n+* Change wallpaper - use custom wallpaper per-monitor per-desktop\r\n+* Flash zones - flash zones on each monitor\r\n+\r\n+### Miscellanious\r\n+* Override snap hotkeys - steal hotkeys normally used by shell (win+left/right, win+ctrl+num)\r\n+* Colorful zones - use colored zones in zone viewer\r\n+\r\n+# Known issues\r\n+* See open bugs for full list of issues\r\n+* Win+left and Win+right don't move between monitors\r\n+* If you use Virtual Desktops, make sure to perform at least one virtual desktop switch before launching the fancyzones (it relies on a volatile regkey that explorer writes)\r\n+* Sometimes you have to click on a zone viewer window before it gets keyboard focus when opening views with Win+~\r\n+* Quickly switching virtual desktops with win+ctrl+arrow hotkeys can crash fancyzones\n\\ No newline at end of file""}, {'Name': 'src/modules/fancyzones/dll/dllmain.cpp', 'Line Additions': 319, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,319 @@\n+#include ""pch.h""\r\n+#include <common/settings_objects.h>\r\n+#include <interface/powertoy_module_interface.h>\r\n+#include <interface/lowlevel_keyboard_event_data.h>\r\n+#include <interface/win_hook_event_data.h>\r\n+#include <lib/ZoneSet.h>\r\n+#include <lib/RegistryHelpers.h>\r\n+\r\n+extern ""C"" IMAGE_DOS_HEADER __ImageBase;\r\n+\r\n+BOOL APIENTRY DllMain(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved)\r\n+{\r\n+    switch (ul_reason_for_call)\r\n+    {\r\n+        case DLL_PROCESS_ATTACH:\r\n+            Trace::RegisterProvider();\r\n+            break;\r\n+\r\n+        case DLL_THREAD_ATTACH:\r\n+        case DLL_THREAD_DETACH:\r\n+            break;\r\n+\r\n+        case DLL_PROCESS_DETACH:\r\n+            Trace::UnregisterProvider();\r\n+            break;\r\n+    }\r\n+    return TRUE;\r\n+}\r\n+\r\n+// TODO: multimon support, need to pass the HMONITOR from the editor to here instead\r\n+// of using MonitorFromPoint\r\n+// This function is exported and called from FancyZonesEditor.exe to save a layout from the editor.\r\n+STDAPI PersistZoneSet(\r\n+    PCWSTR activeKey, // Registry key holding ActiveZoneSet\r\n+    PCWSTR resolutionKey, // Registry key for screen resolution\r\n+    WORD layoutId, // LayoutModel Id\r\n+    int zoneCount, // Number of zones in zones\r\n+    int zones[]) // Array of zones serialized in left/top/right/bottom chunks\r\n+{\r\n+    // See if we have already persisted this layout we can update.\r\n+    UUID id{GUID_NULL};\n+    if (wil::unique_hkey key{ RegistryHelpers::OpenKey(resolutionKey) })\n+    {\n+        ZoneSetPersistedData data{};\n+        DWORD dataSize = sizeof(data);\n+        wchar_t value[256]{};\n+        DWORD valueLength = ARRAYSIZE(value);\n+        DWORD i = 0;\n+        while (RegEnumValueW(key.get(), i++, value, &valueLength, nullptr, nullptr, reinterpret_cast<BYTE*>(&data), &dataSize) == ERROR_SUCCESS)\n+        {\n+            if (data.LayoutId == layoutId)\r\n+            {\r\n+                if (data.ZoneCount == zoneCount)\r\n+                {\r\n+                    CLSIDFromString(value, &id);\r\n+                    break;\r\n+                }\r\n+            }\r\n+            valueLength = ARRAYSIZE(value);\r\n+            dataSize = sizeof(data);\r\n+        }\r\n+    }\r\n+\r\n+    if (id == GUID_NULL)\r\n+    {\r\n+        // No existing layout found so let\'s create a new one.\r\n+        UuidCreate(&id);\r\n+    }\r\n+\r\n+    if (id != GUID_NULL)\r\n+    {\r\n+        winrt::com_ptr<IZoneSet> zoneSet = MakeZoneSet(\r\n+            ZoneSetConfig(\r\n+                id,\r\n+                layoutId,\r\n+                MonitorFromPoint({}, MONITOR_DEFAULTTOPRIMARY),\r\n+                resolutionKey,\r\n+                ZoneSetLayout::Custom,\r\n+                0, 0, 0));\r\n+\r\n+        for (int i = 0; i < zoneCount; i++)\r\n+        {\r\n+            const int baseIndex = i * 4;\r\n+            const int left = zones[baseIndex];\r\n+            const int top = zones[baseIndex+1];\r\n+            const int right = zones[baseIndex+2];\r\n+            const int bottom = zones[baseIndex+3];\r\n+            zoneSet->AddZone(MakeZone({ left, top, right, bottom }), false);\r\n+        }\r\n+        zoneSet->Save();\r\n+\r\n+        wil::unique_cotaskmem_string zoneSetId;\r\n+        if (SUCCEEDED_LOG(StringFromCLSID(id, &zoneSetId)))\r\n+        {\r\n+            RegistryHelpers::SetString(activeKey, L""ActiveZoneSetId"", zoneSetId.get());\r\n+        }\r\n+\r\n+        return S_OK;\r\n+    }\r\n+    return E_FAIL;\r\n+}\r\n+\r\n+class FancyZonesModule : public PowertoyModuleIface\r\n+{\r\n+public:\r\n+    // Return the display name of the powertoy, this will be cached\r\n+    virtual PCWSTR get_name() override\r\n+    {\r\n+        return L""FancyZones"";\r\n+    }\r\n+\r\n+    // Return array of the names of all events that this powertoy listens for, with\r\n+    // nullptr as the last element of the array. Nullptr can also be retured for empty list.\r\n+    virtual PCWSTR* get_events() override\r\n+    {\r\n+        static PCWSTR events[] = { ll_keyboard, win_hook_event, nullptr };\r\n+        return events;\r\n+    }\r\n+\r\n+    // Return JSON with the configuration options.\r\n+    // These are the settings shown on the settings page along with their current values.\r\n+    virtual bool get_config(_Out_ PWSTR buffer, _Out_ int *buffer_size) override\r\n+    {\r\n+        return m_settings->GetConfig(buffer, buffer_size);\r\n+    }\r\n+\r\n+    // Passes JSON with the configuration settings for the powertoy.\r\n+    // This is called when the user hits Save on the settings page.\r\n+    virtual void set_config(PCWSTR config) override\r\n+    {\r\n+        m_settings->SetConfig(config);\r\n+    }\r\n+\r\n+    // Signal from the Settings editor to call a custom action.\r\n+    // This can be used to spawn more complex editors.\r\n+    virtual void call_custom_action(const wchar_t* action) override\r\n+    {\r\n+        m_settings->CallCustomAction(action);\r\n+    }\r\n+\r\n+    // Enable the powertoy\r\n+    virtual void enable()\r\n+    {\r\n+        if (!m_app)\r\n+        {\r\n+            Trace::FancyZones::EnableFancyZones(true);\r\n+            m_app = MakeFancyZones(reinterpret_cast<HINSTANCE>(&__ImageBase), m_settings.get());\r\n+            if (m_app)\r\n+            {\r\n+                m_app->Run();\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    // Disable the powertoy\r\n+    virtual void disable()\r\n+    {\r\n+        if (m_app)\r\n+        {\r\n+            Trace::FancyZones::EnableFancyZones(false);\r\n+            m_app->Destroy();\r\n+            m_app = nullptr;\r\n+        }\r\n+    }\r\n+\r\n+    // Returns if the powertoy is enabled\r\n+    virtual bool is_enabled() override\r\n+    {\r\n+        return (m_app != nullptr);\r\n+    }\r\n+\r\n+    // Handle incoming event, data is event-specific\r\n+    virtual intptr_t signal_event(const wchar_t* name, intptr_t data) override\r\n+    {\r\n+        if (m_app)\r\n+        {\r\n+            if (wcscmp(name, ll_keyboard) == 0)\r\n+            {\r\n+                // Return 1 if the keypress is to be suppressed (not forwarded to Windows), otherwise return 0.\r\n+                return HandleKeyboardHookEvent(reinterpret_cast<LowlevelKeyboardEvent*>(data));\r\n+            }\r\n+            else if (wcscmp(name, win_hook_event) == 0)\r\n+            {\r\n+                // Return value is ignored\r\n+                HandleWinHookEvent(reinterpret_cast<WinHookEvent*>(data));\r\n+            }\r\n+        }\r\n+        return 0;\r\n+    }\r\n+\r\n+    // Destroy the powertoy and free memory\r\n+    virtual void destroy() override\r\n+    {\r\n+        disable();\r\n+        delete this;\r\n+    }\r\n+\r\n+    FancyZonesModule()\r\n+    {\r\n+        m_settings = MakeFancyZonesSettings(reinterpret_cast<HINSTANCE>(&__ImageBase), get_name());\r\n+    }\r\n+\r\n+private:\r\n+    static bool IsInterestingWindow(HWND window)\r\n+    {\r\n+        auto style = GetWindowLongPtr(window, GWL_STYLE);\r\n+        auto exStyle = GetWindowLongPtr(window, GWL_EXSTYLE);\r\n+        return WI_IsFlagSet(style, WS_MAXIMIZEBOX) && WI_IsFlagClear(style, WS_CHILD) && WI_IsFlagClear(exStyle, WS_EX_TOOLWINDOW);\r\n+    }\r\n+\r\n+    intptr_t HandleKeyboardHookEvent(LowlevelKeyboardEvent* data) noexcept;\r\n+    void HandleWinHookEvent(WinHookEvent* data) noexcept;\r\n+    void MoveSizeStart(HWND window, POINT const& ptScreen) noexcept;\r\n+    void MoveSizeEnd(HWND window, POINT const& ptScreen) noexcept;\r\n+    void MoveSizeUpdate(POINT const& ptScreen) noexcept;\r\n+\r\n+    winrt::com_ptr<IFancyZones> m_app;\r\n+    winrt::com_ptr<IFancyZonesSettings> m_settings;\r\n+};\r\n+\r\n+intptr_t FancyZonesModule::HandleKeyboardHookEvent(LowlevelKeyboardEvent* data) noexcept\r\n+{\r\n+    if (data->wParam == WM_KEYDOWN)\r\n+    {\r\n+        return m_app.as<IFancyZonesCallback>()->OnKeyDown(data->lParam) ? 1 : 0;\r\n+    }\r\n+    return 0;\r\n+}\r\n+\r\n+void FancyZonesModule::HandleWinHookEvent(WinHookEvent* data) noexcept\r\n+{\r\n+    POINT ptScreen;\r\n+    GetPhysicalCursorPos(&ptScreen);\r\n+\r\n+    switch (data->event)\r\n+    {\r\n+    case EVENT_SYSTEM_MOVESIZESTART:\r\n+    {\r\n+        MoveSizeStart(data->hwnd, ptScreen);\r\n+    }\r\n+    break;\r\n+\r\n+    case EVENT_SYSTEM_MOVESIZEEND:\r\n+    {\r\n+        MoveSizeEnd(data->hwnd, ptScreen);\r\n+    }\r\n+    break;\r\n+\r\n+    case EVENT_OBJECT_LOCATIONCHANGE:\r\n+    {\r\n+        if (m_app.as<IFancyZonesCallback>()->InMoveSize())\r\n+        {\r\n+            MoveSizeUpdate(ptScreen);\r\n+        }\r\n+    }\r\n+    break;\r\n+\r\n+    case EVENT_OBJECT_NAMECHANGE:\r\n+    {\r\n+        // The accessibility name of the desktop window changes whenever the user\r\n+        // switches virtual desktops.\r\n+        if (data->hwnd == GetDesktopWindow())\r\n+        {\r\n+            Trace::VirtualDesktopChanged();\r\n+            m_app.as<IFancyZonesCallback>()->VirtualDesktopChanged();\r\n+        }\r\n+    }\r\n+    break;\r\n+\r\n+    case EVENT_OBJECT_CREATE:\r\n+    {\r\n+        if (data->idObject == OBJID_WINDOW)\r\n+        {\r\n+            if (IsInterestingWindow(data->hwnd))\r\n+            {\r\n+                m_app.as<IFancyZonesCallback>()->WindowCreated(data->hwnd);\r\n+            }\r\n+        }\r\n+    }\r\n+    break;\r\n+\r\n+    default:\r\n+        break;\r\n+    }\r\n+}\r\n+\r\n+void FancyZonesModule::MoveSizeStart(HWND window, POINT const& ptScreen) noexcept\r\n+{\r\n+    if (IsInterestingWindow(window))\r\n+    {\r\n+        if (auto monitor = MonitorFromPoint(ptScreen, MONITOR_DEFAULTTONULL))\r\n+        {\r\n+            m_app.as<IFancyZonesCallback>()->MoveSizeStart(window, monitor, ptScreen);\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+void FancyZonesModule::MoveSizeEnd(HWND window, POINT const& ptScreen) noexcept\r\n+{\r\n+    if (IsInterestingWindow(window))\r\n+    {\r\n+        m_app.as<IFancyZonesCallback>()->MoveSizeEnd(window, ptScreen);\r\n+    }\r\n+}\r\n+\r\n+void FancyZonesModule::MoveSizeUpdate(POINT const& ptScreen) noexcept\r\n+{\r\n+    if (auto monitor = MonitorFromPoint(ptScreen, MONITOR_DEFAULTTONULL))\r\n+    {\r\n+        m_app.as<IFancyZonesCallback>()->MoveSizeUpdate(monitor, ptScreen);\r\n+    }\r\n+}\r\n+\r\n+extern ""C"" __declspec(dllexport) PowertoyModuleIface*  __cdecl powertoy_create()\r\n+{\r\n+  return new FancyZonesModule();\r\n+}\r\n+\r\n+\r'}, {'Name': 'src/modules/fancyzones/dll/fancyzones.def', 'Line Additions': 4, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,4 @@\n+LIBRARY fancyzones.dll\r\n+\r\n+EXPORTS\r\n+    PersistZoneSet PRIVATE\r'}, {'Name': 'src/modules/fancyzones/dll/packages.config', 'Line Additions': 4, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,4 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<packages>\r\n+  <package id=""Microsoft.Windows.ImplementationLibrary"" version=""1.0.190716.2"" targetFramework=""native"" />\r\n+</packages>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/dll/pch.cpp', 'Line Additions': 1, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1 @@\n+#include ""pch.h""\r'}, {'Name': 'src/modules/fancyzones/dll/pch.h', 'Line Additions': 18, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,18 @@\n+#pragma once\r\n+\r\n+#define WIN32_LEAN_AND_MEAN // Exclude rarely-used stuff from Windows headers\r\n+#include <Unknwn.h>\r\n+#include <winrt/base.h>\r\n+#include <ProjectTelemetry.h>\r\n+#include <TraceLoggingActivity.h>\r\n+#include <wil\\common.h>\r\n+#include <wil\\result.h>\r\n+\r\n+#include ""lib\\trace.h""\r\n+#include ""lib\\FancyZones.h""\r\n+#include ""lib\\Settings.h""\r\n+\r\n+namespace winrt\r\n+{\r\n+    using namespace ::winrt;\r\n+}\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/dll/targetver.h', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor.sln', 'Line Additions': 25, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,25 @@\n+\ufeff\r\n+Microsoft Visual Studio Solution File, Format Version 12.00\r\n+# Visual Studio 15\r\n+VisualStudioVersion = 15.0.27703.2042\r\n+MinimumVisualStudioVersion = 10.0.40219.1\r\n+Project(""{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}"") = ""FancyZonesEditor"", ""FancyZonesEditor\\FancyZonesEditor.csproj"", ""{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}""\r\n+EndProject\r\n+Global\r\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n+\t\tDebug|Any CPU = Debug|Any CPU\r\n+\t\tRelease|Any CPU = Release|Any CPU\r\n+\tEndGlobalSection\r\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n+\t\t{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n+\t\t{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n+\t\t{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n+\t\t{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}.Release|Any CPU.Build.0 = Release|Any CPU\r\n+\tEndGlobalSection\r\n+\tGlobalSection(SolutionProperties) = preSolution\r\n+\t\tHideSolutionNode = FALSE\r\n+\tEndGlobalSection\r\n+\tGlobalSection(ExtensibilityGlobals) = postSolution\r\n+\t\tSolutionGuid = {9A90742C-8AA0-4A56-A01F-70C8754B4684}\r\n+\tEndGlobalSection\r\n+EndGlobal\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/App.config', 'Line Additions': 6, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,6 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<configuration>\r\n+    <startup> \r\n+        <supportedRuntime version=""v4.0"" sku="".NETFramework,Version=v4.7.2""/>\r\n+    </startup>\r\n+</configuration>\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/App.xaml', 'Line Additions': 17, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,17 @@\n+\ufeff<Application x:Class=""FancyZonesEditor.App""\r\n+             xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\r\n+             xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\r\n+             xmlns:local=""clr-namespace:FancyZonesEditor""\r\n+             Startup=""OnStartup"">\r\n+    <Application.Resources>\r\n+        <ResourceDictionary>\r\n+            <ResourceDictionary.MergedDictionaries>\r\n+                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->\r\n+                <ResourceDictionary Source=""pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"" />\r\n+                <ResourceDictionary Source=""pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"" />\r\n+                <!-- Accent and AppTheme setting -->\r\n+                <ResourceDictionary Source=""pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml"" />\r\n+            </ResourceDictionary.MergedDictionaries>\r\n+        </ResourceDictionary>\r\n+    </Application.Resources>\r\n+</Application>\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/App.xaml.cs', 'Line Additions': 74, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,74 @@\n+\ufeffusing FancyZonesEditor;\r\n+using System;\r\n+using System.Collections.Generic;\r\n+using System.Configuration;\r\n+using System.Data;\r\n+using System.Linq;\r\n+using System.Threading.Tasks;\r\n+using System.Windows;\r\n+using FancyZonesEditor.Models;\r\n+\r\n+namespace FancyZonesEditor\r\n+{\r\n+    /// <summary>\r\n+    /// Interaction logic for App.xaml\r\n+    /// </summary>\r\n+    public partial class App : Application\r\n+    {\r\n+        public Settings ZoneSettings { get { return _settings; } }\r\n+        private Settings _settings;\r\n+        private ushort _idInitial = 0;\r\n+        public App()\r\n+        {\r\n+            //init settings\r\n+            _settings = new Settings();\r\n+        }\r\n+\r\n+        private void OnStartup(object sender, StartupEventArgs e)\r\n+        {\r\n+            if (e.Args.Length > 1)\r\n+            {\r\n+                UInt16.TryParse(e.Args[1], out _idInitial);\r\n+            }\r\n+\r\n+            LayoutModel foundModel = null;\r\n+\r\n+            if (_idInitial != 0)\r\n+            {\r\n+                foreach (LayoutModel model in _settings.DefaultModels)\r\n+                {\r\n+                    if (model.Id == _idInitial)\r\n+                    {\r\n+                        // found match\r\n+                        foundModel = model;\r\n+                        break;\r\n+                    }\r\n+                }\r\n+\r\n+                if (foundModel == null)\r\n+                {\r\n+                    foreach (LayoutModel model in _settings.CustomModels)\r\n+                    {\r\n+                        if (model.Id == _idInitial)\r\n+                        {\r\n+                            // found match\r\n+                            foundModel = model;\r\n+                            break;\r\n+                        }\r\n+                    }\r\n+                }\r\n+            }\r\n+            if (foundModel == null)\r\n+            {\r\n+                foundModel = _settings.DefaultModels[0];\r\n+            }\r\n+\r\n+            foundModel.IsSelected = true;\r\n+            // TODO: multimon\r\n+            // Pass in the correct args to show on the desired monitor\r\n+            EditorOverlay overlay = new EditorOverlay();\r\n+            overlay.Show();\r\n+            overlay.DataContext = foundModel;\r\n+        }\r\n+    }\r\n+}\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasEditor.xaml', 'Line Additions': 12, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,12 @@\n+\ufeff<UserControl x:Class=""FancyZonesEditor.CanvasEditor""\n+             xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n+             xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n+             xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006"" \n+             xmlns:d=""http://schemas.microsoft.com/expression/blend/2008"" \n+             xmlns:local=""clr-namespace:FancyZonesEditor""\n+             mc:Ignorable=""d"" \n+             d:DesignHeight=""300"" d:DesignWidth=""300"">\n+    <Grid>\n+        <Canvas x:Name=""Preview""/>\n+    </Grid>\n+</UserControl>'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasEditor.xaml.cs', 'Line Additions': 77, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,77 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Navigation;\n+using System.Windows.Shapes;\n+using FancyZonesEditor.Models;\n+\n+namespace FancyZonesEditor\n+{\n+    /// <summary>\n+    /// Interaction logic for CanvasEditor.xaml\n+    /// </summary>\n+    public partial class CanvasEditor : UserControl\n+    {\n+        public CanvasEditor()\n+        {\n+            InitializeComponent();\n+            Loaded += CanvasEditor_Loaded;\n+        }\n+\n+        private void CanvasEditor_Loaded(object sender, RoutedEventArgs e)\n+        {\n+            CanvasLayoutModel model = (CanvasLayoutModel)DataContext;\n+            if (model != null)\n+            {\n+                Model = model;\n+                UpdateZoneRects();\n+\n+                model.PropertyChanged += OnModelChanged;\n+            }\n+        }\n+\n+        private void OnModelChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)\n+        {\n+            if (e.PropertyName == ""Zones"")\n+            {\n+                UpdateZoneRects();\n+            }\n+        }\n+\n+        private void UpdateZoneRects()\n+        {\n+            UIElementCollection previewChildren = Preview.Children;\n+            int previewChildrenCount = previewChildren.Count;\n+            while (previewChildrenCount < Model.Zones.Count)\n+            {\n+                CanvasZone zone = new CanvasZone();\n+                zone.Model = Model;\n+                Preview.Children.Add(zone);\n+                previewChildrenCount++;\n+            }\n+\n+            for (int i = 0; i < previewChildrenCount; i++)\n+            {\n+                Int32Rect rect = Model.Zones[i];\n+                CanvasZone zone = previewChildren[i] as CanvasZone;\n+\n+                zone.ZoneIndex = i;\n+                Canvas.SetLeft(zone, rect.X);\n+                Canvas.SetTop(zone, rect.Y);\n+                zone.MinHeight = rect.Height;\n+                zone.MinWidth = rect.Width;\n+            }\n+        }\n+\n+        public CanvasLayoutModel Model;\n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasEditorWindow.xaml', 'Line Additions': 189, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,189 @@\n+\ufeff<local:EditorWindow x:Class=""FancyZonesEditor.CanvasEditorWindow""\n+        xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n+        xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n+        xmlns:d=""http://schemas.microsoft.com/expression/blend/2008""\n+        xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006""\n+        xmlns:Controls=""clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro""\n+        xmlns:local=""clr-namespace:FancyZonesEditor""\n+        mc:Ignorable=""d""\n+        Title="""" \n+        Width=""528""\n+        SizeToContent=""Height""            \n+        Background=""White""\n+        ResizeMode=""NoResize""\n+        WindowStartupLocation=""CenterScreen""\n+        Closed=""OnClosed"">\n+\n+\n+    <Window.Resources>\n+        <Style x:Key=""titleText"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""Bold"" />\n+            <Setter Property=""LineHeight"" Value=""24"" />\n+            <Setter Property=""FontSize"" Value=""18""/>\n+            <Setter Property=""Margin"" Value=""16,16,0,12"" />\n+        </Style>\n+        <Style x:Key=""zoneCount"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""Regular"" />\n+            <Setter Property=""FontSize"" Value=""24""/>\n+            <Setter Property=""LineHeight"" Value=""24"" />\n+            <Setter Property=""Margin"" Value=""20,0,20,0"" />\n+            <Setter Property=""HorizontalAlignment"" Value=""Center""/>\n+            <Setter Property=""VerticalAlignment"" Value=""Center""/>\n+        </Style>\n+        <Style x:Key=""tabText"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""#C4C4C4""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""LineHeight"" Value=""20"" />\n+            <Setter Property=""Margin"" Value=""24,20,0,0"" />\n+            <Setter Property=""TextAlignment"" Value=""Center"" />\n+        </Style>\n+        <Style x:Key=""settingText"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""Black""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""LineHeight"" Value=""20"" />\n+            <Setter Property=""Margin"" Value=""5,10,0,0"" />\n+            <Setter Property=""TextAlignment"" Value=""Left"" />\n+        </Style>\n+        <Style x:Key=""templateTitleText"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""Regular"" />\n+            <Setter Property=""Foreground"" Value=""Black""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""Margin"" Value=""0,20,0,0"" />\n+            <Setter Property=""TextAlignment"" Value=""Center"" />\n+            <Setter Property=""Height"" Value=""30""/>\n+            <Setter Property=""Width"" Value=""250""/>\n+            <Setter Property=""VerticalAlignment"" Value=""Top""/>\n+        </Style>\n+        <Style x:Key=""secondaryButton"" TargetType=""Button"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""Black""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""Padding"" Value=""0,5,0,5""/>\n+            <Setter Property=""BorderThickness"" Value=""0""/>\n+            <Setter Property=""Background"" Value=""#F2F2F2""/>\n+            <Setter Property=""Margin"" Value=""16,10,0,0"" />\n+            <Setter Property=""Width"" Value=""239""/>\n+            <Setter Property=""Height"" Value=""32""/>\n+            <Setter Property=""Template"">\n+                <Setter.Value>\n+                    <ControlTemplate TargetType=""{x:Type Button}"">\n+                        <Border Background=""{TemplateBinding Background}"">\n+                            <ContentPresenter HorizontalAlignment=""Center"" VerticalAlignment=""Center""/>\n+                        </Border>\n+                    </ControlTemplate>\n+                </Setter.Value>\n+            </Setter>\n+            <Style.Triggers>\n+                <Trigger Property=""IsMouseOver"" Value=""True"">\n+                    <Setter Property=""Background"" Value=""#BCBCBD""/>\n+                </Trigger>\n+            </Style.Triggers>\n+        </Style>\n+        <Style x:Key=""primaryButton"" TargetType=""Button"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""White""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""Padding"" Value=""0,5,0,5""/>\n+            <Setter Property=""BorderThickness"" Value=""0""/>\n+            <Setter Property=""Background"" Value=""#0078D7""/>\n+            <Setter Property=""Margin"" Value=""16,10,0,0"" />\n+            <Setter Property=""Width"" Value=""239""/>\n+            <Setter Property=""Height"" Value=""32""/>\n+            <Setter Property=""Template"">\n+                <Setter.Value>\n+                    <ControlTemplate TargetType=""{x:Type Button}"">\n+                        <Border Background=""{TemplateBinding Background}"">\n+                            <ContentPresenter HorizontalAlignment=""Center"" VerticalAlignment=""Center""/>\n+                        </Border>\n+                    </ControlTemplate>\n+                </Setter.Value>\n+            </Setter>\n+            <Style.Triggers>\n+                <Trigger Property=""IsMouseOver"" Value=""True"">\n+                    <Setter Property=""Background"" Value=""#024D89""/>\n+                </Trigger>\n+            </Style.Triggers>\n+        </Style>\n+        <Style x:Key=""spinnerButton"" TargetType=""Button"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""Black""/>\n+            <Setter Property=""FontSize"" Value=""24""/>\n+            <Setter Property=""Padding"" Value=""0,0,0,5""/>\n+            <Setter Property=""BorderThickness"" Value=""0""/>\n+            <Setter Property=""Background"" Value=""#F2F2F2""/>\n+            <Setter Property=""Margin"" Value=""0,0,0,0"" />\n+        </Style>\n+        <Style x:Key=""templateBackground"" TargetType=""Rectangle"">\n+            <Setter Property=""Fill"" Value=""Black""/>\n+            <Setter Property=""Opacity"" Value=""0.05""/>\n+            <Setter Property=""RadiusX"" Value=""4""/>\n+            <Setter Property=""RadiusY"" Value=""4""/>\n+        </Style>\n+        <Style x:Key=""templateBackgroundSelected"" TargetType=""Rectangle"">\n+            <Setter Property=""Fill"" Value=""#F2F2F2""/>\n+            <Setter Property=""Opacity"" Value=""1""/>\n+            <Setter Property=""RadiusX"" Value=""4""/>\n+            <Setter Property=""RadiusY"" Value=""4""/>\n+            <Setter Property=""Stroke"" Value=""#0078D7""/>\n+            <Setter Property=""StrokeThickness"" Value=""2""/>\n+        </Style>\n+        <Style x:Key=""newZoneButton"" TargetType=""Button"">\n+            <Setter Property=""Background"" Value=""#f2f2f2""/>\n+            <Setter Property=""BorderThickness"" Value=""0""/>\n+            <Setter Property=""FontFamily"" Value=""SegoeUI""/>\n+            <Setter Property=""FontWeight"" Value=""Light""/>\n+            <Setter Property=""FontSize"" Value=""120""/>\n+            <Setter Property=""VerticalAlignment"" Value=""Center""/>\n+        </Style>\n+        <Style x:Key=""textLabel"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""SegoeUI""/>\n+            <Setter Property=""FontWeight"" Value=""Regular""/>\n+            <Setter Property=""FontSize"" Value=""12""/>\n+            <Setter Property=""Margin"" Value=""16,12,0,0""/>\n+        </Style>\n+        <Style x:Key=""textBox"" TargetType=""TextBox"">\n+            <Setter Property=""BorderBrush"" Value=""#cccccc""/>\n+            <Setter Property=""BorderThickness"" Value=""1""/>\n+            <Setter Property=""FontFamily"" Value=""SegoeUI""/>\n+            <Setter Property=""FontWeight"" Value=""Regular""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""VerticalAlignment"" Value=""Center""/>\n+            <Setter Property=""Margin"" Value=""0,5,0,0""/>\n+            <Setter Property=""Padding"" Value=""5,5,5,5""/>\n+        </Style>\n+\n+    </Window.Resources>\n+    <StackPanel>\n+        <TextBlock Name=""windowEditorDialogTitle"" Text=""Custom layout creator"" Style=""{StaticResource titleText}""  />\n+        <Button x:Name=""newZoneButton"" Width=""496"" Height=""136"" Style=""{StaticResource newZoneButton}"" Click=""OnAddZone"">\n+            <StackPanel>\n+                <TextBlock x:Name=""newSoneName"" Text=""Add new zone"" Style=""{StaticResource templateTitleText}""  />\n+                <TextBlock HorizontalAlignment=""Center"" Text=""+"" Margin=""0,-40,0,0""/>\n+            </StackPanel>\n+        </Button>\n+        <TextBlock Text=""Name"" Style=""{StaticResource textLabel}"" />\n+        <TextBox Text=""{Binding Name}"" Width=""496"" Style=""{StaticResource textBox}"" />\n+        <!--\n+        <StackPanel Orientation=""Horizontal"" Margin=""0,8,0,0"">\n+            <CheckBox x:Name=""showGridSetting"" VerticalAlignment=""Center"" HorizontalAlignment=""Center"" IsChecked=""True"" Margin=""16,4,0,0""/>\n+            <TextBlock Text=""Show snap grid"" Style=""{StaticResource settingText}"" />\n+            <TextBlock Text=""Grid spacing"" Style=""{StaticResource settingText}"" Margin=""40,10,10,0"" />\n+            <TextBox x:Name=""gridValue"" Text=""{Binding Path=Spacing,Mode=TwoWay}"" Style=""{StaticResource textBox}""/>\n+        </StackPanel>\n+        -->\n+        <StackPanel Orientation=""Horizontal"" Margin=""0,12,0,16"">\n+            <Button Content=""Cancel"" Style=""{StaticResource secondaryButton}"" Click=""OnCancel""/>\n+            <Button Content=""Save and apply"" Style=""{StaticResource primaryButton}"" Click=""OnSaveApplyTemplate"" />\n+        </StackPanel>\n+    </StackPanel>\n+    </local:EditorWindow>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasEditorWindow.xaml.cs', 'Line Additions': 39, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,39 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Shapes;\n+using MahApps.Metro.Controls;\n+using FancyZonesEditor.Models;\n+\n+namespace FancyZonesEditor\n+{\n+    /// <summary>\n+    /// Interaction logic for windowEditor.xaml\n+    /// </summary>\n+    public partial class CanvasEditorWindow : EditorWindow\n+    {\n+        public CanvasEditorWindow()\n+        {\n+            InitializeComponent();\n+            Model = EditorOverlay.Current.DataContext as CanvasLayoutModel;\n+        }\n+\n+        private void OnAddZone(object sender, RoutedEventArgs e)\n+        {\n+            Model.AddZone(new Int32Rect(_offset, _offset, (int) (Model.ReferenceWidth * 0.6), (int) (Model.ReferenceHeight * 0.6)));\n+            _offset += 100;\n+        }\n+\n+        private int _offset = 100;\n+        private CanvasLayoutModel Model;\n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasZone.xaml', 'Line Additions': 44, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,44 @@\n+\ufeff<UserControl x:Class=""FancyZonesEditor.CanvasZone""\n+             xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n+             xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n+             xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006"" \n+             xmlns:d=""http://schemas.microsoft.com/expression/blend/2008"" \n+             xmlns:local=""clr-namespace:FancyZonesEditor""\n+             mc:Ignorable=""d"" \n+            Background=""LightGray""\n+              Opacity=""0.75""\n+             d:DesignHeight=""450"" d:DesignWidth=""800"">\n+    <Grid x:Name=""Frame"">\n+        <Grid.RowDefinitions>\n+            <RowDefinition Height=""8""/>\n+            <RowDefinition Height=""16""/>\n+            <RowDefinition Height=""24""/>\n+            <RowDefinition Height=""*""/>\n+            <RowDefinition Height=""16""/>\n+            <RowDefinition Height=""8""/>\n+        </Grid.RowDefinitions>\n+        <Grid.ColumnDefinitions>\n+            <ColumnDefinition Width=""8""/>\n+            <ColumnDefinition Width=""16""/>\n+            <ColumnDefinition Width=""*""/>\n+            <ColumnDefinition Width=""16""/>\n+            <ColumnDefinition Width=""8""/>\n+        </Grid.ColumnDefinitions>\n+        <Thumb x:Name=""NWResize"" Cursor=""SizeNWSE"" Background=""Black"" Grid.Row=""0"" Grid.Column=""0"" Grid.RowSpan=""2"" Grid.ColumnSpan=""2"" DragDelta=""NWResize_DragDelta""/>\n+        <Thumb x:Name=""NEResize"" Cursor=""SizeNESW"" Background=""Black"" Grid.Row=""0"" Grid.Column=""3"" Grid.RowSpan=""2"" Grid.ColumnSpan=""2"" DragDelta=""NEResize_DragDelta""/>\n+        <Thumb x:Name=""SWResize"" Cursor=""SizeNESW"" Background=""Black"" Grid.Row=""4"" Grid.Column=""0"" Grid.RowSpan=""2"" Grid.ColumnSpan=""2"" DragDelta=""SWResize_DragDelta""/>\n+        <Thumb x:Name=""SEResize"" Cursor=""SizeNWSE"" Background=""Black"" Grid.Row=""4"" Grid.Column=""3"" Grid.RowSpan=""2"" Grid.ColumnSpan=""2"" DragDelta=""SEResize_DragDelta""/>\n+        <Thumb x:Name=""NResize"" Cursor=""SizeNS"" Background=""Black"" Margin=""1,0,1,0"" Grid.Row=""0"" Grid.Column=""2"" DragDelta=""NResize_DragDelta""/>\n+        <Thumb x:Name=""SResize"" Cursor=""SizeNS"" Background=""Black"" Margin=""1,0,1,0"" Grid.Row=""5"" Grid.Column=""2"" DragDelta=""SResize_DragDelta""/>\n+        <Thumb x:Name=""WResize"" Cursor=""SizeWE"" Background=""Black"" Margin=""0,1,0,1"" Grid.Row=""2"" Grid.Column=""0"" Grid.RowSpan=""2"" DragDelta=""WResize_DragDelta""/>\n+        <Thumb x:Name=""EResize"" Cursor=""SizeWE"" Background=""Black"" Margin=""0,1,0,1"" Grid.Row=""2"" Grid.Column=""4"" Grid.RowSpan=""2"" DragDelta=""EResize_DragDelta""/>\n+        <DockPanel Grid.Row=""1"" Grid.Column=""1"" Grid.RowSpan=""2"" Grid.ColumnSpan=""3"">\n+            <Button DockPanel.Dock=""Right"" Padding=""8,0"" Click=""OnClose"">\n+                <Image Source=""images/ChromeClose.png"" Height=""24"" Width=""24"" />\n+            </Button>\n+            <Thumb x:Name=""Caption"" Cursor=""SizeAll"" Background=""DarkGray"" DragDelta=""Caption_DragDelta""/>\n+        </DockPanel>\n+        <Rectangle Fill=""LightGray"" Grid.Row=""3"" Grid.Column=""1"" Grid.RowSpan=""2"" Grid.ColumnSpan=""3""/>\n+        <Canvas x:Name=""Body"" />\n+    </Grid>\n+</UserControl>'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/CanvasZone.xaml.cs', 'Line Additions': 167, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,167 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Navigation;\n+using System.Windows.Shapes;\n+using FancyZonesEditor.Models;\n+\n+namespace FancyZonesEditor\n+{\n+    /// <summary>\n+    /// Once you\'ve ""Committ""ed the starter grid, then the Zones within the grid come to life for you to be able to further subdivide them \n+    /// using splitters\n+    /// </summary>\n+\n+    public partial class CanvasZone : UserControl\n+    {\n+        public CanvasZone()\n+        {\n+            InitializeComponent();\n+            Canvas.SetZIndex(this, c_zIndex++);\n+        }\n+\n+        public CanvasLayoutModel Model;\n+        public int ZoneIndex;\n+\n+        private Point Move(double xDelta, double yDelta)\n+        {\n+            Int32Rect rect = Model.Zones[ZoneIndex];\n+            if (xDelta < 0)\n+            {\n+                xDelta = Math.Max(xDelta, -rect.X);\n+            }\n+            else if (xDelta > 0)\n+            {\n+                xDelta = Math.Min(xDelta, c_workArea.Width - rect.Width - rect.X);\n+            }\n+\n+            if (yDelta < 0)\n+            {\n+                yDelta = Math.Max(yDelta, -rect.Y);\n+            }\n+            else if (yDelta > 0)\n+            {\n+                yDelta = Math.Min(yDelta, c_workArea.Height - rect.Height - rect.Y);\n+            }\n+\n+            rect.X += (int) xDelta;\n+            rect.Y += (int) yDelta;\n+\n+            Canvas.SetLeft(this, rect.X);\n+            Canvas.SetTop(this, rect.Y);\n+            Model.Zones[ZoneIndex] = rect;\n+            return new Point(xDelta, yDelta);\n+        }\n+\n+        private void Size(double xDelta, double yDelta)\n+        {\n+            Int32Rect rect = Model.Zones[ZoneIndex];\n+            if (xDelta != 0)\n+            {\n+                int newWidth = rect.Width + (int) xDelta;\n+\n+                if (newWidth < 48)\n+                {\n+                    newWidth = 48;\n+                }\n+                else if (newWidth > (c_workArea.Width - rect.X))\n+                {\n+                    newWidth = (int) c_workArea.Width - rect.X;\n+                }\n+                MinWidth = rect.Width = newWidth;\n+            }\n+\n+            if (yDelta != 0)\n+            {\n+                int newHeight = rect.Height + (int)yDelta;\n+\n+                if (newHeight < 48)\n+                {\n+                    newHeight = 48;\n+                }\n+                else if (newHeight > (c_workArea.Height - rect.Y))\n+                {\n+                    newHeight = (int)c_workArea.Height - rect.Y;\n+                }\n+                MinHeight = rect.Height = newHeight;\n+            }\n+            Model.Zones[ZoneIndex] = rect;\n+        }\n+\n+        private static int c_zIndex = 0;\n+\n+        // TODO: multimon\n+        // This needs to be the work area of the monitor we get launched on\n+        private static Rect c_workArea = System.Windows.SystemParameters.WorkArea;\n+\n+        protected override void OnPreviewMouseDown(MouseButtonEventArgs e)\n+        {\n+            Canvas.SetZIndex(this, c_zIndex++);\n+            base.OnPreviewMouseDown(e);\n+        }\n+        private void NWResize_DragDelta(object sender, System.Windows.Controls.Primitives.DragDeltaEventArgs e)\n+        {\n+            Point actualChange = Move(e.HorizontalChange, e.VerticalChange);\n+            Size(-actualChange.X, -actualChange.Y);\n+        }\n+\n+        private void NEResize_DragDelta(object sender, System.Windows.Controls.Primitives.DragDeltaEventArgs e)\n+        {\n+            Point actualChange = Move(0, e.VerticalChange);\n+            Size(e.HorizontalChange, -actualChange.Y);\n+        }\n+\n+        private void SWResize_DragDelta(object sender, System.Windows.Controls.Primitives.DragDeltaEventArgs e)\n+        {\n+            Point actualChange = Move(e.HorizontalChange, 0);\n+            Size(-actualChange.X, e.VerticalChange);\n+        }\n+\n+        private void SEResize_DragDelta(object sender, System.Windows.Controls.Primitives.DragDeltaEventArgs e)\n+        {\n+            Size(e.HorizontalChange, e.VerticalChange);\n+        }\n+\n+        private void NResize_DragDelta(object sender, System.Windows.Controls.Primitives.DragDeltaEventArgs e)\n+        {\n+            Point actualChange = Move(0, e.VerticalChange);\n+            Size(0, -actualChange.Y);\n+        }\n+\n+        private void SResize_DragDelta(object sender, System.Windows.Controls.Primitives.DragDeltaEventArgs e)\n+        {\n+            Size(0, e.VerticalChange);\n+        }\n+\n+        private void WResize_DragDelta(object sender, System.Windows.Controls.Primitives.DragDeltaEventArgs e)\n+        {\n+            Point actualChange = Move(e.HorizontalChange, 0);\n+            Size(-actualChange.X, 0);\n+        }\n+\n+        private void EResize_DragDelta(object sender, System.Windows.Controls.Primitives.DragDeltaEventArgs e)\n+        {\n+            Size(e.HorizontalChange, 0);\n+        }\n+\n+        private void Caption_DragDelta(object sender, System.Windows.Controls.Primitives.DragDeltaEventArgs e)\n+        {\n+            Move(e.HorizontalChange, e.VerticalChange);\n+        }\n+\n+        private void OnClose(object sender, RoutedEventArgs e)\n+        {\n+            ((Panel)Parent).Children.Remove(this);\n+            Model.RemoveZoneAt(ZoneIndex);\n+        }\n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/EditorOverlay.xaml', 'Line Additions': 15, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,15 @@\n+\ufeff<Window x:Class=""FancyZonesEditor.EditorOverlay""\n+        xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n+        xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n+        xmlns:d=""http://schemas.microsoft.com/expression/blend/2008""\n+        xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006""\n+        xmlns:local=""clr-namespace:FancyZonesEditor""\n+        mc:Ignorable=""d""\n+        Title=""Window1"" Height=""450"" Width=""800""\n+        ShowInTaskbar=""False""\n+        ResizeMode=""NoResize""\n+        WindowStyle=""None""\n+        AllowsTransparency=""True""\n+        Background=""Transparent""\n+        Loaded=""onLoad""/>\n+'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/EditorOverlay.xaml.cs', 'Line Additions': 138, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,138 @@\n+\ufeffusing FancyZonesEditor.Models;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Net.NetworkInformation;\n+using System.Security.RightsManagement;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Shapes;\n+\n+namespace FancyZonesEditor\n+{\n+    /// <summary>\n+    /// Interaction logic for Window1.xaml\n+    /// </summary>\n+    public partial class EditorOverlay : Window\n+    {\n+        public Int32Rect[] GetZoneRects()\n+        {\n+            // TODO: the ideal here is that the ArrangeRects logic is entirely inside the model, so we don't have to walk the UIElement children to get the rect info\n+            Panel previewPanel = null;\n+\n+            if (_editor != null)\n+            {\n+                GridEditor gridEditor = _editor as GridEditor;\n+                if (gridEditor != null)\n+                {\n+                    previewPanel = gridEditor.PreviewPanel;\n+                }\n+                else\n+                {\n+                    //CanvasEditor\n+                    previewPanel = ((CanvasEditor)_editor).Preview;\n+                }\n+            }\n+            else\n+            {\n+                previewPanel = _layoutPreview.PreviewPanel;\n+            }\n+\n+            var count = previewPanel.Children.Count;\n+            Int32Rect[] zones = new Int32Rect[count];\n+\n+            int i = 0;\n+            foreach (FrameworkElement child in previewPanel.Children)\n+            {\n+                Point topLeft = child.TransformToAncestor(previewPanel).Transform(new Point());\n+\n+                var right = topLeft.X + child.ActualWidth;\n+                var bottom = topLeft.Y + child.ActualHeight;\n+                zones[i].X = (int)topLeft.X;\n+                zones[i].Y = (int)topLeft.Y;\n+                zones[i].Width = (int)child.ActualWidth;\n+                zones[i].Height = (int)child.ActualHeight;\n+                i++;\n+            }\n+\n+            return zones;\n+        }\n+\n+        public static EditorOverlay Current;\n+        public EditorOverlay()\n+        {\n+            InitializeComponent();\n+            Current = this;\r\n+\r\n+            // TODO: multimon\r\n+            // Need to set Left and Top to the correct monitor based on the\r\n+            // foreground window passed in the command line arguments\r\n+            Rect workArea = System.Windows.SystemParameters.WorkArea;\r\n+            Left = workArea.Left;\r\n+            Top = workArea.Top;\r\n+            Width = workArea.Width;\r\n+            Height = workArea.Height;\r\n+        }\r\n+\r\n+        void onLoad(object sender, RoutedEventArgs e)\n+        {\n+            ShowLayoutPicker();\n+        }\n+\n+        public void ShowLayoutPicker()\n+        {\n+            DataContext = null;\n+\n+            _editor = null;\n+            _layoutPreview = new LayoutPreview();\n+            _layoutPreview.IsActualSize = true;\n+            _layoutPreview.Opacity = 0.5;\n+            Content = _layoutPreview;\n+\n+            MainWindow window = new MainWindow();\n+            window.Owner = this;\n+            window.Show();\n+        }\n+\n+        // These event handlers are used to track the current state of the Shift and Ctrl keys on the keyboard\n+        // They reflect that current state into properties on the Settings object, which the Zone view will listen to in editing mode\n+        protected override void OnPreviewKeyDown(KeyEventArgs e)\n+        {\n+            _settings.IsShiftKeyPressed = Keyboard.Modifiers.HasFlag(ModifierKeys.Shift);\n+            _settings.IsCtrlKeyPressed = Keyboard.Modifiers.HasFlag(ModifierKeys.Control);\n+            base.OnPreviewKeyDown(e);\n+        }\n+\n+        protected override void OnPreviewKeyUp(KeyEventArgs e)\n+        {\n+            _settings.IsShiftKeyPressed = Keyboard.Modifiers.HasFlag(ModifierKeys.Shift);\n+            _settings.IsCtrlKeyPressed = Keyboard.Modifiers.HasFlag(ModifierKeys.Control);\n+            base.OnPreviewKeyUp(e);\n+        }\n+\n+        public void Edit()\n+        {\n+            _layoutPreview = null;\n+            if (DataContext is GridLayoutModel)\n+            {\n+                _editor = new GridEditor();\n+            }\n+            else if (DataContext is CanvasLayoutModel)\n+            {\n+                _editor = new CanvasEditor();\n+            }\n+            Content = _editor;\n+        }\n+\n+        private Settings _settings = ((App)Application.Current).ZoneSettings;\n+        private LayoutPreview _layoutPreview;\n+        private UserControl _editor;\n+    }\n+}""}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/EditorWindow.cs', 'Line Additions': 51, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,51 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Shapes;\n+using FancyZonesEditor.Models;\n+using MahApps.Metro.Controls;\n+\n+namespace FancyZonesEditor\n+{\n+    public class EditorWindow : MetroWindow\n+    {\n+        protected void OnSaveApplyTemplate(object sender, RoutedEventArgs e)\n+        {\n+            EditorOverlay mainEditor = EditorOverlay.Current;\n+            LayoutModel model = mainEditor.DataContext as LayoutModel;\n+            if (model != null)\n+            {\n+                model.Persist(mainEditor.GetZoneRects());\n+            }\n+            _choosing = true;\n+            this.Close();\n+            EditorOverlay.Current.Close();\n+        }\n+\n+        protected void OnClosed(object sender, EventArgs e)\n+        {\n+            if (!_choosing)\n+            {\n+                EditorOverlay.Current.ShowLayoutPicker();\n+            }\n+        }\n+\n+        protected void OnCancel(object sender, RoutedEventArgs e)\n+        {\n+            _choosing = true;\n+            this.Close();\n+            EditorOverlay.Current.ShowLayoutPicker();\n+        }\n+\n+        private bool _choosing = false;\n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/FancyZonesEditor.csproj', 'Line Additions': 193, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,193 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project ToolsVersion=""15.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <Import Project=""$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props"" Condition=""Exists(\'$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\')"" />\r\n+  <PropertyGroup>\r\n+    <Configuration Condition="" \'$(Configuration)\' == \'\' "">Debug</Configuration>\r\n+    <Platform Condition="" \'$(Platform)\' == \'\' "">AnyCPU</Platform>\r\n+    <ProjectGuid>{5CCC8468-DEC8-4D36-99D4-5C891BEBD481}</ProjectGuid>\r\n+    <OutputType>WinExe</OutputType>\r\n+    <RootNamespace>FancyZonesEditor</RootNamespace>\r\n+    <AssemblyName>FancyZonesEditor</AssemblyName>\r\n+    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>\r\n+    <FileAlignment>512</FileAlignment>\r\n+    <ProjectTypeGuids>{60dc8134-eba5-43b8-bcc9-bb4bc16c2548};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>\r\n+    <WarningLevel>4</WarningLevel>\r\n+    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\r\n+    <TargetFrameworkProfile />\r\n+    <NuGetPackageImportStamp>\r\n+    </NuGetPackageImportStamp>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition="" \'$(Configuration)|$(Platform)\' == \'Debug|x64\' "">\r\n+    <PlatformTarget>x64</PlatformTarget>\r\n+    <DebugSymbols>true</DebugSymbols>\r\n+    <DebugType>full</DebugType>\r\n+    <Optimize>false</Optimize>\r\n+    <OutputPath>..\\..\\..\\..\\..\\x64\\Debug\\modules\\</OutputPath>\r\n+    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n+    <ErrorReport>prompt</ErrorReport>\r\n+    <WarningLevel>4</WarningLevel>\r\n+    <Prefer32Bit>false</Prefer32Bit>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition="" \'$(Configuration)|$(Platform)\' == \'Release|x64\' "">\r\n+    <PlatformTarget>x64</PlatformTarget>\r\n+    <DebugType>pdbonly</DebugType>\r\n+    <Optimize>true</Optimize>\r\n+    <OutputPath>$(SolutionDir)$(Platform)\\$(Configuration)\\modules\\</OutputPath>\r\n+    <DefineConstants>TRACE</DefineConstants>\r\n+    <ErrorReport>prompt</ErrorReport>\r\n+    <WarningLevel>4</WarningLevel>\r\n+  </PropertyGroup>\r\n+  <ItemGroup>\r\n+    <Reference Include=""System"" />\r\n+    <Reference Include=""System.ComponentModel.DataAnnotations"" />\r\n+    <Reference Include=""System.Configuration"" />\r\n+    <Reference Include=""System.Data"" />\r\n+    <Reference Include=""System.Drawing"" />\r\n+    <Reference Include=""System.Windows.Forms"" />\r\n+    <Reference Include=""System.Xml"" />\r\n+    <Reference Include=""Microsoft.CSharp"" />\r\n+    <Reference Include=""System.Core"" />\r\n+    <Reference Include=""System.Xml.Linq"" />\r\n+    <Reference Include=""System.Data.DataSetExtensions"" />\r\n+    <Reference Include=""System.Net.Http"" />\r\n+    <Reference Include=""System.Xaml"">\r\n+      <RequiredTargetFramework>4.0</RequiredTargetFramework>\r\n+    </Reference>\r\n+    <Reference Include=""WindowsBase"" />\r\n+    <Reference Include=""PresentationCore"" />\r\n+    <Reference Include=""PresentationFramework"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ApplicationDefinition Include=""App.xaml"">\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+      <SubType>Designer</SubType>\r\n+    </ApplicationDefinition>\r\n+    <Compile Include=""CanvasEditor.xaml.cs"">\r\n+      <DependentUpon>CanvasEditor.xaml</DependentUpon>\r\n+    </Compile>\r\n+    <Compile Include=""EditorWindow.cs"" />\r\n+    <Compile Include=""GridEditor.xaml.cs"">\r\n+      <DependentUpon>GridEditor.xaml</DependentUpon>\r\n+    </Compile>\r\n+    <Compile Include=""GridResizer.xaml.cs"">\r\n+      <DependentUpon>GridResizer.xaml</DependentUpon>\r\n+    </Compile>\r\n+    <Compile Include=""LayoutPreview.xaml.cs"">\r\n+      <DependentUpon>LayoutPreview.xaml</DependentUpon>\r\n+    </Compile>\r\n+    <Compile Include=""Models\\CanvasLayoutModel.cs"" />\r\n+    <Compile Include=""Models\\GridLayoutModel.cs"" />\r\n+    <Compile Include=""Models\\LayoutModel.cs"" />\r\n+    <Compile Include=""Models\\Settings.cs"" />\r\n+    <Compile Include=""EditorOverlay.xaml.cs"">\r\n+      <DependentUpon>EditorOverlay.xaml</DependentUpon>\r\n+    </Compile>\r\n+    <Compile Include=""RowColInfo.cs"" />\r\n+    <Compile Include=""GridEditorWindow.xaml.cs"">\r\n+      <DependentUpon>GridEditorWindow.xaml</DependentUpon>\r\n+    </Compile>\r\n+    <Compile Include=""WindowLayout.xaml.cs"">\r\n+      <DependentUpon>WindowLayout.xaml</DependentUpon>\r\n+    </Compile>\r\n+    <Compile Include=""CanvasEditorWindow.xaml.cs"">\r\n+      <DependentUpon>CanvasEditorWindow.xaml</DependentUpon>\r\n+    </Compile>\r\n+    <Compile Include=""CanvasZone.xaml.cs"">\r\n+      <DependentUpon>CanvasZone.xaml</DependentUpon>\r\n+    </Compile>\r\n+    <Compile Include=""GridZone.xaml.cs"">\r\n+      <DependentUpon>GridZone.xaml</DependentUpon>\r\n+    </Compile>\r\n+    <Page Include=""CanvasEditor.xaml"">\r\n+      <SubType>Designer</SubType>\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+    </Page>\r\n+    <Page Include=""GridEditor.xaml"">\r\n+      <SubType>Designer</SubType>\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+    </Page>\r\n+    <Page Include=""GridResizer.xaml"">\r\n+      <SubType>Designer</SubType>\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+    </Page>\r\n+    <Page Include=""LayoutPreview.xaml"">\r\n+      <SubType>Designer</SubType>\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+    </Page>\r\n+    <Page Include=""MainWindow.xaml"">\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+      <SubType>Designer</SubType>\r\n+    </Page>\r\n+    <Compile Include=""App.xaml.cs"">\r\n+      <DependentUpon>App.xaml</DependentUpon>\r\n+      <SubType>Code</SubType>\r\n+    </Compile>\r\n+    <Compile Include=""MainWindow.xaml.cs"">\r\n+      <DependentUpon>MainWindow.xaml</DependentUpon>\r\n+      <SubType>Code</SubType>\r\n+    </Compile>\r\n+    <Page Include=""EditorOverlay.xaml"">\r\n+      <SubType>Designer</SubType>\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+    </Page>\r\n+    <Page Include=""GridEditorWindow.xaml"">\r\n+      <SubType>Designer</SubType>\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+    </Page>\r\n+    <Page Include=""WindowLayout.xaml"">\r\n+      <SubType>Designer</SubType>\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+    </Page>\r\n+    <Page Include=""CanvasEditorWindow.xaml"">\r\n+      <SubType>Designer</SubType>\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+    </Page>\r\n+    <Page Include=""CanvasZone.xaml"">\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+      <SubType>Designer</SubType>\r\n+    </Page>\r\n+    <Page Include=""GridZone.xaml"">\r\n+      <SubType>Designer</SubType>\r\n+      <Generator>MSBuild:Compile</Generator>\r\n+    </Page>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <Compile Include=""Properties\\AssemblyInfo.cs"">\r\n+      <SubType>Code</SubType>\r\n+    </Compile>\r\n+    <Compile Include=""Properties\\Resources.Designer.cs"">\r\n+      <AutoGen>True</AutoGen>\r\n+      <DesignTime>True</DesignTime>\r\n+      <DependentUpon>Resources.resx</DependentUpon>\r\n+    </Compile>\r\n+    <Compile Include=""Properties\\Settings.Designer.cs"">\r\n+      <AutoGen>True</AutoGen>\r\n+      <DependentUpon>Settings.settings</DependentUpon>\r\n+      <DesignTimeSharedInput>True</DesignTimeSharedInput>\r\n+    </Compile>\r\n+    <EmbeddedResource Include=""Properties\\Resources.resx"">\r\n+      <Generator>ResXFileCodeGenerator</Generator>\r\n+      <LastGenOutput>Resources.Designer.cs</LastGenOutput>\r\n+    </EmbeddedResource>\r\n+    <None Include=""Properties\\Settings.settings"">\r\n+      <Generator>SettingsSingleFileGenerator</Generator>\r\n+      <LastGenOutput>Settings.Designer.cs</LastGenOutput>\r\n+    </None>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=""App.config"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <PackageReference Include=""MahApps.Metro"">\r\n+      <Version>2.0.0-alpha0455</Version>\r\n+    </PackageReference>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <Resource Include=""images\\ChromeClose.png"" />\r\n+    <Resource Include=""images\\Delete.png"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <Resource Include=""images\\Merge.png"" />\r\n+  </ItemGroup>\r\n+  <Import Project=""$(MSBuildToolsPath)\\Microsoft.CSharp.targets"" />\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/GridEditor.xaml', 'Line Additions': 35, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,35 @@\n+\ufeff<UserControl x:Class=""FancyZonesEditor.GridEditor""\n+             xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n+             xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n+             xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006"" \n+             xmlns:d=""http://schemas.microsoft.com/expression/blend/2008"" \n+             xmlns:local=""clr-namespace:FancyZonesEditor""\n+             mc:Ignorable=""d"" \n+             d:DesignHeight=""450"" d:DesignWidth=""800"">\n+    <UserControl.Resources>\n+        <Style TargetType=""Button"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""Black""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""BorderThickness"" Value=""0""/>\n+            <Setter Property=""Background"" Value=""#F2F2F2""/>\n+            <Setter Property=""Width"" Value=""150""/>\n+        </Style>\n+    </UserControl.Resources>\n+    <Grid>\n+        <Canvas x:Name=""Preview""/>\n+        <Canvas x:Name=""AdornerLayer""/>\n+        <Canvas x:Name=""MergePanel"" Visibility=""Collapsed"" MouseUp=""MergePanelMouseUp"">\n+\n+            <StackPanel x:Name=""MergeButtons"" Background=""Gray"" Orientation=""Horizontal"">\n+                <Button Click=""MergeClick"" Margin=""0"" Height=""36"" Width=""134"">\n+                    <StackPanel Orientation=""Horizontal"">\n+                    <Image Source=""images/Merge.png"" Margin=""0,0,12,0"" Height=""16"" HorizontalAlignment=""Left"" />\n+                    <TextBlock Text=""Merge zones""/>\n+                    </StackPanel>\n+                </Button>\n+            </StackPanel>\n+        </Canvas>\n+    </Grid>\n+</UserControl>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/GridEditor.xaml.cs', 'Line Additions': 911, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,911 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Navigation;\n+using System.Windows.Shapes;\n+using FancyZonesEditor.Models;\n+\n+\n+namespace FancyZonesEditor\n+{\n+    /// <summary>\n+    /// GridEditor is how you tweak an initial GridLayoutModel before saving\n+    /// </summary>\n+    public partial class GridEditor : UserControl\n+    {\n+        public static readonly DependencyProperty ModelProperty = DependencyProperty.Register(""Model"", typeof(GridLayoutModel), typeof(GridEditor), new PropertyMetadata(null, OnGridDimensionsChanged));\n+\n+        public GridEditor()\n+        {\n+            InitializeComponent();\n+            Loaded += GridEditor_Loaded;\n+            ((App)Application.Current).ZoneSettings.PropertyChanged += ZoneSettings_PropertyChanged;\n+        }\n+\n+        private void GridEditor_Loaded(object sender, RoutedEventArgs e)\n+        {\n+            GridLayoutModel model = (GridLayoutModel)DataContext;\n+            if (model != null)\n+            {\n+                int rows = model.Rows;\n+                int cols = model.Columns;\n+                _rowInfo = new RowColInfo[rows];\n+                for (int row = 0; row < rows; row++)\n+                {\n+                    _rowInfo[row] = new RowColInfo(model.RowPercents[row]);\n+                }\n+                _colInfo = new RowColInfo[cols];\n+                for (int col = 0; col < cols; col++)\n+                {\n+                    _colInfo[col] = new RowColInfo(model.ColumnPercents[col]);\n+                }\n+\n+                int maxIndex = 0;\n+                for (int row = 0; row < rows; row++)\n+                {\n+                    for (int col = 0; col < cols; col++)\n+                    {\n+                        maxIndex = Math.Max(maxIndex, model.CellChildMap[row, col]);\n+                    }\n+                }\n+                for (int i = 0; i <= maxIndex; i++)\n+                {\n+                    AddZone();\n+                }\n+            }\n+\n+            Model = model;\n+            if (Model == null)\n+            {\n+                Model = new GridLayoutModel();\n+                DataContext = Model;\n+            }\n+            Model.PropertyChanged += OnGridDimensionsChanged;\n+            AddDragHandles();\n+        }\n+\n+        private void ZoneSettings_PropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)\n+        {\n+            Size actualSize = new Size(ActualWidth, ActualHeight);\n+            if (actualSize.Width > 0)\n+            {\n+                ArrangeGridRects(actualSize);\n+            }\n+        }\n+\n+        public GridLayoutModel Model\n+        {\n+            get { return (GridLayoutModel)GetValue(ModelProperty); }\n+            set { SetValue(ModelProperty, value); }\n+        }\n+\n+        public Panel PreviewPanel { get { return Preview; } }\n+\n+        private void OnFullSplit(object o, SplitEventArgs e)\n+        {\n+            UIElementCollection previewChildren = Preview.Children;\n+            UIElement splitee = (UIElement)o;\n+\n+            GridLayoutModel model = Model;\n+            int spliteeIndex = previewChildren.IndexOf(splitee);\n+\n+            int rows = model.Rows;\n+            int cols = model.Columns;\n+            _startRow = -1;\n+            _startCol = -1;\n+\n+            for (int row = rows - 1; row >= 0; row--)\n+            {\n+                for (int col = cols - 1; col >= 0; col--)\n+                {\n+                    if (model.CellChildMap[row, col] == spliteeIndex)\n+                    {\n+                        RemoveDragHandles();\n+                        _startRow = _endRow = row;\n+                        _startCol = _endCol = col;\n+                        ExtendRangeToHaveEvenCellEdges();\n+\n+                        for (row = _startRow; row <= _endRow; row++)\n+                        {\n+                            for (col = _startCol; col <= _endCol; col++)\n+                            {\n+                                if ((row != _startRow) || (col != _startCol))\n+                                {\n+                                    model.CellChildMap[row, col] = AddZone();\n+                                }\n+                            }\n+                        }\n+                        OnGridDimensionsChanged();\n+                        return;\n+                    }\n+                }\n+            }\n+        }\n+\n+        private void ExtendRangeToHaveEvenCellEdges()\n+        {\n+            // extend each edge of the [(_startCol, _startRow) - (_endCol, _endRow)] range based on merged cells until you have 4 straight edges with no ""straddling cells""\n+\n+            GridLayoutModel model = Model;\n+\n+            while (_startRow > 0)\n+            {\n+                bool dirty = false;\n+                for (int col = _startCol; col <= _endCol; col++)\n+                {\n+                    if (model.CellChildMap[_startRow - 1, col] == model.CellChildMap[_startRow, col])\n+                    {\n+                        _startRow--;\n+                        dirty = true;\n+                        break;\n+                    }\n+                }\n+                if (!dirty)\n+                {\n+                    break;\n+                }\n+            }\n+\n+            while (_endRow < model.Rows - 1)\n+            {\n+                bool dirty = false;\n+                for (int col = _startCol; col <= _endCol; col++)\n+                {\n+                    if (model.CellChildMap[_endRow + 1, col] == model.CellChildMap[_endRow, col])\n+                    {\n+                        _endRow++;\n+                        dirty = true;\n+                        break;\n+                    }\n+                }\n+                if (!dirty)\n+                {\n+                    break;\n+                }\n+            }\n+\n+            while (_startCol > 0)\n+            {\n+                bool dirty = false;\n+                for (int row = _startRow; row <= _endRow; row++)\n+                {\n+                    if (model.CellChildMap[row, _startCol - 1] == model.CellChildMap[row, _startCol])\n+                    {\n+                        _startCol--;\n+                        dirty = true;\n+                        break;\n+                    }\n+                }\n+                if (!dirty)\n+                {\n+                    break;\n+                }\n+            }\n+\n+            while (_endCol < model.Columns - 1)\n+            {\n+                bool dirty = false;\n+                for (int row = _startRow; row <= _endRow; row++)\n+                {\n+                    if (model.CellChildMap[row, _endCol + 1] == model.CellChildMap[row, _endCol])\n+                    {\n+                        _endCol++;\n+                        dirty = true;\n+                        break;\n+                    }\n+                }\n+                if (!dirty)\n+                {\n+                    break;\n+                }\n+            }\n+\n+        }\n+\n+        private void OnSplit(object o, SplitEventArgs e)\n+        {\n+            UIElementCollection previewChildren = Preview.Children;\n+            GridZone splitee = (GridZone)o;\n+\n+            int spliteeIndex = previewChildren.IndexOf(splitee);\n+            GridLayoutModel model = Model;\n+\n+            int rows = model.Rows;\n+            int cols = model.Columns;\n+            int foundRow = -1;\n+            int foundCol = -1;\n+\n+            for (int row = 0; row < rows; row++)\n+            {\n+                for (int col = 0; col < cols; col++)\n+                {\n+                    if (model.CellChildMap[row, col] == spliteeIndex)\n+                    {\n+                        foundRow = row;\n+                        foundCol = col;\n+                        break;\n+                    }\n+                }\n+\n+                if (foundRow != -1)\n+                {\n+                    break;\n+                }\n+            }\n+\n+\n+            int newChildIndex = AddZone();\n+\n+            double offset = e.Offset;\n+\n+\n+            if (e.Orientation == Orientation.Vertical)\n+            {\n+                if (splitee.VerticalSnapPoints != null)\n+                {\n+                    offset += Canvas.GetLeft(splitee);\n+                    int count = splitee.VerticalSnapPoints.Length;\n+                    bool foundExistingSplit = false;\n+\n+                    for (int i = 0; i <= count; i++)\n+                    {\n+                        if (foundExistingSplit)\n+                        {\n+                            int walkRow = foundRow;\n+                            while ((walkRow < rows) && (model.CellChildMap[walkRow, foundCol + i] == spliteeIndex))\n+                            {\n+                                model.CellChildMap[walkRow++, foundCol + i] = newChildIndex;\n+                            }\n+                        }\n+                        if (_colInfo[foundCol + i].End == offset)\n+                        {\n+                            foundExistingSplit = true;\n+                            // use existing division\n+                        }\n+                    }\n+\n+                    if (foundExistingSplit)\n+                    {\n+                        OnGridDimensionsChanged();\n+                        return;\n+                    }\n+\n+                    while (_colInfo[foundCol].End < offset)\n+                    {\n+                        foundCol++;\n+                    }\n+                    offset -= _colInfo[foundCol].Start;\n+                }\n+\n+                AddDragHandle(Orientation.Vertical, cols - 1);\n+                cols++;\n+                int[,] newCellChildMap = new int[rows, cols];\n+                int[] newColPercents = new int[cols];\n+                RowColInfo[] newColInfo = new RowColInfo[cols];\n+\n+                int sourceCol = 0;\n+                for (int col = 0; col < cols; col++)\n+                {\n+                    for (int row = 0; row < rows; row++)\n+                    {\n+                        if ((col > foundCol) && (model.CellChildMap[row, sourceCol] == spliteeIndex))\n+                        {\n+                            newCellChildMap[row, col] = newChildIndex;\n+                        }\n+                        else\n+                        {\n+                            newCellChildMap[row, col] = model.CellChildMap[row, sourceCol];\n+                        }\n+                    }\n+                    if (col != foundCol)\n+                    {\n+                        sourceCol++;\n+                    }\n+                }\n+                model.CellChildMap = newCellChildMap;\n+\n+                sourceCol = 0;\n+                for (int col = 0; col < cols; col++)\n+                {\n+                    if (col == foundCol)\n+                    {\n+                        RowColInfo[] split = _colInfo[col].Split(offset);\n+                        newColPercents[col] = split[0].Percent;\n+                        newColInfo[col++] = split[0];\n+                        newColPercents[col] = split[1].Percent;\n+                        newColInfo[col] = split[1];\n+                        sourceCol++;\n+                    }\n+                    else\n+                    {\n+                        newColPercents[col] = model.ColumnPercents[sourceCol];\n+                        newColInfo[col] = _colInfo[sourceCol++];\n+                    }\n+                }\n+                _colInfo = newColInfo;\n+                model.ColumnPercents = newColPercents;\n+\n+                model.Columns++;\n+            }\n+            else // Horizontal\n+            {\n+\n+                if (splitee.HorizontalSnapPoints != null)\n+                {\n+                    offset += Canvas.GetTop(splitee);\n+                    int count = splitee.HorizontalSnapPoints.Length;\n+                    bool foundExistingSplit = false;\n+\n+                    for (int i = 0; i <= count; i++)\n+                    {\n+                        if (foundExistingSplit)\n+                        {\n+                            int walkCol = foundCol;\n+                            while ((walkCol < cols) && (model.CellChildMap[foundRow + i, walkCol] == spliteeIndex))\n+                            {\n+                                model.CellChildMap[foundRow + i, walkCol] = newChildIndex;\n+                            }\n+                        }\n+                        if (_rowInfo[foundRow + i].End == offset)\n+                        {\n+                            foundExistingSplit = true;\n+                            // use existing division\n+                        }\n+                    }\n+\n+                    if (foundExistingSplit)\n+                    {\n+                        OnGridDimensionsChanged();\n+                        return;\n+                    }\n+\n+                    while (_rowInfo[foundRow].End < offset)\n+                    {\n+                        foundRow++;\n+                    }\n+                    offset -= _rowInfo[foundRow].Start;\n+\n+                }\n+\n+                AddDragHandle(Orientation.Horizontal, rows - 1);\n+                rows++;\n+                int[,] newCellChildMap = new int[rows, cols];\n+                int[] newRowPercents = new int[rows];\n+                RowColInfo[] newRowInfo = new RowColInfo[rows];\n+\n+                int sourceRow = 0;\n+                for (int row = 0; row < rows; row++)\n+                {\n+                    for (int col = 0; col < cols; col++)\n+                    {\n+                        if ((row > foundRow) && (model.CellChildMap[sourceRow, col] == spliteeIndex))\n+                        {\n+                            newCellChildMap[row, col] = newChildIndex;\n+                        }\n+                        else\n+                        {\n+                            newCellChildMap[row, col] = model.CellChildMap[sourceRow, col];\n+                        }\n+                    }\n+                    if (row != foundRow)\n+                    {\n+                        sourceRow++;\n+                    }\n+                }\n+                model.CellChildMap = newCellChildMap;\n+\n+                sourceRow = 0;\n+                for (int row = 0; row < rows; row++)\n+                {\n+                    if (row == foundRow)\n+                    {\n+                        RowColInfo[] split = _rowInfo[row].Split(offset);\n+                        newRowPercents[row] = split[0].Percent;\n+                        newRowInfo[row++] = split[0];\n+                        newRowPercents[row] = split[1].Percent;\n+                        newRowInfo[row] = split[1];\n+                        sourceRow++;\n+                    }\n+                    else\n+                    {\n+                        newRowPercents[row] = model.RowPercents[sourceRow];\n+                        newRowInfo[row] = _rowInfo[sourceRow++];\n+                    }\n+                }\n+                _rowInfo = newRowInfo;\n+                model.RowPercents = newRowPercents;\n+\n+                model.Rows++;\n+            }\n+        }\n+\n+        private void RemoveDragHandles()\n+        {\n+            AdornerLayer.Children.Clear();\n+        }\n+\n+        private void AddDragHandles()\n+        {\n+            if (AdornerLayer.Children.Count == 0)\n+            {\n+                int interiorRows = Model.Rows - 1;\n+                int interiorCols = Model.Columns - 1;\n+\n+                for (int row = 0; row < interiorRows; row++)\n+                {\n+                    AddDragHandle(Orientation.Horizontal, row);\n+                }\n+\n+                for (int col = 0; col < interiorCols; col++)\n+                {\n+                    AddDragHandle(Orientation.Vertical, col);\n+                }\n+            }\n+        }\n+\n+        private void AddDragHandle(Orientation orientation, int index)\n+        {\n+            GridResizer resizer = new GridResizer();\n+            resizer.Orientation = orientation;\n+            resizer.Index = index;\n+            resizer.Model = Model;\n+            resizer.DragDelta += Resizer_DragDelta;\n+            if (orientation == Orientation.Vertical)\n+            {\n+                index += (Model.Rows - 1);\n+            }\n+            AdornerLayer.Children.Insert(index, resizer);\n+        }\n+\n+        private void DeleteZone(int index)\n+        {\n+            IList<int> freeZones = Model.FreeZones;\n+\n+            if (freeZones.Contains(index))\n+            {\n+                return;\n+            }\n+\n+            freeZones.Add(index);\n+            GridZone zone = (GridZone)Preview.Children[index];\n+            zone.Visibility = Visibility.Hidden;\n+            zone.MinHeight = 0;\n+            zone.MinWidth = 0;\n+        }\n+\n+        private int AddZone()\n+        {\n+            GridZone zone;\n+            if (Model != null)\n+            {\n+                IList<int> freeZones = Model.FreeZones;\n+\n+                // first check free list\n+                if (freeZones.Count > 0)\n+                {\n+                    int freeIndex = freeZones[0];\n+                    freeZones.RemoveAt(0);\n+                    zone = (GridZone)Preview.Children[freeIndex];\n+                    zone.Visibility = Visibility.Visible;\n+                    return freeIndex;\n+                }\n+            }\n+\n+            zone = new GridZone();\n+            zone.Split += OnSplit;\n+            zone.MergeDrag += OnMergeDrag;\n+            zone.MergeComplete += OnMergeComplete;\n+            zone.FullSplit += OnFullSplit;\n+            Preview.Children.Add(zone);\n+            return Preview.Children.Count - 1;\n+        }\n+\n+        private void OnGridDimensionsChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)\n+        {\n+            if ((e.PropertyName == ""Rows"") || (e.PropertyName == ""Columns""))\n+            {\n+                OnGridDimensionsChanged();\n+            }\n+        }\n+        private static void OnGridDimensionsChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n+        {\n+            ((GridEditor)d).OnGridDimensionsChanged();\n+        }\n+        private void OnGridDimensionsChanged()\n+        {\n+            GridLayoutModel model = Model;\n+\n+            Size actualSize = new Size(ActualWidth, ActualHeight);\n+            if (actualSize.Width > 0)\n+            {\n+                ArrangeGridRects(actualSize);\n+            }\n+        }\n+\n+        private void ArrangeGridRects(Size arrangeSize)\n+        {\n+            GridLayoutModel model = Model;\n+            if (model == null)\n+            {\n+                return;\n+            }\n+\n+            Settings settings = ((App)(Application.Current)).ZoneSettings;\n+            int spacing = settings.Spacing;\n+            int gutter = settings.Spacing;\n+\n+            int cols = model.Columns;\n+            int rows = model.Rows;\n+\n+            double totalWidth = arrangeSize.Width - (gutter * 2) - (spacing * (cols - 1));\n+            double totalHeight = arrangeSize.Height - (gutter * 2) - (spacing * (rows - 1));\n+\n+            double top = gutter;\n+            for (int row = 0; row < rows; row++)\n+            {\n+                double cellHeight = _rowInfo[row].SetExtent(top, totalHeight);\n+                top += cellHeight + spacing;\n+            }\n+\n+            double left = gutter;\n+            for (int col = 0; col < cols; col++)\n+            {\n+                double cellWidth = _colInfo[col].SetExtent(left, totalWidth);\n+                left += cellWidth + spacing;\n+            }\n+\n+\n+\n+            for (int row = 0; row < rows; row++)\n+            {\n+                for (int col = 0; col < cols; col++)\n+                {\n+                    int i = model.CellChildMap[row, col];\n+                    if (((row == 0) || (model.CellChildMap[row - 1, col] != i)) &&\n+                        ((col == 0) || (model.CellChildMap[row, col - 1] != i)))\n+                    {\n+                        // this is not a continuation of a span\n+                        GridZone zone = (GridZone)Preview.Children[i];\n+                        left = _colInfo[col].Start;\n+                        top = _rowInfo[row].Start;\n+                        Canvas.SetLeft(zone, left);\n+                        Canvas.SetTop(zone, top);\n+\n+                        int maxRow = row;\n+                        while (((maxRow + 1) < rows) && (model.CellChildMap[maxRow + 1, col] == i))\n+                        {\n+                            maxRow++;\n+                        }\n+                        zone.HorizontalSnapPoints = null;\n+                        if (maxRow > row)\n+                        {\n+                            zone.HorizontalSnapPoints = new double[maxRow - row];\n+                            int pointsIndex = 0;\n+                            for (int walk = row; walk < maxRow; walk++)\n+                            {\n+                                zone.HorizontalSnapPoints[pointsIndex++] = _rowInfo[walk].End + spacing / 2 - top;\n+                            }\n+                        }\n+\n+                        int maxCol = col;\n+                        while (((maxCol + 1) < cols) && (model.CellChildMap[row, maxCol + 1] == i))\n+                        {\n+                            maxCol++;\n+                        }\n+\n+                        zone.VerticalSnapPoints = null;\n+                        if (maxCol > col)\n+                        {\n+                            zone.VerticalSnapPoints = new double[maxCol - col];\n+                            int pointsIndex = 0;\n+                            for (int walk = col; walk < maxCol; walk++)\n+                            {\n+                                zone.VerticalSnapPoints[pointsIndex++] = _colInfo[walk].End + spacing / 2 - left;\n+                            }\n+                        }\n+\n+                        zone.MinWidth = _colInfo[maxCol].End - left;\n+                        zone.MinHeight = _rowInfo[maxRow].End - top;\n+                    }\n+                }\n+            }\n+\n+            AddDragHandles();\n+            int childIndex = 0;\n+            UIElementCollection adornerChildren = AdornerLayer.Children;\n+            for (int row = 0; row < rows - 1; row++)\n+            {\n+                GridResizer resizer = (GridResizer)adornerChildren[childIndex++];\n+                int startCol = -1;\n+                int endCol = cols - 1;\n+                for (int col = 0; col < cols; col++)\n+                {\n+                    if ((startCol == -1) && (model.CellChildMap[row, col] != model.CellChildMap[row + 1, col]))\n+                    {\n+                        startCol = col;\n+                    }\n+                    else if ((startCol != -1) && (model.CellChildMap[row, col] == model.CellChildMap[row + 1, col]))\n+                    {\n+                        endCol = col - 1;\n+                        break;\n+                    }\n+                }\n+                if (startCol != -1)\n+                {\n+                    Canvas.SetTop(resizer, _rowInfo[row].End + (spacing / 2) - 24); // hard coding this as (resizer.ActualHeight / 2) will still evaluate to 0 here ... a layout hasn\'t yet happened \n+                    Canvas.SetLeft(resizer, (_colInfo[endCol].End + _colInfo[startCol].Start) / 2);\n+                }\n+                else\n+                {\n+                    resizer.Visibility = Visibility.Collapsed;\n+                }\n+            }\n+\n+            for (int col = 0; col < cols - 1; col++)\n+            {\n+                GridResizer resizer = (GridResizer)adornerChildren[childIndex++];\n+                int startRow = -1;\n+                int endRow = rows - 1;;\n+                for (int row = 0; row < rows; row++)\n+                {\n+                    if ((startRow == -1) && (model.CellChildMap[row, col] != model.CellChildMap[row, col + 1]))\n+                    {\n+                        startRow = row;\n+                    }\n+                    else if ((startRow != -1) && (model.CellChildMap[row, col] == model.CellChildMap[row, col + 1]))\n+                    {\n+                        endRow = row - 1;\n+                        break;\n+                    }\n+                }\n+                if (startRow != -1)\n+                {\n+                    Canvas.SetLeft(resizer, _colInfo[col].End + (spacing / 2) - 24); // hard coding this as (resizer.ActualWidth / 2) will still evaluate to 0 here ... a layout hasn\'t yet happened\n+                    Canvas.SetTop(resizer, (_rowInfo[endRow].End + _rowInfo[startRow].Start) / 2);\n+                }\n+                else\n+                {\n+                    resizer.Visibility = Visibility.Collapsed;\n+                }\n+            }\n+        }\n+\n+        private void Resizer_DragDelta(object sender, System.Windows.Controls.Primitives.DragDeltaEventArgs e)\n+        {\n+            GridResizer resizer = (GridResizer)sender;\n+            int[] percents;\n+            RowColInfo[] info;\n+            int index = resizer.Index;\n+            double delta;\n+\n+            if (resizer.Orientation == Orientation.Vertical)\n+            {\n+                percents = Model.ColumnPercents;\n+                info = _colInfo;\n+                delta = e.HorizontalChange;\n+            }\n+            else\n+            {\n+                percents = Model.RowPercents;\n+                info = _rowInfo;\n+                delta = e.VerticalChange;\n+            }\n+\n+            double currentExtent = info[index].Extent;\n+            double newExtent = currentExtent + delta;\n+            int currentPercent = info[index].Percent;\n+            int totalPercent = currentPercent + info[index + 1].Percent;\n+\n+            int newPercent = (int)(currentPercent * newExtent / currentExtent);\n+\n+            if ((newPercent > 0) && (newPercent < totalPercent))\n+            {\n+                percents[index] = info[index].Percent = newPercent;\n+                percents[index + 1] = info[index + 1].Percent = totalPercent - newPercent;\n+\n+                Size actualSize = new Size(ActualWidth, ActualHeight);\n+                ArrangeGridRects(actualSize);\n+            }\n+        }\n+\n+        private Point _startDragPos = new Point(-1, -1);\n+\n+        private void OnMergeComplete(object o, MouseButtonEventArgs e)\n+        {\n+            Point mousePoint = e.GetPosition(Preview);\n+            _startDragPos = new Point(-1, -1);\n+\n+            int mergedIndex = Model.CellChildMap[_startRow, _startCol];\n+\n+            for (int row = _startRow; row <= _endRow; row++)\n+            {\n+                for (int col = _startCol; col <= _endCol; col++)\n+                {\n+                    if (Model.CellChildMap[row, col] != mergedIndex)\n+                    {\n+                        // selection is more than one cell, merge is valid\n+                        MergePanel.Visibility = Visibility.Visible;\n+                        Canvas.SetTop(MergeButtons, mousePoint.Y);\n+                        Canvas.SetLeft(MergeButtons, mousePoint.X);\n+                        return;\n+                    }\n+                }\n+            }\n+\n+            // merge is only one zone. cancel merge;\n+            ClearSelection();\n+        }\n+\n+        private void OnMergeDrag(object o, MouseEventArgs e)\n+        {\n+            if (_startDragPos.X == -1)\n+            {\n+                _startDragPos = e.GetPosition(Preview);\n+            }\n+\n+            GridLayoutModel model = Model;\n+\n+            if (_startDragPos.X != -1)\n+            {\n+                Point dragPos = e.GetPosition(Preview);\n+\n+                _startRow = -1;\n+                _endRow = -1;\n+                _startCol = -1;\n+                _endCol = -1;\n+\n+                int rows = model.Rows;\n+                int cols = model.Columns;\n+\n+                double minX, maxX;\n+                if (dragPos.X < _startDragPos.X)\n+                {\n+                    minX = dragPos.X;\n+                    maxX = _startDragPos.X;\n+                }\n+                else\n+                {\n+                    minX = _startDragPos.X;\n+                    maxX = dragPos.X;\n+                }\n+\n+                double minY, maxY;\n+                if (dragPos.Y < _startDragPos.Y)\n+                {\n+                    minY = dragPos.Y;\n+                    maxY = _startDragPos.Y;\n+                }\n+                else\n+                {\n+                    minY = _startDragPos.Y;\n+                    maxY = dragPos.Y;\n+                }\n+\n+                for (int row = 0; row < rows; row++)\n+                {\n+                    if (_startRow == -1)\n+                    {\n+                        if (_rowInfo[row].End > minY)\n+                        {\n+                            _startRow = row;\n+                        }\n+                    }\n+                    else if (_rowInfo[row].Start > maxY)\n+                    {\n+                        _endRow = row - 1;\n+                        break;\n+                    }\n+                }\n+                if ((_startRow >= 0) && (_endRow == -1))\n+                {\n+                    _endRow = rows - 1;\n+                }\n+\n+                for (int col = 0; col < cols; col++)\n+                {\n+                    if (_startCol == -1)\n+                    {\n+                        if (_colInfo[col].End > minX)\n+                        {\n+                            _startCol = col;\n+                        }\n+                    }\n+                    else if (_colInfo[col].Start > maxX)\n+                    {\n+                        _endCol = col - 1;\n+                        break;\n+                    }\n+                }\n+                if ((_startCol >= 0) && (_endCol == -1))\n+                {\n+                    _endCol = cols - 1;\n+                }\n+\n+                ExtendRangeToHaveEvenCellEdges();\n+\n+                for (int row = 0; row < rows; row++)\n+                {\n+                    for (int col = 0; col < cols; col++)\n+                    {\n+                        ((GridZone)Preview.Children[model.CellChildMap[row, col]]).IsSelected = (row >= _startRow) && (row <= _endRow) && (col >= _startCol) && (col <= _endCol);\n+                    }\n+                }\n+\n+                e.Handled = true;\n+            }\n+            base.OnPreviewMouseMove(e);\n+        }\n+\n+        private void ClearSelection()\n+        {\n+            foreach (UIElement zone in Preview.Children)\n+            {\n+                ((GridZone) zone).IsSelected = false;\n+            }\n+        }\n+\n+        private void MergeClick(object sender, RoutedEventArgs e)\n+        {\n+            GridLayoutModel model = Model;\n+\n+            MergePanel.Visibility = Visibility.Collapsed;\n+            int mergedIndex = model.CellChildMap[_startRow, _startCol];\n+\n+            for (int row = _startRow; row <= _endRow; row++)\n+            {\n+                for (int col = _startCol; col <= _endCol; col++)\n+                {\n+                    int childIndex = model.CellChildMap[row, col];\n+                    if (childIndex != mergedIndex)\n+                    {\n+                        model.CellChildMap[row, col] = mergedIndex;\n+                        DeleteZone(childIndex);\n+                    }\n+                }\n+            }\n+            OnGridDimensionsChanged();\n+            ClearSelection();\n+        }\n+\n+        private void CancelClick(object sender, RoutedEventArgs e)\n+        {\n+            MergePanel.Visibility = Visibility.Collapsed;\n+            ClearSelection();\n+        }\n+\n+        private void MergePanelMouseUp(object sender, MouseButtonEventArgs e)\n+        {\n+            CancelClick(null, null);\n+        }\n+\n+        protected override Size ArrangeOverride(Size arrangeBounds)\n+        {\n+            Size returnSize = base.ArrangeOverride(arrangeBounds);\n+            ArrangeGridRects(arrangeBounds);\n+\n+            return returnSize;\n+        }\n+\n+        Point _mouseDownPos = new Point(-1, -1);\n+        private RowColInfo[] _rowInfo;\n+        private RowColInfo[] _colInfo;\n+\n+        private int _startRow = -1;\n+        private int _endRow = -1;\n+        private int _startCol = -1;\n+        private int _endCol = -1;\n+\n+        private const int c_multiplier = 10000;\n+\n+    }\n+\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/GridEditorWindow.xaml', 'Line Additions': 184, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,184 @@\n+\ufeff<local:EditorWindow x:Class=""FancyZonesEditor.GridEditorWindow""\n+        xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n+        xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n+        xmlns:d=""http://schemas.microsoft.com/expression/blend/2008""\n+        xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006""\n+        xmlns:Controls=""clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro""\n+        xmlns:local=""clr-namespace:FancyZonesEditor""\n+        mc:Ignorable=""d""\n+        Title="""" \n+        Width=""528""\n+        SizeToContent=""Height""            \n+        Background=""White""\n+        ResizeMode=""NoResize""\n+        WindowStartupLocation=""CenterScreen""\n+        Closed=""OnClosed"">\n+\n+    <Window.Resources>\n+        <Style x:Key=""titleText"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""Bold"" />\n+            <Setter Property=""LineHeight"" Value=""24"" />\n+            <Setter Property=""FontSize"" Value=""18""/>\n+            <Setter Property=""Margin"" Value=""16,20,0,12"" />\n+        </Style>\n+        <Style x:Key=""zoneCount"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""Regular"" />\n+            <Setter Property=""FontSize"" Value=""24""/>\n+            <Setter Property=""LineHeight"" Value=""24"" />\n+            <Setter Property=""Margin"" Value=""20,0,20,0"" />\n+            <Setter Property=""HorizontalAlignment"" Value=""Center""/>\n+            <Setter Property=""VerticalAlignment"" Value=""Center""/>\n+        </Style>\n+        <Style x:Key=""tabText"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""#C4C4C4""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""LineHeight"" Value=""20"" />\n+            <Setter Property=""Margin"" Value=""24,20,0,0"" />\n+            <Setter Property=""TextAlignment"" Value=""Center"" />\n+        </Style>\n+        <Style x:Key=""settingText"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""Black""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""LineHeight"" Value=""20"" />\n+            <Setter Property=""Margin"" Value=""5,10,0,0"" />\n+            <Setter Property=""TextAlignment"" Value=""Left"" />\n+        </Style>\n+        <Style x:Key=""templateTitleText"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""Regular"" />\n+            <Setter Property=""Foreground"" Value=""Black""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""Margin"" Value=""0,20,0,0"" />\n+            <Setter Property=""TextAlignment"" Value=""Center"" />\n+            <Setter Property=""Height"" Value=""30""/>\n+            <Setter Property=""Width"" Value=""250""/>\n+            <Setter Property=""VerticalAlignment"" Value=""Top""/>\n+        </Style>\n+        <Style x:Key=""secondaryButton"" TargetType=""Button"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""Black""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""Padding"" Value=""0,5,0,5""/>\n+            <Setter Property=""BorderThickness"" Value=""0""/>\n+            <Setter Property=""Background"" Value=""#F2F2F2""/>\n+            <Setter Property=""Margin"" Value=""16,10,0,0"" />\n+            <Setter Property=""Width"" Value=""239""/>\n+            <Setter Property=""Height"" Value=""32""/>\n+            <Setter Property=""Template"">\n+                <Setter.Value>\n+                    <ControlTemplate TargetType=""{x:Type Button}"">\n+                        <Border Background=""{TemplateBinding Background}"">\n+                            <ContentPresenter HorizontalAlignment=""Center"" VerticalAlignment=""Center""/>\n+                        </Border>\n+                    </ControlTemplate>\n+                </Setter.Value>\n+            </Setter>\n+            <Style.Triggers>\n+                <Trigger Property=""IsMouseOver"" Value=""True"">\n+                    <Setter Property=""Background"" Value=""#BCBCBD""/>\n+                </Trigger>\n+            </Style.Triggers>\n+        </Style>\n+        <Style x:Key=""primaryButton"" TargetType=""Button"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""White""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""Padding"" Value=""0,5,0,5""/>\n+            <Setter Property=""BorderThickness"" Value=""0""/>\n+            <Setter Property=""Background"" Value=""#0078D7""/>\n+            <Setter Property=""Margin"" Value=""16,10,0,0"" />\n+            <Setter Property=""Width"" Value=""239""/>\n+            <Setter Property=""Height"" Value=""32""/>\n+            <Setter Property=""Template"">\n+                <Setter.Value>\n+                    <ControlTemplate TargetType=""{x:Type Button}"">\n+                        <Border Background=""{TemplateBinding Background}"">\n+                            <ContentPresenter HorizontalAlignment=""Center"" VerticalAlignment=""Center""/>\n+                        </Border>\n+                    </ControlTemplate>\n+                </Setter.Value>\n+            </Setter>\n+            <Style.Triggers>\n+                <Trigger Property=""IsMouseOver"" Value=""True"">\n+                    <Setter Property=""Background"" Value=""#024D89""/>\n+                </Trigger>\n+            </Style.Triggers>\n+        </Style>\n+        <Style x:Key=""spinnerButton"" TargetType=""Button"">\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\n+            <Setter Property=""Foreground"" Value=""Black""/>\n+            <Setter Property=""FontSize"" Value=""24""/>\n+            <Setter Property=""Padding"" Value=""0,0,0,5""/>\n+            <Setter Property=""BorderThickness"" Value=""0""/>\n+            <Setter Property=""Background"" Value=""#F2F2F2""/>\n+            <Setter Property=""Margin"" Value=""0,0,0,0"" />\n+        </Style>\n+        <Style x:Key=""templateBackground"" TargetType=""Rectangle"">\n+            <Setter Property=""Fill"" Value=""Black""/>\n+            <Setter Property=""Opacity"" Value=""0.05""/>\n+            <Setter Property=""RadiusX"" Value=""4""/>\n+            <Setter Property=""RadiusY"" Value=""4""/>\n+        </Style>\n+        <Style x:Key=""templateBackgroundSelected"" TargetType=""Rectangle"">\n+            <Setter Property=""Fill"" Value=""#F2F2F2""/>\n+            <Setter Property=""Opacity"" Value=""1""/>\n+            <Setter Property=""RadiusX"" Value=""4""/>\n+            <Setter Property=""RadiusY"" Value=""4""/>\n+            <Setter Property=""Stroke"" Value=""#0078D7""/>\n+            <Setter Property=""StrokeThickness"" Value=""2""/>\n+        </Style>\n+        <Style x:Key=""newZoneButton"" TargetType=""Button"">\n+            <Setter Property=""Background"" Value=""#f2f2f2""/>\n+            <Setter Property=""BorderThickness"" Value=""0""/>\n+            <Setter Property=""FontFamily"" Value=""SegoeUI""/>\n+            <Setter Property=""FontWeight"" Value=""Light""/>\n+            <Setter Property=""FontSize"" Value=""120""/>\n+            <Setter Property=""VerticalAlignment"" Value=""Center""/>\n+        </Style>\n+        <Style x:Key=""textLabel"" TargetType=""TextBlock"">\n+            <Setter Property=""FontFamily"" Value=""SegoeUI""/>\n+            <Setter Property=""FontWeight"" Value=""Regular""/>\n+            <Setter Property=""FontSize"" Value=""12""/>\n+            <Setter Property=""Margin"" Value=""16,12,0,0""/>\n+        </Style>\n+        <Style x:Key=""textBox"" TargetType=""TextBox"">\n+            <Setter Property=""BorderBrush"" Value=""#cccccc""/>\n+            <Setter Property=""BorderThickness"" Value=""1""/>\n+            <Setter Property=""FontFamily"" Value=""SegoeUI""/>\n+            <Setter Property=""FontWeight"" Value=""Regular""/>\n+            <Setter Property=""FontSize"" Value=""14""/>\n+            <Setter Property=""VerticalAlignment"" Value=""Center""/>\n+            <Setter Property=""Margin"" Value=""0,5,0,0""/>\n+            <Setter Property=""Padding"" Value=""5,5,5,5""/>\n+        </Style>\n+\n+    </Window.Resources>\n+    <StackPanel>\n+        <TextBlock Name=""windowEditorDialogTitle"" Text=""Custom table layout creator"" Style=""{StaticResource titleText}""  />\n+\n+        <TextBlock Text=""Note: Hold down Shift Key to change orientation of splitter"" Style=""{StaticResource textLabel}"" />\n+        <TextBlock Text=""Name"" Style=""{StaticResource textLabel}"" />\n+        <TextBox Text=""{Binding Name}"" Width=""494"" Style=""{StaticResource textBox}"" />\n+<!--        \n+        <StackPanel Orientation=""Horizontal"" Margin=""0,8,0,0"">\n+            <CheckBox x:Name=""showGridSetting"" VerticalAlignment=""Center"" HorizontalAlignment=""Center"" IsChecked=""True"" Margin=""21,4,0,0""/>\n+            <TextBlock Text=""Show snap grid"" Style=""{StaticResource settingText}"" />\n+            <TextBlock Text=""Grid spacing"" Style=""{StaticResource settingText}"" Margin=""40,10,10,0"" />\n+            <TextBox x:Name=""gridValue"" Text=""{Binding Path=Spacing,Mode=TwoWay}"" Style=""{StaticResource textBox}""/>\n+        </StackPanel>\n+-->        \n+        <StackPanel Orientation=""Horizontal"" Margin=""0,12,0,16"">\n+            <Button Content=""Cancel"" Style=""{StaticResource secondaryButton}"" Click=""OnCancel"" />\n+            <Button Content=""Save and apply"" Style=""{StaticResource primaryButton}"" Click=""OnSaveApplyTemplate"" />\n+        </StackPanel>\n+    </StackPanel>\n+</local:EditorWindow>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/GridEditorWindow.xaml.cs', 'Line Additions': 29, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,29 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Shapes;\n+using FancyZonesEditor.Models;\n+using MahApps.Metro.Controls;\n+\n+namespace FancyZonesEditor\n+{\n+    /// <summary>\n+    /// Interaction logic for Window2.xaml\n+    /// </summary>\n+    public partial class GridEditorWindow : EditorWindow\n+    {\n+        public GridEditorWindow()\n+        {\n+            InitializeComponent();\n+        }\n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/GridResizer.xaml', 'Line Additions': 18, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,18 @@\n+\ufeff<Thumb x:Class=""FancyZonesEditor.GridResizer""\n+             xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n+             xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n+             xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006"" \n+             xmlns:d=""http://schemas.microsoft.com/expression/blend/2008"" \n+             xmlns:local=""clr-namespace:FancyZonesEditor""\n+             mc:Ignorable=""d"" \n+             d:DesignHeight=""300"" d:DesignWidth=""300"">\n+    <Thumb.Template>\n+        <ControlTemplate>\n+            <StackPanel x:Name=""Body"" Grid.Column=""0"" Width=""48"" Height=""48"">\n+                <Ellipse Height=""48"" Width=""48"" Fill=""#0078D7"" />\n+                <Rectangle Height=""20"" Width=""2"" Fill=""White"" Margin=""5,-48,0,0""/>\n+                <Rectangle Height=""20"" Width=""2"" Fill=""White"" Margin=""-5,-48,0,0""/>\n+            </StackPanel>\n+        </ControlTemplate>\n+    </Thumb.Template>\n+</Thumb>'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/GridResizer.xaml.cs', 'Line Additions': 62, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,62 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Controls.Primitives;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Navigation;\n+using System.Windows.Shapes;\n+using FancyZonesEditor.Models;\n+\n+namespace FancyZonesEditor\n+{\n+    /// <summary>\n+    /// Interaction logic for GridResizer.xaml\n+    /// </summary>\n+    public partial class GridResizer : Thumb\n+    {\n+        public GridResizer()\n+        {\n+            InitializeComponent();\n+        }\n+\n+        public Orientation Orientation\n+        {\n+            get\n+            {\n+                return _orientation;\n+            }\n+            set\n+            {\n+                _orientation = value;\n+                ApplyTemplate();\n+                StackPanel body = (StackPanel)Template.FindName(""Body"", this);\n+                if (value == Orientation.Vertical)\n+                {\n+                    body.RenderTransform = null;\n+                    body.Cursor = Cursors.SizeWE;\n+                }\n+                else\n+                {\n+                    body.RenderTransform = c_rotateTransform;\n+                    body.Cursor = Cursors.SizeNS;\n+                }\n+            }\n+        }\n+\n+        private static RotateTransform c_rotateTransform = new RotateTransform(90, 24, 24);\n+    \n+        public int Index;\n+        public LayoutModel Model;\n+\n+        private Orientation _orientation;\n+        \n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/GridZone.xaml', 'Line Additions': 15, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,15 @@\n+\ufeff<UserControl x:Class=""FancyZonesEditor.GridZone""\n+             xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n+             xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n+             xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006"" \n+             xmlns:d=""http://schemas.microsoft.com/expression/blend/2008"" \n+             xmlns:local=""clr-namespace:FancyZonesEditor""\n+             mc:Ignorable=""d"" \n+            Background=""LightGray""\n+              Opacity=""0.5""\n+             d:DesignHeight=""450"" d:DesignWidth=""800"">\n+    <Grid x:Name=""Frame"" Visibility=""Collapsed"">\n+        <Canvas x:Name=""Body"" />\n+        <!--<TextBlock Margin=""2"" Text=""Shift Key switches direction&#13;Ctrl  Key repeats""/>-->\n+    </Grid>\n+</UserControl>'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/GridZone.xaml.cs', 'Line Additions': 309, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,309 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Navigation;\n+using System.Windows.Shapes;\n+\n+namespace FancyZonesEditor\n+{\n+    /// <summary>\n+    /// Once you\'ve ""Committ""ed the starter grid, then the Zones within the grid come to life for you to be able to further subdivide them \n+    /// using splitters\n+    /// </summary>\n+\n+    public partial class GridZone : UserControl\n+    {\n+        public static readonly DependencyProperty IsSelectedProperty = DependencyProperty.Register(""IsSelected"", typeof(bool), typeof(GridZone), new PropertyMetadata(false, OnSelectionChanged));\n+\n+        private static void OnSelectionChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n+        {\n+            ((GridZone)d).OnSelectionChanged();\n+        }\n+        private void OnSelectionChanged()\n+        {\n+            Background = IsSelected ? Brushes.SteelBlue : Brushes.LightGray;\n+        }\n+\n+        public bool IsSelected\n+        {\n+            get { return (bool)GetValue(IsSelectedProperty); }\n+            set { SetValue(IsSelectedProperty, value); }\n+        }\n+\n+\n+        public double[] VerticalSnapPoints;\n+        public double[] HorizontalSnapPoints;\n+\n+\n+\n+        public GridZone()\n+        {\n+            InitializeComponent();\n+            OnSelectionChanged();\n+            _splitter = new Rectangle();\n+            _splitter.Fill = Brushes.DarkGray;\n+            Body.Children.Add(_splitter);\n+\n+            ((App) Application.Current).ZoneSettings.PropertyChanged += ZoneSettings_PropertyChanged;\n+        }\n+\n+        private void ZoneSettings_PropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)\n+        {\n+            if (e.PropertyName == ""IsShiftKeyPressed"")\n+            {\n+                _switchOrientation = ((App)Application.Current).ZoneSettings.IsShiftKeyPressed;\n+                if (_lastPos.X != -1)\n+                {\n+                    UpdateSplitter();\n+                }\n+            }\n+        }\n+        protected override Size ArrangeOverride(Size size)  \n+        {\n+            _splitOrientation = (size.Width > size.Height) ? Orientation.Vertical : Orientation.Horizontal;\n+            return base.ArrangeOverride(size);\n+        }\n+\n+        private bool IsVerticalSplit\n+        {\n+            get\n+            {\n+                bool isVertical = _splitOrientation == Orientation.Vertical;\n+                if (_switchOrientation)\n+                {\n+                    isVertical = !isVertical;\n+                }\n+                return isVertical;\n+            }\n+        }\n+\n+        private int SplitterThickness {  get { return Math.Max(((App)Application.Current).ZoneSettings.Spacing, 5); } }\n+\n+        private void UpdateSplitter()\n+        { \n+            int thickness = SplitterThickness;\n+\n+            if (IsVerticalSplit)\n+            {\n+                double bodyWidth = Body.ActualWidth;\n+                double pos = _lastPos.X - thickness/2;\n+                if (pos < 0)\n+                {\n+                    pos = 0;\n+                }\n+                else if (pos > (bodyWidth - thickness))\n+                {\n+                    pos = bodyWidth - thickness;\n+                }\n+\n+                Canvas.SetLeft(_splitter, pos);\n+                Canvas.SetTop(_splitter, 0);\n+                _splitter.MinWidth = thickness;\n+                _splitter.MinHeight = Body.ActualHeight;\n+            }\n+            else\n+            {\n+                double bodyHeight = Body.ActualHeight;\n+                double pos = _lastPos.Y - thickness / 2;\n+                if (pos < 0)\n+                {\n+                    pos = 0;\n+                }\n+                else if (pos > (bodyHeight - thickness))\n+                {\n+                    pos = bodyHeight - thickness;\n+                }\n+                Canvas.SetLeft(_splitter, 0);\n+                Canvas.SetTop(_splitter, pos);\n+                _splitter.MinWidth = Body.ActualWidth;\n+                _splitter.MinHeight = thickness;\n+            }\n+        }\n+\n+        protected override void OnMouseEnter(MouseEventArgs e)\n+        {\n+            Frame.Visibility = Visibility.Visible;\n+            base.OnMouseEnter(e);\n+        }\n+\n+        protected override void OnMouseLeave(MouseEventArgs e)\n+        {\n+            Frame.Visibility = Visibility.Collapsed;\n+            base.OnMouseLeave(e);\n+        }\n+\n+        protected override void OnMouseDown(MouseButtonEventArgs e)\n+        {\n+            _mouseDownPos = _lastPos;\n+            base.OnMouseDown(e);\n+        }\n+\n+        protected override void OnMouseMove(MouseEventArgs e)\n+        {\n+            if (_inMergeDrag)\n+            {\n+                DoMergeDrag(e);\n+            }\n+            else\n+            {\n+                _lastPos = e.GetPosition(Body);\n+\n+                if (IsVerticalSplit)\n+                {\n+                    if (VerticalSnapPoints != null)\n+                    {\n+                        int thickness = SplitterThickness;\n+                        foreach (double snapPoint in VerticalSnapPoints)\n+                        {\n+                            if (Math.Abs(_lastPos.X - snapPoint) <= (thickness * 2))\n+                            {\n+                                _lastPos.X = snapPoint;\n+                                break;\n+                            }\n+                        }\n+                    }\n+                }\n+                else // horizontal split\n+                {\n+                    if (HorizontalSnapPoints != null)\n+                    {\n+                        int thickness = SplitterThickness;\n+                        foreach (double snapPoint in HorizontalSnapPoints)\n+                        {\n+                            if (Math.Abs(_lastPos.Y - snapPoint) <= (thickness * 2))\n+                            {\n+                                _lastPos.Y = snapPoint;\n+                                break;\n+                            }\n+                        }\n+                    }\n+                }\n+\n+                if (_mouseDownPos.X == -1)\n+                {\n+                    UpdateSplitter();\n+                }\n+                else\n+                {\n+                    double threshold = SplitterThickness / 2;\n+                    if ((Math.Abs(_mouseDownPos.X - _lastPos.X) > threshold) || (Math.Abs(_mouseDownPos.Y - _lastPos.Y) > threshold))\n+                    {\n+                        // switch to merge (which is handled by parent GridEditor)\n+                        _inMergeDrag = true;\n+                        Mouse.Capture(this, CaptureMode.Element);\n+                        DoMergeDrag(e);\n+                        _splitter.Visibility = Visibility.Hidden;\n+                    }\n+                }\n+            }\n+            base.OnMouseMove(e);\n+        }\n+\n+        protected override void OnMouseUp(MouseButtonEventArgs e)\n+        {\n+            if (_inMergeDrag)\n+            {\n+                Mouse.Capture(this, CaptureMode.None);\n+                DoMergeComplete(e);\n+                _inMergeDrag = false;\n+                _splitter.Visibility = Visibility.Visible;\n+            }\n+            else\n+            {\n+                int thickness = SplitterThickness;\n+\n+                double delta = IsVerticalSplit ? _mouseDownPos.X - _lastPos.X : _mouseDownPos.Y - _lastPos.Y;\n+                if (Math.Abs(delta) <= thickness / 2)\n+                {\n+                    if (IsVerticalSplit)\n+                    {\n+                        DoSplit(Orientation.Vertical, _lastPos.X - (thickness / 2));\n+                    }\n+                    else\n+                    {\n+                        DoSplit(Orientation.Horizontal, _lastPos.Y - (thickness / 2));\n+                    }\n+                }\n+            }\n+            _mouseDownPos = new Point(-1, -1);\n+            base.OnMouseUp(e);\n+        }\n+\n+        public event SplitEventHandler Split;\n+        public event SplitEventHandler FullSplit;\n+        public event MouseEventHandler MergeDrag;\n+        public event MouseButtonEventHandler MergeComplete;\n+\n+\n+        private Rectangle _splitter;\n+        private bool _switchOrientation = false;\n+        private Point _lastPos = new Point(-1,-1);\n+        private Point _mouseDownPos = new Point(-1,-1);\n+        private bool _inMergeDrag = false;\n+        private Orientation _splitOrientation;\n+\n+        private void DoMergeDrag(MouseEventArgs e)\n+        {\n+            if (MergeDrag != null)\n+            {\n+                MergeDrag(this, e);\n+            }\n+        }\n+\n+        private void DoMergeComplete(MouseButtonEventArgs e)\n+        {\n+            if (MergeComplete != null)\n+            {\n+                MergeComplete(this, e);\n+            }\n+        }\n+\n+        private void DoSplit(Orientation orientation, double offset)\n+        {\n+            if (Split != null)\n+            {\n+                Split(this, new SplitEventArgs(orientation, offset));\n+            }\n+        }\n+\n+        private void FullSplit_Click(object sender, RoutedEventArgs e)\n+        {\n+            DoFullSplit();\n+        }\n+\n+        private void DoFullSplit()\n+        {\n+            if (FullSplit != null)\n+            {\n+                FullSplit(this, new SplitEventArgs());\n+            }\n+        }\n+    }\n+\n+    public class SplitEventArgs : EventArgs\n+    {\n+        public SplitEventArgs() { }\n+        public SplitEventArgs(Orientation orientation, double offset)\n+        {\n+            _orientation = orientation;\n+            _offset = offset;\n+        }\n+\n+        public Orientation Orientation { get { return _orientation; } }\n+        public double Offset { get { return _offset;  } }\n+\n+        private Orientation _orientation;\n+        private double _offset;\n+    }\n+\n+    public delegate void SplitEventHandler(object sender, SplitEventArgs args);\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/LayoutPreview.xaml', 'Line Additions': 13, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,13 @@\n+\ufeff<UserControl x:Class=""FancyZonesEditor.LayoutPreview""\n+             xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n+             xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n+             xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006"" \n+             xmlns:d=""http://schemas.microsoft.com/expression/blend/2008"" \n+             xmlns:local=""clr-namespace:FancyZonesEditor""\n+             mc:Ignorable=""d"" \n+             Loaded=""OnLoaded""\n+             d:DesignHeight=""450"" d:DesignWidth=""800"">\n+    <Grid x:Name=""Body"">\n+            \n+    </Grid>\n+</UserControl>'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/LayoutPreview.xaml.cs', 'Line Additions': 192, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,192 @@\n+\ufeffusing FancyZonesEditor.Models;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Navigation;\n+using System.Windows.Shapes;\n+\n+namespace FancyZonesEditor\n+{\n+    /// <summary>\n+    /// Interaction logic for LayoutPreview.xaml\n+    /// </summary>\n+    public partial class LayoutPreview : UserControl\n+    {\n+        public static readonly DependencyProperty IsActualSizeProperty = DependencyProperty.Register(""IsActualSize"", typeof(bool), typeof(LayoutPreview), new PropertyMetadata(false));\n+        public LayoutPreview()\n+        {\n+            InitializeComponent();\n+            DataContextChanged += LayoutPreview_DataContextChanged;\n+            ((App)Application.Current).ZoneSettings.PropertyChanged += ZoneSettings_PropertyChanged;\n+        }\n+\n+        private void LayoutPreview_DataContextChanged(object sender, DependencyPropertyChangedEventArgs e)\n+        {\n+            _model = (LayoutModel)DataContext;\n+            RenderPreview();\n+        }\n+\n+        public bool IsActualSize\n+        {\n+            get { return (bool)GetValue(IsActualSizeProperty); }\n+            set { SetValue(IsActualSizeProperty, value); }\n+        }\n+\n+        private void ZoneSettings_PropertyChanged(object sender, System.ComponentModel.PropertyChangedEventArgs e)\n+        {\n+            if (e.PropertyName == ""ZoneCount"")\n+            {\n+                RenderPreview();\n+            }\n+            else if ((e.PropertyName == ""ShowSpacing"") || (e.PropertyName == ""Spacing""))\n+            {\n+                if (IsActualSize)\n+                {\n+                    Settings settings = ((App)Application.Current).ZoneSettings;\n+                    Body.Margin = new Thickness(settings.ShowSpacing ? settings.Spacing / 2 : 0);\n+                }\n+                else\n+                {\n+                    Body.Margin = new Thickness(0);\n+                }\n+                if (_model is GridLayoutModel)\n+                {\n+                    RenderPreview();\n+                }\n+            }\n+        }\n+\n+        public Panel PreviewPanel {  get { return Body; } }\n+\n+        private void OnLoaded(object sender, RoutedEventArgs e)\n+        {\n+            _model = (LayoutModel)DataContext;\n+\n+            RenderPreview();\n+        }\n+\n+        private void RenderPreview()\n+        { \n+            if (_model == null)\n+            {\n+                return;\n+            }\n+\n+            Body.Children.Clear();\n+\n+            GridLayoutModel gridModel = _model as GridLayoutModel;\n+            if (gridModel != null)\n+            {\n+                RenderGridPreview(gridModel);\n+            }\n+            else\n+            {\n+                CanvasLayoutModel canvasModel = _model as CanvasLayoutModel;\n+                if (canvasModel != null)\n+                {\n+                    RenderCanvasPreview(canvasModel);\n+                }\n+            }\n+        }\n+\n+        private void RenderGridPreview(GridLayoutModel grid)\n+        {\n+            Body.RowDefinitions.Clear();\n+            foreach (int percent in grid.RowPercents)\n+            {\n+                RowDefinition def = new RowDefinition();\n+                def.Height = new GridLength(percent, GridUnitType.Star);\n+                Body.RowDefinitions.Add(def);\n+            }\n+\n+            Body.ColumnDefinitions.Clear();\n+            foreach (int percent in grid.ColumnPercents)\n+            {\n+                ColumnDefinition def = new ColumnDefinition();\n+                def.Width = new GridLength(percent, GridUnitType.Star);\n+                Body.ColumnDefinitions.Add(def);\n+            }\n+\n+            Settings settings = ((App) Application.Current).ZoneSettings;\n+            int divisor = IsActualSize ? 2 : 20;\n+            Thickness margin = new Thickness(settings.ShowSpacing ? settings.Spacing / divisor : 0);\n+\n+            List<int> visited = new List<int>();\n+\n+            for (int row = 0; row < grid.Rows; row++)\n+            {\n+                for (int col = 0; col < grid.Columns; col++)\n+                {\n+                    int childIndex = grid.CellChildMap[row,col];\n+                    if (!visited.Contains(childIndex))\n+                    {\n+                        visited.Add(childIndex);\n+                        Rectangle rect = new Rectangle();\n+                        Grid.SetRow(rect, row);\n+                        Grid.SetColumn(rect, col);\n+                        int span = 1;\n+                        int walk = row + 1;\n+                        while ((walk < grid.Rows) && grid.CellChildMap[walk,col] == childIndex)\n+                        {\n+                            span++;\n+                            walk++;\n+                        }\n+                        Grid.SetRowSpan(rect, span);\n+\n+                        span = 1;\n+                        walk = col + 1;\n+                        while ((walk < grid.Columns) && grid.CellChildMap[row, walk] == childIndex)\n+                        {\n+                            span++;\n+                            walk++;\n+                        }\n+                        Grid.SetColumnSpan(rect, span);\n+\n+                        rect.Margin = margin;\n+                        rect.StrokeThickness = 1;\n+                        rect.Stroke = Brushes.DarkGray;\n+                        rect.Fill = Brushes.LightGray;\n+                        Body.Children.Add(rect);\n+                    }\n+                }\n+            }\n+        }\n+\n+        private void RenderCanvasPreview(CanvasLayoutModel canvas)\n+        {\n+            Body.RowDefinitions.Clear();\n+            Body.ColumnDefinitions.Clear();\n+\n+            Viewbox viewbox = new Viewbox();\n+            viewbox.Stretch = Stretch.Uniform;\n+            Body.Children.Add(viewbox);\n+            Canvas frame = new Canvas();\n+            viewbox.Child = frame;\n+            frame.Width = canvas.ReferenceWidth;\n+            frame.Height = canvas.ReferenceHeight;\n+            foreach (Int32Rect zone in canvas.Zones)\n+            {\n+                Rectangle rect = new Rectangle();\n+                Canvas.SetTop(rect, zone.Y);\n+                Canvas.SetLeft(rect, zone.X);\n+                rect.MinWidth = zone.Width;\n+                rect.MinHeight = zone.Height;\n+                rect.StrokeThickness = 5;\n+                rect.Stroke = Brushes.DarkGray;\n+                rect.Fill = Brushes.LightGray;\n+                frame.Children.Add(rect);\n+            }\n+        }\n+\n+        private LayoutModel _model;\n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/MainWindow.xaml', 'Line Additions': 277, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,277 @@\n+\ufeff<Controls:MetroWindow x:Class=""FancyZonesEditor.MainWindow""\r\n+        xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\r\n+        xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\r\n+        xmlns:d=""http://schemas.microsoft.com/expression/blend/2008""\r\n+        xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006""\r\n+        xmlns:Controls=""clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro""\r\n+        xmlns:local=""clr-namespace:FancyZonesEditor""\r\n+        mc:Ignorable=""d""\r\n+        Title="""" Width=""810""\r\n+        SizeToContent=""Height""\r\n+        Background=""White""\r\n+        ResizeMode=""NoResize""\r\n+        WindowStartupLocation=""CenterScreen""\r\n+        Loaded=""OnLoaded""\r\n+        Closed=""OnClosed"">\r\n+    <Window.Resources>\r\n+        <local:BooleanToBrushConverter x:Key=""BooleanToBrushConverter"" />\r\n+        <local:ModelToVisibilityConverter x:Key=""ModelToVisibilityConverter"" />\r\n+\r\n+        <Style x:Key=""titleText"" TargetType=""TextBlock"">\r\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\r\n+            <Setter Property=""FontWeight"" Value=""Bold"" />\r\n+            <Setter Property=""LineHeight"" Value=""24"" />\r\n+            <Setter Property=""FontSize"" Value=""18""/>\r\n+            <Setter Property=""Margin"" Value=""16,20,0,0"" />\r\n+        </Style>\r\n+        <Style x:Key=""zoneCount"" TargetType=""TextBlock"">\r\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\r\n+            <Setter Property=""FontWeight"" Value=""Regular"" />\r\n+            <Setter Property=""FontSize"" Value=""24""/>\r\n+            <Setter Property=""LineHeight"" Value=""24"" />\r\n+            <Setter Property=""Margin"" Value=""20,0,20,0"" />\r\n+            <Setter Property=""HorizontalAlignment"" Value=""Center""/>\r\n+            <Setter Property=""VerticalAlignment"" Value=""Center""/>\r\n+        </Style>\r\n+        <Style x:Key=""tabText"" TargetType=""TextBlock"">\r\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\r\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\r\n+            <Setter Property=""Foreground"" Value=""#C4C4C4""/>\r\n+            <Setter Property=""FontSize"" Value=""14""/>\r\n+            <Setter Property=""LineHeight"" Value=""20"" />\r\n+            <Setter Property=""Margin"" Value=""24,20,0,0"" />\r\n+            <Setter Property=""TextAlignment"" Value=""Center"" />\r\n+        </Style>\r\n+        <Style x:Key=""settingText"" TargetType=""TextBlock"">\r\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\r\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\r\n+            <Setter Property=""Foreground"" Value=""Black""/>\r\n+            <Setter Property=""FontSize"" Value=""14""/>\r\n+            <Setter Property=""LineHeight"" Value=""20"" />\r\n+            <Setter Property=""Margin"" Value=""40,10,0,0"" />\r\n+            <Setter Property=""TextAlignment"" Value=""Left"" />\r\n+        </Style>\r\n+        <Style x:Key=""settingCheckBoxText"" TargetType=""CheckBox"">\r\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\r\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\r\n+            <Setter Property=""Foreground"" Value=""Black""/>\r\n+            <Setter Property=""FontSize"" Value=""14""/>\r\n+            <Setter Property=""Margin"" Value=""5,10,0,0"" />\r\n+        </Style>\r\n+        <Style x:Key=""templateTitleText"" TargetType=""TextBlock"">\r\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\r\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\r\n+            <Setter Property=""Foreground"" Value=""Black""/>\r\n+            <Setter Property=""FontSize"" Value=""14""/>\r\n+            <Setter Property=""TextAlignment"" Value=""Center"" />\r\n+            <Setter Property=""VerticalAlignment"" Value=""Center""/>\r\n+        </Style>\r\n+        <Style x:Key=""secondaryButton"" TargetType=""Button"">\r\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\r\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\r\n+            <Setter Property=""Foreground"" Value=""Black""/>\r\n+            <Setter Property=""FontSize"" Value=""14""/>\r\n+            <Setter Property=""Padding"" Value=""0,5,0,5""/>\r\n+            <Setter Property=""BorderThickness"" Value=""0""/>\r\n+            <Setter Property=""Background"" Value=""#F2F2F2""/>\r\n+            <Setter Property=""Margin"" Value=""16,0,0,0"" />\r\n+            <Setter Property=""Width"" Value=""378""/>\r\n+            <Setter Property=""Height"" Value=""32""/>\r\n+            <Setter Property=""Template"">\r\n+                <Setter.Value>\r\n+                    <ControlTemplate TargetType=""{x:Type Button}"">\r\n+                        <Border Background=""{TemplateBinding Background}"">\r\n+                            <ContentPresenter HorizontalAlignment=""Center"" VerticalAlignment=""Center""/>\r\n+                        </Border>\r\n+                    </ControlTemplate>\r\n+                </Setter.Value>\r\n+            </Setter>\r\n+            <Style.Triggers>\r\n+                <Trigger Property=""IsMouseOver"" Value=""True"">\r\n+                    <Setter Property=""Background"" Value=""#BCBCBD""/>\r\n+                </Trigger>\r\n+            </Style.Triggers>\r\n+        </Style>\r\n+        <Style x:Key=""primaryButton"" TargetType=""Button"">\r\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\r\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\r\n+            <Setter Property=""Foreground"" Value=""White""/>\r\n+            <Setter Property=""FontSize"" Value=""14""/>\r\n+            <Setter Property=""Padding"" Value=""0,5,0,5""/>\r\n+            <Setter Property=""BorderThickness"" Value=""0""/>\r\n+            <Setter Property=""Background"" Value=""#0078D7""/>\r\n+            <Setter Property=""Margin"" Value=""16,0,16,0"" />\r\n+            <Setter Property=""Width"" Value=""377""/>\r\n+            <Setter Property=""Height"" Value=""32""/>\r\n+            <Setter Property=""Template"">\r\n+                <Setter.Value>\r\n+                    <ControlTemplate TargetType=""{x:Type Button}"">\r\n+                        <Border Background=""{TemplateBinding Background}"">\r\n+                            <ContentPresenter HorizontalAlignment=""Center"" VerticalAlignment=""Center""/>\r\n+                        </Border>\r\n+                    </ControlTemplate>\r\n+                </Setter.Value>\r\n+            </Setter>\r\n+            <Style.Triggers>\r\n+                <Trigger Property=""IsMouseOver"" Value=""True"">\r\n+                    <Setter Property=""Background"" Value=""#024D89""/>\r\n+                </Trigger>\r\n+            </Style.Triggers>\r\n+        </Style>\r\n+        <Style x:Key=""spinnerButton"" TargetType=""Button"">\r\n+            <Setter Property=""FontFamily"" Value=""Segoe UI"" />\r\n+            <Setter Property=""FontWeight"" Value=""SemiBold"" />\r\n+            <Setter Property=""Foreground"" Value=""Black""/>\r\n+            <Setter Property=""FontSize"" Value=""24""/>\r\n+            <Setter Property=""Padding"" Value=""0,0,0,5""/>\r\n+            <Setter Property=""BorderThickness"" Value=""0""/>\r\n+            <Setter Property=""Background"" Value=""#F2F2F2""/>\r\n+            <Setter Property=""Margin"" Value=""0,0,0,0"" />\r\n+        </Style>\r\n+        <Style x:Key=""newLayoutButton"" TargetType=""Button"">\r\n+            <Setter Property=""Background"" Value=""#f2f2f2""/>\r\n+            <Setter Property=""BorderThickness"" Value=""0""/>\r\n+            <Setter Property=""FontFamily"" Value=""SegoeUI""/>\r\n+            <Setter Property=""FontWeight"" Value=""Light""/>\r\n+            <Setter Property=""FontSize"" Value=""148""/>\r\n+        </Style>\r\n+        <Style x:Key=""textBox"" TargetType=""TextBox"">\r\n+            <Setter Property=""BorderBrush"" Value=""#cccccc""/>\r\n+            <Setter Property=""BorderThickness"" Value=""1""/>\r\n+            <Setter Property=""FontFamily"" Value=""SegoeUI""/>\r\n+            <Setter Property=""FontWeight"" Value=""Regular""/>\r\n+            <Setter Property=""FontSize"" Value=""14""/>\r\n+            <Setter Property=""VerticalAlignment"" Value=""Center""/>\r\n+            <Setter Property=""Margin"" Value=""16,6,0,0""/>\r\n+            <Setter Property=""Padding"" Value=""5,5,5,5""/>\r\n+        </Style>\r\n+        \r\n+        <Style x:Key=""templateBackground"" TargetType=""Border"">\r\n+            <Setter Property=""Background"" Value=""#F2F2F2""/>\r\n+            <Setter Property=""CornerRadius"" Value=""4""/>\r\n+            <Setter Property=""BorderThickness"" Value=""2""/>\r\n+        </Style>\r\n+\r\n+        <ControlTemplate x:Key=""myTabs"">\r\n+            <Grid Width=""404"">\r\n+                <Grid.RowDefinitions>\r\n+                    <RowDefinition Height=""40""/>\r\n+                    <RowDefinition Height=""2""/>\r\n+                </Grid.RowDefinitions>\r\n+                <TextBlock Grid.Row=""0"" Name=""myTabText"" Text=""{TemplateBinding TabItem.Header}"" Style=""{StaticResource tabText}""  />\r\n+                <Rectangle Grid.Row=""1"" x:Name=""myTabLine"" Fill=""#F2F2F2"" Height=""1""/>\r\n+            </Grid>\r\n+            <ControlTemplate.Triggers>\r\n+                <Trigger Property=""TabItem.IsSelected"" Value=""True"">\r\n+                    <Setter TargetName=""myTabText"" Property=""Foreground"" Value=""#2A79D7""/>\r\n+                    <Setter TargetName=""myTabLine"" Property=""Fill"" Value=""#2A79D7"" />\r\n+                    <Setter TargetName=""myTabLine"" Property=""Height"" Value=""2""/>\r\n+                </Trigger>\r\n+            </ControlTemplate.Triggers>\r\n+        </ControlTemplate>\r\n+    </Window.Resources>\r\n+    \r\n+    <StackPanel>\r\n+\r\n+        <TextBlock Name=""dialog_Title"" Text=""Choose your layout"" Style=""{StaticResource titleText}""  />\r\n+\r\n+\r\n+        <TabControl BorderThickness=""0"" x:Name=""TemplateTab"">\r\n+            <TabItem Header=""Templates"" Template=""{StaticResource myTabs}"">\r\n+                <StackPanel>\r\n+                    <StackPanel Margin=""0,15,0,8"" Orientation=""Horizontal"" HorizontalAlignment=""Center"">\r\n+                        <Button x:Name=""decrementZones"" Width=""40"" Height=""40"" Content=""-"" Style=""{StaticResource spinnerButton}"" Click=""DecrementZones_Click""/>\r\n+                        <TextBlock x:Name=""zoneCount"" Text=""{Binding ZoneCount}"" Style=""{StaticResource zoneCount}""/>\r\n+                        <Button x:Name=""incrementZones"" Width=""40"" Height=""40"" Content=""+"" Style=""{StaticResource spinnerButton}"" Click=""IncrementZones_Click""/>\r\n+                    </StackPanel>\r\n+                    <ItemsControl ItemsSource=""{Binding DefaultModels}"" Margin=""8,0,0,0"">\r\n+                        <ItemsControl.ItemsPanel>\r\n+                            <ItemsPanelTemplate>\r\n+                                <WrapPanel Orientation=""Horizontal"" ItemWidth=""262"" ItemHeight=""262"" />\r\n+                            </ItemsPanelTemplate>\r\n+                        </ItemsControl.ItemsPanel>\r\n+                        <ItemsControl.ItemTemplate>\r\n+                            <DataTemplate>\r\n+                                <Border Margin=""8"" \r\n+                                        BorderBrush=""{Binding Path=IsSelected, Converter={StaticResource BooleanToBrushConverter}}"" \r\n+                                        Style=""{StaticResource templateBackground}"" \r\n+                                        MouseDown=""LayoutItem_Click"">\r\n+                                    <DockPanel Margin=""0,20,0,0"" \r\n+                                               VerticalAlignment=""Stretch"" \r\n+                                               HorizontalAlignment=""Stretch"" \r\n+                                               LastChildFill=""True"">\r\n+                                        <TextBlock Padding=""8,0,8,0"" \r\n+                                                   TextTrimming=""CharacterEllipsis"" \r\n+                                                   DockPanel.Dock=""Top"" \r\n+                                                   Text=""{Binding Name}"" \r\n+                                                   Style=""{StaticResource templateTitleText}"" />\r\n+                                        <local:LayoutPreview Margin=""16"" VerticalAlignment=""Stretch"" HorizontalAlignment=""Stretch""/>\r\n+                                    </DockPanel>\r\n+                                </Border>\r\n+                            </DataTemplate>\r\n+                        </ItemsControl.ItemTemplate>\r\n+                    </ItemsControl>\r\n+\r\n+                    <StackPanel Orientation=""Horizontal"" Margin=""10,4,0,8"">\r\n+                        <CheckBox x:Name=""spaceAroundSetting"" Content=""Show space around zones"" Style=""{StaticResource settingCheckBoxText}"" IsChecked=""{Binding ShowSpacing}""/>\r\n+                        <TextBlock Text=""Space around zones"" Style=""{StaticResource settingText}""/>\r\n+                        <TextBox x:Name=""paddingValue"" Text=""{Binding Path=Spacing,Mode=TwoWay}"" Style=""{StaticResource textBox}""/>\r\n+                    </StackPanel>\r\n+                    <StackPanel Orientation=""Horizontal"">\r\n+                        \r\n+\r\n+                    </StackPanel>\r\n+                    <StackPanel Orientation=""Horizontal"" Margin=""0,12,0,16"">\r\n+                        <Button x:Name=""EditTemplateBUtton"" Padding=""8"" Content=""Edit selected layout"" Style=""{StaticResource secondaryButton}"" Click=""EditLayout_Click""/>\r\n+                        <Button x:Name=""ApplyTemplateButton"" Padding=""8"" Content=""Apply"" Style=""{StaticResource primaryButton}"" Click=""Apply_Click""/>\r\n+                    </StackPanel>\r\n+                </StackPanel>\r\n+            </TabItem>\r\n+            \r\n+            \r\n+            <TabItem Header=""Custom"" Template=""{StaticResource myTabs}"">\r\n+                <StackPanel>\r\n+                    <ItemsControl ItemsSource=""{Binding CustomModels}"" Margin=""8,8,0,0"">\r\n+                        <ItemsControl.ItemsPanel>\r\n+                            <ItemsPanelTemplate>\r\n+                                <WrapPanel Orientation=""Horizontal"" ItemWidth=""262"" ItemHeight=""262"" />\r\n+                            </ItemsPanelTemplate>\r\n+                        </ItemsControl.ItemsPanel>\r\n+                        <ItemsControl.ItemTemplate>\r\n+                            <DataTemplate>\r\n+                                <Border Margin=""8""\r\n+                                        BorderBrush=""{Binding Path=IsSelected, Converter={StaticResource BooleanToBrushConverter}}"" \r\n+                                        Style=""{StaticResource templateBackground}"" \r\n+                                        MouseDown=""LayoutItem_Click"">\r\n+                                    <DockPanel Margin=""0,20,0,0"" \r\n+                                               VerticalAlignment=""Stretch"" \r\n+                                               HorizontalAlignment=""Stretch"" \r\n+                                               LastChildFill=""True"">\r\n+                                        <DockPanel DockPanel.Dock=""Top"" LastChildFill=""True"" >\r\n+                                            <Button x:Name=""DeleteButton"" Visibility=""{Binding Converter={StaticResource ModelToVisibilityConverter}}"" DockPanel.Dock=""Right"" MaxHeight=""10"" Click=""OnDelete"" Padding=""8,4,8,4"" Margin=""0,0,8,0"" BorderThickness=""0"" Background=""#f2f2f2"">\r\n+                                                <Image Source=""images/Delete.png"" />\r\n+                                            </Button>\r\n+                                            <TextBlock DockPanel.Dock=""Top"" \r\n+                                                       TextTrimming=""CharacterEllipsis"" Padding=""8,0,8,0""\r\n+                                                       Text=""{Binding Name}"" \r\n+                                                       Style=""{StaticResource templateTitleText}"" />\r\n+                                        </DockPanel>\r\n+                                        <local:LayoutPreview Margin=""16"" VerticalAlignment=""Stretch"" HorizontalAlignment=""Stretch""/>\r\n+                                    </DockPanel>\r\n+                                </Border>\r\n+                            </DataTemplate>\r\n+                        </ItemsControl.ItemTemplate>\r\n+                    </ItemsControl>\r\n+\r\n+                    <StackPanel Orientation=""Horizontal"" Margin=""0,10,0,16"">\r\n+                        <Button x:Name=""EditCustomButton"" Content=""Edit selected layout"" Padding=""8"" Style=""{StaticResource secondaryButton}"" Click=""EditLayout_Click""/>\r\n+                        <Button x:Name=""ApplyCustomButton"" Content=""Apply"" Padding=""8"" Style=""{StaticResource primaryButton}"" Click=""Apply_Click""/>\r\n+                    </StackPanel>\r\n+                </StackPanel>\r\n+            </TabItem>\r\n+        </TabControl>\r\n+        \r\n+\r\n+\r\n+    </StackPanel>\r\n+</Controls:MetroWindow>\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/MainWindow.xaml.cs', 'Line Additions': 218, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,218 @@\n+\ufeffusing System;\r\n+using System.Collections.Generic;\r\n+using System.Linq;\r\n+using System.Runtime.InteropServices;\r\n+using System.Text;\r\n+using System.Threading.Tasks;\r\n+using System.Windows;\r\n+using System.Windows.Controls;\r\n+using System.Windows.Data;\r\n+using System.Windows.Documents;\r\n+using System.Windows.Input;\r\n+using System.Windows.Media;\r\n+using System.Windows.Media.Imaging;\r\n+using System.Windows.Navigation;\r\n+using System.Windows.Shapes;\r\n+using FancyZonesEditor.Models;\r\n+using MahApps.Metro.Controls;\r\n+\r\n+namespace FancyZonesEditor\r\n+{\r\n+    /// <summary>\r\n+    /// Interaction logic for MainWindow.xaml\r\n+    /// </summary>\r\n+    public partial class MainWindow : MetroWindow\r\n+    {\r\n+        public MainWindow()\r\n+        {\r\n+            InitializeComponent();\r\n+            DataContext = _settings;\r\n+        }\r\n+\r\n+        private void DecrementZones_Click(object sender, RoutedEventArgs e)\r\n+        {\r\n+            if (_settings.ZoneCount > 1)\r\n+            {\r\n+                _settings.ZoneCount--;\r\n+            }\r\n+        }\r\n+\r\n+        private void IncrementZones_Click(object sender, RoutedEventArgs e)\r\n+        {\r\n+            if (_settings.ZoneCount < 40)\r\n+            {\r\n+                _settings.ZoneCount++;\r\n+            }\r\n+        }\r\n+\r\n+        private Settings _settings = ((App)Application.Current).ZoneSettings;\r\n+\r\n+        private void NewCustomLayoutButton_Click(object sender, RoutedEventArgs e)\r\n+        {\r\n+            WindowLayout window = new WindowLayout();\r\n+            window.Show();\r\n+            this.Close();\r\n+        }\r\n+\r\n+        private void LayoutItem_Click(object sender, MouseButtonEventArgs e)\r\n+        {\r\n+            Select(((Border)sender).DataContext as LayoutModel);\r\n+        }\r\n+\r\n+        private void Select(LayoutModel newSelection)\r\n+        { \r\n+            LayoutModel currentSelection = EditorOverlay.Current.DataContext as LayoutModel;\r\n+\r\n+            if (currentSelection != null)\r\n+            {\r\n+                currentSelection.IsSelected = false;\r\n+            }\r\n+\r\n+            newSelection.IsSelected = true;\r\n+\r\n+            EditorOverlay.Current.DataContext = newSelection;\r\n+        }\r\n+\r\n+        private static string c_defaultNamePrefix = ""Custom Layout "";\r\n+        private bool _editing = false;\r\n+\r\n+        private void EditLayout_Click(object sender, RoutedEventArgs e)\r\n+        {\r\n+            _editing = true;\r\n+            this.Close();\r\n+\r\n+            EditorOverlay mainEditor = EditorOverlay.Current;\r\n+            LayoutModel model = mainEditor.DataContext as LayoutModel;\r\n+            if (model == null)\r\n+            {\r\n+                mainEditor.Close();\r\n+                return;\r\n+            }\r\n+            model.IsSelected = false;\r\n+\r\n+            bool isPredefinedLayout = Settings.IsPredefinedLayout(model);\r\n+\r\n+            if (!_settings.CustomModels.Contains(model) || isPredefinedLayout)\r\n+            {\r\n+                if (isPredefinedLayout)\r\n+                {\r\n+                    // make a copy\r\n+                    model = model.Clone();\r\n+                    mainEditor.DataContext = model;\r\n+                }\r\n+\r\n+                int maxCustomIndex = 0;\r\n+                foreach (LayoutModel customModel in _settings.CustomModels)\r\n+                {\r\n+                    string name = customModel.Name;\r\n+                    if (name.StartsWith(c_defaultNamePrefix))\r\n+                    {\r\n+                        int i;\r\n+                        if (Int32.TryParse(name.Substring(c_defaultNamePrefix.Length), out i))\r\n+                        {\r\n+                            if (maxCustomIndex < i)\r\n+                            {\r\n+                                maxCustomIndex = i;\r\n+                            }\r\n+                        }\r\n+                    }\r\n+                }\r\n+                model.Name = c_defaultNamePrefix + (++maxCustomIndex);\r\n+            }\r\n+\r\n+            mainEditor.Edit();\r\n+\r\n+            EditorWindow window;\r\n+            if (model is GridLayoutModel)\r\n+            {\r\n+                window = new GridEditorWindow();\r\n+            }\r\n+            else\r\n+            {\r\n+                window = new CanvasEditorWindow();\r\n+            }\r\n+            window.Owner = EditorOverlay.Current;\r\n+            window.DataContext = model;\r\n+            window.Show();\r\n+        }\r\n+\r\n+        private void Apply_Click(object sender, RoutedEventArgs e)\r\n+        {\r\n+            EditorOverlay mainEditor = EditorOverlay.Current;\r\n+            LayoutModel model = mainEditor.DataContext as LayoutModel;\r\n+            if (model != null)\r\n+            {\r\n+                if (model is GridLayoutModel)\r\n+                {\r\n+                    model.Apply(mainEditor.GetZoneRects());\r\n+                }\r\n+                else\r\n+                {\r\n+                    model.Apply((model as CanvasLayoutModel).Zones.ToArray());\r\n+                }\r\n+            }\r\n+\r\n+            this.Close();\r\n+        }\r\n+\r\n+        private void OnClosed(object sender, EventArgs e)\r\n+        {\r\n+            if (!_editing)\r\n+            {\r\n+                EditorOverlay.Current.Close();\r\n+            }\r\n+        }\r\n+\r\n+        private void OnLoaded(object sender, RoutedEventArgs e)\r\n+        {\r\n+            foreach(LayoutModel model in _settings.CustomModels)\r\n+            {\r\n+                if (model.IsSelected)\r\n+                {\r\n+                    TemplateTab.SelectedIndex = 1;\r\n+                    return;\r\n+                }\r\n+            }\r\n+        }\r\n+\r\n+        private void OnDelete(object sender, RoutedEventArgs e)\r\n+        {\r\n+            LayoutModel model = ((FrameworkElement)sender).DataContext as LayoutModel;\r\n+            if (model.IsSelected)\r\n+            {\r\n+                OnLoaded(null, null);\r\n+            }\r\n+            model.Delete();\r\n+        }\r\n+    }\r\n+\r\n+\r\n+    public class BooleanToBrushConverter : IValueConverter\r\n+    {\r\n+        private static Brush c_selectedBrush = new SolidColorBrush(Color.FromRgb(0x00, 0x78, 0xD7));\r\n+        private static Brush c_normalBrush = new SolidColorBrush(Color.FromRgb(0xF2, 0xF2, 0xF2));\r\n+\r\n+        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)\r\n+        {\r\n+            return ((bool)value) ? c_selectedBrush : c_normalBrush;\r\n+        }\r\n+\r\n+        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)\r\n+        {\r\n+            return value == c_selectedBrush;\r\n+        }\r\n+    }\r\n+\r\n+    public class ModelToVisibilityConverter : IValueConverter\r\n+    {\r\n+        public object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)\r\n+        {\r\n+            return Settings.IsPredefinedLayout((LayoutModel)value) ? Visibility.Collapsed : Visibility.Visible;\r\n+        }\r\n+\r\n+        public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)\r\n+        {\r\n+            return null;\r\n+        }\r\n+    }\r\n+}\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/Models/CanvasLayoutModel.cs', 'Line Additions': 164, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,164 @@\n+\ufeffusing System;\r\n+using System.Collections;\r\n+using System.Collections.Generic;\r\n+using System.Linq;\r\n+using System.Text;\r\n+using System.Threading.Tasks;\r\n+using System.Windows;\r\n+using System.Windows.Converters;\r\n+using System.Windows.Documents;\r\n+\r\n+namespace FancyZonesEditor.Models\r\n+{\r\n+    // CanvasLayoutModel \r\n+    //  Free form Layout Model, which specifies independent zone rects\r\n+    public class CanvasLayoutModel : LayoutModel\r\n+    {\r\n+        public CanvasLayoutModel(ushort version, string name, ushort id, byte[] data) : base(name, id)\r\n+        {\r\n+            if (version == c_latestVersion)\r\n+            {\r\n+                Load(data);\r\n+            }\r\n+        }\r\n+\r\n+        public CanvasLayoutModel(string name, ushort id, int referenceWidth, int referenceHeight) : base(name, id)\r\n+        {\r\n+            // Initialize Reference Size\r\n+            _referenceWidth = referenceWidth;\r\n+            _referenceHeight = referenceHeight;\r\n+        }\r\n+\r\n+        public CanvasLayoutModel(string name, ushort id) : base(name, id) { }\r\n+        public CanvasLayoutModel(string name) : base(name) { }\r\n+        public CanvasLayoutModel() : base() { }\r\n+\r\n+        // ReferenceWidth - the reference width for the layout rect that all Zones are relative to\r\n+        public int ReferenceWidth\r\n+        {\r\n+            get { return _referenceWidth; }\r\n+            set\r\n+            {\r\n+                if (_referenceWidth != value)\r\n+                {\r\n+                    _referenceWidth = value;\r\n+                    FirePropertyChanged(""ReferenceWidth"");\r\n+                }\r\n+            }\r\n+        }\r\n+        private int _referenceWidth;\r\n+\r\n+        // ReferenceHeight - the reference height for the layout rect that all Zones are relative to\r\n+        public int ReferenceHeight\r\n+        {\r\n+            get { return _referenceHeight; }\r\n+            set\r\n+            {\r\n+                if (_referenceHeight != value)\r\n+                {\r\n+                    _referenceHeight = value;\r\n+                    FirePropertyChanged(""ReferenceHeight"");\r\n+                }\r\n+            }\r\n+        }\r\n+        private int _referenceHeight;\r\n+\r\n+        // Zones - the list of all zones in this layout, described as independent rectangles\r\n+        public IList<Int32Rect> Zones { get { return _zones; } }\r\n+        private IList<Int32Rect> _zones = new List<Int32Rect>();\r\n+\r\n+        // RemoveZoneAt\r\n+        //  Removes the specified index from the Zones list, and fires a property changed notification for the Zones property\r\n+        public void RemoveZoneAt(int index)\r\n+        {\r\n+            Zones.RemoveAt(index);\r\n+            FirePropertyChanged(""Zones"");\r\n+        }\r\n+\r\n+        // AddZone\r\n+        //  Adds the specified Zone to the end of the Zones list, and fires a property changed notification for the Zones property\r\n+        public void AddZone(Int32Rect zone)\r\n+        {\r\n+            Zones.Add(zone);\r\n+            FirePropertyChanged(""Zones"");\r\n+        }\r\n+\r\n+        private void Load(byte[] data)\r\n+        {\r\n+            // Initialize this CanvasLayoutModel based on the given persistence data\r\n+            // Skip version (2 bytes), id (2 bytes), and type (1 bytes)\r\n+            int i = 5;\r\n+            _referenceWidth = data[i++] * 256 + data[i++];\r\n+            _referenceHeight = data[i++] * 256 + data[i++];\r\n+\r\n+            int count = data[i++];\r\n+\r\n+            while (count-- > 0)\r\n+            {\r\n+                _zones.Add(new Int32Rect(\r\n+                    data[i++] * 256 + data[i++],\r\n+                    data[i++] * 256 + data[i++],\r\n+                    data[i++] * 256 + data[i++],\r\n+                    data[i++] * 256 + data[i++]));\r\n+            }\r\n+        }\r\n+\r\n+        // Clone\r\n+        //  Implements the LayoutModel.Clone abstract method\r\n+        //  Clones the data from this CanvasLayoutModel to a new CanvasLayoutModel\r\n+        public override LayoutModel Clone()\r\n+        {\r\n+            CanvasLayoutModel layout = new CanvasLayoutModel(Name);\r\n+            layout.ReferenceHeight = ReferenceHeight;\r\n+            layout.ReferenceWidth = ReferenceWidth;\r\n+\r\n+            foreach(Int32Rect zone in Zones)\r\n+            {\r\n+                layout.Zones.Add(zone);\r\n+            }\r\n+\r\n+            return layout;\r\n+        }\r\n+\r\n+        // GetPersistData\r\n+        //  Implements the LayoutModel.GetPersistData abstract method\r\n+        //  Returns the state of this GridLayoutModel in persisted format\r\n+        protected override byte[] GetPersistData()\r\n+        {\r\n+            byte[] data = new byte[10 + (_zones.Count * 8)];\r\n+            int i = 0;\r\n+\r\n+            // Common persisted values between all layout types\r\n+            data[i++] = (byte)(c_latestVersion / 256);\r\n+            data[i++] = (byte)(c_latestVersion % 256);\r\n+            data[i++] = 1; // LayoutModelType: 1 == CanvasLayoutModel\r\n+            data[i++] = (byte)(Id / 256);\r\n+            data[i++] = (byte)(Id % 256);\r\n+            // End common\r\n+\r\n+            data[i++] = (byte)(_referenceWidth / 256);\r\n+            data[i++] = (byte)(_referenceWidth % 256);\r\n+            data[i++] = (byte)(_referenceHeight / 256);\r\n+            data[i++] = (byte)(_referenceHeight % 256);\r\n+            data[i++] = (byte)_zones.Count;\r\n+\r\n+            foreach (Int32Rect rect in _zones)\r\n+            {\r\n+                data[i++] = (byte)(rect.X / 256);\r\n+                data[i++] = (byte)(rect.X % 256);\r\n+\r\n+                data[i++] = (byte)(rect.Y / 256);\r\n+                data[i++] = (byte)(rect.Y % 256);\r\n+\r\n+                data[i++] = (byte)(rect.Width / 256);\r\n+                data[i++] = (byte)(rect.Width % 256);\r\n+\r\n+                data[i++] = (byte)(rect.Height / 256);\r\n+                data[i++] = (byte)(rect.Height % 256);\r\n+            }\r\n+            return data;\r\n+        }\r\n+\r\n+        private static ushort c_latestVersion = 0;\r\n+    }\r\n+}\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/Models/GridLayoutModel.cs', 'Line Additions': 224, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,224 @@\n+\ufeffusing System;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows.Documents;\n+\n+namespace FancyZonesEditor.Models\n+{\n+    // GridLayoutModel \n+    //  Grid-styled Layout Model, which specifies rows, columns, percentage sizes, and row/column spans\n+    public class GridLayoutModel : LayoutModel\n+    {\n+        public GridLayoutModel() : base() { }\n+        public GridLayoutModel(string name) : base(name) { }\n+        public GridLayoutModel(string name, ushort id) : base(name, id) { }\n+        public GridLayoutModel(ushort version, string name, ushort id, byte[] data) : base(name, id)\n+        {\n+            if (version == c_latestVersion)\r\n+            {\n+                Reload(data);\r\n+            }\n+        }\n+        // Rows - number of rows in the Grid\n+        public int Rows\n+        {\n+            get { return _rows; }\n+            set\n+            {\n+                if (_rows != value)\n+                {\n+                    _rows = value;\n+                    FirePropertyChanged(""Rows"");\n+                }\n+            }\n+        }\n+        private int _rows = 1;\n+\n+        // Columns - number of columns in the Grid\n+        public int Columns\n+        {\n+            get { return _cols; }\n+            set\n+            {\n+                if (_cols != value)\n+                {\n+                    _cols = value;\n+                    FirePropertyChanged(""Columns"");\n+                }\n+            }\n+        }\n+        private int _cols = 1;\n+\n+        // CellChildMap - represents which ""children"" belong in which grid cells; \n+        //  shows spanning children by the same index appearing in adjacent cells\n+        //  TODO: ideally no setter here - this means moving logic like ""split"" over to model\n+        public int[,] CellChildMap { get { return _cellChildMap; } set { _cellChildMap = value; } }\n+        private int[,] _cellChildMap;\n+\n+        // RowPercents - represents the %age height of each row in the grid\n+        public int[] RowPercents { get { return _rowPercents; } set { _rowPercents = value; } }\n+        private int[] _rowPercents;\n+\n+        // ColumnPercents - represents the %age width of each column in the grid\n+        public int[] ColumnPercents { get { return _colPercents; } set { _colPercents = value; } }\n+        private int[] _colPercents;\n+\n+        // FreeZones (not persisted) - used to keep track of child indices that are no longer in use in the CellChildMap,\n+        //  making them candidates for re-use when it\'s needed to add another child\n+        //  TODO: do I need FreeZones on the data model?  - I think I do\n+        public IList<int> FreeZones { get { return _freeZones; } } \n+        private IList<int> _freeZones = new List<int>();\n+\n+        public void Reload(byte[] data)\n+        {\n+            // Skip version (2 bytes), id (2 bytes), and type (1 bytes)\n+            int i = 5;\n+\n+            Rows = data[i++];\n+            Columns = data[i++];\n+\n+            _rowPercents = new int[Rows];\n+            for (int row = 0; row < Rows; row++)\n+            {\n+                _rowPercents[row] = data[i++]*256 + data[i++];\n+            }\n+\n+            _colPercents = new int[Columns];\n+            for (int col = 0; col < Columns; col++)\n+            {\n+                _colPercents[col] = data[i++]*256 + data[i++];\n+            }\n+\n+            _cellChildMap = new int[Rows, Columns];\n+            for (int row = 0; row < Rows; row++)\n+            {\n+                for (int col = 0; col < Columns; col++)\n+                {\n+                    _cellChildMap[row, col] = data[i++];\n+                }\n+            }\n+        }\n+\n+        // Clone\n+        //  Implements the LayoutModel.Clone abstract method\n+        //  Clones the data from this GridLayoutModel to a new GridLayoutModel\n+        public override LayoutModel Clone()\n+        {\n+            GridLayoutModel layout = new GridLayoutModel(Name);\n+            int rows = Rows;\n+            int cols = Columns;\n+\n+            layout.Rows = rows;\n+            layout.Columns = cols;\n+\n+            int[,] cellChildMap = new int[rows, cols];\n+            for (int row = 0; row < rows; row++)\n+            {\n+                for (int col = 0; col < cols; col++)\n+                {\n+                    cellChildMap[row, col] = CellChildMap[row, col];\n+                }\n+            }\n+            layout.CellChildMap = cellChildMap;\n+\n+            int[] rowPercents = new int[rows];\n+            for (int row = 0; row < rows; row++)\n+            {\n+                rowPercents[row] = RowPercents[row];\n+            }\n+            layout.RowPercents = rowPercents;\n+\n+            int[] colPercents = new int[cols];\n+            for (int col = 0; col < cols; col++)\n+            {\n+                colPercents[col] = ColumnPercents[col];\n+            }\n+            layout.ColumnPercents = colPercents;\n+\n+            return layout;\n+        }\n+\n+        // GetPersistData\n+        //  Implements the LayoutModel.GetPersistData abstract method\n+        //  Returns the state of this GridLayoutModel in persisted format\n+        protected override byte[] GetPersistData()\n+        {\n+            int rows = Rows;\n+            int cols = Columns;\n+\n+            int[,] cellChildMap;\n+\n+            if (_freeZones.Count == 0)\n+            {\n+                // no unused indices -- so we can just use the _cellChildMap as is\n+                cellChildMap = _cellChildMap;\n+            }\n+            else\n+            {\n+                // compress cellChildMap to not have gaps for unused child indices;\n+                List<int> mapping = new List<int>();\n+\n+                cellChildMap = new int[rows, cols];\n+\n+                for (int row = 0; row < rows; row++)\n+                {\n+                    for (int col = 0; col < cols; col++)\n+                    {\n+                        int source = _cellChildMap[row, col];\n+\n+                        int index = mapping.IndexOf(source);\n+                        if (index == -1)\n+                        {\n+                            index = mapping.Count;\n+                            mapping.Add(source);\n+                        }\n+                        cellChildMap[row, col] = index;\n+                    }\n+                }\n+            }\n+\n+            byte[] data = new byte[7 + (Rows * 2) + (Columns * 2) + (Rows * Columns)];\n+\n+            int i = 0;\r\n+            // Common persisted values between all layout types\n+            data[i++] = (byte)(c_latestVersion / 256);\n+            data[i++] = (byte)(c_latestVersion % 256);\n+            data[i++] = 0; // LayoutModelType: 0 == GridLayoutModel\n+            data[i++] = (byte)(Id / 256);\n+            data[i++] = (byte)(Id % 256);\n+            // End common\n+\n+            data[i++] = (byte)Rows;\n+            data[i++] = (byte)Columns;\n+\n+            for (int row = 0; row < Rows; row++)\n+            {\n+                int rowPercent = _rowPercents[row];\n+                data[i++] = (byte)(rowPercent / 256);\n+                data[i++] = (byte)(rowPercent % 256);\n+            }\n+\n+            for (int col = 0; col < Columns; col++)\n+            {\n+                int colPercent = _colPercents[col];\n+                data[i++] = (byte)(colPercent / 256);\n+                data[i++] = (byte)(colPercent % 256);\n+            }\n+\n+            for (int row = 0; row < Rows; row++)\n+            {\n+                for (int col = 0; col < Columns; col++)\n+                {\n+                    data[i++] = (byte)cellChildMap[row, col];\n+                }\n+            }\n+\n+            return data;\n+        }\n+\n+        private static ushort c_latestVersion = 0;\n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/Models/LayoutModel.cs', 'Line Additions': 226, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,226 @@\n+\ufeffusing System;\r\n+using System.Collections;\r\n+using System.Collections.Generic;\r\n+using System.Collections.ObjectModel;\r\n+\r\n+using System.ComponentModel;\r\n+using System.Linq;\r\n+using System.Runtime.InteropServices;\r\n+using System.Text;\r\n+using System.Threading.Tasks;\r\n+using Microsoft.Win32;\r\n+\r\n+namespace FancyZonesEditor.Models\r\n+{\r\n+    // Base LayoutModel\r\n+    //  Manages common properties and base persistence\r\n+    public abstract class LayoutModel : INotifyPropertyChanged\r\n+    {\r\n+        protected LayoutModel() { }\r\n+\r\n+        protected LayoutModel(string name) : this()\r\n+        {\r\n+            Name = name;\r\n+        }\r\n+\r\n+        protected LayoutModel(string name, ushort id) : this(name)\r\n+        {\r\n+            _id = id;\r\n+        }\r\n+\r\n+        //   Name - the display name for this layout model - is also used as the key in the registry\r\n+        public string Name\r\n+        {\r\n+            get { return _name; }\r\n+            set\r\n+            {\r\n+                if (_name != value)\r\n+                {\r\n+                    _name = value;\r\n+                    FirePropertyChanged(""Name"");\r\n+                }\r\n+            }\r\n+        }\r\n+        private string _name;\r\n+\r\n+        // Id - the unique ID for this layout model - is used to connect fancy zones\' ZonesSets with the editor\'s Layouts\r\n+        //    - note: 0 means this is a new layout, which means it will have its ID auto-assigned on persist\r\n+        public ushort Id\r\n+        {\r\n+            get\r\n+            {\r\n+                if (_id == 0)\r\n+                {\r\n+                    _id = ++s_maxId;\r\n+                }\r\n+                return _id;\r\n+            }\r\n+        }\r\n+        private ushort _id = 0;\r\n+\r\n+        // IsSelected (not-persisted) - tracks whether or not this LayoutModel is selected in the picker\r\n+        // TODO: once we switch to a picker per monitor, we need to move this state to the view  \r\n+        public bool IsSelected\r\n+        {\r\n+            get { return _isSelected; }\r\n+            set\r\n+            {\r\n+                if (_isSelected != value)\r\n+                {\r\n+                    _isSelected = value;\r\n+                    FirePropertyChanged(""IsSelected"");\r\n+                }\r\n+            }\r\n+        }\r\n+        private bool _isSelected;\r\n+\r\n+        // implementation of INotifyProeprtyChanged\r\n+        public event PropertyChangedEventHandler PropertyChanged;\r\n+\r\n+        // FirePropertyChanged -- wrapper that calls INPC.PropertyChanged\r\n+        protected virtual void FirePropertyChanged(string propertyName)\r\n+        {\r\n+            PropertyChangedEventHandler handler = PropertyChanged;\r\n+            if (handler != null) handler(this, new PropertyChangedEventArgs(propertyName));\r\n+        }\r\n+\r\n+        // Removes this Layout from the registry and the loaded CustomModels list\r\n+        public void Delete()\r\n+        {\r\n+            RegistryKey key = Registry.CurrentUser.OpenSubKey(c_registryPath, true);\r\n+            if (key != null)\r\n+            {\r\n+                key.DeleteValue(Name);\r\n+            }\r\n+\r\n+            int i = s_customModels.IndexOf(this);\r\n+            if (i != -1)\r\n+            {\r\n+                s_customModels.RemoveAt(i);\r\n+            }\r\n+        }\r\n+\r\n+        // Loads all the Layouts persisted under the Layouts key in the registry\r\n+        public static ObservableCollection<LayoutModel> LoadCustomModels()\r\n+        {\r\n+            s_customModels = new ObservableCollection<LayoutModel>();\r\n+\r\n+            RegistryKey key = Registry.CurrentUser.OpenSubKey(c_registryPath);\r\n+            if (key != null)\r\n+            {\r\n+                foreach (string name in key.GetValueNames())\r\n+                {\r\n+                    LayoutModel model = null;\r\n+                    byte[] data = (byte[])Registry.GetValue(c_fullRegistryPath, name, null);\r\n+\r\n+                    ushort version = (ushort) (data[0]*256 + data[1]);\r\n+                    byte type = data[2];\r\n+                    ushort id = (ushort) (data[3]*256 + data[4]);\r\n+\r\n+                    switch (type)\r\n+                    {\r\n+                        case 0: model = new GridLayoutModel(version, name, id, data); break;\r\n+                        case 1: model = new CanvasLayoutModel(version, name, id, data); break;\r\n+                    }\r\n+\r\n+                    if (model != null)\r\n+                    {\r\n+                        if (s_maxId < id)\r\n+                        {\r\n+                            s_maxId = id;\r\n+                        }\r\n+                        s_customModels.Add(model);\r\n+                    }\r\n+                }\r\n+            }\r\n+\r\n+            return s_customModels;\r\n+        }\r\n+        private static ObservableCollection<LayoutModel> s_customModels = null;\r\n+\r\n+        private static ushort s_maxId = 0;\r\n+\r\n+        // Callbacks that the base LayoutModel makes to derived types\r\n+        protected abstract byte[] GetPersistData();\r\n+        public abstract LayoutModel Clone();\r\n+        \r\n+        // PInvokes to handshake with fancyzones backend\r\n+        internal static class Native\r\n+        {\r\n+            [DllImport(""kernel32"", SetLastError = true, CharSet = CharSet.Ansi)]\r\n+            public static extern IntPtr LoadLibrary([MarshalAs(UnmanagedType.LPStr)]string lpFileName);\r\n+\r\n+            [DllImport(""kernel32"", CharSet = CharSet.Ansi, ExactSpelling = true, SetLastError = true)]\r\n+            public static extern IntPtr GetProcAddress(IntPtr hModule, string procName);\r\n+\r\n+            internal delegate int PersistZoneSet(\r\n+                [MarshalAs(UnmanagedType.LPWStr)] string activeKey,\r\n+                [MarshalAs(UnmanagedType.LPWStr)] string key,\r\n+                ushort layoutId,\r\n+                int zoneCount,\r\n+                [MarshalAs(UnmanagedType.LPArray)] int[] zoneArray);\r\n+        }\r\n+\r\n+        public void Persist(System.Windows.Int32Rect[] zones)\r\n+        {\r\n+            // Persist the editor data\r\n+            Registry.SetValue(c_fullRegistryPath, Name, GetPersistData(), Microsoft.Win32.RegistryValueKind.Binary);\r\n+            Apply(zones);\r\n+        }\r\n+\r\n+        public void Apply(System.Windows.Int32Rect[] zones)\r\n+        { \r\n+            // Persist the zone data back into FZ\r\n+            var module = Native.LoadLibrary(""fancyzones.dll"");\r\n+            if (module == IntPtr.Zero)\r\n+            {\r\n+                return;\r\n+            }\r\n+\r\n+            var pfn = Native.GetProcAddress(module, ""PersistZoneSet"");\r\n+            if (pfn == IntPtr.Zero)\r\n+            {\r\n+                return;\r\n+            }\r\n+\r\n+            // Scale all the zones to the DPI and then pack them up to be marshalled.\r\n+            int zoneCount = zones.Length;\r\n+            var zoneArray = new int[zoneCount * 4];\r\n+            var graphics = System.Drawing.Graphics.FromHwnd(IntPtr.Zero);\r\n+            float dpi = graphics.DpiX / 96;\r\n+            for (int i = 0; i < zones.Length; i++)\r\n+            {\r\n+                var left = (int)(zones[i].X * dpi);\r\n+                var top = (int)(zones[i].Y * dpi);\r\n+                var right = left + (int)(zones[i].Width * dpi);\r\n+                var bottom = top + (int)(zones[i].Height * dpi);\r\n+\r\n+                var index = i * 4;\r\n+                zoneArray[index] = left;\r\n+                zoneArray[index+1] = top;\r\n+                zoneArray[index+2] = right;\r\n+                zoneArray[index+3] = bottom;\r\n+            }\r\n+\r\n+            string[] args = Environment.GetCommandLineArgs();\r\n+            if (args.Length > 1)\r\n+            {\r\n+                // args[1] = registry key value of currently active ZoneSet\r\n+                // args[2] = id of layout to load at startup\r\n+\r\n+                string uniqueId = args[1];\r\n+\r\n+                // TODO: multimon\r\n+                double height = System.Windows.Forms.Screen.PrimaryScreen.Bounds.Height;\r\n+                double width = System.Windows.Forms.Screen.PrimaryScreen.Bounds.Width;\r\n+                var key = width.ToString() + ""_"" + height.ToString();\r\n+\r\n+                var persistZoneSet = Marshal.GetDelegateForFunctionPointer<Native.PersistZoneSet>(pfn);\r\n+                persistZoneSet(uniqueId, key, _id, zoneCount, zoneArray);\r\n+            }\r\n+        }\r\n+\r\n+        private static readonly string c_registryPath = Settings.RegistryPath + ""\\\\Layouts"";\r\n+        private static readonly string c_fullRegistryPath = Settings.FullRegistryPath + ""\\\\Layouts"";\r\n+    }\r\n+}\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/Models/Settings.cs', 'Line Additions': 304, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,304 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.ComponentModel;\n+using System.Collections;\n+using System.Collections.ObjectModel;\n+using FancyZonesEditor.Models;\n+using System.Windows.Documents;\n+using System.Windows;\n+using System.Windows.Controls;\n+using Microsoft.Win32;\n+\n+namespace FancyZonesEditor\n+{\n+    //\n+    // Settings\n+    //  These are the configuration settings used by the rest of the editor\n+    //  Other UIs in the editor will subscribe to change events on the properties to stay up to date as these properties change\n+    //\n+    public class Settings : INotifyPropertyChanged\n+    {\n+        public Settings()\n+        {\n+            Rect workArea = System.Windows.SystemParameters.WorkArea;\n+\n+            // Initialize the five default layout models: Focus, Columns, Rows, Grid, and PriorityGrid\n+            _defaultModels = new List<LayoutModel>(5);\n+            _focusModel = new CanvasLayoutModel(""Focus"", c_focusModelId, (int)workArea.Width, (int)workArea.Height);\n+            _defaultModels.Add(_focusModel);\n+\n+            _columnsModel = new GridLayoutModel(""Columns"", c_columnsModelId);\n+            _columnsModel.Rows = 1;\n+            _columnsModel.RowPercents = new int[1] { c_multiplier };\n+            _defaultModels.Add(_columnsModel);\n+\n+            _rowsModel = new GridLayoutModel(""Rows"", c_rowsModelId);\n+            _rowsModel.Columns = 1;\n+            _rowsModel.ColumnPercents = new int[1] { c_multiplier };\n+            _defaultModels.Add(_rowsModel);\n+\n+            _gridModel = new GridLayoutModel(""Grid"", c_gridModelId);\n+            _defaultModels.Add(_gridModel);\n+\n+            _priorityGridModel = new GridLayoutModel(""Priority Grid"", c_priorityGridModelId);\n+            _defaultModels.Add(_priorityGridModel);\n+\n+            _blankCustomModel = new CanvasLayoutModel(""Create new custom"", c_blankCustomModelId, (int)workArea.Width, (int)workArea.Height);\n+\n+            _zoneCount = (int)Registry.GetValue(FullRegistryPath, ""ZoneCount"", 3);\n+            _spacing = (int)Registry.GetValue(FullRegistryPath, ""Spacing"", 16);\n+            _showSpacing = (int)Registry.GetValue(FullRegistryPath, ""ShowSpacing"", 1) == 1;\n+\n+            UpdateLayoutModels();\n+        }\n+\n+        // ZoneCount - number of zones selected in the picker window\n+        public int ZoneCount\n+        {\n+            get { return _zoneCount; }\n+            set\n+            {\n+                if (_zoneCount != value)\n+                {\n+                    _zoneCount = value;\n+                    Registry.SetValue(FullRegistryPath, ""ZoneCount"", _zoneCount, RegistryValueKind.DWord);\n+                    UpdateLayoutModels();\n+                    FirePropertyChanged(""ZoneCount"");\n+                }\n+            }\n+        }\n+        private int _zoneCount;\n+\n+        // Spacing - how much space in between zones of the grid do you want\n+        public int Spacing\n+        {\n+            get { return _spacing; }\n+            set\n+            {\n+                if (_spacing != value)\n+                {\n+                    _spacing = value;\n+                    Registry.SetValue(FullRegistryPath, ""Spacing"", _spacing, RegistryValueKind.DWord);\n+                    FirePropertyChanged(""Spacing"");\n+                }\n+            }\n+        }\n+        private int _spacing;\n+\n+        // ShowSpacing - is the Spacing value used or ignored?\n+        public bool ShowSpacing\n+        {\n+            get { return _showSpacing; }\n+            set\n+            {\n+                if (_showSpacing != value)\n+                {\n+                    _showSpacing = value;\n+                    Registry.SetValue(FullRegistryPath, ""ShowSpacing"", _showSpacing, RegistryValueKind.DWord);\n+                    FirePropertyChanged(""ShowSpacing"");\n+                }\n+            }\n+        }\n+        private bool _showSpacing;\n+\n+        // IsShiftKeyPressed - is the shift key currently being held down\n+        public bool IsShiftKeyPressed\n+        {\n+            get { return _isShiftKeyPressed; }\n+            set\n+            {\n+                if (_isShiftKeyPressed != value)\n+                {\n+                    _isShiftKeyPressed = value;\n+                    FirePropertyChanged(""IsShiftKeyPressed"");\n+                }\n+            }\n+        }\n+        private bool _isShiftKeyPressed;\n+\n+        // IsCtrlKeyPressed - is the ctrl key currently being held down\n+        public bool IsCtrlKeyPressed\n+        {\n+            get { return _isCtrlKeyPressed; }\n+            set\n+            {\n+                if (_isCtrlKeyPressed != value)\n+                {\n+                    _isCtrlKeyPressed = value;\n+                    FirePropertyChanged(""IsCtrlKeyPressed"");\n+                }\n+            }\n+        }\n+        private bool _isCtrlKeyPressed;\n+\n+        // UpdateLayoutModels\n+        //  Update the five default layouts based on the new ZoneCount\n+        private void UpdateLayoutModels()\n+        {\n+            int previousZoneCount = _focusModel.Zones.Count;\n+\n+            // Update the ""Focus"" Default Layout\n+            _focusModel.Zones.Clear();\n+\n+            Int32Rect focusZoneRect = new Int32Rect((int)(_focusModel.ReferenceWidth * 0.1), (int)(_focusModel.ReferenceHeight * 0.1), (int)(_focusModel.ReferenceWidth * 0.6), (int)(_focusModel.ReferenceHeight * 0.6));\n+            int focusRectXIncrement = (ZoneCount <= 1) ? 0 : (int)(_focusModel.ReferenceWidth * 0.2) / (ZoneCount - 1);\n+            int focusRectYIncrement = (ZoneCount <= 1) ? 0 : (int)(_focusModel.ReferenceHeight * 0.2) / (ZoneCount - 1);\n+\n+            for (int i = 0; i < ZoneCount; i++)\n+            {\n+                _focusModel.Zones.Add(focusZoneRect);\n+                focusZoneRect.X += focusRectXIncrement;\n+                focusZoneRect.Y += focusRectYIncrement;\n+            }\n+\n+            // Update the ""Rows"" and ""Columns"" Default Layouts\n+            // They can share their model, just transposed\n+            _rowsModel.CellChildMap = new int[ZoneCount, 1];\n+            _columnsModel.CellChildMap = new int[1, ZoneCount];\n+            _rowsModel.Rows = _columnsModel.Columns = ZoneCount;\n+            _rowsModel.RowPercents = _columnsModel.ColumnPercents = new int[ZoneCount];\n+\n+            for (int i = 0; i < ZoneCount; i++)\n+            {\n+                _rowsModel.CellChildMap[i, 0] = i;\n+                _columnsModel.CellChildMap[0, i] = i;\n+                _rowsModel.RowPercents[i] = c_multiplier / ZoneCount; // _columnsModel is sharing the same array\n+            }\n+\n+            // Update the ""Grid"" Default Layout\n+            int rows = 1;\n+            int cols = 1;\n+            int mergeCount = 0;\n+            while (ZoneCount / rows >= rows)\n+            {\n+                rows++;\n+            }\n+            rows--;\n+            cols = ZoneCount / rows;\n+            if (ZoneCount % rows == 0)\n+            {\n+                // even grid\n+            }\n+            else\n+            {\n+                cols++;\n+                mergeCount = rows - (ZoneCount % rows);\n+            }\n+            _gridModel.Rows = rows;\n+            _gridModel.Columns = cols;\n+            _gridModel.RowPercents = new int[rows];\n+            _gridModel.ColumnPercents = new int[cols];\n+            _gridModel.CellChildMap = new int[rows, cols];\n+\n+            for (int row = 0; row < rows; row++)\n+            {\n+                _gridModel.RowPercents[row] = c_multiplier / rows;\n+            }\n+\n+            for (int col = 0; col < cols; col++)\n+            {\n+                _gridModel.ColumnPercents[col] = c_multiplier / cols;\n+            }\n+\n+            int index = 0;\n+            for (int col = cols - 1; col >= 0; col--)\n+            {\n+                for (int row = rows - 1; row >= 0; row--)\n+                {\n+                    _gridModel.CellChildMap[row, col] = index++;\n+                    if (index == ZoneCount)\n+                    {\n+                        index--;\n+                    }\n+\n+                }\n+            }\n+\n+            // Update the ""Priority Grid"" Default Layout\n+            if (ZoneCount <= s_priorityData.Length)\n+            {\n+                _priorityGridModel.Reload(s_priorityData[ZoneCount - 1]);\n+            }\n+            else\n+            {\n+                // same as grid;\n+                _priorityGridModel.Rows = _gridModel.Rows;\n+                _priorityGridModel.Columns = _gridModel.Columns;\n+                _priorityGridModel.RowPercents = _gridModel.RowPercents;\n+                _priorityGridModel.ColumnPercents = _gridModel.ColumnPercents;\n+                _priorityGridModel.CellChildMap = _gridModel.CellChildMap;\n+            }\n+        }\n+\n+        public IList<LayoutModel> DefaultModels { get { return _defaultModels; } }\n+        public ObservableCollection<LayoutModel> CustomModels\n+        {\n+            get\n+            {\n+                if (_customModels == null)\n+                {\n+                    _customModels = LayoutModel.LoadCustomModels();\n+                    _customModels.Insert(0, _blankCustomModel);\n+                }\n+                return _customModels;\n+            }\n+        }\n+        private ObservableCollection<LayoutModel> _customModels;\n+\n+        public static readonly string RegistryPath = ""SOFTWARE\\\\SuperFancyZones"";\n+        public static readonly string FullRegistryPath = ""HKEY_CURRENT_USER\\\\"" + RegistryPath;\n+\n+        public static bool IsPredefinedLayout(LayoutModel model)\n+        {\n+            return (model.Id >= c_lastPrefinedId);\n+        }\n+\n+        // implementation of INotifyProeprtyChanged\n+        public event PropertyChangedEventHandler PropertyChanged;\n+\n+        // FirePropertyChanged -- wrapper that calls INPC.PropertyChanged\n+        protected virtual void FirePropertyChanged(string propertyName)\n+        {\n+            PropertyChangedEventHandler handler = PropertyChanged;\n+            if (handler != null) handler(this, new PropertyChangedEventArgs(propertyName));\n+        }\n+\n+        // storage for Default Layout Models\n+        private IList<LayoutModel> _defaultModels;\n+        private CanvasLayoutModel _focusModel; \n+        private GridLayoutModel _rowsModel;   \n+        private GridLayoutModel _columnsModel;\n+        private GridLayoutModel _gridModel;\n+        private GridLayoutModel _priorityGridModel;\n+        private CanvasLayoutModel _blankCustomModel;\n+\n+        private static readonly ushort c_focusModelId = 0xFFFF;\n+        private static readonly ushort c_rowsModelId = 0xFFFE;\n+        private static readonly ushort c_columnsModelId = 0xFFFD;\n+        private static readonly ushort c_gridModelId = 0xFFFC;\n+        private static readonly ushort c_priorityGridModelId = 0xFFFB;\n+        private static readonly ushort c_blankCustomModelId = 0xFFFA;\n+        private static readonly ushort c_lastPrefinedId = c_blankCustomModelId;\n+\n+        // hard coded data for all the ""Priority Grid"" configurations that are unique to ""Grid""\n+        private static byte[][] s_priorityData = new byte[][]\n+        {\n+            new byte[] { 0, 0, 0, 0, 0, 1, 1, 39, 16, 39, 16, 0 },\n+            new byte[] { 0, 0, 0, 0, 0, 1, 2, 39, 16, 26, 11, 13, 5, 0, 1 },\n+            new byte[] { 0, 0, 0, 0, 0, 1, 3, 39, 16, 9, 196, 19, 136, 9, 196, 0, 1, 2 },\n+            new byte[] { 0, 0, 0, 0, 0, 2, 3, 19, 136, 19, 136, 9, 196, 19, 136, 9, 196, 0, 1, 2, 0, 1, 3 },\n+            new byte[] { 0, 0, 0, 0, 0, 2, 3, 19, 136, 19, 136, 9, 196, 19, 136, 9, 196, 0, 1, 2, 3, 1, 4 },\n+            new byte[] { 0, 0, 0, 0, 0, 3, 3, 13, 5, 13, 6, 13, 5, 9, 196, 19, 136, 9, 196, 0, 1, 2, 0, 1, 3, 4, 1, 5 },\n+            new byte[] { 0, 0, 0, 0, 0, 3, 3, 13, 5, 13, 6, 13, 5, 9, 196, 19, 136, 9, 196, 0, 1, 2, 3, 1, 4, 5, 1, 6 },\n+            new byte[] { 0, 0, 0, 0, 0, 3, 4, 13, 5, 13, 6, 13, 5, 9, 196, 9, 196, 9, 196, 9, 196, 0, 1, 2, 3, 4, 1, 2, 5, 6, 1, 2, 7 },\n+            new byte[] { 0, 0, 0, 0, 0, 3, 4, 13, 5, 13, 6, 13, 5, 9, 196, 9, 196, 9, 196, 9, 196, 0, 1, 2, 3, 4, 1, 2, 5, 6, 1, 7, 8 },\n+            new byte[] { 0, 0, 0, 0, 0, 3, 4, 13, 5, 13, 6, 13, 5, 9, 196, 9, 196, 9, 196, 9, 196, 0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 8, 9 },\n+            new byte[] { 0, 0, 0, 0, 0, 3, 4, 13, 5, 13, 6, 13, 5, 9, 196, 9, 196, 9, 196, 9, 196, 0, 1, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10 }\n+        };\n+\n+        private const int c_multiplier = 10000;\n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/Properties/AssemblyInfo.cs', 'Line Additions': 55, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,55 @@\n+\ufeffusing System.Reflection;\r\n+using System.Resources;\r\n+using System.Runtime.CompilerServices;\r\n+using System.Runtime.InteropServices;\r\n+using System.Windows;\r\n+\r\n+// General Information about an assembly is controlled through the following\r\n+// set of attributes. Change these attribute values to modify the information\r\n+// associated with an assembly.\r\n+[assembly: AssemblyTitle(""FancyZonesEditor"")]\r\n+[assembly: AssemblyDescription("""")]\r\n+[assembly: AssemblyConfiguration("""")]\r\n+[assembly: AssemblyCompany(""Microsoft Corp."")]\r\n+[assembly: AssemblyProduct(""FancyZonesEditor"")]\r\n+[assembly: AssemblyCopyright(""Copyright (C) 2019 Microsoft Corp."")]\r\n+[assembly: AssemblyTrademark("""")]\r\n+[assembly: AssemblyCulture("""")]\r\n+\r\n+// Setting ComVisible to false makes the types in this assembly not visible\r\n+// to COM components.  If you need to access a type in this assembly from\r\n+// COM, set the ComVisible attribute to true on that type.\r\n+[assembly: ComVisible(false)]\r\n+\r\n+//In order to begin building localizable applications, set\r\n+//<UICulture>CultureYouAreCodingWith</UICulture> in your .csproj file\r\n+//inside a <PropertyGroup>.  For example, if you are using US english\r\n+//in your source files, set the <UICulture> to en-US.  Then uncomment\r\n+//the NeutralResourceLanguage attribute below.  Update the ""en-US"" in\r\n+//the line below to match the UICulture setting in the project file.\r\n+\r\n+//[assembly: NeutralResourcesLanguage(""en-US"", UltimateResourceFallbackLocation.Satellite)]\r\n+\r\n+\r\n+[assembly: ThemeInfo(\r\n+    ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located\r\n+                                     //(used if a resource is not found in the page,\r\n+                                     // or application resource dictionaries)\r\n+    ResourceDictionaryLocation.SourceAssembly //where the generic resource dictionary is located\r\n+                                              //(used if a resource is not found in the page,\r\n+                                              // app, or any theme specific resource dictionaries)\r\n+)]\r\n+\r\n+\r\n+// Version information for an assembly consists of the following four values:\r\n+//\r\n+//      Major Version\r\n+//      Minor Version\r\n+//      Build Number\r\n+//      Revision\r\n+//\r\n+// You can specify all the values or you can default the Build and Revision Numbers\r\n+// by using the \'*\' as shown below:\r\n+// [assembly: AssemblyVersion(""1.0.*"")]\r\n+[assembly: AssemblyVersion(""0.11.0.0"")]\r\n+[assembly: AssemblyFileVersion(""0.11.0.0"")]\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/Properties/Resources.Designer.cs', 'Line Additions': 63, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,63 @@\n+\ufeff//------------------------------------------------------------------------------\r\n+// <auto-generated>\r\n+//     This code was generated by a tool.\r\n+//     Runtime Version:4.0.30319.42000\r\n+//\r\n+//     Changes to this file may cause incorrect behavior and will be lost if\r\n+//     the code is regenerated.\r\n+// </auto-generated>\r\n+//------------------------------------------------------------------------------\r\n+\r\n+namespace FancyZonesEditor.Properties {\r\n+    using System;\r\n+    \r\n+    \r\n+    /// <summary>\r\n+    ///   A strongly-typed resource class, for looking up localized strings, etc.\r\n+    /// </summary>\r\n+    // This class was auto-generated by the StronglyTypedResourceBuilder\r\n+    // class via a tool like ResGen or Visual Studio.\r\n+    // To add or remove a member, edit your .ResX file then rerun ResGen\r\n+    // with the /str option, or rebuild your VS project.\r\n+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""System.Resources.Tools.StronglyTypedResourceBuilder"", ""16.0.0.0"")]\r\n+    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]\r\n+    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\r\n+    internal class Resources {\r\n+        \r\n+        private static global::System.Resources.ResourceManager resourceMan;\r\n+        \r\n+        private static global::System.Globalization.CultureInfo resourceCulture;\r\n+        \r\n+        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute(""Microsoft.Performance"", ""CA1811:AvoidUncalledPrivateCode"")]\r\n+        internal Resources() {\r\n+        }\r\n+        \r\n+        /// <summary>\r\n+        ///   Returns the cached ResourceManager instance used by this class.\r\n+        /// </summary>\r\n+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]\r\n+        internal static global::System.Resources.ResourceManager ResourceManager {\r\n+            get {\r\n+                if (object.ReferenceEquals(resourceMan, null)) {\r\n+                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager(""FancyZonesEditor.Properties.Resources"", typeof(Resources).Assembly);\r\n+                    resourceMan = temp;\r\n+                }\r\n+                return resourceMan;\r\n+            }\r\n+        }\r\n+        \r\n+        /// <summary>\r\n+        ///   Overrides the current thread\'s CurrentUICulture property for all\r\n+        ///   resource lookups using this strongly typed resource class.\r\n+        /// </summary>\r\n+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]\r\n+        internal static global::System.Globalization.CultureInfo Culture {\r\n+            get {\r\n+                return resourceCulture;\r\n+            }\r\n+            set {\r\n+                resourceCulture = value;\r\n+            }\r\n+        }\r\n+    }\r\n+}\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/Properties/Resources.resx', 'Line Additions': 117, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,117 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<root>\r\n+  <!-- \r\n+    Microsoft ResX Schema \r\n+    \r\n+    Version 2.0\r\n+    \r\n+    The primary goals of this format is to allow a simple XML format \r\n+    that is mostly human readable. The generation and parsing of the \r\n+    various data types are done through the TypeConverter classes \r\n+    associated with the data types.\r\n+    \r\n+    Example:\r\n+    \r\n+    ... ado.net/XML headers & schema ...\r\n+    <resheader name=""resmimetype"">text/microsoft-resx</resheader>\r\n+    <resheader name=""version"">2.0</resheader>\r\n+    <resheader name=""reader"">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>\r\n+    <resheader name=""writer"">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>\r\n+    <data name=""Name1""><value>this is my long string</value><comment>this is a comment</comment></data>\r\n+    <data name=""Color1"" type=""System.Drawing.Color, System.Drawing"">Blue</data>\r\n+    <data name=""Bitmap1"" mimetype=""application/x-microsoft.net.object.binary.base64"">\r\n+        <value>[base64 mime encoded serialized .NET Framework object]</value>\r\n+    </data>\r\n+    <data name=""Icon1"" type=""System.Drawing.Icon, System.Drawing"" mimetype=""application/x-microsoft.net.object.bytearray.base64"">\r\n+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>\r\n+        <comment>This is a comment</comment>\r\n+    </data>\r\n+                \r\n+    There are any number of ""resheader"" rows that contain simple \r\n+    name/value pairs.\r\n+    \r\n+    Each data row contains a name, and value. The row also contains a \r\n+    type or mimetype. Type corresponds to a .NET class that support \r\n+    text/value conversion through the TypeConverter architecture. \r\n+    Classes that don\'t support this are serialized and stored with the \r\n+    mimetype set.\r\n+    \r\n+    The mimetype is used for serialized objects, and tells the \r\n+    ResXResourceReader how to depersist the object. This is currently not \r\n+    extensible. For a given mimetype the value must be set accordingly:\r\n+    \r\n+    Note - application/x-microsoft.net.object.binary.base64 is the format \r\n+    that the ResXResourceWriter will generate, however the reader can \r\n+    read any of the formats listed below.\r\n+    \r\n+    mimetype: application/x-microsoft.net.object.binary.base64\r\n+    value   : The object must be serialized with \r\n+            : System.Serialization.Formatters.Binary.BinaryFormatter\r\n+            : and then encoded with base64 encoding.\r\n+    \r\n+    mimetype: application/x-microsoft.net.object.soap.base64\r\n+    value   : The object must be serialized with \r\n+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter\r\n+            : and then encoded with base64 encoding.\r\n+\r\n+    mimetype: application/x-microsoft.net.object.bytearray.base64\r\n+    value   : The object must be serialized into a byte array \r\n+            : using a System.ComponentModel.TypeConverter\r\n+            : and then encoded with base64 encoding.\r\n+    -->\r\n+  <xsd:schema id=""root"" xmlns="""" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"" xmlns:msdata=""urn:schemas-microsoft-com:xml-msdata"">\r\n+    <xsd:element name=""root"" msdata:IsDataSet=""true"">\r\n+      <xsd:complexType>\r\n+        <xsd:choice maxOccurs=""unbounded"">\r\n+          <xsd:element name=""metadata"">\r\n+            <xsd:complexType>\r\n+              <xsd:sequence>\r\n+                <xsd:element name=""value"" type=""xsd:string"" minOccurs=""0"" />\r\n+              </xsd:sequence>\r\n+              <xsd:attribute name=""name"" type=""xsd:string"" />\r\n+              <xsd:attribute name=""type"" type=""xsd:string"" />\r\n+              <xsd:attribute name=""mimetype"" type=""xsd:string"" />\r\n+            </xsd:complexType>\r\n+          </xsd:element>\r\n+          <xsd:element name=""assembly"">\r\n+            <xsd:complexType>\r\n+              <xsd:attribute name=""alias"" type=""xsd:string"" />\r\n+              <xsd:attribute name=""name"" type=""xsd:string"" />\r\n+            </xsd:complexType>\r\n+          </xsd:element>\r\n+          <xsd:element name=""data"">\r\n+            <xsd:complexType>\r\n+              <xsd:sequence>\r\n+                <xsd:element name=""value"" type=""xsd:string"" minOccurs=""0"" msdata:Ordinal=""1"" />\r\n+                <xsd:element name=""comment"" type=""xsd:string"" minOccurs=""0"" msdata:Ordinal=""2"" />\r\n+              </xsd:sequence>\r\n+              <xsd:attribute name=""name"" type=""xsd:string"" msdata:Ordinal=""1"" />\r\n+              <xsd:attribute name=""type"" type=""xsd:string"" msdata:Ordinal=""3"" />\r\n+              <xsd:attribute name=""mimetype"" type=""xsd:string"" msdata:Ordinal=""4"" />\r\n+            </xsd:complexType>\r\n+          </xsd:element>\r\n+          <xsd:element name=""resheader"">\r\n+            <xsd:complexType>\r\n+              <xsd:sequence>\r\n+                <xsd:element name=""value"" type=""xsd:string"" minOccurs=""0"" msdata:Ordinal=""1"" />\r\n+              </xsd:sequence>\r\n+              <xsd:attribute name=""name"" type=""xsd:string"" use=""required"" />\r\n+            </xsd:complexType>\r\n+          </xsd:element>\r\n+        </xsd:choice>\r\n+      </xsd:complexType>\r\n+    </xsd:element>\r\n+  </xsd:schema>\r\n+  <resheader name=""resmimetype"">\r\n+    <value>text/microsoft-resx</value>\r\n+  </resheader>\r\n+  <resheader name=""version"">\r\n+    <value>2.0</value>\r\n+  </resheader>\r\n+  <resheader name=""reader"">\r\n+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>\r\n+  </resheader>\r\n+  <resheader name=""writer"">\r\n+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>\r\n+  </resheader>\r\n+</root>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/Properties/Settings.Designer.cs', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+\ufeff//------------------------------------------------------------------------------\r\n+// <auto-generated>\r\n+//     This code was generated by a tool.\r\n+//     Runtime Version:4.0.30319.42000\r\n+//\r\n+//     Changes to this file may cause incorrect behavior and will be lost if\r\n+//     the code is regenerated.\r\n+// </auto-generated>\r\n+//------------------------------------------------------------------------------\r\n+\r\n+namespace FancyZonesEditor.Properties {\r\n+    \r\n+    \r\n+    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\r\n+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator"", ""16.1.0.0"")]\r\n+    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {\r\n+        \r\n+        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));\r\n+        \r\n+        public static Settings Default {\r\n+            get {\r\n+                return defaultInstance;\r\n+            }\r\n+        }\r\n+    }\r\n+}\r'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/Properties/Settings.settings', 'Line Additions': 7, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,7 @@\n+\ufeff<?xml version=\'1.0\' encoding=\'utf-8\'?>\r\n+<SettingsFile xmlns=""uri:settings"" CurrentProfile=""(Default)"">\r\n+  <Profiles>\r\n+    <Profile Name=""(Default)"" />\r\n+  </Profiles>\r\n+  <Settings />\r\n+</SettingsFile>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/RowColInfo.cs', 'Line Additions': 46, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,46 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+\n+namespace FancyZonesEditor\n+{\n+    public class RowColInfo\n+    {\n+        public RowColInfo(int percent)\n+        {\n+            Percent = percent;\n+        }\n+\n+        public RowColInfo(int index, int count)\n+        {\n+            Percent = (c_multiplier / count) + ((index == 0) ? (c_multiplier % count) : 0);\n+        }\n+\n+        private const int c_multiplier = 10000;\n+\n+        public double SetExtent(double start, double totalExtent)\n+        {\n+            Start = start;\n+            Extent = totalExtent * Percent / c_multiplier;\n+            End = Start + Extent;\n+            return Extent;\n+        }\n+\n+        public RowColInfo[] Split(double offset)\n+        {\n+            RowColInfo[] info = new RowColInfo[2];\n+\n+            int newPercent = (int)(Percent * offset / Extent);\n+            info[0] = new RowColInfo(newPercent);\n+            info[1] = new RowColInfo(Percent - newPercent);\n+            return info;\n+        }\n+\n+        public int Percent;\n+        public double Extent;\n+        public double Start;\n+        public double End;\n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/WindowLayout.xaml', 'Line Additions': 52, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,52 @@\n+\ufeff<Window x:Class=""FancyZonesEditor.WindowLayout""\n+        xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""\n+        xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml""\n+        xmlns:d=""http://schemas.microsoft.com/expression/blend/2008""\n+        xmlns:mc=""http://schemas.openxmlformats.org/markup-compatibility/2006""\n+        xmlns:local=""clr-namespace:FancyZonesEditor""\n+        mc:Ignorable=""d""\n+        Title=""Window1"" Height=""450"" Width=""800""\n+        WindowState=""Maximized""\n+        ShowInTaskbar=""False""\n+        ResizeMode=""NoResize""\n+        WindowStyle=""None""\n+        AllowsTransparency=""True""\n+        Background=""Transparent""\n+        Loaded=""onLoad""\n+        >\n+\n+\n+    <Grid x:Name=""Body"">\n+        <Rectangle Fill=""White"" Opacity=""0.5""/>\n+        \n+        <Grid x:Name=""Window1"" >\n+            <Border BorderThickness=""2"" BorderBrush=""Black"">\n+                <Grid>\n+<!--                    \n+                    <Thumb Background=""Red"" Height=""36"" VerticalAlignment=""Top""/>\n+                    <Button Height=""36"" Width=""36"" VerticalAlignment=""Top"" Background=""Red"" FontFamily=""Segoe UI Symbol"" FontSize=""16"" Content=""✖"" HorizontalAlignment=""Right""/>\n+-->\n+                    <Rectangle Fill=""Black"" Opacity=""0.2""/>\n+<!--                    \n+                    <Grid Width=""24"" Height=""24"" HorizontalAlignment=""Right"" VerticalAlignment=""Top"" Margin=""0,10,0,0"">\n+                        <Grid.ColumnDefinitions>\n+                            <ColumnDefinition Width=""*""/>\n+                        </Grid.ColumnDefinitions>\n+                        <Rectangle Fill=""White"" Height=""24"" Width=""2"" Margin=""-33,0,0,0"">\n+                            <Rectangle.RenderTransform>\n+                                <RotateTransform Angle=""-45""/>\n+                            </Rectangle.RenderTransform>\n+                        </Rectangle>\n+                        <Rectangle Fill=""White"" Height=""24"" Width=""2"" Margin=""0,-3,0,0"" VerticalAlignment=""Center"" HorizontalAlignment=""Center"">\n+                            <Rectangle.RenderTransform>\n+                                <RotateTransform Angle=""45""/>\n+                            </Rectangle.RenderTransform>\n+                        </Rectangle>\n+                    </Grid> \n+-->                    \n+                </Grid>\n+            </Border>\n+        </Grid>\n+        \n+    </Grid>\n+</Window>'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/WindowLayout.xaml.cs', 'Line Additions': 32, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,32 @@\n+\ufeffusing System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Text;\n+using System.Threading.Tasks;\n+using System.Windows;\n+using System.Windows.Controls;\n+using System.Windows.Data;\n+using System.Windows.Documents;\n+using System.Windows.Input;\n+using System.Windows.Media;\n+using System.Windows.Media.Imaging;\n+using System.Windows.Shapes;\n+\n+namespace FancyZonesEditor\n+{\n+    /// <summary>\n+    /// Interaction logic for Window1.xaml\n+    /// </summary>\n+    public partial class WindowLayout : Window\n+    {\n+        public WindowLayout()\n+        {\n+            InitializeComponent();\n+        }\n+        void onLoad(object sender, RoutedEventArgs e)\n+        {\n+            //WindowEditor window = new WindowEditor(); window.Show();\n+\n+        }\n+    }\n+}'}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/images/ChromeClose.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/images/Delete.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/editor/FancyZonesEditor/images/Merge.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/lib/FancyZones.cpp', 'Line Additions': 704, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,704 @@\n+#include ""pch.h""\r\n+\r\n+struct FancyZones : public winrt::implements<FancyZones, IFancyZones, IFancyZonesCallback, IZoneWindowHost>\r\n+{\r\n+public:\r\n+    FancyZones(HINSTANCE hinstance, IFancyZonesSettings* settings) noexcept\r\n+        : m_hinstance(hinstance)\r\n+    {\r\n+        m_settings.attach(settings);\r\n+        m_settings->SetCallback(this);\r\n+    }\r\n+\r\n+    // IFancyZones\r\n+    IFACEMETHODIMP_(void) Run() noexcept;\r\n+    IFACEMETHODIMP_(void) Destroy() noexcept;\r\n+\r\n+    // IFancyZonesCallback\r\n+    IFACEMETHODIMP_(bool) InMoveSize() noexcept { std::shared_lock readLock(m_lock); return m_inMoveSize; }\r\n+    IFACEMETHODIMP_(void) MoveSizeStart(HWND window, HMONITOR monitor, POINT const& ptScreen) noexcept;\r\n+    IFACEMETHODIMP_(void) MoveSizeUpdate(HMONITOR monitor, POINT const& ptScreen) noexcept;\r\n+    IFACEMETHODIMP_(void) MoveSizeEnd(HWND window, POINT const& ptScreen) noexcept;\r\n+    IFACEMETHODIMP_(void) VirtualDesktopChanged() noexcept;\r\n+    IFACEMETHODIMP_(void) WindowCreated(HWND window) noexcept;\r\n+    IFACEMETHODIMP_(bool) OnKeyDown(PKBDLLHOOKSTRUCT info) noexcept;\r\n+    IFACEMETHODIMP_(void) ToggleEditor() noexcept;\r\n+\r\n+    // IZoneWindowHost\r\n+    IFACEMETHODIMP_(void) ToggleZoneViewers() noexcept;\r\n+    IFACEMETHODIMP_(void) MoveWindowsOnActiveZoneSetChange() noexcept;\r\n+    IFACEMETHODIMP_(COLORREF) GetZoneHighlightColor() noexcept\r\n+    {\r\n+        // Skip the leading # and convert to long\r\n+        const auto color = m_settings->GetSettings().zoneHightlightColor;\r\n+        const auto tmp = std::stol(color.substr(1), nullptr, 16);\r\n+        const auto nR = (tmp & 0xFF0000) >> 16;\r\n+        const auto nG = (tmp & 0xFF00) >> 8;\r\n+        const auto nB = (tmp & 0xFF);\r\n+        return RGB(nR, nG, nB);\r\n+    }\r\n+\r\n+    LRESULT WndProc(HWND, UINT, WPARAM, LPARAM) noexcept;\r\n+    void OnDisplayChange(DisplayChangeType changeType) noexcept;\r\n+    void ShowZoneEditorForMonitor(HMONITOR monitor) noexcept;\r\n+    void AddZoneWindow(HMONITOR monitor, PCWSTR deviceId) noexcept;\r\n+    void MoveWindowIntoZoneByIndex(HWND window, int index) noexcept;\r\n+\r\n+protected:\r\n+    static LRESULT CALLBACK s_WndProc(HWND, UINT, WPARAM, LPARAM) noexcept;\r\n+\r\n+private:\r\n+    struct require_read_lock\r\n+    {\r\n+        template<typename T>\r\n+        require_read_lock(const std::shared_lock<T>& lock) { lock; }\r\n+\r\n+        template<typename T>\r\n+        require_read_lock(const std::unique_lock<T>& lock) { lock; }\r\n+    };\r\n+\r\n+    struct require_write_lock\r\n+    {\r\n+        template<typename T>\r\n+        require_write_lock(const std::unique_lock<T>& lock) { lock; }\r\n+    };\r\n+\r\n+    void UpdateZoneWindows() noexcept;\r\n+    void MoveWindowsOnDisplayChange() noexcept;\r\n+    void UpdateDragState(require_write_lock) noexcept;\r\n+    void CycleActiveZoneSet(DWORD vkCode) noexcept;\r\n+    void OnSnapHotkey(DWORD vkCode) noexcept;\r\n+    void MoveSizeStartInternal(HWND window, HMONITOR monitor, POINT const& ptScreen, require_write_lock) noexcept;\r\n+    void MoveSizeEndInternal(HWND window, POINT const& ptScreen, require_write_lock) noexcept;\r\n+    void MoveSizeUpdateInternal(HMONITOR monitor, POINT const& ptScreen, require_write_lock) noexcept;\r\n+\r\n+    const HINSTANCE m_hinstance{};\r\n+\r\n+    mutable std::shared_mutex m_lock;\r\n+    HWND m_window{};\r\n+    HWND m_windowMoveSize{}; // The window that is being moved/sized\r\n+    bool m_editorsVisible{}; // Are we showing the zone editors?\r\n+    bool m_inMoveSize{};  // Whether or not a move/size operation is currently active\r\n+    bool m_dragEnabled{}; // True if we should be showing zone hints while dragging\r\n+    std::map<HMONITOR, winrt::com_ptr<IZoneWindow>> m_zoneWindowMap; // Map of monitor to ZoneWindow (one per monitor)\r\n+    winrt::com_ptr<IZoneWindow> m_zoneWindowMoveSize; // ""Active"" ZoneWindow, where the move/size is happening. Will update as drag moves between monitors.\r\n+    winrt::com_ptr<IFancyZonesSettings> m_settings;\r\n+    GUID m_currentVirtualDesktopId{};\r\n+    wil::unique_handle m_terminateEditorEvent;\r\n+\r\n+    static UINT WM_PRIV_VDCHANGED;\r\n+    static UINT WM_PRIV_EDITOR;\r\n+\r\n+    enum class EditorExitKind : byte\r\n+    {\r\n+        Exit,\r\n+        Terminate\r\n+    };\r\n+};\r\n+\r\n+UINT FancyZones::WM_PRIV_VDCHANGED = RegisterWindowMessage(L""{128c2cb0-6bdf-493e-abbe-f8705e04aa95}"");\r\n+UINT FancyZones::WM_PRIV_EDITOR = RegisterWindowMessage(L""{87543824-7080-4e91-9d9c-0404642fc7b6}"");\r\n+\r\n+// IFancyZones\r\n+IFACEMETHODIMP_(void) FancyZones::Run() noexcept\r\n+{\r\n+    std::unique_lock writeLock(m_lock);\r\n+\r\n+    WNDCLASSEXW wcex{};\r\n+    wcex.cbSize = sizeof(WNDCLASSEX);\r\n+    wcex.lpfnWndProc = s_WndProc;\r\n+    wcex.hInstance = m_hinstance;\r\n+    wcex.lpszClassName = L""SuperFancyZones"";\r\n+    RegisterClassExW(&wcex);\r\n+\r\n+    BufferedPaintInit();\r\n+\r\n+    m_window = CreateWindowExW(WS_EX_TOOLWINDOW, L""SuperFancyZones"", L"""", WS_POPUP, 0, 0, 0, 0, nullptr, nullptr, m_hinstance, this);\r\n+    if (!m_window) return;\r\n+\r\n+    RegisterHotKey(m_window, 1, MOD_WIN, VK_OEM_3);\r\n+    VirtualDesktopChanged();\r\n+}\r\n+\r\n+// IFancyZones\r\n+IFACEMETHODIMP_(void) FancyZones::Destroy() noexcept\r\n+{\r\n+    std::unique_lock writeLock(m_lock);\r\n+\r\n+    BufferedPaintUnInit();\r\n+    if (m_window)\r\n+    {\r\n+        DestroyWindow(m_window);\r\n+        m_window = nullptr;\r\n+    }\r\n+}\r\n+\r\n+// IFancyZonesCallback\r\n+IFACEMETHODIMP_(void) FancyZones::MoveSizeStart(HWND window, HMONITOR monitor, POINT const& ptScreen) noexcept\r\n+{\r\n+    std::unique_lock writeLock(m_lock);\r\n+    MoveSizeStartInternal(window, monitor, ptScreen, writeLock);\r\n+}\r\n+\r\n+// IFancyZonesCallback\r\n+IFACEMETHODIMP_(void) FancyZones::MoveSizeUpdate(HMONITOR monitor, POINT const& ptScreen) noexcept\r\n+{\r\n+    std::unique_lock writeLock(m_lock);\r\n+    MoveSizeUpdateInternal(monitor, ptScreen, writeLock);\r\n+}\r\n+\r\n+// IFancyZonesCallback\r\n+IFACEMETHODIMP_(void) FancyZones::MoveSizeEnd(HWND window, POINT const& ptScreen) noexcept\r\n+{\r\n+    std::unique_lock writeLock(m_lock);\r\n+    MoveSizeEndInternal(window, ptScreen, writeLock);\r\n+}\r\n+\r\n+// IFancyZonesCallback\r\n+IFACEMETHODIMP_(void) FancyZones::VirtualDesktopChanged() noexcept\r\n+{\r\n+    // VirtualDesktopChanged is called from another thread but results in new windows being created.\r\n+    // Jump over to the UI thread to handle it.\r\n+    PostMessage(m_window, WM_PRIV_VDCHANGED, 0, 0);\r\n+}\r\n+\r\n+// IFancyZonesCallback\r\n+IFACEMETHODIMP_(void) FancyZones::WindowCreated(HWND window) noexcept\r\n+{\r\n+    if (m_settings->GetSettings().appLastZone_moveWindows)\r\n+    {\r\n+        wchar_t processPath[MAX_PATH] = { 0 };\r\n+        DWORD modulePathSize = GetProcessPath(window, processPath, static_cast<DWORD>(MAX_PATH));\r\n+        if (modulePathSize > 0) \r\n+        {\r\n+            INT zoneIndex = -1;\r\n+            LRESULT res = RegistryHelpers::GetAppLastZone(window, processPath, &zoneIndex);\r\n+            if ((res == ERROR_SUCCESS) && (zoneIndex != -1))\r\n+            {\r\n+                MoveWindowIntoZoneByIndex(window, zoneIndex);\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// IFancyZonesCallback\r\n+IFACEMETHODIMP_(bool) FancyZones::OnKeyDown(PKBDLLHOOKSTRUCT info) noexcept\r\n+{\r\n+    // Return true to swallow the keyboard event\r\n+    bool const shift = GetAsyncKeyState(VK_SHIFT) & 0x8000;\r\n+    bool const win = GetAsyncKeyState(VK_LWIN) & 0x8000;\r\n+    if (win && !shift)\r\n+    {\r\n+        if (!m_settings->GetSettings().overrideSnapHotkeys)\r\n+        {\r\n+            return false;\r\n+        }\r\n+\r\n+        bool const ctrl = GetAsyncKeyState(VK_CONTROL) & 0x8000;\r\n+        if (ctrl)\r\n+        {\r\n+            if ((info->vkCode >= \'0\') && (info->vkCode <= \'9\'))\r\n+            {\r\n+                Trace::FancyZones::OnKeyDown(info->vkCode, win, ctrl, false /* inMoveSize */);\r\n+                CycleActiveZoneSet(info->vkCode);\r\n+                return true;\r\n+            }\r\n+        }\r\n+        else if ((info->vkCode == VK_RIGHT) || (info->vkCode == VK_LEFT))\r\n+        {\r\n+            Trace::FancyZones::OnKeyDown(info->vkCode, win, ctrl, false /* inMoveSize */);\r\n+            OnSnapHotkey(info->vkCode);\r\n+            return true;\r\n+        }\r\n+    }\r\n+    else if (m_inMoveSize && (info->vkCode >= \'0\') && (info->vkCode <= \'9\'))\r\n+    {\r\n+        Trace::FancyZones::OnKeyDown(info->vkCode, win, false /* control */, true/* inMoveSize */);\r\n+        CycleActiveZoneSet(info->vkCode);\r\n+        return true;\r\n+    }\r\n+    return false;\r\n+}\r\n+\r\n+// IFancyZonesCallback\r\n+void FancyZones::ToggleEditor() noexcept\r\n+{\r\n+    {\r\n+        std::shared_lock readLock(m_lock);\r\n+        if (m_terminateEditorEvent)\r\n+        {\r\n+            SetEvent(m_terminateEditorEvent.get());\r\n+            return;\r\n+        }\r\n+    }\r\n+\r\n+    {\r\n+        std::unique_lock writeLock(m_lock);\r\n+        m_terminateEditorEvent.reset(CreateEvent(nullptr, true, false, nullptr));\r\n+    }\r\n+\r\n+    // TODO: multimon support\r\n+    // Pass in args so that the editor shows up on the correct monitor\r\n+    // This can be an HWND, HMONITOR, or the X/Y/Width/Height of the monitor\'s work area, (whichever works best).\r\n+    if (const HMONITOR monitor = MonitorFromWindow(nullptr, MONITOR_DEFAULTTOPRIMARY))\r\n+    {\r\n+        std::shared_lock readLock(m_lock);\r\n+        auto iter = m_zoneWindowMap.find(monitor);\r\n+        if (iter != m_zoneWindowMap.end())\r\n+        {\r\n+            // Pass command line args to the editor to tell it which layout it should pick by default\r\n+            auto activeZoneSet = iter->second->ActiveZoneSet();\r\n+            std::wstring params = iter->second->UniqueId() + L"" "" + std::to_wstring(activeZoneSet->LayoutId());\r\n+            SHELLEXECUTEINFO sei{ sizeof(sei) };\r\n+            sei.fMask = { SEE_MASK_NOCLOSEPROCESS | SEE_MASK_FLAG_NO_UI };\r\n+            sei.lpFile = L""modules\\\\FancyZonesEditor.exe"";\r\n+            sei.lpParameters = params.c_str();\r\n+            sei.nShow = SW_SHOWNORMAL;\r\n+            ShellExecuteEx(&sei);\r\n+\r\n+            // Launch the editor on a background thread\r\n+            // Wait for the editor\'s process to exit\r\n+            // Post back to the main thread to update\r\n+            std::thread waitForEditorThread([window = m_window, processHandle = sei.hProcess, terminateEditorEvent = m_terminateEditorEvent.get()]()\r\n+            {\r\n+                HANDLE waitEvents[2] = { processHandle, terminateEditorEvent };\r\n+                auto result = WaitForMultipleObjects(2, waitEvents, false, INFINITE);\r\n+                if (result == WAIT_OBJECT_0 + 0)\r\n+                {\r\n+                    // Editor exited\r\n+                    // Update any changes it may have made\r\n+                    PostMessage(window, WM_PRIV_EDITOR, 0, static_cast<LPARAM>(EditorExitKind::Exit));\r\n+                }\r\n+                else if (result == WAIT_OBJECT_0 + 1)\r\n+                {\r\n+                    // User hit Win+~ while editor is already running\r\n+                    // Shut it down\r\n+                    TerminateProcess(processHandle, 2);\r\n+                    PostMessage(window, WM_PRIV_EDITOR, 0, static_cast<LPARAM>(EditorExitKind::Terminate));\r\n+                }\r\n+                CloseHandle(processHandle);\r\n+            });\r\n+            waitForEditorThread.detach();\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// IZoneWindowHost\r\n+IFACEMETHODIMP_(void) FancyZones::ToggleZoneViewers() noexcept\r\n+{\r\n+    bool alreadyVisible{};\r\n+\r\n+    {\r\n+        std::unique_lock writeLock(m_lock);\r\n+        alreadyVisible = m_editorsVisible;\r\n+        m_editorsVisible = !alreadyVisible;\r\n+    }\r\n+    Trace::FancyZones::ToggleZoneViewers(!alreadyVisible);\r\n+\r\n+    if (!alreadyVisible)\r\n+    {\r\n+        auto callback = [](HMONITOR monitor, HDC, RECT *, LPARAM data) -> BOOL\r\n+        {\r\n+            auto strongThis = reinterpret_cast<FancyZones*>(data);\r\n+            strongThis->ShowZoneEditorForMonitor(monitor);\r\n+            return TRUE;\r\n+        };\r\n+        EnumDisplayMonitors(nullptr, nullptr, callback, reinterpret_cast<LPARAM>(this));\r\n+    }\r\n+    else\r\n+    {\r\n+        std::shared_lock readLock(m_lock);\r\n+        for (auto iter : m_zoneWindowMap)\r\n+        {\r\n+            iter.second->HideZoneWindow();\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+// IZoneWindowHost\r\n+IFACEMETHODIMP_(void) FancyZones::MoveWindowsOnActiveZoneSetChange() noexcept\r\n+{\r\n+    if (m_settings->GetSettings().zoneSetChange_moveWindows)\r\n+    {\r\n+        MoveWindowsOnDisplayChange();\r\n+    }\r\n+}\r\n+\r\n+LRESULT FancyZones::WndProc(HWND window, UINT message, WPARAM wparam, LPARAM lparam) noexcept\r\n+{\r\n+    switch (message)\r\n+    {\r\n+    case WM_HOTKEY:\r\n+    {\r\n+        if (wparam == 1)\r\n+        {\r\n+            if (m_settings->GetSettings().use_standalone_editor)\r\n+            {\r\n+                ToggleEditor();\r\n+            }\r\n+            else\r\n+            {\r\n+                ToggleZoneViewers();\r\n+            }\r\n+        }\r\n+    }\r\n+    break;\r\n+\r\n+    case WM_SETTINGCHANGE:\r\n+    {\r\n+        if (wparam == SPI_SETWORKAREA)\r\n+        {\r\n+            OnDisplayChange(DisplayChangeType::WorkArea);\r\n+        }\r\n+    }\r\n+    break;\r\n+\r\n+    case WM_DISPLAYCHANGE:\r\n+    {\r\n+        OnDisplayChange(DisplayChangeType::DisplayChange);\r\n+    }\r\n+    break;\r\n+\r\n+    default:\r\n+    {\r\n+        if (message == WM_PRIV_VDCHANGED)\r\n+        {\r\n+            OnDisplayChange(DisplayChangeType::VirtualDesktop);\r\n+        }\r\n+        else if (message == WM_PRIV_EDITOR)\r\n+        {\r\n+            if (lparam == static_cast<LPARAM>(EditorExitKind::Exit))\r\n+            {\r\n+                // Don\'t reload settings if we terminated the editor\r\n+                OnDisplayChange(DisplayChangeType::Editor);\r\n+            }\r\n+\r\n+            {\r\n+                // Clean up the event either way\r\n+                std::unique_lock writeLock(m_lock);\r\n+                m_terminateEditorEvent.release();\r\n+            }\r\n+        }\r\n+        else\r\n+        {\r\n+            return DefWindowProc(window, message, wparam, lparam);\r\n+        }\r\n+    }\r\n+    break;\r\n+    }\r\n+    return 0;\r\n+}\r\n+\r\n+void FancyZones::OnDisplayChange(DisplayChangeType changeType) noexcept\r\n+{\r\n+    if (changeType == DisplayChangeType::VirtualDesktop)\r\n+    {\r\n+        // Explorer persists this value to the registry on a per session basis but only after\r\n+        // the first virtual desktop switch happens. If the user hasn\'t switched virtual desktops in this session\r\n+        // then this value will be empty. This means loading the first virtual desktop\'s configuration can be\r\n+        // funky the first time we load up at boot since the user will not have switched virtual desktops yet.\r\n+        std::shared_lock readLock(m_lock);\r\n+        GUID currentVirtualDesktopId{};\r\n+        if (SUCCEEDED(RegistryHelpers::GetCurrentVirtualDesktop(&currentVirtualDesktopId)))\r\n+        {\r\n+            m_currentVirtualDesktopId = currentVirtualDesktopId;\r\n+        }\r\n+        else\r\n+        {\r\n+            // TODO: Use the previous ""Desktop 1"" fallback\r\n+            // Need to maintain a map of desktop name to virtual desktop uuid\r\n+        }\r\n+    }\r\n+\r\n+    UpdateZoneWindows();\r\n+\r\n+    if ((changeType == DisplayChangeType::WorkArea) || (changeType == DisplayChangeType::DisplayChange))\r\n+    {\r\n+        if (m_settings->GetSettings().displayChange_moveWindows)\r\n+        {\r\n+            MoveWindowsOnDisplayChange();\r\n+        }\r\n+    }\r\n+    else if (changeType == DisplayChangeType::VirtualDesktop)\r\n+    {\r\n+        if (m_settings->GetSettings().virtualDesktopChange_moveWindows)\r\n+        {\r\n+            MoveWindowsOnDisplayChange();\r\n+        }\r\n+    }\r\n+    else if (changeType == DisplayChangeType::Editor)\r\n+    {\r\n+        if (m_settings->GetSettings().zoneSetChange_moveWindows)\r\n+        {\r\n+            MoveWindowsOnDisplayChange();\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+void FancyZones::ShowZoneEditorForMonitor(HMONITOR monitor) noexcept\r\n+{\r\n+    std::shared_lock readLock(m_lock);\r\n+\r\n+    auto iter = m_zoneWindowMap.find(monitor);\r\n+    if (iter != m_zoneWindowMap.end())\r\n+    {\r\n+        bool const activate = MonitorFromPoint(POINT(), MONITOR_DEFAULTTOPRIMARY) == monitor;\r\n+        iter->second->ShowZoneWindow(activate, false /*fadeIn*/);\r\n+    }\r\n+}\r\n+\r\n+void FancyZones::AddZoneWindow(HMONITOR monitor, PCWSTR deviceId) noexcept\r\n+{\r\n+    std::unique_lock writeLock(m_lock);\r\n+    wil::unique_cotaskmem_string virtualDesktopId;\r\n+    if (SUCCEEDED_LOG(StringFromCLSID(m_currentVirtualDesktopId, &virtualDesktopId)))\r\n+    {\r\n+        const bool flash = m_settings->GetSettings().zoneSetChange_flashZones;\r\n+        if (auto zoneWindow = MakeZoneWindow(this, m_hinstance, monitor, deviceId, virtualDesktopId.get(), flash))\r\n+        {\r\n+            m_zoneWindowMap[monitor] = std::move(zoneWindow);\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+void FancyZones::MoveWindowIntoZoneByIndex(HWND window, int index) noexcept\r\n+{\r\n+    std::shared_lock readLock(m_lock);\r\n+    if (window != m_windowMoveSize)\r\n+    {\r\n+        if (const HMONITOR monitor = MonitorFromWindow(window, MONITOR_DEFAULTTONULL))\r\n+        {\r\n+            auto iter = m_zoneWindowMap.find(monitor);\r\n+            if (iter != m_zoneWindowMap.end())\r\n+            {\r\n+                iter->second->MoveWindowIntoZoneByIndex(window, index);\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+LRESULT CALLBACK FancyZones::s_WndProc(HWND window, UINT message, WPARAM wparam, LPARAM lparam) noexcept\r\n+{\r\n+    auto thisRef = reinterpret_cast<FancyZones*>(GetWindowLongPtr(window, GWLP_USERDATA));\r\n+    if (!thisRef && (message == WM_CREATE))\r\n+    {\r\n+        const auto createStruct = reinterpret_cast<LPCREATESTRUCT>(lparam);\r\n+        thisRef = reinterpret_cast<FancyZones*>(createStruct->lpCreateParams);\r\n+        SetWindowLongPtr(window, GWLP_USERDATA, reinterpret_cast<LONG_PTR>(thisRef));\r\n+    }\r\n+\r\n+    return thisRef ? thisRef->WndProc(window, message, wparam, lparam) :\r\n+        DefWindowProc(window, message, wparam, lparam);\r\n+}\r\n+\r\n+void FancyZones::UpdateZoneWindows() noexcept\r\n+{\r\n+    auto callback = [](HMONITOR monitor, HDC, RECT *, LPARAM data) -> BOOL\r\n+    {\r\n+        MONITORINFOEX mi;\r\n+        mi.cbSize = sizeof(mi);\r\n+        if (GetMonitorInfo(monitor, &mi))\r\n+        {\r\n+            DISPLAY_DEVICE displayDevice = { sizeof(displayDevice) };\r\n+            PCWSTR deviceId = nullptr;\r\n+\r\n+            bool validMonitor = true;\r\n+            if (EnumDisplayDevices(mi.szDevice, 0, &displayDevice, 1))\r\n+            {\r\n+                if (WI_IsFlagSet(displayDevice.StateFlags, DISPLAY_DEVICE_MIRRORING_DRIVER))\r\n+                {\r\n+                    validMonitor = FALSE;\r\n+                }\r\n+                else if (displayDevice.DeviceID[0] != L\'\\0\')\r\n+                {\r\n+                    deviceId = displayDevice.DeviceID;\r\n+                }\r\n+            }\r\n+\r\n+            if (validMonitor)\r\n+            {\r\n+                if (!deviceId)\r\n+                {\r\n+                    deviceId = GetSystemMetrics(SM_REMOTESESSION) ?\r\n+                        L""\\\\\\\\?\\\\DISPLAY#REMOTEDISPLAY#"" :\r\n+                        L""\\\\\\\\?\\\\DISPLAY#LOCALDISPLAY#"";\r\n+                }\r\n+\r\n+                auto strongThis = reinterpret_cast<FancyZones*>(data);\r\n+                strongThis->AddZoneWindow(monitor, deviceId);\r\n+            }\r\n+        }\r\n+        return TRUE;\r\n+    };\r\n+\r\n+    {\r\n+        std::unique_lock writeLock(m_lock);\r\n+        m_zoneWindowMap.clear();\r\n+    }\r\n+    EnumDisplayMonitors(nullptr, nullptr, callback, reinterpret_cast<LPARAM>(this));\r\n+}\r\n+\r\n+void FancyZones::MoveWindowsOnDisplayChange() noexcept\r\n+{\r\n+    auto callback = [](HWND window, LPARAM data) -> BOOL\r\n+    {\r\n+        int i = static_cast<int>(reinterpret_cast<UINT_PTR>(::GetProp(window, ZONE_STAMP)));\r\n+        if (i != 0)\r\n+        {\r\n+            // i is off by 1 since 0 is special.\r\n+            auto strongThis = reinterpret_cast<FancyZones*>(data);\r\n+            strongThis->MoveWindowIntoZoneByIndex(window, i-1);\r\n+        }\r\n+        return TRUE;\r\n+    };\r\n+    EnumWindows(callback, reinterpret_cast<LPARAM>(this));\r\n+}\r\n+\r\n+void FancyZones::UpdateDragState(require_write_lock) noexcept\r\n+{\r\n+    const bool shift = GetAsyncKeyState(VK_SHIFT) & 0x8000;\r\n+    m_dragEnabled = m_settings->GetSettings().shiftDrag ? shift : !shift;\r\n+}\r\n+\r\n+void FancyZones::CycleActiveZoneSet(DWORD vkCode) noexcept\r\n+{\r\n+    if (const HWND window = GetForegroundWindow())\r\n+    {\r\n+        if (const HMONITOR monitor = MonitorFromWindow(window, MONITOR_DEFAULTTONULL))\r\n+        {\r\n+            std::shared_lock readLock(m_lock);\r\n+            auto iter = m_zoneWindowMap.find(monitor);\r\n+            if (iter != m_zoneWindowMap.end())\r\n+            {\r\n+                iter->second->CycleActiveZoneSet(vkCode);\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+void FancyZones::OnSnapHotkey(DWORD vkCode) noexcept\r\n+{\r\n+    if (const HWND window = GetForegroundWindow())\r\n+    {\r\n+        if (const HMONITOR monitor = MonitorFromWindow(window, MONITOR_DEFAULTTONULL))\r\n+        {\r\n+            std::shared_lock readLock(m_lock);\r\n+            auto iter = m_zoneWindowMap.find(monitor);\r\n+            if (iter != m_zoneWindowMap.end())\r\n+            {\r\n+                iter->second->MoveWindowIntoZoneByDirection(window, vkCode);\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+void FancyZones::MoveSizeStartInternal(HWND window, HMONITOR monitor, POINT const& ptScreen, require_write_lock writeLock) noexcept\r\n+{\r\n+    // Only enter move/size if the cursor is in the titlebar.\r\n+    // This prevents resize from triggering zones.\r\n+    RECT windowRect{};\r\n+    ::GetWindowRect(window, &windowRect);\r\n+\r\n+    TITLEBARINFO titlebarInfo{ sizeof(titlebarInfo) };\r\n+    ::GetTitleBarInfo(window, &titlebarInfo);\r\n+\r\n+    // Titlebar height is weird and apps can do custom drag areas.\r\n+    // Give it half of the height of the window to make sure.\r\n+    titlebarInfo.rcTitleBar.bottom += ((windowRect.bottom - windowRect.top) / 2);\r\n+\r\n+    if (PtInRect(&titlebarInfo.rcTitleBar, ptScreen))\r\n+    {\r\n+        m_inMoveSize = true;\r\n+\r\n+        auto iter = m_zoneWindowMap.find(monitor);\r\n+        if (iter != m_zoneWindowMap.end())\r\n+        {\r\n+            m_windowMoveSize = window;\r\n+\r\n+            // This updates m_dragEnabled depending on if the shift key is being held down.\r\n+            UpdateDragState(writeLock);\r\n+\r\n+            if (m_dragEnabled)\r\n+            {\r\n+                m_zoneWindowMoveSize = iter->second;\r\n+                m_zoneWindowMoveSize->MoveSizeEnter(window, m_dragEnabled);\r\n+            }\r\n+            else if (m_zoneWindowMoveSize)\r\n+            {\r\n+                m_zoneWindowMoveSize->MoveSizeCancel();\r\n+                m_zoneWindowMoveSize = nullptr;\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+void FancyZones::MoveSizeEndInternal(HWND window, POINT const& ptScreen, require_write_lock) noexcept\r\n+{\r\n+    m_inMoveSize = false;\r\n+    m_dragEnabled = false;\r\n+    m_windowMoveSize = nullptr;\r\n+    if (m_zoneWindowMoveSize)\r\n+    {\r\n+        auto zoneWindow = std::move(m_zoneWindowMoveSize);\r\n+        zoneWindow->MoveSizeEnd(window, ptScreen);\r\n+    }\r\n+    else\r\n+    {\r\n+        ::RemoveProp(window, ZONE_STAMP);\r\n+\r\n+        wchar_t processPath[MAX_PATH]{};\r\n+        DWORD processPathSize = GetProcessPath(window, processPath, static_cast<DWORD>(MAX_PATH));\r\n+        if (processPathSize > 0)\r\n+        {\r\n+            RegistryHelpers::SaveAppLastZone(window, processPath, -1);\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+void FancyZones::MoveSizeUpdateInternal(HMONITOR monitor, POINT const& ptScreen, require_write_lock writeLock) noexcept\r\n+{\r\n+    if (m_inMoveSize)\r\n+    {\r\n+        // This updates m_dragEnabled depending on if the shift key is being held down.\r\n+        UpdateDragState(writeLock);\r\n+\r\n+        if (m_zoneWindowMoveSize)\r\n+        {\r\n+            // Update the ZoneWindow already handling move/size\r\n+            if (!m_dragEnabled)\r\n+            {\r\n+                // Drag got disabled, tell it to cancel and clear out m_zoneWindowMoveSize\r\n+                auto zoneWindow = std::move(m_zoneWindowMoveSize);\r\n+                zoneWindow->MoveSizeCancel();\r\n+            }\r\n+            else\r\n+            {\r\n+                auto iter = m_zoneWindowMap.find(monitor);\r\n+                if (iter != m_zoneWindowMap.end())\r\n+                {\r\n+                    if (iter->second != m_zoneWindowMoveSize)\r\n+                    {\r\n+                        // The drag has moved to a different monitor.\r\n+                        auto const isDragEnabled = m_zoneWindowMoveSize->IsDragEnabled();\r\n+                        m_zoneWindowMoveSize->MoveSizeCancel();\r\n+                        m_zoneWindowMoveSize = iter->second;\r\n+                        m_zoneWindowMoveSize->MoveSizeEnter(m_windowMoveSize, isDragEnabled);\r\n+                    }\r\n+                    m_zoneWindowMoveSize->MoveSizeUpdate(ptScreen, m_dragEnabled);\r\n+                }\r\n+            }\r\n+        }\r\n+        else if (m_dragEnabled)\r\n+        {\r\n+            // We\'ll get here if the user presses/releases shift while dragging.\r\n+            // Restart the drag on the ZoneWindow that m_windowMoveSize is on\r\n+            MoveSizeStartInternal(m_windowMoveSize, monitor, ptScreen, writeLock);\r\n+            MoveSizeUpdateInternal(monitor, ptScreen, writeLock);\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+winrt::com_ptr<IFancyZones> MakeFancyZones(HINSTANCE hinstance, IFancyZonesSettings* settings) noexcept\r\n+{\r\n+    return winrt::make_self<FancyZones>(hinstance, settings);\r\n+}\r'}, {'Name': 'src/modules/fancyzones/lib/FancyZones.h', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/lib/FancyZonesLib.vcxproj', 'Line Additions': 133, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,133 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project DefaultTargets=""Build"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup Label=""ProjectConfigurations"">\r\n+    <ProjectConfiguration Include=""Debug|x64"">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=""Release|x64"">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=""Globals"">\r\n+    <VCProjectVersion>16.0</VCProjectVersion>\r\n+    <ProjectGuid>{F9C68EDF-AC74-4B77-9AF1-005D9C9F6A99}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+    <RootNamespace>lib</RootNamespace>\r\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\r\n+    <ProjectName>FancyZonesLib</ProjectName>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseDebugLibraries>true</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\r\n+    <UseDebugLibraries>false</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\r\n+  <ImportGroup Label=""ExtensionSettings"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""Shared"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=""UserMacros"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <LinkIncremental>true</LinkIncremental>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <LinkIncremental>false</LinkIncremental>\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <ClCompile>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <PreprocessorDefinitions>_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+      <AdditionalIncludeDirectories>..\\;..\\..\\..\\common\\inc;..\\..\\..\\common\\Telemetry;..\\..\\;..\\..\\..\\;..\\..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <ClCompile>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <PreprocessorDefinitions>NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+      <AdditionalIncludeDirectories>..\\;..\\..\\..\\common\\inc;..\\..\\..\\common\\Telemetry;..\\..\\;..\\..\\..\\;..\\..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""FancyZones.h"" />\r\n+    <ClInclude Include=""pch.h"" />\r\n+    <ClInclude Include=""RegistryHelpers.h"" />\r\n+    <ClInclude Include=""resource.h"" />\r\n+    <ClInclude Include=""Settings.h"" />\r\n+    <ClInclude Include=""trace.h"" />\r\n+    <ClInclude Include=""util.h"" />\r\n+    <ClInclude Include=""Zone.h"" />\r\n+    <ClInclude Include=""ZoneSet.h"" />\r\n+    <ClInclude Include=""ZoneWindow.h"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""FancyZones.cpp"" />\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""Settings.cpp"" />\r\n+    <ClCompile Include=""trace.cpp"" />\r\n+    <ClCompile Include=""Zone.cpp"" />\r\n+    <ClCompile Include=""ZoneSet.cpp"" />\r\n+    <ClCompile Include=""ZoneWindow.cpp"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""fancyzones.rc"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=""packages.config"" />\r\n+  </ItemGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\r\n+  <ImportGroup Label=""ExtensionTargets"">\r\n+    <Import Project=""..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets"" Condition=""Exists(\'..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets\')"" />\r\n+  </ImportGroup>\r\n+  <Target Name=""EnsureNuGetPackageBuildImports"" BeforeTargets=""PrepareForBuild"">\r\n+    <PropertyGroup>\r\n+      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>\r\n+    </PropertyGroup>\r\n+    <Error Condition=""!Exists(\'..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets\')"" Text=""$([System.String]::Format(\'$(ErrorText)\', \'..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets\'))"" />\r\n+  </Target>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/lib/FancyZonesLib.vcxproj.filters', 'Line Additions': 81, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,81 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup>\r\n+    <Filter Include=""Source Files"">\r\n+      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>\r\n+      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=""Header Files"">\r\n+      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>\r\n+      <Extensions>h;hh;hpp;hxx;hm;inl;inc;ipp;xsd</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=""Resource Files"">\r\n+      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>\r\n+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""pch.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""Zone.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""ZoneSet.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""ZoneWindow.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""FancyZones.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""RegistryHelpers.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""Settings.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""util.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""resource.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""trace.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""Zone.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""ZoneSet.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""ZoneWindow.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""FancyZones.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""Settings.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""trace.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""fancyzones.rc"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ResourceCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=""packages.config"" />\r\n+    <None Include=""fancyzones.def"" />\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/lib/RegistryHelpers.h', 'Line Additions': 164, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,164 @@\n+#pragma once\r\n+\r\n+#include <shlwapi.h>\r\n+\r\n+namespace RegistryHelpers\r\n+{\r\n+    static PCWSTR REG_SETTINGS = L""Software\\\\SuperFancyZones"";\r\n+    static PCWSTR APP_ZONE_HISTORY_SUBKEY = L""AppZoneHistory"";\r\n+\r\n+    inline PCWSTR GetKey(_In_opt_ PCWSTR monitorId, PWSTR key, size_t keyLength)\r\n+    {\r\n+        if (monitorId)\r\n+        {\r\n+            StringCchPrintf(key, keyLength, L""%s\\\\%s"", REG_SETTINGS, monitorId);\r\n+        }\r\n+        else\r\n+        {\r\n+            StringCchPrintf(key, keyLength, L""%s"", REG_SETTINGS);\r\n+        }\r\n+        return key;\r\n+    }\r\n+\r\n+    inline HKEY OpenKey(_In_opt_ PCWSTR monitorId)\r\n+    {\r\n+        HKEY hkey;\r\n+        wchar_t key[256];\r\n+        GetKey(monitorId, key, ARRAYSIZE(key));\r\n+        if (RegOpenKeyExW(HKEY_CURRENT_USER, key, 0, KEY_ALL_ACCESS, &hkey) == ERROR_SUCCESS)\r\n+        {\r\n+            return hkey;\r\n+        }\r\n+        return nullptr;\r\n+    }\r\n+\r\n+    inline HKEY CreateKey(PCWSTR monitorId)\r\n+    {\r\n+        HKEY hkey;\r\n+        wchar_t key[256]{};\r\n+        GetKey(monitorId, key, ARRAYSIZE(key));\r\n+        if (RegCreateKeyExW(HKEY_CURRENT_USER, key, 0, nullptr, REG_OPTION_NON_VOLATILE, KEY_ALL_ACCESS, nullptr, &hkey, nullptr) == ERROR_SUCCESS)\r\n+        {\r\n+            return hkey;\r\n+        }\r\n+        return nullptr;\r\n+    }\r\n+\r\n+    inline LSTATUS GetAppLastZone(HWND window, PCWSTR appPath, _Out_ PINT iZoneIndex)\r\n+    {\r\n+        *iZoneIndex = -1; \r\n+\r\n+        LSTATUS res{};\r\n+        if (auto monitor = MonitorFromWindow(window, MONITOR_DEFAULTTONULL))\r\n+        {\r\n+            wchar_t keyPath[256]{};\r\n+            StringCchPrintf(keyPath, ARRAYSIZE(keyPath), L""%s\\\\%s\\\\%x"", REG_SETTINGS, APP_ZONE_HISTORY_SUBKEY, monitor);\r\n+\r\n+            DWORD zoneIndex;\r\n+            DWORD dataType = REG_DWORD;\r\n+            DWORD dataSize = sizeof(DWORD);\r\n+            res = SHRegGetUSValueW(keyPath, appPath, &dataType, &zoneIndex, &dataSize, FALSE, nullptr, 0);\r\n+            if (res == ERROR_SUCCESS)\r\n+            {\r\n+                *iZoneIndex = static_cast<INT>(zoneIndex);\r\n+            }\r\n+        }\r\n+        return res;\r\n+    }\r\n+\r\n+    // Pass -1 for the zoneIndex to delete the entry from the registry\r\n+    inline void SaveAppLastZone(HWND window, PCWSTR appPath, DWORD zoneIndex)\r\n+    {\r\n+        LSTATUS res{};\r\n+        if (auto monitor = MonitorFromWindow(window, MONITOR_DEFAULTTONULL))\r\n+        {\r\n+            wchar_t keyPath[256]{};\r\n+            StringCchPrintf(keyPath, ARRAYSIZE(keyPath), L""%s\\\\%s\\\\%x"", REG_SETTINGS, APP_ZONE_HISTORY_SUBKEY, monitor);\r\n+            if (zoneIndex == -1)\r\n+            {\r\n+                SHDeleteValueW(HKEY_CURRENT_USER, keyPath, appPath);\r\n+            }\r\n+            else\r\n+            {\r\n+                SHRegSetUSValueW(keyPath, appPath, REG_DWORD, &zoneIndex, sizeof(zoneIndex), SHREGSET_FORCE_HKCU);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    inline void GetString(PCWSTR uniqueId, PCWSTR setting, PWSTR value, DWORD cbValue)\r\n+    {\r\n+        wchar_t key[256]{};\r\n+        GetKey(uniqueId, key, ARRAYSIZE(key));\r\n+        SHRegGetUSValueW(key, setting, nullptr, value, &cbValue, FALSE, nullptr, 0);\r\n+    }\r\n+\r\n+    inline void SetString(PCWSTR uniqueId, PCWSTR setting, PCWSTR value)\r\n+    {\r\n+        wchar_t key[256]{};\r\n+        GetKey(uniqueId, key, ARRAYSIZE(key));\r\n+        SHRegSetUSValueW(key, setting, REG_SZ, value, sizeof(value) * static_cast<DWORD>(wcslen(value)), SHREGSET_FORCE_HKCU);\r\n+    }\r\n+\r\n+    template<typename t>\r\n+    inline void GetValue(PCWSTR monitorId, PCWSTR setting, t* value, DWORD size)\r\n+    {\r\n+        wchar_t key[256]{};\r\n+        GetKey(monitorId, key, ARRAYSIZE(key));\r\n+        SHRegGetUSValueW(key, setting, nullptr, value, &size, FALSE, nullptr, 0);\r\n+    }\r\n+\r\n+    template<typename t>\r\n+    inline void SetValue(PCWSTR monitorId, PCWSTR setting, t value, DWORD size)\r\n+    {\r\n+        wchar_t key[256]{};\r\n+        GetKey(monitorId, key, ARRAYSIZE(key));\r\n+        SHRegSetUSValueW(key, setting, REG_BINARY, &value, size, SHREGSET_FORCE_HKCU);\r\n+    }\r\n+\r\n+    inline void DeleteZoneSet(PCWSTR monitorId, GUID guid)\r\n+    {\r\n+        wil::unique_cotaskmem_string zoneSetId;\r\n+        if (SUCCEEDED_LOG(StringFromCLSID(guid, &zoneSetId)))\r\n+        {\r\n+            wchar_t key[256]{};\r\n+            GetKey(monitorId, key, ARRAYSIZE(key));\r\n+            SHDeleteValueW(HKEY_CURRENT_USER, key, zoneSetId.get());\r\n+        }\r\n+    }\r\n+\r\n+    inline void DeleteAllZoneSets(PCWSTR monitorId)\r\n+    {\r\n+        wchar_t key[256]{};\r\n+        GetKey(monitorId, key, ARRAYSIZE(key));\r\n+        SHDeleteKey(HKEY_CURRENT_USER, key);\r\n+    }\r\n+\r\n+    inline HRESULT GetCurrentVirtualDesktop(_Out_ GUID* id)\r\n+    {\r\n+        *id = GUID_NULL;\r\n+\r\n+        DWORD sessionId;\r\n+        ProcessIdToSessionId(GetCurrentProcessId(), &sessionId);\r\n+\r\n+        wchar_t sessionKeyPath[256]{};\r\n+        RETURN_IF_FAILED(\r\n+            StringCchPrintfW(\r\n+                sessionKeyPath,\r\n+                ARRAYSIZE(sessionKeyPath),\r\n+                L""Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\SessionInfo\\\\%d\\\\VirtualDesktops"",\r\n+                sessionId));\r\n+        wil::unique_hkey key{};\r\n+        GUID value{};\r\n+\r\n+        if (RegOpenKeyExW(HKEY_CURRENT_USER, sessionKeyPath, 0, KEY_ALL_ACCESS, &key) == ERROR_SUCCESS)\r\n+        {\r\n+            DWORD size = sizeof(value);\r\n+            if (RegQueryValueExW(key.get(), L""CurrentVirtualDesktop"", 0, nullptr, reinterpret_cast<BYTE*>(&value), &size) == ERROR_SUCCESS)\r\n+            {\r\n+                *id = value;\r\n+                return S_OK;\r\n+            }\r\n+        }\r\n+        return E_FAIL;\r\n+    }\r\n+}\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/lib/Settings.cpp', 'Line Additions': 155, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,155 @@\n+#include ""pch.h""\r\n+#include <common/settings_objects.h>\r\n+\r\n+struct FancyZonesSettings : winrt::implements<FancyZonesSettings, IFancyZonesSettings>\r\n+{\r\n+public:\r\n+    FancyZonesSettings(HINSTANCE hinstance, PCWSTR name)\r\n+        : m_hinstance(hinstance)\r\n+        , m_name(name)\r\n+    {\r\n+        LoadSettings(name, true /*fromFile*/);\r\n+    }\r\n+\r\n+    IFACEMETHODIMP_(void) SetCallback(IFancyZonesCallback* callback) { m_callback.attach(callback); }\r\n+    IFACEMETHODIMP_(bool) GetConfig(_Out_ PWSTR buffer, _Out_ int *buffer_sizeg) noexcept;\r\n+    IFACEMETHODIMP_(void) SetConfig(PCWSTR config) noexcept;\r\n+    IFACEMETHODIMP_(void) CallCustomAction(PCWSTR action) noexcept;\r\n+    IFACEMETHODIMP_(Settings) GetSettings() noexcept { return m_settings; }\r\n+\r\n+private:\r\n+    void LoadSettings(PCWSTR config, bool fromFile) noexcept;\r\n+    void SaveSettings() noexcept;\r\n+\r\n+    winrt::com_ptr<IFancyZonesCallback> m_callback;\r\n+    const HINSTANCE m_hinstance;\r\n+    PCWSTR m_name{};\r\n+\r\n+    Settings m_settings;\r\n+\r\n+    struct\r\n+    {\r\n+        PCWSTR name;\r\n+        bool* value;\r\n+        int resourceId;\r\n+    } m_configBools[8] = {\r\n+        { L""fancyzones_shiftDrag"", &m_settings.shiftDrag, IDS_SETTING_DESCRIPTION_SHIFTDRAG },\r\n+        { L""fancyzones_overrideSnapHotkeys"", &m_settings.overrideSnapHotkeys, IDS_SETTING_DESCRIPTION_OVERRIDE_SNAP_HOTKEYS },\r\n+        { L""fancyzones_zoneSetChange_flashZones"", &m_settings.zoneSetChange_flashZones, IDS_SETTING_DESCRIPTION_ZONESETCHANGE_FLASHZONES },\r\n+        { L""fancyzones_displayChange_moveWindows"", &m_settings.displayChange_moveWindows, IDS_SETTING_DESCRIPTION_DISPLAYCHANGE_MOVEWINDOWS },\r\n+        { L""fancyzones_zoneSetChange_moveWindows"", &m_settings.zoneSetChange_moveWindows, IDS_SETTING_DESCRIPTION_ZONESETCHANGE_MOVEWINDOWS },\r\n+        { L""fancyzones_virtualDesktopChange_moveWindows"", &m_settings.virtualDesktopChange_moveWindows, IDS_SETTING_DESCRIPTION_VIRTUALDESKTOPCHANGE_MOVEWINDOWS },\r\n+        { L""fancyzones_appLastZone_moveWindows"", &m_settings.appLastZone_moveWindows, IDS_SETTING_DESCRIPTION_APPLASTZONE_MOVEWINDOWS },\r\n+        { L""fancyzones_use_standalone_editor"", &m_settings.use_standalone_editor, IDS_SETTING_DESCRIPTION_USE_STANDALONE_EDITOR },\r\n+    };\r\n+\r\n+    struct\r\n+    {\r\n+        PCWSTR name;\r\n+        std::wstring* value;\r\n+        int resourceId;\r\n+    } m_configStrings[1] = {\r\n+        { L""fancyzones_zoneHighlightColor"", &m_settings.zoneHightlightColor, IDS_SETTING_DESCRIPTION_ZONEHIGHLIGHTCOLOR },\r\n+    };\r\n+\r\n+};\r\n+\r\n+IFACEMETHODIMP_(bool) FancyZonesSettings::GetConfig(_Out_ PWSTR buffer, _Out_ int *buffer_size) noexcept\r\n+{\r\n+    PowerToysSettings::Settings settings(m_hinstance, m_name);\r\n+\r\n+    // Pass a string literal or a resource id to Settings::set_description().\r\n+    settings.set_description(IDS_SETTING_DESCRIPTION);\r\n+    settings.set_icon_key(L""pt-fancy-zones"");\r\n+    settings.set_overview_link(L""https://github.com/microsoft/PowerToys/blob/master/src/modules/fancyzones/README.md"");\r\n+    settings.set_video_link(L""https://youtu.be/rTtGzZYAXgY"");\r\n+\r\n+    // Add a custom action property. When using this settings type, the ""PowertoyModuleIface::call_custom_action()""\r\n+    // method should be overriden as well.\r\n+    settings.add_custom_action(\r\n+        L""ToggledFZEditor"", // action name.\r\n+        IDS_SETTING_LAUNCH_EDITOR_LABEL,\r\n+        IDS_SETTING_LAUNCH_EDITOR_BUTTON,\r\n+        IDS_SETTING_LAUNCH_EDITOR_DESCRIPTION\r\n+    );\r\n+\r\n+    for (auto const& setting : m_configBools)\r\n+    {\r\n+        settings.add_bool_toogle(setting.name, setting.resourceId, *setting.value);\r\n+    }\r\n+\r\n+    for (auto const& setting : m_configStrings)\r\n+    {\r\n+        settings.add_color_picker(setting.name, setting.resourceId, *setting.value);\r\n+    }\r\n+\r\n+    return settings.serialize_to_buffer(buffer, buffer_size);\r\n+}\r\n+\r\n+IFACEMETHODIMP_(void) FancyZonesSettings::SetConfig(PCWSTR config) noexcept try\r\n+{\r\n+    LoadSettings(config, false /*fromFile*/);\r\n+    SaveSettings();\r\n+    Trace::SettingsChanged(m_settings);\r\n+}\r\n+CATCH_LOG();\r\n+\r\n+IFACEMETHODIMP_(void) FancyZonesSettings::CallCustomAction(PCWSTR action) noexcept try\r\n+{\r\n+    // Parse the action values, including name.\r\n+    PowerToysSettings::CustomActionObject action_object =\r\n+        PowerToysSettings::CustomActionObject::from_json_string(action);\r\n+\r\n+    if (action_object.get_name() == L""ToggledFZEditor"")\r\n+    {\r\n+        m_callback->ToggleEditor();\r\n+    }\r\n+}\r\n+CATCH_LOG();\r\n+\r\n+void FancyZonesSettings::LoadSettings(PCWSTR config, bool fromFile) noexcept try\r\n+{\r\n+    PowerToysSettings::PowerToyValues values = fromFile ?\r\n+        PowerToysSettings::PowerToyValues::load_from_settings_file(m_name) :\r\n+        PowerToysSettings::PowerToyValues::from_json_string(config);\r\n+\r\n+    for (auto const& setting : m_configBools)\r\n+    {\r\n+        if (values.is_bool_value(setting.name))\r\n+        {\r\n+            *setting.value = values.get_bool_value(setting.name);\r\n+        }\r\n+    }\r\n+\r\n+    for (auto const& setting : m_configStrings)\r\n+    {\r\n+        if (values.is_string_value(setting.name))\r\n+        {\r\n+            *setting.value = values.get_string_value(setting.name);\r\n+        }\r\n+    }\r\n+}\r\n+CATCH_LOG();\r\n+\r\n+void FancyZonesSettings::SaveSettings() noexcept try\r\n+{\r\n+    PowerToysSettings::PowerToyValues values(m_name);\r\n+\r\n+    for (auto const& setting : m_configBools)\r\n+    {\r\n+        values.add_property(setting.name, *setting.value);\r\n+    }\r\n+\r\n+    for (auto const& setting : m_configStrings)\r\n+    {\r\n+        values.add_property(setting.name, *setting.value);\r\n+    }\r\n+\r\n+    values.save_to_settings_file();\r\n+}\r\n+CATCH_LOG();\r\n+\r\n+winrt::com_ptr<IFancyZonesSettings> MakeFancyZonesSettings(HINSTANCE hinstance, PCWSTR name) noexcept\r\n+{\r\n+    return winrt::make_self<FancyZonesSettings>(hinstance, name);\r\n+}\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/lib/Settings.h', 'Line Additions': 28, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,28 @@\n+#pragma once\n+\n+#define ZONE_STAMP L""FancyZones_zone""\n+\n+struct Settings\n+{\n+    // The values specified here are the defaults.\n+    bool shiftDrag = true;\n+    bool displayChange_moveWindows = false;\n+    bool virtualDesktopChange_moveWindows = false;\n+    bool zoneSetChange_flashZones = true;\n+    bool zoneSetChange_moveWindows = false;\n+    bool overrideSnapHotkeys = false;\n+    bool appLastZone_moveWindows = false;\n+    bool use_standalone_editor = true;\n+    std::wstring zoneHightlightColor = L""#0078D7"";\n+};\n+\n+interface __declspec(uuid(""{BA4E77C4-6F44-4C5D-93D3-CBDE880495C2}"")) IFancyZonesSettings : public IUnknown\n+{\n+    IFACEMETHOD_(void, SetCallback)(interface IFancyZonesCallback* callback) = 0;\n+    IFACEMETHOD_(bool, GetConfig)(_Out_ PWSTR buffer, _Out_ int *buffer_size) = 0;\n+    IFACEMETHOD_(void, SetConfig)(PCWSTR config) = 0;\n+    IFACEMETHOD_(void, CallCustomAction)(PCWSTR action) = 0;\n+    IFACEMETHOD_(Settings, GetSettings)() = 0;\n+};\n+\n+winrt::com_ptr<IFancyZonesSettings> MakeFancyZonesSettings(HINSTANCE hinstance, PCWSTR config) noexcept;\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/lib/Zone.cpp', 'Line Additions': 95, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,95 @@\n+#include ""pch.h""\n+\n+\n+struct Zone : winrt::implements<Zone, IZone>\n+{\n+public:\n+    Zone(RECT zoneRect) :\n+        m_zoneRect(zoneRect)\n+    {\n+    }\n+\n+    IFACEMETHODIMP_(RECT) GetZoneRect() noexcept { return m_zoneRect; }\n+    IFACEMETHODIMP_(bool) IsEmpty() noexcept { return m_windows.empty(); };\n+    IFACEMETHODIMP_(bool) ContainsWindow(HWND window) noexcept;\n+    IFACEMETHODIMP_(void) AddWindowToZone(HWND window, HWND zoneWindow, bool stampZone) noexcept;\n+    IFACEMETHODIMP_(void) RemoveWindowFromZone(HWND window, bool restoreSize) noexcept;\n+    IFACEMETHODIMP_(void) SetId(size_t id) noexcept { m_id = id; }\n+    IFACEMETHODIMP_(size_t) Id() noexcept { return m_id; }\n+\n+private:\n+    void SizeWindowToZone(HWND window, HWND zoneWindow) noexcept;\n+    void StampZone(HWND window, bool stamp) noexcept;\n+\n+    RECT m_zoneRect{};\n+    size_t m_id{};\n+    std::map<HWND, RECT> m_windows{};\n+};\n+\n+IFACEMETHODIMP_(bool) Zone::ContainsWindow(HWND window) noexcept\n+{\n+    return (m_windows.find(window) != m_windows.end());\n+}\n+\n+IFACEMETHODIMP_(void) Zone::AddWindowToZone(HWND window, HWND zoneWindow, bool stampZone) noexcept\n+{\n+    WINDOWPLACEMENT placement;\n+    ::GetWindowPlacement(window, &placement);\n+    ::GetWindowRect(window, &placement.rcNormalPosition);\n+    m_windows.emplace(std::pair<HWND, RECT>(window, placement.rcNormalPosition));\n+\n+    SizeWindowToZone(window, zoneWindow);\n+    if (stampZone)\n+    {\n+        StampZone(window, true);\n+    }\n+}\n+\n+IFACEMETHODIMP_(void) Zone::RemoveWindowFromZone(HWND window, bool restoreSize) noexcept\n+{\n+    auto iter = m_windows.find(window);\n+    if (iter != m_windows.end())\n+    {\n+        m_windows.erase(iter);\n+        StampZone(window, false);\n+    }\n+}\n+\n+void Zone::SizeWindowToZone(HWND window, HWND zoneWindow) noexcept\n+{\n+    // Take care of 1px border\n+    RECT zoneRect = m_zoneRect;\n+\n+    RECT windowRect{};\n+    ::GetWindowRect(window, &windowRect);\n+\n+    RECT frameRect{};\n+    // Failure is expected on down level systems.\n+    if (SUCCEEDED(DwmGetWindowAttribute(window, DWMWA_EXTENDED_FRAME_BOUNDS, &frameRect, sizeof(frameRect))))\n+    {\n+        zoneRect.bottom -= (frameRect.bottom - windowRect.bottom);\n+        zoneRect.right -= (frameRect.right - windowRect.right);\n+        zoneRect.left -= (frameRect.left - windowRect.left);\n+    }\n+\n+    // Map to screen coords\n+    MapWindowRect(zoneWindow, nullptr, &zoneRect);\n+    ::SetWindowPos(window, nullptr, zoneRect.left, zoneRect.top, zoneRect.right - zoneRect.left, zoneRect.bottom - zoneRect.top, SWP_NOZORDER | SWP_ASYNCWINDOWPOS | SWP_NOACTIVATE | SWP_NOSENDCHANGING);\n+}\n+\n+void Zone::StampZone(HWND window, bool stamp) noexcept\n+{\n+    if (stamp)\n+    {\n+        SetProp(window, ZONE_STAMP, reinterpret_cast<HANDLE>(m_id));\n+    }\n+    else\n+    {\n+        RemoveProp(window, ZONE_STAMP);\n+    }\n+}\n+\n+winrt::com_ptr<IZone> MakeZone(RECT zoneRect) noexcept\n+{\n+    return winrt::make_self<Zone>(zoneRect);\n+}\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/lib/Zone.h', 'Line Additions': 14, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,14 @@\n+#pragma once\n+\n+interface __declspec(uuid(""{8228E934-B6EF-402A-9892-15A1441BF8B0}"")) IZone : public IUnknown\n+{\n+    IFACEMETHOD_(RECT, GetZoneRect)() = 0;\n+    IFACEMETHOD_(bool, IsEmpty)() = 0;\n+    IFACEMETHOD_(bool, ContainsWindow)(HWND window) = 0;\n+    IFACEMETHOD_(void, AddWindowToZone)(HWND window, HWND zoneWindow, bool stampZone) = 0;\n+    IFACEMETHOD_(void, RemoveWindowFromZone)(HWND window, bool restoreSize) = 0;\n+    IFACEMETHOD_(void, SetId)(size_t id) = 0;\n+    IFACEMETHOD_(size_t, Id)() = 0;\n+};\n+\n+winrt::com_ptr<IZone> MakeZone(RECT zoneRect) noexcept;'}, {'Name': 'src/modules/fancyzones/lib/ZoneSet.cpp', 'Line Additions': 385, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,385 @@\n+#include ""pch.h""\n+\n+struct ZoneSet : winrt::implements<ZoneSet, IZoneSet>\n+{\n+public:\n+    ZoneSet(ZoneSetConfig const& config) : m_config(config)\n+    {\n+        if (config.ZoneCount > 0)\n+        {\n+            InitialPopulateZones();\n+        }\n+    }\n+\n+    ZoneSet(ZoneSetConfig const& config, std::vector<winrt::com_ptr<IZone>> zones) :\n+        m_config(config),\n+        m_zones(zones)\n+    {\n+    }\n+\n+    IFACEMETHODIMP_(GUID) Id() noexcept { return m_config.Id; }\n+    IFACEMETHODIMP_(WORD) LayoutId() noexcept { return m_config.LayoutId; }\n+    IFACEMETHODIMP AddZone(winrt::com_ptr<IZone> zone, bool front) noexcept;\n+    IFACEMETHODIMP RemoveZone(winrt::com_ptr<IZone> zone) noexcept;\n+    IFACEMETHODIMP_(winrt::com_ptr<IZone>) ZoneFromPoint(POINT pt) noexcept;\n+    IFACEMETHODIMP_(winrt::com_ptr<IZone>) ZoneFromWindow(HWND window) noexcept;\n+    IFACEMETHODIMP_(int) GetZoneIndexFromWindow(HWND window) noexcept;\n+    IFACEMETHODIMP_(std::vector<winrt::com_ptr<IZone>>) GetZones() noexcept { return m_zones; }\n+    IFACEMETHODIMP_(ZoneSetLayout) GetLayout() noexcept { return m_config.Layout; }\n+    IFACEMETHODIMP_(int) GetInnerPadding() noexcept { return m_config.PaddingInner; }\n+    IFACEMETHODIMP_(winrt::com_ptr<IZoneSet>) MakeCustomClone() noexcept;\n+    IFACEMETHODIMP_(void) Save() noexcept;\n+    IFACEMETHODIMP_(void) MoveZoneToFront(winrt::com_ptr<IZone> zone) noexcept;\n+    IFACEMETHODIMP_(void) MoveZoneToBack(winrt::com_ptr<IZone> zone) noexcept;\n+    IFACEMETHODIMP_(void) MoveWindowIntoZoneByIndex(HWND window, HWND zoneWindow, int index) noexcept;\n+    IFACEMETHODIMP_(void) MoveWindowIntoZoneByDirection(HWND window, HWND zoneWindow, DWORD vkCode) noexcept;\n+    IFACEMETHODIMP_(void) MoveSizeEnd(HWND window, HWND zoneWindow, POINT ptClient) noexcept;\n+\n+private:\n+    void InitialPopulateZones() noexcept;\n+    void GenerateGridZones(MONITORINFO const& mi) noexcept;\n+    void DoGridLayout(SIZE const& zoneArea, int numCols, int numRows) noexcept;\n+    void GenerateFocusZones(MONITORINFO const& mi) noexcept;\n+    void StampZone(HWND window, _In_opt_ winrt::com_ptr<IZone> zone) noexcept;\n+\n+    std::vector<winrt::com_ptr<IZone>> m_zones;\n+    ZoneSetConfig m_config;\n+};\n+\n+IFACEMETHODIMP ZoneSet::AddZone(winrt::com_ptr<IZone> zone, bool front) noexcept\n+{\n+    // XXXX: need to reorder ids when inserting...\n+    if (front)\n+    {\n+        m_zones.insert(m_zones.begin(), zone);\n+    }\n+    else\n+    {\n+        m_zones.emplace_back(zone);\n+    }\n+\n+    // Important not to set Id 0 since we store it in the HWND using SetProp.\n+    // SetProp(0) doesn\'t really work.\n+    zone->SetId(m_zones.size());\n+    return S_OK;\n+}\n+\n+IFACEMETHODIMP ZoneSet::RemoveZone(winrt::com_ptr<IZone> zone) noexcept\n+{\n+    auto iter = std::find(m_zones.begin(), m_zones.end(), zone);\n+    if (iter != m_zones.end())\n+    {\n+        m_zones.erase(iter);\n+        return S_OK;\n+    }\n+    return E_INVALIDARG;\n+}\n+\n+IFACEMETHODIMP_(winrt::com_ptr<IZone>) ZoneSet::ZoneFromPoint(POINT pt) noexcept\n+{\n+    for (auto iter = m_zones.begin(); iter != m_zones.end(); iter++)\n+    {\n+        if (winrt::com_ptr<IZone> zone = iter->try_as<IZone>())\n+        {\n+            if (PtInRect(&zone->GetZoneRect(), pt))\n+            {\n+                return zone;\n+            }\n+        }\n+    }\n+    return nullptr;\n+}\n+\n+IFACEMETHODIMP_(winrt::com_ptr<IZone>) ZoneSet::ZoneFromWindow(HWND window) noexcept\n+{\n+    for (auto iter = m_zones.begin(); iter != m_zones.end(); iter++)\n+    {\n+        if (winrt::com_ptr<IZone> zone = iter->try_as<IZone>())\n+        {\n+            if (zone->ContainsWindow(window))\n+            {\n+                return zone;\n+            }\n+        }\n+    }\n+    return nullptr;\n+}\n+\n+IFACEMETHODIMP_(winrt::com_ptr<IZoneSet>) ZoneSet::MakeCustomClone() noexcept\n+{\n+    if (SUCCEEDED_LOG(CoCreateGuid(&m_config.Id)))\n+    {\n+        m_config.IsCustom = true;\n+        return winrt::make_self<ZoneSet>(m_config, m_zones);\n+    }\n+    return nullptr;\n+}\n+\n+IFACEMETHODIMP_(void) ZoneSet::Save() noexcept\n+{\n+    size_t const zoneCount = m_zones.size();\n+    if (zoneCount == 0)\n+    {\n+        RegistryHelpers::DeleteZoneSet(m_config.ResolutionKey, m_config.Id);\n+    }\n+    else\n+    {\n+        ZoneSetPersistedData data{};\n+        data.LayoutId = m_config.LayoutId;\n+        data.ZoneCount = static_cast<DWORD>(zoneCount);\n+        data.Layout = m_config.Layout;\n+        data.PaddingInner = m_config.PaddingInner;\n+        data.PaddingOuter = m_config.PaddingOuter;\n+\n+        int i = 0;\n+        for (auto iter = m_zones.begin(); iter != m_zones.end(); iter++)\n+        {\n+            winrt::com_ptr<IZone> zone = iter->as<IZone>();\n+            CopyRect(&data.Zones[i++], &zone->GetZoneRect());\n+        }\n+\n+        wil::unique_cotaskmem_string guid;\n+        if (SUCCEEDED_LOG(StringFromCLSID(m_config.Id, &guid)))\n+        {\n+            if (wil::unique_hkey hkey{ RegistryHelpers::CreateKey(m_config.ResolutionKey) })\n+            {\n+                RegSetValueExW(hkey.get(), guid.get(), 0, REG_BINARY, reinterpret_cast<BYTE*>(&data), sizeof(data));\n+            }\n+        }\n+    }\n+}\n+\n+IFACEMETHODIMP_(void) ZoneSet::MoveZoneToFront(winrt::com_ptr<IZone> zone) noexcept\n+{\n+    auto iter = std::find(m_zones.begin(), m_zones.end(), zone);\n+    if (iter != m_zones.end())\n+    {\n+        std::rotate(m_zones.begin(), iter, iter + 1);\n+    }\n+}\n+\n+IFACEMETHODIMP_(void) ZoneSet::MoveZoneToBack(winrt::com_ptr<IZone> zone) noexcept\n+{\n+    auto iter = std::find(m_zones.begin(), m_zones.end(), zone);\n+    if (iter != m_zones.end())\n+    {\n+        std::rotate(iter, iter + 1, m_zones.end());\n+    }\n+}\n+\n+IFACEMETHODIMP_(int) ZoneSet::GetZoneIndexFromWindow(HWND window) noexcept\n+{\n+    int zoneIndex = 0;\n+    for (auto iter = m_zones.begin(); iter != m_zones.end(); iter++, zoneIndex++)\n+    {\n+        if (winrt::com_ptr<IZone> zone = iter->try_as<IZone>())\n+        {\n+            if (zone->ContainsWindow(window))\n+            {\n+                return zoneIndex;\n+            }\n+        }\n+    }\n+    return -1;\n+}\n+\n+IFACEMETHODIMP_(void) ZoneSet::MoveWindowIntoZoneByIndex(HWND window, HWND windowZone, int index) noexcept\n+{\n+    if (index >= static_cast<int>(m_zones.size()))\n+    {\n+        index = 0;\n+    }\n+\n+    if (index < m_zones.size())\n+    {\n+        if (auto zone = m_zones.at(index))\n+        {\n+            zone->AddWindowToZone(window, windowZone, false);\n+        }\n+    }\n+}\n+\n+IFACEMETHODIMP_(void) ZoneSet::MoveWindowIntoZoneByDirection(HWND window, HWND windowZone, DWORD vkCode) noexcept\n+{\n+    winrt::com_ptr<IZone> oldZone;\n+    winrt::com_ptr<IZone> newZone;\n+\n+    auto iter = std::find(m_zones.begin(), m_zones.end(), ZoneFromWindow(window));\n+    if (iter == m_zones.end())\n+    {\n+        iter = (vkCode == VK_RIGHT) ? m_zones.begin() : m_zones.end() - 1;\n+    }\n+    else if (oldZone = iter->as<IZone>())\n+    {\n+        if (vkCode == VK_LEFT)\n+        {\n+            if (iter == m_zones.begin())\n+            {\n+                iter = m_zones.end();\n+            }\n+            iter--;\n+        }\n+        else if (vkCode == VK_RIGHT)\n+        {\n+            iter++;\n+            if (iter == m_zones.end())\n+            {\n+                iter = m_zones.begin();\n+            }\n+        }\n+    }\n+\n+    if (newZone = iter->as<IZone>())\n+    {\n+        if (oldZone)\n+        {\n+            oldZone->RemoveWindowFromZone(window, false);\n+        }\n+        newZone->AddWindowToZone(window, windowZone, true);\n+    }\n+}\n+\n+IFACEMETHODIMP_(void) ZoneSet::MoveSizeEnd(HWND window, HWND zoneWindow, POINT ptClient) noexcept\n+{\n+    if (auto zoneDrop = ZoneFromWindow(window))\n+    {\n+        zoneDrop->RemoveWindowFromZone(window, !IsZoomed(window));\n+    }\n+\n+    if (auto zone = ZoneFromPoint(ptClient))\n+    {\n+        zone->AddWindowToZone(window, zoneWindow, true);\n+\n+        POINT pointAdjustedScreen = ptClient;\n+        MapWindowPoints(zoneWindow, nullptr, &pointAdjustedScreen, 1);\n+        SetCursorPos(pointAdjustedScreen.x, pointAdjustedScreen.y);\n+    }\n+}\n+\n+void ZoneSet::InitialPopulateZones() noexcept\n+{\n+    // TODO: reconcile the pregenerated FZ layouts with the editor\n+\n+    MONITORINFO mi{};\n+    mi.cbSize = sizeof(mi);\n+    if (GetMonitorInfoW(m_config.Monitor, &mi))\n+    {\n+        if ((m_config.Layout == ZoneSetLayout::Grid) || (m_config.Layout == ZoneSetLayout::Row))\n+        {\n+            GenerateGridZones(mi);\n+        }\n+        else if (m_config.Layout == ZoneSetLayout::Focus)\n+        {\n+            GenerateFocusZones(mi);\n+        }\n+\n+        Save();\n+    }\n+}\n+\n+void ZoneSet::GenerateGridZones(MONITORINFO const& mi) noexcept\n+{\n+    Rect workArea(mi.rcWork);\n+\n+    int numCols, numRows;\n+    if (m_config.Layout == ZoneSetLayout::Grid)\n+    {\n+        switch (m_config.ZoneCount)\n+        {\n+            case 1: numCols = 1; numRows = 1; break;\n+            case 2: numCols = 2; numRows = 1; break;\n+            case 3: numCols = 2; numRows = 2; break;\n+            case 4: numCols = 2; numRows = 2; break;\n+            case 5: numCols = 3; numRows = 3; break;\n+            case 6: numCols = 3; numRows = 3; break;\n+            case 7: numCols = 3; numRows = 3; break;\n+            case 8: numCols = 3; numRows = 3; break;\n+            case 9: numCols = 3; numRows = 3; break;\n+        }\n+\n+        if ((m_config.ZoneCount == 2) && (workArea.height() > workArea.width()))\n+        {\n+            numCols = 1;\n+            numRows = 2;\n+        }\n+    }\n+    else if (m_config.Layout == ZoneSetLayout::Row)\n+    {\n+        numCols = m_config.ZoneCount;\n+        numRows = 1;\n+    }\n+\n+    SIZE const zoneArea = {\n+        workArea.width() - ((m_config.PaddingOuter * 2) + (m_config.PaddingInner * (numCols - 1))),\n+        workArea.height() - ((m_config.PaddingOuter * 2) + (m_config.PaddingInner * (numRows - 1)))\n+    };\n+\n+    DoGridLayout(zoneArea, numCols, numRows);\n+}\n+\n+void ZoneSet::DoGridLayout(SIZE const& zoneArea, int numCols, int numRows) noexcept\n+{\n+    auto x = m_config.PaddingOuter;\n+    auto y = m_config.PaddingOuter;\n+    auto const zoneWidth = (zoneArea.cx / numCols);\n+    auto const zoneHeight = (zoneArea.cy / numRows);\n+    for (auto i = 1; i <= m_config.ZoneCount; i++)\n+    {\n+        auto col = numCols - (i % numCols);\n+        RECT const zoneRect = { x, y, x + zoneWidth, y + zoneHeight };\n+        AddZone(MakeZone(zoneRect), false);\n+\n+        x += zoneWidth + m_config.PaddingInner;\n+        if (col == numCols)\n+        {\n+            x = m_config.PaddingOuter;\n+            y += zoneHeight + m_config.PaddingInner;\n+        }\n+    }\n+}\n+\n+void ZoneSet::GenerateFocusZones(MONITORINFO const& mi) noexcept\n+{\n+    Rect const workArea(mi.rcWork);\n+\n+    SIZE const workHalf = { workArea.width() / 2, workArea.height() / 2 };\n+    RECT const safeZone = {\n+        m_config.PaddingOuter,\n+        m_config.PaddingOuter,\n+        workArea.width() - m_config.PaddingOuter,\n+        workArea.height() - m_config.PaddingOuter\n+    };\n+\n+    int const width = min(1920, workArea.width() * 60 / 100);\n+    int const height = min(1200, workArea.height() * 75 / 100);\n+    int const halfWidth = width / 2;\n+    int const halfHeight = height / 2;\n+    int x = workHalf.cx - halfWidth;\n+    int y = workHalf.cy - halfHeight;\n+\n+    RECT const focusRect = { x, y, x + width, y + height };\n+    AddZone(MakeZone(focusRect), false);\n+\n+    for (auto i = 2; i <= m_config.ZoneCount; i++)\n+    {\n+        switch (i)\n+        {\n+            case 2: x = focusRect.right - halfWidth; y = focusRect.top + m_config.PaddingInner; break; // right\n+            case 3: x = focusRect.left - halfWidth; y = focusRect.top + (m_config.PaddingInner * 2); break; // left\n+            case 4: x = focusRect.left + m_config.PaddingInner; y = focusRect.top - halfHeight; break; // up\n+            case 5: x = focusRect.left - m_config.PaddingInner; y = focusRect.bottom - halfHeight; break; // down\n+        }\n+\n+        // Bound into safe zone\n+        x = min(safeZone.right - width, max(safeZone.left, x));\n+        y = min(safeZone.bottom - height, max(safeZone.top, y));\n+\n+        RECT const zoneRect = { x, y, x + width, y + height };\n+        AddZone(MakeZone(zoneRect), false);\n+    }\n+}\n+\n+winrt::com_ptr<IZoneSet> MakeZoneSet(ZoneSetConfig const& config) noexcept\n+{\n+    return winrt::make_self<ZoneSet>(config);\n+}\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/lib/ZoneSet.h', 'Line Additions': 79, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,79 @@\n+#pragma once\n+\n+#include ""Zone.h""\n+\n+enum class ZoneSetLayout\n+{\n+    Grid,\n+    Row,\n+    Focus,\n+    Custom\n+};\n+\n+interface __declspec(uuid(""{E4839EB7-669D-49CF-84A9-71A2DFD851A3}"")) IZoneSet : public IUnknown\n+{\n+    IFACEMETHOD_(GUID, Id)() = 0;\n+    IFACEMETHOD_(WORD, LayoutId)() = 0;\n+    IFACEMETHOD(AddZone)(winrt::com_ptr<IZone> zone, bool front) = 0;\n+    IFACEMETHOD(RemoveZone)(winrt::com_ptr<IZone> zone) = 0;\n+    IFACEMETHOD_(winrt::com_ptr<IZone>, ZoneFromPoint)(POINT pt) = 0;\n+    IFACEMETHOD_(winrt::com_ptr<IZone>, ZoneFromWindow)(HWND window) = 0;\n+    IFACEMETHOD_(int, GetZoneIndexFromWindow)(HWND window) = 0;\n+    IFACEMETHOD_(std::vector<winrt::com_ptr<IZone>>, GetZones)() = 0;\n+    IFACEMETHOD_(ZoneSetLayout, GetLayout)() = 0;\n+    IFACEMETHOD_(int, GetInnerPadding)() = 0;\n+    IFACEMETHOD_(winrt::com_ptr<IZoneSet>, MakeCustomClone)() = 0;\n+    IFACEMETHOD_(void, Save)() = 0;\n+    IFACEMETHOD_(void, MoveZoneToFront)(winrt::com_ptr<IZone> zone) = 0;\n+    IFACEMETHOD_(void, MoveZoneToBack)(winrt::com_ptr<IZone> zone) = 0;\n+    IFACEMETHOD_(void, MoveWindowIntoZoneByIndex)(HWND window, HWND zoneWindow, int index) = 0;\n+    IFACEMETHOD_(void, MoveWindowIntoZoneByDirection)(HWND window, HWND zoneWindow, DWORD vkCode) = 0;\n+    IFACEMETHOD_(void, MoveSizeEnd)(HWND window, HWND zoneWindow, POINT ptClient) = 0;\n+};\n+\n+#define VERSION_PERSISTEDDATA 0x0000F00D\n+struct ZoneSetPersistedData\n+{\n+    DWORD Version{VERSION_PERSISTEDDATA};\n+    WORD LayoutId{};\n+    DWORD ZoneCount{};\n+    ZoneSetLayout Layout{};\n+    DWORD PaddingInner{};\n+    DWORD PaddingOuter{};\n+    RECT Zones[40]{};\n+};\n+\n+struct ZoneSetConfig\n+{\n+    ZoneSetConfig(\n+        GUID id,\n+        WORD layoutId,\n+        HMONITOR monitor,\n+        PCWSTR resolutionKey,\n+        ZoneSetLayout layout,\n+        int zoneCount,\n+        int paddingOuter,\n+        int paddingInner) noexcept :\n+            Id(id),\n+            LayoutId(layoutId),\n+            Monitor(monitor),\n+            ResolutionKey(resolutionKey),\n+            Layout(layout),\n+            ZoneCount(zoneCount),\n+            PaddingOuter(paddingOuter),\n+            PaddingInner(paddingInner)\n+    {\n+    }\n+\n+    GUID Id{};\n+    WORD LayoutId{};\n+    HMONITOR Monitor{};\n+    PCWSTR ResolutionKey{};\n+    ZoneSetLayout Layout{};\n+    int ZoneCount{};\n+    int PaddingOuter{};\n+    int PaddingInner{};\n+    bool IsCustom{};\n+};\n+\n+winrt::com_ptr<IZoneSet> MakeZoneSet(ZoneSetConfig const& config) noexcept;\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/lib/ZoneWindow.cpp', 'Line Additions': 1308, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,1308 @@\n+#include ""pch.h""\n+#include <ShellScalingApi.h>\n+\n+struct ZoneWindow : public winrt::implements<ZoneWindow, IZoneWindow>\n+{\n+public:\n+    ZoneWindow(IZoneWindowHost* host, HINSTANCE hinstance, HMONITOR monitor, PCWSTR deviceId, PCWSTR virtualDesktopId, bool flashZones);\n+\n+    IFACEMETHODIMP ShowZoneWindow(bool activate, bool fadeIn) noexcept;\n+    IFACEMETHODIMP HideZoneWindow() noexcept;\n+    IFACEMETHODIMP MoveSizeEnter(HWND window, bool dragEnabled) noexcept;\n+    IFACEMETHODIMP MoveSizeUpdate(POINT const& ptScreen, bool dragEnabled) noexcept;\n+    IFACEMETHODIMP MoveSizeEnd(HWND window, POINT const& ptScreen) noexcept;\n+    IFACEMETHODIMP MoveSizeCancel() noexcept;\n+    IFACEMETHODIMP_(bool) IsDragEnabled() noexcept { return m_dragEnabled; }\n+    IFACEMETHODIMP_(void) MoveWindowIntoZoneByIndex(HWND window, int index) noexcept;\n+    IFACEMETHODIMP_(void) MoveWindowIntoZoneByDirection(HWND window, DWORD vkCode) noexcept;\n+    IFACEMETHODIMP_(void) CycleActiveZoneSet(DWORD vkCode) noexcept;\n+    IFACEMETHODIMP_(std::wstring) DeviceId() noexcept { return { m_deviceId.get() }; }\n+    IFACEMETHODIMP_(std::wstring) UniqueId() noexcept { return { m_uniqueId }; }\n+    IFACEMETHODIMP_(void) SaveWindowProcessToZoneIndex(HWND window) noexcept;\n+    IFACEMETHODIMP_(IZoneSet*) ActiveZoneSet() noexcept { return m_activeZoneSet.get(); }\n+\n+protected:\n+    static LRESULT CALLBACK s_WndProc(HWND window, UINT message, WPARAM wparam, LPARAM lparam) noexcept;\n+\n+private:\n+    struct ColorSetting\n+    {\n+        BYTE fillAlpha{};\n+        COLORREF fill{};\n+        BYTE borderAlpha{};\n+        COLORREF border{};\n+        int thickness{};\n+    };\n+\n+    void InitializeId(PCWSTR deviceId, PCWSTR virtualDesktopId) noexcept;\n+    void LoadSettings() noexcept;\n+    void InitializeZoneSets() noexcept;\n+    void LoadZoneSetsFromRegistry() noexcept;\n+    winrt::com_ptr<IZoneSet> AddZoneSet(ZoneSetLayout layout, int numZones, int paddingOuter, int paddingInner) noexcept;\n+    void MakeActiveZoneSetCustom() noexcept;\n+    void UpdateActiveZoneSet(_In_opt_ IZoneSet* zoneSet) noexcept;\n+    LRESULT WndProc(UINT message, WPARAM wparam, LPARAM lparam) noexcept;\n+    void OnLButtonDown(LPARAM lparam) noexcept;\n+    void OnLButtonUp(LPARAM lparam) noexcept;\n+    void OnRButtonUp(LPARAM lparam) noexcept;\n+    void OnMouseMove(LPARAM lparam) noexcept;\n+    void DrawBackdrop(wil::unique_hdc& hdc, RECT const& clientRect) noexcept;\n+    void DrawGridLines(wil::unique_hdc& hdc, RECT const& clientRect) noexcept;\n+    void DrawZone(wil::unique_hdc& hdc, ColorSetting const& colorSetting, winrt::com_ptr<IZone> zone) noexcept;\n+    void DrawIndex(wil::unique_hdc& hdc, POINT offset, size_t index, int padding, int size, bool flipX, bool flipY, COLORREF colorFill);\n+    void DrawActiveZoneSet(wil::unique_hdc& hdc, RECT const& clientRect) noexcept;\n+    void DrawZoneBuilder(wil::unique_hdc& hdc, RECT const& clientRect) noexcept;\n+    void DrawSwitchButtons(wil::unique_hdc& hdc, RECT const& clientRect) noexcept;\n+    void OnPaint(wil::unique_hdc& hdc) noexcept;\n+    void UpdateGrid(int stepColumns, int stepRows) noexcept;\n+    void UpdateGridMargins(int inc) noexcept;\n+    void EnterEditorMode() noexcept;\n+    void ExitEditorMode() noexcept;\n+    void OnKeyUp(WPARAM wparam) noexcept;\n+    winrt::com_ptr<IZone> ZoneFromPoint(POINT pt) noexcept;\n+    void ChooseDefaultActiveZoneSet() noexcept;\n+    bool IsOccluded(POINT pt, size_t index) noexcept;\n+    void CycleActiveZoneSetInternal(DWORD wparam, Trace::ZoneWindow::InputMode mode) noexcept;\n+    void FlashZones() noexcept;\n+    int GetSwitchButtonIndexFromPoint(POINT ptClient) noexcept;\n+    UINT GetDpiForMonitor() noexcept;\n+\n+    winrt::com_ptr<IZoneWindowHost> m_host;\n+    HMONITOR m_monitor{};\n+    wchar_t m_uniqueId[256]{};  // Parsed deviceId + resolution + virtualDesktopId\n+    wchar_t m_workArea[256]{};\n+    wil::unique_cotaskmem_string m_deviceId{};\n+    wil::unique_hwnd m_window{};\n+    HWND m_windowMoveSize{};\n+    bool m_buttonDown{};\n+    bool m_drawHints{};\n+    bool m_editorMode{};\n+    bool m_flashMode{};\n+    bool m_dragEnabled{};\n+    POINT m_ptDown{};\n+    POINT m_ptLast{};\n+    winrt::com_ptr<IZoneSet> m_activeZoneSet;\n+    GUID m_activeZoneSetId{};\n+    std::vector<winrt::com_ptr<IZoneSet>> m_zoneSets;\n+    winrt::com_ptr<IZone> m_highlightZone;\n+    WPARAM m_keyLast{};\n+    size_t m_keyCycle{};\n+    int m_gridWidth{};\n+    int m_gridHeight{};\n+    int m_gridRows{};\n+    int m_gridColumns{};\n+    int m_switchButtonWidth = 50;\n+    int m_switchButtonPadding = 5;\n+    int m_switchButtonHover = -1;\n+    SIZE m_gridMargins{};\n+    RECT m_zoneBuilder{};\n+    RECT m_switchButtonContainerRect{};\n+    Trace::ZoneWindow::EditorModeActivity m_editorModeActivity;\n+    static const UINT m_showAnimationDuration = 200; // ms\n+    static const UINT m_flashDuration = 700; // ms\n+};\n+\n+ZoneWindow::ZoneWindow(\n+    IZoneWindowHost* host,\n+    HINSTANCE hinstance,\n+    HMONITOR monitor,\n+    PCWSTR deviceId,\n+    PCWSTR virtualDesktopId,\n+    bool flashZones)\n+        : m_monitor(monitor)\n+{\n+    m_host.copy_from(host);\n+\n+    MONITORINFO mi{};\n+    mi.cbSize = sizeof(mi);\n+    if (GetMonitorInfoW(m_monitor, &mi))\n+    {\n+        const UINT dpi = GetDpiForMonitor();\n+        const Rect monitorRect(mi.rcMonitor);\n+        const Rect workAreaRect(mi.rcWork, dpi);\n+\n+        StringCchPrintf(m_workArea, ARRAYSIZE(m_workArea), L""%d_%d"", monitorRect.width(), monitorRect.height());\n+\n+        InitializeId(deviceId, virtualDesktopId);\n+        LoadSettings();\n+        InitializeZoneSets();\n+\n+        WNDCLASSEXW wcex{};\n+        wcex.cbSize = sizeof(WNDCLASSEX);\n+        wcex.lpfnWndProc = s_WndProc;\n+        wcex.hInstance = hinstance;\n+        wcex.lpszClassName = L""SuperFancyZones_ZoneWindow"";\n+        wcex.hCursor = LoadCursorW(nullptr, IDC_ARROW);\n+        RegisterClassExW(&wcex);\n+\n+        m_window = wil::unique_hwnd {\n+            CreateWindowExW(WS_EX_TOOLWINDOW, L""SuperFancyZones_ZoneWindow"", L"""", WS_POPUP,\n+                workAreaRect.left(), workAreaRect.top(), workAreaRect.width(), workAreaRect.height(),\n+                nullptr, nullptr, hinstance, this)\n+        };\n+\n+        if (m_window)\n+        {\n+            MakeWindowTransparent(m_window.get());\n+            UpdateGrid(0, 0);\n+            if (flashZones)\n+            {\n+                FlashZones();\n+            }\n+        }\n+    }\n+}\n+\n+IFACEMETHODIMP ZoneWindow::ShowZoneWindow(bool activate, bool fadeIn) noexcept\n+{\n+    if (m_window)\n+    {\n+        m_flashMode = false;\n+\n+        UINT flags = SWP_NOSIZE | SWP_NOMOVE;\n+        if (!activate)\n+        {\n+            WI_SetFlag(flags, SWP_NOACTIVATE);\n+        }\n+\n+        if (!fadeIn)\n+        {\n+            WI_SetFlag(flags, SWP_SHOWWINDOW);\n+        }\n+\n+        HWND windowInsertAfter = m_windowMoveSize;\n+        if (windowInsertAfter == nullptr)\n+        {\n+            windowInsertAfter = HWND_TOPMOST;\n+        }\n+\n+        SetWindowPos(m_window.get(), windowInsertAfter, 0, 0, 0, 0, flags);\n+\n+        if (fadeIn)\n+        {\n+            AnimateWindow(m_window.get(), m_showAnimationDuration, AW_BLEND);\n+            InvalidateRect(m_window.get(), nullptr, true);\n+        }\n+\n+        return S_OK;\n+    }\n+    return E_FAIL;\n+}\n+\n+IFACEMETHODIMP ZoneWindow::HideZoneWindow() noexcept\n+{\n+    if (!m_window)\n+    {\n+        return E_FAIL;\n+    }\n+\n+    if (m_editorMode)\n+    {\n+        ExitEditorMode();\n+    }\n+\n+    ShowWindow(m_window.get(), SW_HIDE);\n+    m_keyLast = 0;\n+    m_windowMoveSize = nullptr;\n+    m_drawHints = false;\n+    m_highlightZone = nullptr;\n+    m_editorMode = false;\n+    return S_OK;\n+}\n+\n+IFACEMETHODIMP ZoneWindow::MoveSizeEnter(HWND window, bool dragEnabled) noexcept\n+{\n+    if (m_windowMoveSize)\n+    {\n+        return E_INVALIDARG;\n+    }\n+\n+    m_dragEnabled = dragEnabled;\n+    m_windowMoveSize = window;\n+    m_drawHints = true;\n+    m_highlightZone = nullptr;\n+    ShowZoneWindow(false /*activate*/, true /*fadeIn*/);\n+    return S_OK;\n+}\n+\n+IFACEMETHODIMP ZoneWindow::MoveSizeUpdate(POINT const& ptScreen, bool dragEnabled) noexcept\n+{\n+    bool redraw = false;\n+    POINT ptClient = ptScreen;\n+    MapWindowPoints(nullptr, m_window.get(), &ptClient, 1);\n+\n+    m_dragEnabled = dragEnabled;\n+\n+    if (dragEnabled)\n+    {\n+        auto highlightZone = ZoneFromPoint(ptClient);\n+        redraw = (highlightZone != m_highlightZone);\n+        m_highlightZone = std::move(highlightZone);\n+    }\n+    else if (m_highlightZone)\n+    {\n+        m_highlightZone = nullptr;\n+        redraw = true;\n+    }\n+\n+    if (redraw)\n+    {\n+        InvalidateRect(m_window.get(), nullptr, true);\n+    }\n+    return S_OK;\n+}\n+\n+IFACEMETHODIMP ZoneWindow::MoveSizeEnd(HWND window, POINT const& ptScreen) noexcept\n+{\n+    if (m_windowMoveSize != window)\n+    {\n+        return E_INVALIDARG;\n+    }\n+\n+    if (m_activeZoneSet)\n+    {\n+        POINT ptClient = ptScreen;\n+        MapWindowPoints(nullptr, m_window.get(), &ptClient, 1);\n+        m_activeZoneSet->MoveSizeEnd(window, m_window.get(), ptClient);\n+\n+        SaveWindowProcessToZoneIndex(window);\n+    }\n+    Trace::ZoneWindow::MoveSizeEnd(m_activeZoneSet);\n+\n+    HideZoneWindow();\n+    m_windowMoveSize = nullptr;\n+    return S_OK;\n+}\n+\n+IFACEMETHODIMP ZoneWindow::MoveSizeCancel() noexcept\n+{\n+    HideZoneWindow();\n+    return S_OK;\n+}\n+\n+IFACEMETHODIMP_(void) ZoneWindow::MoveWindowIntoZoneByIndex(HWND window, int index) noexcept\n+{\n+    if (m_activeZoneSet)\n+    {\n+        m_activeZoneSet->MoveWindowIntoZoneByIndex(window, m_window.get(), index);\n+    }\n+}\n+\n+IFACEMETHODIMP_(void) ZoneWindow::MoveWindowIntoZoneByDirection(HWND window, DWORD vkCode) noexcept\n+{\n+    if (m_activeZoneSet)\n+    {\n+        m_activeZoneSet->MoveWindowIntoZoneByDirection(window, m_window.get(), vkCode);\n+    }\n+}\n+\n+IFACEMETHODIMP_(void) ZoneWindow::CycleActiveZoneSet(DWORD wparam) noexcept\n+{\n+    CycleActiveZoneSetInternal(wparam, Trace::ZoneWindow::InputMode::Keyboard);\n+\n+    if (m_windowMoveSize)\n+    {\n+        InvalidateRect(m_window.get(), nullptr, true);\n+    }\n+    else\n+    {\n+        FlashZones();\n+    }\n+}\n+\n+#pragma region private\n+void ZoneWindow::InitializeId(PCWSTR deviceId, PCWSTR virtualDesktopId) noexcept\n+{\n+    SHStrDup(deviceId, &m_deviceId);\n+\n+    MONITORINFOEXW mi;\n+    mi.cbSize = sizeof(mi);\n+    if (GetMonitorInfo(m_monitor, &mi))\n+    {\n+        wchar_t parsedId[256]{};\n+        ParseDeviceId(m_deviceId.get(), parsedId, 256);\n+\n+        Rect const monitorRect(mi.rcMonitor);\n+        StringCchPrintf(m_uniqueId, ARRAYSIZE(m_uniqueId), L""%s_%d_%d_%s"",\n+            parsedId, monitorRect.width(), monitorRect.height(), virtualDesktopId);\n+    }\n+}\n+\n+void ZoneWindow::LoadSettings() noexcept\n+{\n+    wchar_t activeZoneSetId[256];\n+    RegistryHelpers::GetString(m_uniqueId, L""ActiveZoneSetId"", activeZoneSetId, sizeof(activeZoneSetId));\n+    CLSIDFromString(activeZoneSetId, &m_activeZoneSetId);\n+\n+    RegistryHelpers::GetValue<SIZE>(m_uniqueId, L""GridMargins"", &m_gridMargins, sizeof(m_gridMargins));\n+}\n+\n+void ZoneWindow::InitializeZoneSets() noexcept\n+{\n+    LoadZoneSetsFromRegistry();\n+    if (m_zoneSets.empty())\n+    {\n+        // Add a ""maximize"" zone as the only default layout.\n+        AddZoneSet(ZoneSetLayout::Grid, 1, 0, 0);\n+    }\n+\n+    if (!m_activeZoneSet)\n+    {\n+        ChooseDefaultActiveZoneSet();\n+    }\n+}\n+\n+void ZoneWindow::LoadZoneSetsFromRegistry() noexcept\n+{\n+    if (wil::unique_hkey key{ RegistryHelpers::OpenKey(m_workArea) })\n+    {\n+        ZoneSetPersistedData data{};\n+        DWORD dataSize = sizeof(data);\n+        wchar_t value[256]{};\n+        DWORD valueLength = ARRAYSIZE(value);\n+        DWORD i = 0;\n+        while (RegEnumValueW(key.get(), i++, value, &valueLength, nullptr, nullptr, reinterpret_cast<BYTE*>(&data), &dataSize) == ERROR_SUCCESS)\n+        {\n+            if (data.Version == VERSION_PERSISTEDDATA)\n+            {\n+                GUID zoneSetId;\n+                if (SUCCEEDED_LOG(CLSIDFromString(value, &zoneSetId)))\n+                {\n+                    auto zoneSet = MakeZoneSet(ZoneSetConfig(\n+                        zoneSetId,\n+                        data.LayoutId,\n+                        m_monitor,\n+                        m_workArea,\n+                        data.Layout,\n+                        0,\n+                        static_cast<int>(data.PaddingInner),\n+                        static_cast<int>(data.PaddingOuter)));\n+\n+                    if (zoneSet)\n+                    {\n+                        for (UINT j = 0; j < data.ZoneCount; j++)\n+                        {\n+                            zoneSet->AddZone(MakeZone(data.Zones[j]), false);\n+                        }\n+\n+                        m_zoneSets.emplace_back(zoneSet);\n+\n+                        if (zoneSetId == m_activeZoneSetId)\n+                        {\n+                            UpdateActiveZoneSet(zoneSet.get());\n+                        }\n+                    }\n+                }\n+            }\n+            else\n+            {\n+                // Migrate from older settings format\n+            }\n+\n+            valueLength = ARRAYSIZE(value);\n+            dataSize = sizeof(data);\n+        }\n+    }\n+}\n+\n+winrt::com_ptr<IZoneSet> ZoneWindow::AddZoneSet(ZoneSetLayout layout, int numZones, int paddingOuter, int paddingInner) noexcept\n+{\n+    GUID zoneSetId;\n+    if (SUCCEEDED_LOG(CoCreateGuid(&zoneSetId)))\n+    {\n+        if (auto zoneSet = MakeZoneSet(ZoneSetConfig(zoneSetId, 0, m_monitor, m_workArea, layout, numZones, paddingOuter, paddingInner)))\n+        {\n+            m_zoneSets.emplace_back(zoneSet);\n+            return zoneSet;\n+        }\n+    }\n+    return nullptr;\n+}\n+\n+void ZoneWindow::MakeActiveZoneSetCustom() noexcept\n+{\n+    if (m_activeZoneSet)\n+    {\n+        if (auto customZoneSet = m_activeZoneSet->MakeCustomClone())\n+        {\n+            UpdateActiveZoneSet(customZoneSet.get());\n+            m_zoneSets.emplace_back(customZoneSet);\n+        }\n+    }\n+}\n+\n+void ZoneWindow::UpdateActiveZoneSet(_In_opt_ IZoneSet* zoneSet) noexcept\n+{\n+    m_activeZoneSet.copy_from(zoneSet);\n+\n+    if (m_activeZoneSet)\n+    {\n+        wil::unique_cotaskmem_string zoneSetId;\n+        if (SUCCEEDED_LOG(StringFromCLSID(m_activeZoneSet->Id(), &zoneSetId)))\n+        {\n+            RegistryHelpers::SetString(m_uniqueId, L""ActiveZoneSetId"", zoneSetId.get());\n+        }\n+    }\n+}\n+\n+LRESULT ZoneWindow::WndProc(UINT message, WPARAM wparam, LPARAM lparam) noexcept\n+{\n+    switch (message)\n+    {\n+        case WM_NCDESTROY:\n+        {\n+            ::DefWindowProc(m_window.get(), message, wparam, lparam);\n+            SetWindowLongPtr(m_window.get(), GWLP_USERDATA, 0);\n+        }\n+        break;\n+\n+        case WM_ERASEBKGND:\n+            return 1;\n+\n+        case WM_PRINTCLIENT:\n+        case WM_PAINT:\n+        {\n+            PAINTSTRUCT ps;\n+            wil::unique_hdc hdc{ reinterpret_cast<HDC>(wparam) };\n+            if (!hdc)\n+            {\n+                hdc.reset(BeginPaint(m_window.get(), &ps));\n+            }\n+\n+            OnPaint(hdc);\n+\n+            if (wparam == 0)\n+            {\n+                EndPaint(m_window.get(), &ps);\n+            }\n+\n+            hdc.release();\n+        }\n+        break;\n+\n+        case WM_LBUTTONDOWN:\n+            OnLButtonDown(lparam);\n+            break;\n+\n+        case WM_LBUTTONUP:\n+            OnLButtonUp(lparam);\n+            break;\n+\n+        case WM_RBUTTONUP:\n+            OnRButtonUp(lparam);\n+            break;\n+\n+        case WM_MOUSEMOVE:\n+            OnMouseMove(lparam);\n+            break;\n+\n+        case WM_KEYUP:\n+            OnKeyUp(wparam);\n+            break;\n+\n+        default:\n+        {\n+            return DefWindowProc(m_window.get(), message, wparam, lparam);\n+        }\n+    }\n+    return 0;\n+}\n+\n+void ZoneWindow::OnLButtonDown(LPARAM lparam) noexcept\n+{\n+    m_buttonDown = true;\n+    m_ptDown = { GET_X_LPARAM(lparam), GET_Y_LPARAM(lparam) };\n+}\n+\n+void ZoneWindow::OnLButtonUp(LPARAM lparam) noexcept\n+{\n+    POINT const ptClient = { GET_X_LPARAM(lparam), GET_Y_LPARAM(lparam) };\n+    if (m_buttonDown && m_activeZoneSet)\n+    {\n+        if (m_editorMode)\n+        {\n+            bool const ctrl = GetAsyncKeyState(VK_CONTROL) & 0x8000;\n+            if (ctrl)\n+            {\n+                auto zone = ZoneFromPoint(ptClient);\n+                if (zone)\n+                {\n+                    m_activeZoneSet->RemoveZone(zone);\n+\n+                    int const padding = m_activeZoneSet->GetInnerPadding();\n+                    RECT const zoneRect = zone->GetZoneRect();\n+                    int const zoneRectWidthHalf = ((zoneRect.right - zoneRect.left) / 2) - padding;\n+                    RECT rectLeft = zoneRect;\n+                    rectLeft.right = rectLeft.left + zoneRectWidthHalf;\n+                    m_activeZoneSet->AddZone(MakeZone(rectLeft), false);\n+\n+                    RECT rectRight = zoneRect;\n+                    rectRight.left = rectLeft.right + padding;\n+                    m_activeZoneSet->AddZone(MakeZone(rectRight), false);\n+\n+                    m_activeZoneSet->Save();\n+                }\n+            }\n+            else if (m_activeZoneSet && !IsRectEmpty(&m_zoneBuilder))\n+            {\n+                m_activeZoneSet->AddZone(MakeZone(m_zoneBuilder), true);\n+            }\n+        }\n+        else if (!m_flashMode && !m_editorMode && !m_drawHints)\n+        {\n+            if (PtInRect(&m_switchButtonContainerRect, ptClient))\n+            {\n+                auto switchButtonIndex = GetSwitchButtonIndexFromPoint(ptClient);\n+                if (switchButtonIndex != -1)\n+                {\n+                    CycleActiveZoneSetInternal(\'0\' + switchButtonIndex, Trace::ZoneWindow::InputMode::Mouse);\n+                }\n+            }\n+            else\n+            {\n+                if (auto zone = ZoneFromPoint(ptClient))\n+                {\n+                    m_activeZoneSet->MoveZoneToFront(zone);\n+                    m_activeZoneSet->Save();\n+                }\n+            }\n+        }\n+    }\n+\n+    m_zoneBuilder = {};\n+    m_buttonDown = false;\n+    InvalidateRect(m_window.get(), nullptr, true);\n+}\n+\n+void ZoneWindow::OnRButtonUp(LPARAM lparam) noexcept\n+{\n+    POINT const ptClient = { GET_X_LPARAM(lparam), GET_Y_LPARAM(lparam) };\n+    if (m_activeZoneSet)\n+    {\n+        if (m_editorMode)\n+        {\n+            if (bool const ctrl = GetAsyncKeyState(VK_CONTROL) & 0x8000)\n+            {\n+                if (auto zone = ZoneFromPoint(ptClient))\n+                {\n+                    m_activeZoneSet->RemoveZone(zone);\n+\n+                    int const padding = m_activeZoneSet->GetInnerPadding();\n+                    RECT const zoneRect = zone->GetZoneRect();\n+                    int const zoneRectHeightHalf = ((zoneRect.bottom - zoneRect.top) / 2) - padding;\n+                    RECT rectTop = zoneRect;\n+                    rectTop.bottom = rectTop.top + zoneRectHeightHalf;\n+                    m_activeZoneSet->AddZone(MakeZone(rectTop), false);\n+\n+                    RECT rectBottom = zoneRect;\n+                    rectBottom.top = rectTop.bottom + padding;\n+                    m_activeZoneSet->AddZone(MakeZone(rectBottom), false);\n+\n+                    m_activeZoneSet->Save();\n+                }\n+            }\n+            else if (auto zone = ZoneFromPoint(ptClient))\n+            {\n+                m_activeZoneSet->RemoveZone(zone);\n+                m_activeZoneSet->Save();\n+            }\n+        }\n+        else if (auto zone = ZoneFromPoint(ptClient))\n+        {\n+            m_activeZoneSet->MoveZoneToBack(zone);\n+            m_activeZoneSet->Save();\n+        }\n+    }\n+    InvalidateRect(m_window.get(), nullptr, true);\n+}\n+\n+void ZoneWindow::OnMouseMove(LPARAM lparam) noexcept\n+{\n+    int const oldHover = m_switchButtonHover;\n+    m_switchButtonHover = -1;\n+\n+    POINT const ptClient = { GET_X_LPARAM(lparam), GET_Y_LPARAM(lparam) };\n+    if (m_buttonDown && m_editorMode && ((ptClient.x != m_ptLast.x) || (ptClient.y != m_ptLast.y)))\n+    {\n+        RECT start;\n+        int const startColumn = max(0, min(m_gridColumns, ((m_ptDown.x - m_gridMargins.cx) / m_gridWidth)));\n+        int const startRow = max(0, min(m_gridRows, ((m_ptDown.y  - m_gridMargins.cy) / m_gridHeight)));\n+        start.left = startColumn * m_gridWidth;\n+        start.top = startRow * m_gridHeight;\n+        start.right = start.left + m_gridWidth;\n+        start.bottom = start.top + m_gridHeight;\n+        OffsetRect(&start, m_gridMargins.cx, m_gridMargins.cy);\n+\n+        RECT current;\n+        int const currentColumn = max(0, min(m_gridColumns, ((ptClient.x - m_gridMargins.cx) / m_gridWidth)));\n+        int const currentRow = max(0, min(m_gridRows, ((ptClient.y - m_gridMargins.cy) / m_gridHeight)));\n+        current.left = currentColumn * m_gridWidth;\n+        current.top = currentRow * m_gridHeight;\n+        current.right = current.left + m_gridWidth;\n+        current.bottom = current.top + m_gridHeight;\n+        OffsetRect(&current, m_gridMargins.cx, m_gridMargins.cy);\n+\n+        RECT invalidateRect = m_zoneBuilder;\n+        POINT const last = {\n+             m_gridMargins.cx + ((m_ptLast.x - m_gridMargins.cx) / m_gridWidth),\n+             m_gridMargins.cy + ((m_ptLast.y - m_gridMargins.cy) / m_gridHeight)\n+        };\n+\n+        m_ptLast = ptClient;\n+        UnionRect(&m_zoneBuilder, &start, &current);\n+        UnionRect(&invalidateRect, &invalidateRect, &m_zoneBuilder);\n+\n+        if ((current.left != last.x) || (current.top != last.y))\n+        {\n+            InvalidateRect(m_window.get(), &invalidateRect, true);\n+        }\n+    }\n+    else if (!m_flashMode && !m_editorMode && !m_drawHints && PtInRect(&m_switchButtonContainerRect, ptClient))\n+    {\n+        m_switchButtonHover = GetSwitchButtonIndexFromPoint(ptClient);\n+    }\n+\n+    if (oldHover != m_switchButtonHover)\n+    {\n+        InvalidateRect(m_window.get(), &m_switchButtonContainerRect, true);\n+    }\n+}\n+\n+void ZoneWindow::DrawBackdrop(wil::unique_hdc& hdc, RECT const& clientRect) noexcept\n+{\n+    if (m_windowMoveSize || m_flashMode)\n+    {\n+        FillRectARGB(hdc, &clientRect, 0, RGB(0, 0, 0), false);\n+    }\n+    else\n+    {\n+        FillRectARGB(hdc, &clientRect, 225, RGB(0, 0, 0), false);\n+    }\n+}\n+\n+void ZoneWindow::DrawGridLines(wil::unique_hdc& hdc, RECT const& clientRect) noexcept\n+{\n+    if (m_editorMode)\n+    {\n+        COLORREF const color = RGB(225, 225, 225);\n+\n+        wil::unique_hpen pen{ CreatePen(PS_SOLID, 1, color) };\n+        wil::unique_select_object oldPen{ SelectObject(hdc.get(), pen.get()) };\n+        for (int i = 0; i <= m_gridRows; i++)\n+        {\n+            int const y = m_gridMargins.cy + (i * m_gridHeight);\n+            MoveToEx(hdc.get(), m_gridMargins.cx, y, nullptr);\n+            LineTo(hdc.get(), clientRect.right - m_gridMargins.cx, y);\n+        }\n+\n+        for (int i = 0; i <= m_gridColumns; i++)\n+        {\n+            int const x = m_gridMargins.cx + (i * m_gridWidth);\n+            MoveToEx(hdc.get(), x, m_gridMargins.cy, nullptr);\n+            LineTo(hdc.get(), x, clientRect.bottom - m_gridMargins.cy);\n+        }\n+    }\n+}\n+\n+void ZoneWindow::DrawZone(wil::unique_hdc& hdc, ColorSetting const& colorSetting, winrt::com_ptr<IZone> zone) noexcept\n+{\n+    RECT zoneRect = zone->GetZoneRect();\n+    if (colorSetting.borderAlpha > 0)\n+    {\n+        FillRectARGB(hdc, &zoneRect, colorSetting.borderAlpha, colorSetting.border, false);\n+        InflateRect(&zoneRect, colorSetting.thickness, colorSetting.thickness);\n+    }\n+    FillRectARGB(hdc, &zoneRect, colorSetting.fillAlpha, colorSetting.fill, false);\n+\n+    if (!m_flashMode)\n+    {\n+        COLORREF const colorFill = RGB(255, 255, 255);\n+\n+        size_t const index = zone->Id();\n+        int const padding = 5;\n+        int const size = 10;\n+        POINT offset = { zoneRect.left + padding, zoneRect.top + padding };\n+        if (!IsOccluded(offset, index))\n+        {\n+            DrawIndex(hdc, offset, index, padding, size, false, false, colorFill); // top left\n+            return;\n+        }\n+\n+        offset.x = zoneRect.right - ((padding + size) * 3);\n+        if (!IsOccluded(offset, index))\n+        {\n+            DrawIndex(hdc, offset, index, padding, size, true, false, colorFill); // top right\n+            return;\n+        }\n+\n+        offset.y = zoneRect.bottom - ((padding + size) * 3);\n+        if (!IsOccluded(offset, index))\n+        {\n+            DrawIndex(hdc, offset, index, padding, size, true, true, colorFill); // bottom right\n+            return;\n+        }\n+\n+        offset.x = zoneRect.left + padding;\n+        DrawIndex(hdc, offset, index, padding, size, false, true, colorFill); // bottom left\n+    }\n+}\n+\n+void ZoneWindow::DrawIndex(wil::unique_hdc& hdc, POINT offset, size_t index, int padding, int size, bool flipX, bool flipY, COLORREF colorFill)\n+{\n+    RECT rect = { offset.x, offset.y, offset.x + size, offset.y + size };\n+    for (int y = 0; y < 3; y++)\n+    {\n+        for (int x = 0; x < 3; x++)\n+        {\n+            RECT useRect = rect;\n+            if (flipX)\n+            {\n+                if (x == 0) useRect.left += (size + padding + size + padding);\n+                else if (x == 2) useRect.left -= (size + padding + size + padding);\n+                useRect.right = useRect.left + size;\n+            }\n+\n+            if (flipY)\n+            {\n+                if (y == 0) useRect.top += (size + padding + size + padding);\n+                else if (y == 2) useRect.top -= (size + padding + size + padding);\n+                useRect.bottom = useRect.top + size;\n+            }\n+\n+            FillRectARGB(hdc, &useRect, 200, RGB(50, 50, 50), true);\n+\n+            RECT inside = useRect;\n+            InflateRect(&inside, -2, -2);\n+\n+            FillRectARGB(hdc, &inside, 100, colorFill, true);\n+\n+            rect.left += (size + padding);\n+            rect.right = rect.left + size;\n+\n+            if (--index == 0)\n+            {\n+                return;\n+            }\n+        }\n+        rect.left = offset.x;\n+        rect.right = rect.left + size;\n+        rect.top += (size + padding);\n+        rect.bottom = rect.top + size;\n+    }\n+}\n+\n+void ZoneWindow::DrawActiveZoneSet(wil::unique_hdc& hdc, RECT const& clientRect) noexcept\n+{\n+    if (m_activeZoneSet)\n+    {\n+        static constexpr std::array<COLORREF, 9> colors{\n+            RGB(75, 75, 85),\n+            RGB(150, 150, 160),\n+            RGB(100, 100, 110),\n+            RGB(125, 125, 135),\n+            RGB(225, 225, 235),\n+            RGB(25, 25, 35),\n+            RGB(200, 200, 210),\n+            RGB(50, 50, 60),\n+            RGB(175, 175, 185),\n+        };\n+\n+        //                                 { fillAlpha, fill, borderAlpha, border, thickness }\n+        ColorSetting const colorHints      { 225, RGB(81, 92, 107),   255, RGB(104, 118, 138), -2 };\n+        ColorSetting const colorEditorMode { 240, RGB(100, 100, 100), 255, RGB(50, 50, 50),    -5 };\n+        ColorSetting       colorViewer     { 225, 0,                  255, RGB(40, 50, 60),    -2 };\n+        ColorSetting       colorHighlight  { 225, 0,                  255, 0,                  -2 };\n+        ColorSetting const colorFlash      { 200, RGB(81, 92, 107),   200, RGB(104, 118, 138), -2 };\n+\n+        auto zones = m_activeZoneSet->GetZones();\n+        size_t colorIndex = zones.size() - 1;\n+        for (auto iter = zones.rbegin(); iter != zones.rend(); iter++)\n+        {\n+            if (winrt::com_ptr<IZone> zone = iter->try_as<IZone>())\n+            {\n+                if (zone != m_highlightZone)\n+                {\n+                    if (m_flashMode)\n+                    {\n+                        DrawZone(hdc, colorFlash, zone);\n+                    }\n+                    else if (m_drawHints)\n+                    {\n+                        DrawZone(hdc, colorHints, zone);\n+                    }\n+                    else if (m_editorMode)\n+                    {\n+                        DrawZone(hdc, colorEditorMode, zone);\n+                    }\n+                    else\n+                    {\n+                        colorViewer.fill = colors[colorIndex];\n+                        DrawZone(hdc, colorViewer, zone);\n+                    }\n+                }\n+                colorIndex--;\n+            }\n+        }\n+\n+        if (m_highlightZone)\n+        {\n+            colorHighlight.fill = m_host->GetZoneHighlightColor();\n+            colorHighlight.border = RGB(\n+                max(0, GetRValue(colorHighlight.fill) - 25),\n+                max(0, GetGValue(colorHighlight.fill) - 25),\n+                max(0, GetBValue(colorHighlight.fill) - 25)\n+            );\n+            DrawZone(hdc, colorHighlight, m_highlightZone);\n+        }\n+    }\n+}\n+\n+void ZoneWindow::DrawZoneBuilder(wil::unique_hdc& hdc, RECT const& clientRect) noexcept\n+{\n+    if (m_editorMode && m_buttonDown)\n+    {\n+        COLORREF const colorDrag = RGB(255, 255, 255);\n+        FillRectARGB(hdc, &m_zoneBuilder, 255, colorDrag, false);\n+    }\n+}\n+\n+void ZoneWindow::DrawSwitchButtons(wil::unique_hdc& hdc, RECT const& clientRect) noexcept\n+{\n+    if (!m_editorMode && !m_drawHints && !m_flashMode)\n+    {\n+        Rect const rect(clientRect);\n+\n+        int const numButtons = 9;\n+        int const containerRectWidth = (m_switchButtonWidth * numButtons) + (m_switchButtonPadding * numButtons) + m_switchButtonPadding;\n+        int const containerRectHeight = 42;\n+\n+        m_switchButtonContainerRect = { (rect.width() / 2) - (containerRectWidth / 2), 0, (rect.width() / 2) + (containerRectWidth / 2), containerRectHeight };\n+\n+        COLORREF const switchButtonContainerColor = RGB(50, 50, 50);\n+        BYTE const switchButtonContainerAlpha = 150;\n+        FillRectARGB(hdc, &m_switchButtonContainerRect, switchButtonContainerAlpha, switchButtonContainerColor, true);\n+\n+        COLORREF const fillColor = RGB(128, 128, 128);\n+        COLORREF const hoverColor = RGB(255, 255, 255);\n+        COLORREF const activeColor = RGB(0, 128, 0);\n+        COLORREF const activeHoverColor = RGB(0, 200, 0);\n+\n+        size_t activeZoneCount = 0;\n+        if (m_activeZoneSet)\n+        {\n+            activeZoneCount = m_activeZoneSet->GetZones().size();\n+        }\n+\n+        int x = m_switchButtonContainerRect.left + m_switchButtonPadding;\n+        for (UINT i = 1; i < 10; i++)\n+        {\n+            POINT const offset = { x, 5 };\n+            int const padding = 1;\n+            int const size = 10;\n+\n+            bool const active = activeZoneCount == i;\n+            bool const hover = i == m_switchButtonHover;\n+\n+            COLORREF color = fillColor;\n+            if (active && hover)\n+            {\n+                color = activeHoverColor;\n+            }\n+            else if (active)\n+            {\n+                color = activeColor;\n+            }\n+            else if (hover)\n+            {\n+                color = hoverColor;\n+            }\n+\n+            DrawIndex(hdc, offset, i, padding, size, false /*flipX*/, false /*flipY*/, color);\n+            x += m_switchButtonWidth + m_switchButtonPadding;\n+        }\n+    }\n+}\n+\n+void ZoneWindow::OnPaint(wil::unique_hdc& hdc) noexcept\n+{\n+    RECT clientRect;\n+    GetClientRect(m_window.get(), &clientRect);\n+\n+    wil::unique_hdc hdcMem;;\n+    HPAINTBUFFER bufferedPaint = BeginBufferedPaint(hdc.get(), &clientRect, BPBF_TOPDOWNDIB, nullptr, &hdcMem);\n+    if (bufferedPaint)\n+    {\n+        DrawBackdrop(hdcMem, clientRect);\n+        DrawGridLines(hdcMem, clientRect);\n+        DrawActiveZoneSet(hdcMem, clientRect);\n+        DrawZoneBuilder(hdcMem, clientRect);\n+        DrawSwitchButtons(hdcMem, clientRect);\n+        EndBufferedPaint(bufferedPaint, TRUE);\n+    }\n+}\n+\n+void ZoneWindow::UpdateGrid(int stepColumns, int stepRows) noexcept\n+{\n+    bool const shift = GetAsyncKeyState(VK_SHIFT) & 0x8000;\n+    bool const control = GetAsyncKeyState(VK_CONTROL) & 0x8000;\n+\n+    RECT clientRect;\n+    ::GetClientRect(m_window.get(), &clientRect);\n+    InflateRect(&clientRect, -m_gridMargins.cx, -m_gridMargins.cy);\n+\n+    Rect gridRect(clientRect);\n+    if (control || (!stepColumns && !stepRows))\n+    {\n+        // Reset\n+        m_gridColumns = (gridRect.width() / 50) + 1;\n+        m_gridRows = (gridRect.height() / 50) + 1;\n+    }\n+    else\n+    {\n+        stepColumns = stepColumns * (shift ? 5 : 1);\n+        stepRows = stepRows * (shift ? 5 : 1);\n+\n+        m_gridColumns = max(1, m_gridColumns + stepColumns);\n+        m_gridRows = max(1, m_gridRows + stepRows);\n+    }\n+\n+    m_gridWidth = gridRect.width() / m_gridColumns;\n+    m_gridHeight = gridRect.height() / m_gridRows;\n+}\n+\n+void ZoneWindow::UpdateGridMargins(int inc) noexcept\n+{\n+    bool const shift = GetAsyncKeyState(VK_SHIFT) & 0x8000;\n+    bool const control = GetAsyncKeyState(VK_CONTROL) & 0x8000;\n+    if (control)\n+    {\n+        m_gridMargins.cx = 0;\n+        m_gridMargins.cy = 0;\n+    }\n+    else\n+    {\n+        inc = inc * (shift ? 5 : 1);\n+        m_gridMargins.cx = max(0, m_gridMargins.cx + inc);\n+        m_gridMargins.cy = max(0, m_gridMargins.cy + inc);\n+    }\n+    UpdateGrid(0, 0);\n+\n+    RegistryHelpers::SetValue<SIZE>(m_uniqueId, L""GridMargins"", m_gridMargins, sizeof(m_gridMargins));\n+}\n+\n+void ZoneWindow::EnterEditorMode() noexcept\n+{\n+    m_editorModeActivity.Start();\n+    MakeActiveZoneSetCustom();\n+    m_editorMode = true;\n+}\n+\n+void ZoneWindow::ExitEditorMode() noexcept\n+{\n+    m_editorMode = false;\n+    if (m_activeZoneSet)\n+    {\n+        m_activeZoneSet->Save();\n+    }\n+    m_editorModeActivity.Stop(m_activeZoneSet);\n+}\n+\n+void ZoneWindow::OnKeyUp(WPARAM wparam) noexcept\n+{\n+    bool fRedraw = false;\n+    Trace::ZoneWindow::KeyUp(wparam, m_editorMode);\n+\n+    if ((wparam >= \'0\') && (wparam<= \'9\'))\n+    {\n+        CycleActiveZoneSetInternal(static_cast<DWORD>(wparam), Trace::ZoneWindow::InputMode::Keyboard);\n+    }\n+    else\n+    {\n+        switch (wparam)\n+        {\n+            case VK_DELETE:\n+            case \'d\':\n+            case \'D\':\n+            {\n+                // Delete active zone set\n+                for (auto iter = m_zoneSets.begin(); iter != m_zoneSets.end(); iter++)\n+                {\n+                    if (iter->get() == m_activeZoneSet.get())\n+                    {\n+                        RegistryHelpers::DeleteZoneSet(m_workArea, m_activeZoneSet->Id());\n+                        m_zoneSets.erase(iter);\n+                        m_activeZoneSet = nullptr;\n+                        break;\n+                    }\n+                }\n+            }\n+            break;\n+\n+            case \'r\':\n+            case \'R\':\n+            {\n+                // Reset zone sets for current work area\n+                m_zoneSets.clear();\n+                m_activeZoneSet = nullptr;\n+                RegistryHelpers::DeleteAllZoneSets(m_workArea);\n+                InitializeZoneSets();\n+            }\n+            break;\n+\n+            case \'e\':\n+            case \'E\':\n+            {\n+                // Toggle editor mode\n+                m_editorMode ? ExitEditorMode() : EnterEditorMode();\n+            }\n+            break;\n+\n+            case \'c\':\n+            case \'C\':\n+            {\n+                // Create a custom zone\n+                if (auto zoneSet = AddZoneSet(ZoneSetLayout::Custom, 0, 0, 0))\n+                {\n+                    UpdateActiveZoneSet(zoneSet.get());\n+                }\n+            }\n+            break;\n+\n+            case VK_LEFT: UpdateGrid(-1, 0); break;\n+            case VK_RIGHT: UpdateGrid(1, 0); break;\n+\n+            case VK_UP: UpdateGrid(0, 1); break;\n+            case VK_DOWN: UpdateGrid(0, -1); break;\n+\n+            case VK_PRIOR: UpdateGridMargins(10); break;\n+            case VK_NEXT: UpdateGridMargins(-10); break;\n+\n+            case VK_ESCAPE: m_host->ToggleZoneViewers(); break;\n+        }\n+    }\n+    InvalidateRect(m_window.get(), nullptr, true);\n+}\n+\n+winrt::com_ptr<IZone> ZoneWindow::ZoneFromPoint(POINT pt) noexcept\n+{\n+    if (m_activeZoneSet)\n+    {\n+        return m_activeZoneSet->ZoneFromPoint(pt);\n+    }\n+    return nullptr;\n+}\n+\n+void ZoneWindow::ChooseDefaultActiveZoneSet() noexcept\n+{\n+    MONITORINFO mi{};\n+    mi.cbSize = sizeof(mi);\n+    if (GetMonitorInfoW(m_monitor, &mi))\n+    {\n+        Rect const monitorRect(mi.rcMonitor);\n+\n+        if ((monitorRect.width() == 3840) && (monitorRect.height() == 2160))\n+        {\n+            // For 4k screens, pick a layout with 5 zones in focus mode as the default.\n+            winrt::com_ptr<IZoneSet> zoneSetBest;\n+            for (auto zoneSet : m_zoneSets)\n+            {\n+                auto zones = zoneSet->GetZones();\n+                if (zones.size() == 5)\n+                {\n+                    if (!zoneSetBest)\n+                    {\n+                        zoneSetBest = zoneSet;\n+                    }\n+                    else if (zoneSet->GetLayout() == ZoneSetLayout::Focus)\n+                    {\n+                        zoneSetBest = zoneSet;\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (zoneSetBest)\n+            {\n+                UpdateActiveZoneSet(zoneSetBest.get());\n+            }\n+        }\n+        else if (monitorRect.aspectRatio() < 40)\n+        {\n+            // Ultrawide, prefer 3 columns\n+            winrt::com_ptr<IZoneSet> zoneSetBest;\n+            for (auto zoneSet : m_zoneSets)\n+            {\n+                auto zones = zoneSet->GetZones();\n+                if (zones.size() == 3)\n+                {\n+                    if (!zoneSetBest)\n+                    {\n+                        zoneSetBest = zoneSet;\n+                    }\n+                    else if (zoneSet->GetLayout() == ZoneSetLayout::Row)\n+                    {\n+                        zoneSetBest = zoneSet;\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (zoneSetBest)\n+            {\n+                UpdateActiveZoneSet(zoneSetBest.get());\n+            }\n+        }\n+    }\n+\n+    if (!m_activeZoneSet)\n+    {\n+        // Couldn\'t find a ZoneSet to use so just use the first one.\n+        auto zoneSet = m_zoneSets.at(0);\n+        UpdateActiveZoneSet(zoneSet.get());\n+    }\n+}\n+\n+bool ZoneWindow::IsOccluded(POINT pt, size_t index) noexcept\n+{\n+    auto zones = m_activeZoneSet->GetZones();\n+    size_t i = 1;\n+\n+    for (auto iter = zones.begin(); iter != zones.end(); iter++)\n+    {\n+        if (winrt::com_ptr<IZone> zone = iter->try_as<IZone>())\n+        {\n+            if (i < index)\n+            {\n+                if (PtInRect(&zone->GetZoneRect(), pt))\n+                {\n+                    return true;\n+                }\n+            }\n+        }\n+        i++;\n+    }\n+    return false;\n+}\n+\n+void ZoneWindow::CycleActiveZoneSetInternal(DWORD wparam, Trace::ZoneWindow::InputMode mode) noexcept\n+{\n+    if (!m_editorMode)\n+    {\n+        Trace::ZoneWindow::CycleActiveZoneSet(m_activeZoneSet, mode);\n+        if (m_keyLast != wparam)\n+        {\n+            m_keyCycle = 0;\n+        }\n+\n+        m_keyLast = wparam;\n+\n+        bool loopAround = true;\n+        size_t const val = static_cast<size_t>(wparam - L\'0\');\n+        size_t i = 0;\n+        for (auto zoneSet : m_zoneSets)\n+        {\n+            if (zoneSet->GetZones().size() == val)\n+            {\n+                if (i < m_keyCycle)\n+                {\n+                    i++;\n+                }\n+                else\n+                {\n+                    UpdateActiveZoneSet(zoneSet.get());\n+                    loopAround = false;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        if ((m_keyCycle > 0) && loopAround)\n+        {\n+            // Cycling through a non-empty group and hit the end\n+            m_keyCycle = 0;\n+            OnKeyUp(wparam);\n+        }\n+        else\n+        {\n+            m_keyCycle++;\n+        }\n+\n+        m_host->MoveWindowsOnActiveZoneSetChange();\n+        m_highlightZone = nullptr;\n+    }\n+}\n+\n+void ZoneWindow::FlashZones() noexcept\n+{\n+    m_flashMode = true;\n+\n+    ShowWindow(m_window.get(), SW_SHOWNA);\n+    std::thread([window = m_window.get()]()\n+        {\n+            AnimateWindow(window, m_flashDuration, AW_HIDE | AW_BLEND);\n+        }).detach();\n+}\n+\n+int ZoneWindow::GetSwitchButtonIndexFromPoint(POINT ptClient) noexcept\n+{\n+    auto const switchButtonIndex = ((ptClient.x - m_switchButtonContainerRect.left) / (m_switchButtonWidth + m_switchButtonPadding)) + 1;\n+    return ((switchButtonIndex > 0) && (switchButtonIndex < 10)) ? switchButtonIndex : -1;\n+}\n+\n+IFACEMETHODIMP_(void) ZoneWindow::SaveWindowProcessToZoneIndex(HWND window) noexcept\n+{\n+    wchar_t processPath[MAX_PATH] = { 0 };\n+    DWORD processPathSize = GetProcessPath(window, processPath, static_cast<DWORD>(MAX_PATH));\n+    if (processPathSize > 0)\n+    {\n+        DWORD zoneIndex = static_cast<DWORD>(m_activeZoneSet->GetZoneIndexFromWindow(window));\n+        if (zoneIndex != -1)\n+        {\n+            RegistryHelpers::SaveAppLastZone(window, processPath, zoneIndex);\n+        }\n+    }\n+}\n+\n+typedef BOOL(WINAPI *GetDpiForMonitorInternalFunc)(HMONITOR, UINT, UINT*, UINT*);\n+UINT ZoneWindow::GetDpiForMonitor() noexcept\n+{\n+    UINT dpi{};\n+    if (wil::unique_hmodule user32{ LoadLibrary(L""user32.dll"") })\n+    {\n+        if (auto func = reinterpret_cast<GetDpiForMonitorInternalFunc>(GetProcAddress(user32.get(), ""GetDpiForMonitorInternal"")))\n+        {\n+            func(m_monitor, 0, &dpi, &dpi);\n+        }\n+    }\n+\n+    if (dpi == 0)\n+    {\n+        if (wil::unique_hdc hdc{ GetDC(nullptr) })\n+        {\n+            dpi = GetDeviceCaps(hdc.get(), LOGPIXELSX);\n+        }\n+    }\n+\n+    return (dpi == 0) ? 96 : dpi;\n+}\n+#pragma endregion\n+\n+LRESULT CALLBACK ZoneWindow::s_WndProc(HWND window, UINT message, WPARAM wparam, LPARAM lparam) noexcept\n+{\n+    auto thisRef = reinterpret_cast<ZoneWindow*>(GetWindowLongPtr(window, GWLP_USERDATA));\n+    if ((thisRef == nullptr) && (message == WM_CREATE))\n+    {\n+        auto createStruct = reinterpret_cast<LPCREATESTRUCT>(lparam);\n+        thisRef = reinterpret_cast<ZoneWindow*>(createStruct->lpCreateParams);\n+        SetWindowLongPtr(window, GWLP_USERDATA, reinterpret_cast<LONG_PTR>(thisRef));\n+    }\n+\n+    return (thisRef != nullptr) ? thisRef->WndProc(message, wparam, lparam) :\n+        DefWindowProc(window, message, wparam, lparam);\n+}\n+\n+winrt::com_ptr<IZoneWindow> MakeZoneWindow(IZoneWindowHost* host, HINSTANCE hinstance, HMONITOR monitor,\n+    PCWSTR deviceId, PCWSTR virtualDesktopId, bool flashZones) noexcept\n+{\n+    return winrt::make_self<ZoneWindow>(host, hinstance, monitor, deviceId, virtualDesktopId, flashZones);\n+}'}, {'Name': 'src/modules/fancyzones/lib/ZoneWindow.h', 'Line Additions': 23, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,23 @@\n+#pragma once\n+#include ""FancyZones.h""\n+\n+interface __declspec(uuid(""{7F017528-8110-4FB3-BE41-F472969C2560}"")) IZoneWindow : public IUnknown\n+{\n+    IFACEMETHOD(ShowZoneWindow)(bool activate, bool fadeIn) = 0;\n+    IFACEMETHOD(HideZoneWindow)() = 0;\n+    IFACEMETHOD(MoveSizeEnter)(HWND window, bool dragEnabled) = 0;\n+    IFACEMETHOD(MoveSizeUpdate)(POINT const& ptScreen, bool dragEnabled) = 0;\n+    IFACEMETHOD(MoveSizeEnd)(HWND window, POINT const& ptScreen) = 0;\n+    IFACEMETHOD(MoveSizeCancel)() = 0;\n+    IFACEMETHOD_(bool, IsDragEnabled)() = 0;\n+    IFACEMETHOD_(void, MoveWindowIntoZoneByIndex)(HWND window, int index) = 0;\n+    IFACEMETHOD_(void, MoveWindowIntoZoneByDirection)(HWND window, DWORD vkCode) = 0;\n+    IFACEMETHOD_(void, CycleActiveZoneSet)(DWORD vkCode) = 0;\n+    IFACEMETHOD_(void, SaveWindowProcessToZoneIndex)(HWND window) = 0;\n+    IFACEMETHOD_(std::wstring, DeviceId)() = 0;\n+    IFACEMETHOD_(std::wstring, UniqueId)() = 0;\n+    IFACEMETHOD_(IZoneSet*, ActiveZoneSet)() = 0;\n+};\n+\n+winrt::com_ptr<IZoneWindow> MakeZoneWindow(IZoneWindowHost* host, HINSTANCE hinstance, HMONITOR monitor,\n+    PCWSTR deviceId, PCWSTR virtualDesktopId, bool flashZones) noexcept;'}, {'Name': 'src/modules/fancyzones/lib/fancyzones.rc', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/fancyzones/lib/packages.config', 'Line Additions': 4, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,4 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<packages>\r\n+  <package id=""Microsoft.Windows.ImplementationLibrary"" version=""1.0.190716.2"" targetFramework=""native"" />\r\n+</packages>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/lib/pch.cpp', 'Line Additions': 5, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,5 @@\n+// pch.cpp: source file corresponding to the pre-compiled header\r\n+\r\n+#include ""pch.h""\r\n+\r\n+// When you are using pre-compiled headers, this source file is necessary for compilation to succeed.\r'}, {'Name': 'src/modules/fancyzones/lib/pch.h', 'Line Additions': 33, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,33 @@\n+#pragma once\r\n+#include ""resource.h""\r\n+\r\n+#define WIN32_LEAN_AND_MEAN // Exclude rarely-used stuff from Windows headers\r\n+#include <Unknwn.h>\r\n+#include <winrt/base.h>\r\n+#include <windows.h>\r\n+#include <windowsx.h>\r\n+#include <dwmapi.h>\r\n+#include <ProjectTelemetry.h>\r\n+#include <shellapi.h>\r\n+#include <strsafe.h>\r\n+#include <TraceLoggingActivity.h>\r\n+#include <wil\\resource.h>\r\n+#include <wil\\result.h>\r\n+#include <windows.foundation.h>\r\n+#include <psapi.h>\r\n+\r\n+#include ""trace.h""\r\n+#include ""Settings.h""\r\n+#include ""FancyZones.h""\r\n+#include ""ZoneWindow.h""\r\n+#include ""ZoneSet.h""\r\n+#include ""Zone.h""\r\n+#include ""util.h""\r\n+#include ""RegistryHelpers.h""\r\n+\r\n+#pragma comment(lib, ""windowsapp"")\r\n+\r\n+namespace winrt\r\n+{\r\n+    using namespace ::winrt;\r\n+}\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/lib/resource.h', 'Line Additions': 13, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,13 @@\n+#define IDS_SETTING_DESCRIPTION_SHIFTDRAG 101\r\n+#define IDS_SETTING_DESCRIPTION_OVERRIDE_SNAP_HOTKEYS 102\r\n+#define IDS_SETTING_DESCRIPTION_DISPLAYCHANGE_MOVEWINDOWS 103\r\n+#define IDS_SETTING_DESCRIPTION_ZONESETCHANGE_MOVEWINDOWS 104\r\n+#define IDS_SETTING_DESCRIPTION_ZONESETCHANGE_FLASHZONES 105\r\n+#define IDS_SETTING_DESCRIPTION_VIRTUALDESKTOPCHANGE_MOVEWINDOWS 106\r\n+#define IDS_SETTING_DESCRIPTION_ZONEHIGHLIGHTCOLOR 107\r\n+#define IDS_SETTING_DESCRIPTION_APPLASTZONE_MOVEWINDOWS 108\r\n+#define IDS_SETTING_DESCRIPTION_USE_STANDALONE_EDITOR 109\r\n+#define IDS_SETTING_DESCRIPTION 110\r\n+#define IDS_SETTING_LAUNCH_EDITOR_LABEL 111\r\n+#define IDS_SETTING_LAUNCH_EDITOR_BUTTON 112\r\n+#define IDS_SETTING_LAUNCH_EDITOR_DESCRIPTION 113\r'}, {'Name': 'src/modules/fancyzones/lib/trace.cpp', 'Line Additions': 164, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,164 @@\n+#include ""pch.h""\n+#include ""trace.h""\n+\n+TRACELOGGING_DEFINE_PROVIDER(\n+    g_hProvider,\n+    ""Microsoft.PowerToys"",\n+    // {38e8889b-9731-53f5-e901-e8a7c1753074}\n+    (0x38e8889b, 0x9731, 0x53f5, 0xe9, 0x01, 0xe8, 0xa7, 0xc1, 0x75, 0x30, 0x74),\n+    TraceLoggingOptionProjectTelemetry());\n+\n+struct ZoneSetInfo\n+{\n+    size_t NumberOfZones = 0;\n+    size_t NumberOfWindows = 0;\n+    ZoneSetLayout Layout = ZoneSetLayout::Custom;\n+};\n+\n+ZoneSetInfo GetZoneSetInfo(_In_opt_ winrt::com_ptr<IZoneSet> set) noexcept\n+{\n+    ZoneSetInfo info;\n+    if (set)\n+    {\n+        auto zones = set->GetZones();\n+        info.NumberOfZones = zones.size();\n+        info.Layout = set->GetLayout();\n+        info.NumberOfWindows = std::count_if(zones.cbegin(), zones.cend(), [&](winrt::com_ptr<IZone> zone)\n+        {\n+            return !zone->IsEmpty();\n+        });\n+    }\n+    return info;\n+}\n+\n+\n+void Trace::RegisterProvider() noexcept\n+{\n+    TraceLoggingRegister(g_hProvider);\n+}\n+\n+void Trace::UnregisterProvider() noexcept\n+{\n+    TraceLoggingUnregister(g_hProvider);\n+}\n+\n+void Trace::FancyZones::EnableFancyZones(bool enabled) noexcept\n+{\n+    TraceLoggingWrite(\n+        g_hProvider,\n+        ""FancyZones::Event::EnableFancyZones"",\n+        ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+        TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE),\n+        TraceLoggingBoolean(enabled, ""Enabled""));\n+}\n+\n+void Trace::FancyZones::ToggleZoneViewers(bool visible) noexcept\n+{\n+    TraceLoggingWrite(\n+        g_hProvider,\n+        ""FancyZones::Event::ToggleZoneViewers"",\n+        ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+        TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE),\n+        TraceLoggingBoolean(visible, ""Visible""));\n+}\n+\n+void Trace::FancyZones::OnKeyDown(DWORD vk, bool win, bool control, bool inMoveSize) noexcept\n+{\n+    TraceLoggingWrite(\n+        g_hProvider,\n+        ""FancyZones::Event::OnKeyDown"",\n+        ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+        TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE),\n+        TraceLoggingValue(vk, ""Hotkey""),\n+        TraceLoggingBoolean(win, ""WindowsKey""),\n+        TraceLoggingBoolean(control, ""ControlKey""),\n+        TraceLoggingBoolean(inMoveSize, ""InMoveSize""));\n+}\n+\n+void Trace::SettingsChanged(const Settings& settings) noexcept\n+{\n+    TraceLoggingWrite(\n+        g_hProvider,\n+        ""FancyZones::Event::SettingsChanged"",\n+        ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+        TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE),\n+        TraceLoggingBoolean(settings.shiftDrag, ""Shift drag""),\n+        TraceLoggingBoolean(settings.displayChange_moveWindows, ""Move Windows On Display Change""),\n+        TraceLoggingBoolean(settings.virtualDesktopChange_moveWindows, ""Move Windows On Virtual Desktop Change""),\n+        TraceLoggingBoolean(settings.zoneSetChange_flashZones, ""Flash zones On Zone Set Change""),\n+        TraceLoggingBoolean(settings.zoneSetChange_moveWindows, ""Move Windows On Zone Set Change""),\n+        TraceLoggingBoolean(settings.overrideSnapHotkeys, ""Override snap hot keys""),\n+        TraceLoggingWideString(settings.zoneHightlightColor.c_str(), ""Zone highlight color""));\n+}\n+\n+void Trace::VirtualDesktopChanged() noexcept\n+{\n+    TraceLoggingWrite(\n+        g_hProvider,\n+        ""FancyZones::Event::VirtualDesktopChanged"",\n+        ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+        TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+}\n+\n+void Trace::ZoneWindow::KeyUp(WPARAM wParam, bool isEditorMode) noexcept\n+{\n+    TraceLoggingWrite(\n+        g_hProvider,\n+        ""FancyZones::Event::ZoneWindowKeyUp"",\n+        ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+        TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE),\n+        TraceLoggingValue(wParam, ""Keyboard value""),\n+        TraceLoggingBoolean(isEditorMode, ""Editor Mode""));\n+}\n+\n+void Trace::ZoneWindow::MoveSizeEnd(_In_opt_ winrt::com_ptr<IZoneSet> activeSet) noexcept\n+{\n+    auto const zoneInfo = GetZoneSetInfo(activeSet);\n+    TraceLoggingWrite(\n+        g_hProvider,\n+        ""FancyZones::Event::MoveSizeEnd"",\n+        ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+        TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE),\n+        TraceLoggingValue(reinterpret_cast<void*>(activeSet.get()), ""Active Set""),\n+        TraceLoggingValue(zoneInfo.NumberOfZones, ""NumberOfZones""),\n+        TraceLoggingValue(zoneInfo.NumberOfWindows, ""NumberOfWindows""),\n+        TraceLoggingValue(static_cast<int>(zoneInfo.Layout), ""LayoutKind""));\n+}\n+\n+void Trace::ZoneWindow::CycleActiveZoneSet(_In_opt_ winrt::com_ptr<IZoneSet> activeSet, InputMode mode) noexcept\n+{\n+    auto const zoneInfo = GetZoneSetInfo(activeSet);\n+    TraceLoggingWrite(\n+        g_hProvider,\n+        ""FancyZones::Event::CycleActiveZoneSet"",\n+        ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+        TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE),\n+        TraceLoggingValue(reinterpret_cast<void*>(activeSet.get()), ""Active Set""),\n+        TraceLoggingValue(zoneInfo.NumberOfZones, ""NumberOfZones""),\n+        TraceLoggingValue(zoneInfo.NumberOfWindows, ""NumberOfWindows""),\n+        TraceLoggingValue(static_cast<int>(zoneInfo.Layout), ""LayoutKind""),\n+        TraceLoggingValue(static_cast<int>(mode), ""InputMode""));\n+}\n+\n+void Trace::ZoneWindow::EditorModeActivity::Start() noexcept\n+{\n+    m_activity = TraceLoggingActivity<g_hProvider, PROJECT_KEYWORD_MEASURE>();\n+    TraceLoggingWriteStart(\n+        m_activity.value(),\n+        ""FancyZones::Activity::EditorMode"",\n+        ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance));\n+}\n+\n+void Trace::ZoneWindow::EditorModeActivity::Stop(_In_opt_ winrt::com_ptr<IZoneSet> activeSet) noexcept\n+{\n+    auto const zoneInfo = GetZoneSetInfo(activeSet);\n+    TraceLoggingWriteStop(\n+        m_activity.value(),\n+        ""FancyZones::Activity::EditorMode"",\n+        ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+        TraceLoggingValue(reinterpret_cast<void*>(activeSet.get()), ""Active Set""),\n+        TraceLoggingValue(zoneInfo.NumberOfZones, ""NumberOfZones""),\n+        TraceLoggingValue(zoneInfo.NumberOfWindows, ""NumberOfWindows""),\n+        TraceLoggingValue(static_cast<int>(zoneInfo.Layout), ""LayoutKind""));\n+    m_activity.reset();\n+}'}, {'Name': 'src/modules/fancyzones/lib/trace.h', 'Line Additions': 45, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,45 @@\n+#pragma once\n+\n+struct Settings;\n+interface IZoneSet;\n+\n+class Trace\n+{\n+public:\n+    static void RegisterProvider() noexcept;\n+    static void UnregisterProvider() noexcept;\n+\n+    class FancyZones\n+    {\n+    public:\n+        static void EnableFancyZones(bool enabled) noexcept;\n+        static void ToggleZoneViewers(bool visible) noexcept;\n+        static void OnKeyDown(DWORD vkCode, bool win, bool control, bool inMoveSize) noexcept;\n+    };\n+\n+    static void SettingsChanged(const Settings& settings) noexcept;\n+    static void VirtualDesktopChanged() noexcept;\n+\n+    class ZoneWindow\n+    {\n+    public:\n+        enum class InputMode\n+        {\n+            Keyboard,\n+            Mouse\n+        };\n+\n+        static void KeyUp(WPARAM wparam, bool isEditorMode) noexcept;\n+        static void MoveSizeEnd(_In_opt_ winrt::com_ptr<IZoneSet> activeSet) noexcept;\n+        static void CycleActiveZoneSet(_In_opt_ winrt::com_ptr<IZoneSet> activeSet, InputMode mode) noexcept;\n+\n+        class EditorModeActivity\n+        {\n+        public:\n+            void Start() noexcept;\n+            void Stop(_In_opt_ winrt::com_ptr<IZoneSet> activeSet) noexcept;\n+        private:\n+            std::optional<TraceLoggingActivity<g_hProvider, PROJECT_KEYWORD_MEASURE>> m_activity{};\n+        };\n+    };\n+};'}, {'Name': 'src/modules/fancyzones/lib/util.h', 'Line Additions': 152, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,152 @@\n+#pragma once\n+\n+struct Rect\n+{\n+    Rect() {}\n+\n+    Rect(RECT rect) : m_rect(rect)\n+    {\n+    }\n+\n+    Rect(RECT rect, UINT dpi) : m_rect(rect)\n+    {\n+        m_rect.right = m_rect.left + MulDiv(m_rect.right - m_rect.left, dpi, 96);\n+        m_rect.bottom = m_rect.top + MulDiv(m_rect.bottom - m_rect.top, dpi, 96);\n+    }\n+\n+    int x() const { return m_rect.left; }\n+    int y() const { return m_rect.top; }\n+    int width() const { return m_rect.right - m_rect.left; }\n+    int height() const { return m_rect.bottom - m_rect.top; }\n+    int left() const { return m_rect.left; }\n+    int top() const { return m_rect.top; }\n+    int right() const { return m_rect.right; }\n+    int bottom() const { return m_rect.bottom; }\n+    int aspectRatio() const { return MulDiv(m_rect.bottom - m_rect.top, 100, m_rect.right - m_rect.left); }\n+\n+private:\n+    RECT m_rect{};\n+};\n+\n+inline void MakeWindowTransparent(HWND window)\n+{\n+    int const pos = -GetSystemMetrics(SM_CXVIRTUALSCREEN) - 8;\n+    if (wil::unique_hrgn hrgn{ CreateRectRgn(pos, 0, (pos + 1), 1) })\n+    {\n+        DWM_BLURBEHIND bh = { DWM_BB_ENABLE | DWM_BB_BLURREGION, TRUE, hrgn.get(), FALSE };\n+        DwmEnableBlurBehindWindow(window, &bh);\n+    }\n+}\n+\n+inline void InitRGB(_Out_ RGBQUAD *quad, BYTE alpha, COLORREF color)\n+{\n+    ZeroMemory(quad, sizeof(*quad));\n+    quad->rgbReserved = alpha;\n+    quad->rgbRed = GetRValue(color) * alpha / 255;\n+    quad->rgbGreen = GetGValue(color) * alpha / 255;\n+    quad->rgbBlue = GetBValue(color) * alpha / 255;\n+}\n+\n+inline void FillRectARGB(wil::unique_hdc& hdc, RECT const *prcFill, BYTE alpha, COLORREF color, bool blendAlpha)\n+{\n+    BITMAPINFO bi;\n+    ZeroMemory(&bi, sizeof(bi));\n+    bi.bmiHeader.biSize = sizeof(BITMAPINFOHEADER);\n+    bi.bmiHeader.biWidth = 1;\n+    bi.bmiHeader.biHeight = 1;\n+    bi.bmiHeader.biPlanes = 1;\n+    bi.bmiHeader.biBitCount = 32;\n+    bi.bmiHeader.biCompression = BI_RGB;\n+\n+    RECT fillRect;\n+    CopyRect(&fillRect, prcFill);\n+    if ((alpha == 255) || !blendAlpha)\n+    {\n+        // Opaque or the caller does not want to blend the alpha\n+        RGBQUAD bitmapBits;\n+        InitRGB(&bitmapBits, alpha, color);\n+        StretchDIBits(\n+            hdc.get(),\n+            fillRect.left,\n+            fillRect.top,\n+            fillRect.right - fillRect.left,\n+            fillRect.bottom - fillRect.top,\n+            0, 0, 1, 1, &bitmapBits, &bi, DIB_RGB_COLORS, SRCCOPY);\n+    }\n+    else\n+    {\n+        if (wil::unique_hdc hdcSrc{ CreateCompatibleDC(hdc.get()) })\n+        {\n+            void* pBitmapBits;\n+            if (wil::unique_hbitmap bitmapSource{ CreateDIBSection(hdcSrc.get(), &bi, DIB_RGB_COLORS, &pBitmapBits, nullptr, 0) })\n+            {\n+                InitRGB(reinterpret_cast<RGBQUAD *>(pBitmapBits), alpha, color);\n+\n+                wil::unique_select_object bitmapOld{ SelectObject(hdcSrc.get(), bitmapSource.get()) };\n+                BLENDFUNCTION bf = { AC_SRC_OVER, 0, 255, AC_SRC_ALPHA };\n+                GdiAlphaBlend(\n+                    hdc.get(),\n+                    fillRect.left,\n+                    fillRect.top,\n+                    fillRect.right - fillRect.left,\n+                    fillRect.bottom - fillRect.top,\n+                    hdcSrc.get(), 0, 0, 1, 1, bf);\n+            }\n+\n+        }\n+    }\n+}\n+\n+inline void FrameRectARGB(wil::unique_hdc& hdc, const RECT &rc, BYTE bAlpha, COLORREF clr, int thickness)\n+{\n+    RECT sides[] = {\n+        { rc.left, rc.top, (rc.left + thickness), rc.bottom },\n+        { (rc.right - thickness), rc.top, rc.right, rc.bottom },\n+        { (rc.left + thickness), rc.top, (rc.right - thickness), (rc.top + thickness) },\n+        { (rc.left + thickness), (rc.bottom - thickness), (rc.right - thickness), rc.bottom }\n+    };\n+\n+    for (UINT i = 0; i < ARRAYSIZE(sides); i++)\n+    {\n+        FillRectARGB(hdc, &(sides[i]), bAlpha, clr, false);\n+    }\n+}\n+\n+inline void ParseDeviceId(PCWSTR deviceId, PWSTR parsedId, size_t size)\n+{\n+    // We\'re interested in the unique part between the first and last #\'s\n+    // Example input: \\\\?\\DISPLAY#DELA026#5&10a58c63&0&UID16777488#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7}\n+    // Example output: DELA026#5&10a58c63&0&UID16777488 \n+    wchar_t buffer[256];\n+    StringCchCopy(buffer, 256, deviceId);\n+\n+    PWSTR pszStart = wcschr(buffer, L\'#\');\n+    PWSTR pszEnd = wcsrchr(buffer, L\'#\');\n+    if (pszStart && pszEnd && (pszStart != pszEnd))\n+    {\n+        pszStart++; // skip past the first #\n+        *pszEnd = \'\\0\';\n+        StringCchCopy(parsedId, size, pszStart);\n+    }\n+    else\n+    {\n+        StringCchCopy(parsedId, size, L""FallbackDevice"");\n+    }\n+}\n+\n+inline DWORD GetProcessPath(HWND window, LPWSTR processPath, DWORD processPathMaxSize) noexcept\n+{\r\n+    DWORD pid{};\n+    GetWindowThreadProcessId(window, &pid);\n+\n+    DWORD numCopiedChars = 0;\n+    wil::unique_handle windowProcessHandle(OpenProcess(PROCESS_QUERY_INFORMATION | PROCESS_VM_READ, TRUE, pid));\n+    if (windowProcessHandle && (windowProcessHandle.get() != INVALID_HANDLE_VALUE))\n+    {\n+        // numCopiedChars first holds the size of processPath[], will then hold amount of characters returned by QueryFullProcessImageNameW\n+        // if QueryFullProcessImageNameW fails, numCopiedChars will be zero.\n+        numCopiedChars = processPathMaxSize;\n+        QueryFullProcessImageNameW(windowProcessHandle.get(), 0, processPath, &numCopiedChars);\n+    }\n+    return numCopiedChars;\n+}\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/RegistryHelpers.Spec.cpp', 'Line Additions': 36, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,36 @@\n+#include ""pch.h""\n+#include ""lib\\RegistryHelpers.h""\n+\n+using namespace Microsoft::VisualStudio::CppUnitTestFramework;\n+\n+namespace FancyZonesUnitTests\n+{\n+    TEST_CLASS(RegistryHelpersUnitTests)\n+    {\n+    public:\n+        TEST_METHOD(GetDefaultKey)\n+        {\n+            // Test the path to the key is the same string.\n+            wchar_t key[256];\n+            Assert::AreEqual(0, wcscmp(RegistryHelpers::GetKey(nullptr, key, ARRAYSIZE(key)), L""Software\\\\SuperFancyZones""));\n+        }\n+\n+        TEST_METHOD(GetKeyWithMonitor)\n+        {\n+            // Test the path to the key is the same string.\n+            wchar_t key[256];\n+            Assert::AreEqual(0, wcscmp(RegistryHelpers::GetKey(L""Monitor1"", key, ARRAYSIZE(key)), L""Software\\\\SuperFancyZones\\\\Monitor1""));\n+        }\n+\n+        TEST_METHOD(OpenKey)\n+        {\n+            // The default key should exist.\n+            wil::unique_hkey key{ RegistryHelpers::OpenKey({}) };\n+            Assert::IsNotNull(key.get());\n+\n+            // The Monitor1 key shouldn\'t exist.\n+            wil::unique_hkey key2{ RegistryHelpers::OpenKey(L""Monitor1"") };\n+            Assert::IsNull(key2.get());\n+        }\n+    };\n+}'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/UnitTests.vcxproj', 'Line Additions': 131, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,131 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project DefaultTargets=""Build"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup Label=""ProjectConfigurations"">\r\n+    <ProjectConfiguration Include=""Debug|x64"">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=""Release|x64"">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=""Globals"">\r\n+    <VCProjectVersion>16.0</VCProjectVersion>\r\n+    <ProjectGuid>{9C6A7905-72D4-4BF5-B256-ABFDAEF68AE9}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+    <RootNamespace>UnitTests</RootNamespace>\r\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\r\n+    <ProjectSubType>NativeUnitTestProject</ProjectSubType>\r\n+    <ProjectName>UnitTests-FancyZones</ProjectName>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseDebugLibraries>true</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseDebugLibraries>false</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+    <UseOfMfc>false</UseOfMfc>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\r\n+  <ImportGroup Label=""ExtensionSettings"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""Shared"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=""UserMacros"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <LinkIncremental>true</LinkIncremental>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <LinkIncremental>false</LinkIncremental>\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <ClCompile>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <AdditionalIncludeDirectories>..\\..\\..\\..\\common\\Telemetry;..\\..\\..\\..\\;..\\..\\..\\..\\deps\\cpprestsdk\\include;..\\..\\;$(VCInstallDir)UnitTest\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <UseFullPaths>true</UseFullPaths>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <AdditionalLibraryDirectories>$(VCInstallDir)UnitTest\\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>\r\n+      <AdditionalDependencies>gdiplus.lib;dwmapi.lib;shlwapi.lib;uxtheme.lib;shcore.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <ClCompile>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <AdditionalIncludeDirectories>..\\..\\..\\..\\common\\Telemetry;..\\..\\..\\..\\;..\\..\\..\\..\\deps\\cpprestsdk\\include;..\\..\\;$(VCInstallDir)UnitTest\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <UseFullPaths>true</UseFullPaths>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <AdditionalLibraryDirectories>$(VCInstallDir)UnitTest\\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>\r\n+      <AdditionalDependencies>gdiplus.lib;dwmapi.lib;shlwapi.lib;uxtheme.lib;shcore.lib;%(AdditionalDependencies)</AdditionalDependencies>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""RegistryHelpers.Spec.cpp"" />\r\n+    <ClCompile Include=""Util.Spec.cpp"" />\r\n+    <ClCompile Include=""Zone.Spec.cpp"" />\r\n+    <ClCompile Include=""ZoneSet.Spec.cpp"" />\r\n+    <ClCompile Include=""ZoneWindow.Spec.cpp"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""pch.h"" />\r\n+    <ClInclude Include=""Util.h"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=""..\\..\\lib\\FancyZonesLib.vcxproj"">\r\n+      <Project>{f9c68edf-ac74-4b77-9af1-005d9c9f6a99}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=""packages.config"" />\r\n+  </ItemGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\r\n+  <ImportGroup Label=""ExtensionTargets"">\r\n+    <Import Project=""..\\..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets"" Condition=""Exists(\'..\\..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets\')"" />\r\n+  </ImportGroup>\r\n+  <Target Name=""EnsureNuGetPackageBuildImports"" BeforeTargets=""PrepareForBuild"">\r\n+    <PropertyGroup>\r\n+      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>\r\n+    </PropertyGroup>\r\n+    <Error Condition=""!Exists(\'..\\..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets\')"" Text=""$([System.String]::Format(\'$(ErrorText)\', \'..\\..\\..\\..\\..\\packages\\Microsoft.Windows.ImplementationLibrary.1.0.190716.2\\build\\native\\Microsoft.Windows.ImplementationLibrary.targets\'))"" />\r\n+  </Target>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/UnitTests.vcxproj.filters', 'Line Additions': 48, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,48 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup>\r\n+    <Filter Include=""Source Files"">\r\n+      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>\r\n+      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=""Header Files"">\r\n+      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>\r\n+      <Extensions>h;hh;hpp;hxx;hm;inl;inc;ipp;xsd</Extensions>\r\n+    </Filter>\r\n+    <Filter Include=""Resource Files"">\r\n+      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>\r\n+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""ZoneSet.Spec.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""Zone.Spec.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""RegistryHelpers.Spec.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""Util.Spec.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""ZoneWindow.Spec.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""pch.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""Util.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <None Include=""packages.config"" />\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/Util.Spec.cpp', 'Line Additions': 33, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,33 @@\n+#include ""pch.h""\n+#include ""lib\\util.h""\n+\n+using namespace Microsoft::VisualStudio::CppUnitTestFramework;\n+\n+namespace FancyZonesUnitTests\n+{\n+    TEST_CLASS(UtilUnitTests)\n+    {\n+    public:\n+        TEST_METHOD(TestParseDeviceId)\n+        {\n+            // We\'re interested in the unique part between the first and last #\'s\n+            // Example input: \\\\?\\DISPLAY#DELA026#5&10a58c63&0&UID16777488#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7}\n+            // Example output: DELA026#5&10a58c63&0&UID16777488\n+            PCWSTR input = L""\\\\\\\\?\\\\DISPLAY#DELA026#5&10a58c63&0&UID16777488#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7}"";\n+            wchar_t output[256]{};\n+            ParseDeviceId(input, output, ARRAYSIZE(output));\n+            Assert::AreEqual(0, wcscmp(output, L""DELA026#5&10a58c63&0&UID16777488""));\n+        }\n+\n+        TEST_METHOD(TestParseInvalidDeviceId)\n+        {\n+            // We\'re interested in the unique part between the first and last #\'s\n+            // Example input: \\\\?\\DISPLAY#DELA026#5&10a58c63&0&UID16777488#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7}\n+            // Example output: DELA026#5&10a58c63&0&UID16777488\n+            PCWSTR input = L""AnInvalidDeviceId"";\n+            wchar_t output[256]{};\n+            ParseDeviceId(input, output, ARRAYSIZE(output));\n+            Assert::AreEqual(0, wcscmp(output, L""FallbackDevice""));\n+        }\n+    };\n+}'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/Util.h', 'Line Additions': 42, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,42 @@\n+#pragma once\r\n+\r\n+namespace CustomAssert\r\n+{\r\n+    static void AreEqual(const RECT& r1, const RECT& r2)\r\n+    {\r\n+        const bool equal = ((r1.left == r2.left) && (r1.right == r2.right) && (r1.top == r2.top) && (r1.bottom == r2.bottom));\r\n+        Microsoft::VisualStudio::CppUnitTestFramework::Assert::IsTrue(equal);\r\n+    }\r\n+\r\n+    static void AreEqual(GUID g1, GUID g2)\r\n+    {\r\n+        Microsoft::VisualStudio::CppUnitTestFramework::Assert::IsTrue(g1 == g2);\r\n+    }\r\n+\r\n+    static void AreEqual(WORD w1, WORD w2)\r\n+    {\r\n+        Microsoft::VisualStudio::CppUnitTestFramework::Assert::IsTrue(w1 == w2);\r\n+    }\r\n+}\r\n+\r\n+namespace Mocks\r\n+{\r\n+    static HWND Window()\r\n+    {\r\n+        static UINT_PTR s_nextWindow = 0;\r\n+        return reinterpret_cast<HWND>(++s_nextWindow);\r\n+    }\r\n+\r\n+    static HMONITOR Monitor()\r\n+    {\r\n+        static UINT_PTR s_nextMonitor = 0;\r\n+        return reinterpret_cast<HMONITOR>(++s_nextMonitor);\r\n+    }\r\n+\r\n+    static HINSTANCE Instance()\r\n+    {\r\n+        static UINT_PTR s_nextInstance = 0;\r\n+        return reinterpret_cast<HINSTANCE>(++s_nextInstance);\r\n+    }\r\n+\r\n+}\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/Zone.Spec.cpp', 'Line Additions': 54, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,54 @@\n+#include ""pch.h""\r\n+#include ""lib\\Zone.h""\r\n+\r\n+using namespace Microsoft::VisualStudio::CppUnitTestFramework;\r\n+\r\n+namespace FancyZonesUnitTests\r\n+{\r\n+    TEST_CLASS(ZoneUnitTests)\r\n+    {\r\n+    public:\r\n+        TEST_METHOD(TestCreateZone)\r\n+        {\r\n+            RECT zoneRect{ 10, 10, 200, 200 };\r\n+            winrt::com_ptr<IZone> zone = MakeZone(zoneRect);\r\n+            Assert::IsNotNull(&zone);\r\n+            CustomAssert::AreEqual(zoneRect, zone->GetZoneRect());\r\n+\r\n+            constexpr size_t id = 10;\r\n+            zone->SetId(id);\r\n+            Assert::AreEqual(zone->Id(), id);\r\n+        }\r\n+\r\n+        TEST_METHOD(ContainsWindow)\r\n+        {\r\n+            RECT zoneRect{ 10, 10, 200, 200 };\r\n+            winrt::com_ptr<IZone> zone = MakeZone(zoneRect);\r\n+            HWND newWindow = Mocks::Window();\r\n+            Assert::IsFalse(zone->ContainsWindow(newWindow));\r\n+        }\r\n+\r\n+        TEST_METHOD(TestAddRemoveWindow)\r\n+        {\r\n+            RECT zoneRect{ 10, 10, 200, 200 };\r\n+            winrt::com_ptr<IZone> zone = MakeZone(zoneRect);\r\n+            HWND newWindow = Mocks::Window();\r\n+\r\n+            Assert::IsFalse(zone->ContainsWindow(newWindow));\r\n+            zone->AddWindowToZone(newWindow, Mocks::Window(), true);\r\n+            Assert::IsTrue(zone->ContainsWindow(newWindow));\r\n+\r\n+            zone->RemoveWindowFromZone(newWindow, false);\r\n+            Assert::IsFalse(zone->ContainsWindow(newWindow));\r\n+        }\r\n+\r\n+        TEST_METHOD(TestRemoveInvalidWindow)\r\n+        {\r\n+            RECT zoneRect{ 10, 10, 200, 200 };\r\n+            winrt::com_ptr<IZone> zone = MakeZone(zoneRect);\r\n+            HWND newWindow = Mocks::Window();\r\n+            zone->RemoveWindowFromZone(newWindow, false);\r\n+        }\r\n+\r\n+    };\r\n+}\r'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/ZoneSet.Spec.cpp', 'Line Additions': 336, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,336 @@\n+#include ""pch.h""\r\n+#include ""lib\\ZoneSet.h""\r\n+\r\n+using namespace Microsoft::VisualStudio::CppUnitTestFramework;\r\n+\r\n+namespace FancyZonesUnitTests\r\n+{\r\n+    TEST_CLASS(ZoneSetUnitTests)\r\n+    {\r\n+    public:\r\n+        TEST_METHOD(TestCreateZoneSet)\r\n+        {\r\n+            GUID zoneSetId{};\r\n+            CoCreateGuid(&zoneSetId);\r\n+            constexpr size_t zoneCount = 0;\r\n+            constexpr WORD layoutId = 0xFFFF;\r\n+            constexpr int outerPadding = 3;\r\n+            constexpr int innerPadding = 4;\r\n+\r\n+            ZoneSetConfig config(zoneSetId, layoutId, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, zoneCount, outerPadding, innerPadding);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+            Assert::IsNotNull(&set);\r\n+            CustomAssert::AreEqual(set->Id(), zoneSetId);\r\n+            CustomAssert::AreEqual(set->LayoutId(), layoutId);\r\n+            Assert::IsTrue(set->GetLayout() == ZoneSetLayout::Grid);\r\n+            Assert::AreEqual(set->GetZones().size(), zoneCount);\r\n+            Assert::AreEqual(set->GetInnerPadding(), innerPadding);\r\n+        }\r\n+\r\n+        TEST_METHOD(TestAddZone)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            // Add a zone\r\n+            {\r\n+                winrt::com_ptr<IZone> zone = MakeZone({ 0, 0, 100, 100 });\r\n+                set->AddZone(zone, false /*front*/);\r\n+                auto zones = set->GetZones();\r\n+                Assert::IsTrue(zones.size() == 1);\r\n+                Assert::IsTrue(zones[0] == zone);\r\n+                Assert::IsTrue(zone->Id() == 1);\r\n+            }\r\n+\r\n+            // Add a second zone at the back.\r\n+            {\r\n+                winrt::com_ptr<IZone> zone = MakeZone({ 0, 0, 100, 100 });\r\n+                set->AddZone(zone, false /*front*/);\r\n+                auto zones = set->GetZones();\r\n+                Assert::IsTrue(zones.size() == 2);\r\n+                Assert::IsTrue(zones[1] == zone);\r\n+                Assert::IsTrue(zone->Id() == 2);\r\n+            }\r\n+        }\r\n+\r\n+        TEST_METHOD(TestAddZoneFront)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            // Add a zone.\r\n+            {\r\n+                winrt::com_ptr<IZone> zone = MakeZone({ 0, 0, 100, 100 });\r\n+                set->AddZone(zone, false /*front*/);\r\n+                auto zones = set->GetZones();\r\n+                Assert::IsTrue(zones.size() == 1);\r\n+                Assert::IsTrue(zones[0] == zone);\r\n+                Assert::IsTrue(zone->Id() == 1);\r\n+            }\r\n+\r\n+            // Add a second zone at the front.\r\n+            {\r\n+                winrt::com_ptr<IZone> zone = MakeZone({ 0, 0, 100, 100 });\r\n+                set->AddZone(zone, true /*front*/);\r\n+                auto zones = set->GetZones();\r\n+                Assert::IsTrue(zones.size() == 2);\r\n+                Assert::IsTrue(zones[0] == zone);\r\n+                Assert::IsTrue(zone->Id() == 2);\r\n+            }\r\n+        }\r\n+\r\n+        TEST_METHOD(TestRemoveZone)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            // Add a zone.\r\n+            winrt::com_ptr<IZone> zone = MakeZone({ 0, 0, 100, 100 });\r\n+            set->AddZone(zone, false /*front*/);\r\n+\r\n+            // And remove it.\r\n+            set->RemoveZone(zone);\r\n+            Assert::IsTrue(set->GetZones().size() == 0);\r\n+        }\r\n+\r\n+        TEST_METHOD(TestRemoveInvalidZone)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            winrt::com_ptr<IZone> zone = MakeZone({ 0, 0, 100, 100 });\r\n+            Assert::AreEqual(set->RemoveZone(zone), E_INVALIDARG);\r\n+        }\r\n+\r\n+        TEST_METHOD(TestMoveZoneToFront)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            // Add a couple of zones.\r\n+            winrt::com_ptr<IZone> zone1 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone2 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone3 = MakeZone({ 0, 0, 100, 100 });\r\n+            set->AddZone(zone1, false /*front*/);\r\n+            set->AddZone(zone2, false /*front*/);\r\n+            set->AddZone(zone3, false /*front*/);\r\n+\r\n+            // And move it to the back.\r\n+            set->MoveZoneToFront(zone3);\r\n+            auto zones = set->GetZones();\r\n+            Assert::IsTrue(zones.size() == 3);\r\n+            Assert::IsTrue(zones[0] == zone3);\r\n+            Assert::IsTrue(zones[1] == zone1);\r\n+            Assert::IsTrue(zones[2] == zone2);\r\n+        }\r\n+\r\n+        TEST_METHOD(TestMoveZoneToFrontWithInvalidZone)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            // Add a couple of zones.\r\n+            winrt::com_ptr<IZone> zone1 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone2 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone3 = MakeZone({ 0, 0, 100, 100 });\r\n+            set->AddZone(zone1, false /*front*/);\r\n+            set->AddZone(zone2, false /*front*/);\r\n+            set->AddZone(zone3, false /*front*/);\r\n+\r\n+            // Create an invalid zone and try to move it.\r\n+            winrt::com_ptr<IZone> invalidZone = MakeZone({ 0, 0, 100, 100 });\r\n+            set->MoveZoneToFront(invalidZone);\r\n+            auto zones = set->GetZones();\r\n+            Assert::IsTrue(zones.size() == 3);\r\n+            Assert::IsTrue(zones[0] == zone1);\r\n+            Assert::IsTrue(zones[1] == zone2);\r\n+            Assert::IsTrue(zones[2] == zone3);\r\n+        }\r\n+\r\n+        TEST_METHOD(TestMoveZoneToBack)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            // Add a couple of zones.\r\n+            winrt::com_ptr<IZone> zone1 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone2 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone3 = MakeZone({ 0, 0, 100, 100 });\r\n+            set->AddZone(zone1, false /*front*/);\r\n+            set->AddZone(zone2, false /*front*/);\r\n+            set->AddZone(zone3, false /*front*/);\r\n+\r\n+            // And move it to the back.\r\n+            set->MoveZoneToBack(zone1);\r\n+            auto zones = set->GetZones();\r\n+            Assert::IsTrue(zones.size() == 3);\r\n+            Assert::IsTrue(zones[0] == zone2);\r\n+            Assert::IsTrue(zones[1] == zone3);\r\n+            Assert::IsTrue(zones[2] == zone1);\r\n+        }\r\n+\r\n+        TEST_METHOD(TestMoveZoneToBackWithInvalidZone)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            // Add a couple of zones.\r\n+            winrt::com_ptr<IZone> zone1 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone2 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone3 = MakeZone({ 0, 0, 100, 100 });\r\n+            set->AddZone(zone1, false /*front*/);\r\n+            set->AddZone(zone2, false /*front*/);\r\n+            set->AddZone(zone3, false /*front*/);\r\n+\r\n+            // Create an invalid zone and try to move it.\r\n+            winrt::com_ptr<IZone> invalidZone = MakeZone({ 0, 0, 100, 100 });\r\n+            set->MoveZoneToBack(invalidZone);\r\n+            auto zones = set->GetZones();\r\n+            Assert::IsTrue(zones.size() == 3);\r\n+            Assert::IsTrue(zones[0] == zone1);\r\n+            Assert::IsTrue(zones[1] == zone2);\r\n+            Assert::IsTrue(zones[2] == zone3);\r\n+        }\r\n+\r\n+        TEST_METHOD(TestMoveWindowIntoZoneByIndex)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            // Add a couple of zones.\r\n+            winrt::com_ptr<IZone> zone1 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone2 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone3 = MakeZone({ 0, 0, 100, 100 });\r\n+            set->AddZone(zone1, false /*front*/);\r\n+            set->AddZone(zone2, false /*front*/);\r\n+            set->AddZone(zone3, false /*front*/);\r\n+\r\n+            HWND window = Mocks::Window();\r\n+            set->MoveWindowIntoZoneByIndex(window, Mocks::Window(), 1);\r\n+            Assert::IsFalse(zone1->ContainsWindow(window));\r\n+            Assert::IsTrue(zone2->ContainsWindow(window));\r\n+            Assert::IsFalse(zone3->ContainsWindow(window));\r\n+        }\r\n+\r\n+        TEST_METHOD(TestMoveWindowIntoZoneByIndexWithNoZones)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            // Add a couple of zones.\r\n+            HWND window = Mocks::Window();\r\n+            set->MoveWindowIntoZoneByIndex(window, Mocks::Window(), 0);\r\n+        }\r\n+\r\n+        TEST_METHOD(TestMoveWindowIntoZoneByIndexWithInvalidIndex)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            winrt::com_ptr<IZoneSet> set = MakeZoneSet(config);\r\n+\r\n+            // Add a couple of zones.\r\n+            winrt::com_ptr<IZone> zone1 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone2 = MakeZone({ 0, 0, 100, 100 });\r\n+            winrt::com_ptr<IZone> zone3 = MakeZone({ 0, 0, 100, 100 });\r\n+            set->AddZone(zone1, false /*front*/);\r\n+            set->AddZone(zone2, false /*front*/);\r\n+            set->AddZone(zone3, false /*front*/);\r\n+\r\n+            HWND window = Mocks::Window();\r\n+            set->MoveWindowIntoZoneByIndex(window, Mocks::Window(), 100);\r\n+            Assert::IsTrue(zone1->ContainsWindow(window));\r\n+            Assert::IsFalse(zone2->ContainsWindow(window));\r\n+            Assert::IsFalse(zone3->ContainsWindow(window));\r\n+        }\r\n+    };\r\n+\r\n+    // MoveWindowIntoZoneByDirection is complicated enough to warrant it\'s own test class\r\n+    TEST_CLASS(MoveWindowIntoZoneByDirectionUnitTests)\r\n+    {\r\n+        winrt::com_ptr<IZoneSet> set;\r\n+        winrt::com_ptr<IZone> zone1;\r\n+        winrt::com_ptr<IZone> zone2;\r\n+        winrt::com_ptr<IZone> zone3;\r\n+\r\n+        TEST_METHOD_INITIALIZE(Initialize)\r\n+        {\r\n+            ZoneSetConfig config({}, 0xFFFF, Mocks::Monitor(), L""WorkAreaIn"", ZoneSetLayout::Grid, 0, 3, 4);\r\n+            set = MakeZoneSet(config);\r\n+\r\n+            // Add a couple of zones.\r\n+            zone1 = MakeZone({ 0, 0, 100, 100 });\r\n+            zone2 = MakeZone({ 0, 0, 100, 100 });\r\n+            zone3 = MakeZone({ 0, 0, 100, 100 });\r\n+            set->AddZone(zone1, false /*front*/);\r\n+            set->AddZone(zone2, false /*front*/);\r\n+            set->AddZone(zone3, false /*front*/);\r\n+        }\r\n+\r\n+        TEST_METHOD(MoveWindowIntoZoneByDirectionRightNoZones)\r\n+        {\r\n+            HWND window = Mocks::Window();\r\n+            set->MoveWindowIntoZoneByDirection(window, Mocks::Window(), VK_RIGHT);\r\n+            Assert::IsTrue(zone1->ContainsWindow(window));\r\n+            Assert::IsFalse(zone2->ContainsWindow(window));\r\n+            Assert::IsFalse(zone3->ContainsWindow(window));\r\n+        }\r\n+\r\n+        TEST_METHOD(MoveWindowIntoZoneByDirectionLeftNoZones)\r\n+        {\r\n+            HWND window = Mocks::Window();\r\n+            set->MoveWindowIntoZoneByDirection(window, Mocks::Window(), VK_LEFT);\r\n+            Assert::IsFalse(zone1->ContainsWindow(window));\r\n+            Assert::IsFalse(zone2->ContainsWindow(window));\r\n+            Assert::IsTrue(zone3->ContainsWindow(window));\r\n+        }\r\n+\r\n+        TEST_METHOD(MoveWindowIntoZoneByDirectionRight)\r\n+        {\r\n+            HWND window = Mocks::Window();\r\n+            zone1->AddWindowToZone(window, Mocks::Window(), false /*stampZone*/);\r\n+            set->MoveWindowIntoZoneByDirection(window, Mocks::Window(), VK_RIGHT);\r\n+            Assert::IsFalse(zone1->ContainsWindow(window));\r\n+            Assert::IsTrue(zone2->ContainsWindow(window));\r\n+            Assert::IsFalse(zone3->ContainsWindow(window));\r\n+\r\n+            set->MoveWindowIntoZoneByDirection(window, Mocks::Window(), VK_RIGHT);\r\n+            Assert::IsFalse(zone1->ContainsWindow(window));\r\n+            Assert::IsFalse(zone2->ContainsWindow(window));\r\n+            Assert::IsTrue(zone3->ContainsWindow(window));\r\n+        }\r\n+\r\n+        TEST_METHOD(MoveWindowIntoZoneByDirectionLeft)\r\n+        {\r\n+            HWND window = Mocks::Window();\r\n+            zone3->AddWindowToZone(window, Mocks::Window(), false /*stampZone*/);\r\n+            set->MoveWindowIntoZoneByDirection(window, Mocks::Window(), VK_LEFT);\r\n+            Assert::IsFalse(zone1->ContainsWindow(window));\r\n+            Assert::IsTrue(zone2->ContainsWindow(window));\r\n+            Assert::IsFalse(zone3->ContainsWindow(window));\r\n+\r\n+            set->MoveWindowIntoZoneByDirection(window, Mocks::Window(), VK_LEFT);\r\n+            Assert::IsTrue(zone1->ContainsWindow(window));\r\n+            Assert::IsFalse(zone2->ContainsWindow(window));\r\n+            Assert::IsFalse(zone3->ContainsWindow(window));\r\n+        }\r\n+\r\n+        TEST_METHOD(MoveWindowIntoZoneByDirectionWrapAroundRight)\r\n+        {\r\n+            HWND window = Mocks::Window();\r\n+            zone3->AddWindowToZone(window, Mocks::Window(), false /*stampZone*/);\r\n+            set->MoveWindowIntoZoneByDirection(window, Mocks::Window(), VK_RIGHT);\r\n+            Assert::IsTrue(zone1->ContainsWindow(window));\r\n+            Assert::IsFalse(zone2->ContainsWindow(window));\r\n+            Assert::IsFalse(zone3->ContainsWindow(window));\r\n+        }\r\n+\r\n+        TEST_METHOD(MoveWindowIntoZoneByDirectionWrapAroundLeft)\r\n+        {\r\n+            HWND window = Mocks::Window();\r\n+            zone1->AddWindowToZone(window, Mocks::Window(), false /*stampZone*/);\r\n+            set->MoveWindowIntoZoneByDirection(window, Mocks::Window(), VK_LEFT);\r\n+            Assert::IsFalse(zone1->ContainsWindow(window));\r\n+            Assert::IsFalse(zone2->ContainsWindow(window));\r\n+            Assert::IsTrue(zone3->ContainsWindow(window));\r\n+        }\r\n+    };\r\n+}\r'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/ZoneWindow.Spec.cpp', 'Line Additions': 45, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,45 @@\n+#include ""pch.h""\n+#include ""lib\\ZoneSet.h""\n+\n+using namespace Microsoft::VisualStudio::CppUnitTestFramework;\n+\n+namespace FancyZonesUnitTests\n+{\n+    TEST_CLASS(ZoneWindowUnitTests)\n+    {\n+    public:\n+        TEST_METHOD(TestCreateZoneWindow)\n+        {\n+            winrt::com_ptr<IZoneWindow> zoneWindow = MakeZoneWindow(nullptr, Mocks::Instance(), Mocks::Monitor(), L""DeviceId"", L""MyVirtualDesktopId"", false);\n+            Assert::IsNotNull(zoneWindow.get());\n+        }\n+\n+        TEST_METHOD(TestDeviceId)\n+        {\n+            // Window initialization requires a valid HMONITOR - just use the primary for now.\n+            HMONITOR pimaryMonitor = MonitorFromWindow(nullptr, MONITOR_DEFAULTTOPRIMARY);\n+            winrt::com_ptr<IZoneWindow> zoneWindow = MakeZoneWindow(nullptr, Mocks::Instance(), pimaryMonitor, L""SomeRandomValue"", L""MyVirtualDesktopId"", false);\n+            // We have no way to test the correctness, just do our best and check its not an empty string.\n+            Assert::IsTrue(zoneWindow->DeviceId().size() > 0);\n+        }\n+\n+        TEST_METHOD(TestUniqueId)\n+        {\n+            // Unique id of the format ""ParsedMonitorDeviceId_MonitorWidth_MonitorHeight_VirtualDesktopId\n+            // Example: ""DELA026#5&10a58c63&0&UID16777488_1024_768_MyVirtualDesktopId""\n+            std::wstring deviceId(L""\\\\\\\\?\\\\DISPLAY#DELA026#5&10a58c63&0&UID16777488#{e6f07b5f-ee97-4a90-b076-33f57bf4eaa7}"");\n+            // Window initialization requires a valid HMONITOR - just use the primary for now.\n+            HMONITOR pimaryMonitor = MonitorFromWindow(nullptr, MONITOR_DEFAULTTOPRIMARY);\n+            MONITORINFO info;\n+            info.cbSize = sizeof(info);\n+            Assert::IsTrue(GetMonitorInfo(pimaryMonitor, &info));\n+\n+            Rect monitorRect = Rect(info.rcMonitor);\n+            std::wstringstream ss;\n+            ss << L""DELA026#5&10a58c63&0&UID16777488_"" << monitorRect.width() << ""_"" << monitorRect.height() << ""_MyVirtualDesktopId"";\n+\n+            winrt::com_ptr<IZoneWindow> zoneWindow = MakeZoneWindow(nullptr, Mocks::Instance(), pimaryMonitor, deviceId.c_str(), L""MyVirtualDesktopId"", false);\n+            Assert::AreEqual(zoneWindow->UniqueId().compare(ss.str()), 0);\n+        }\n+    };\n+}'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/packages.config', 'Line Additions': 4, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,4 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\n+<packages>\n+  <package id=""Microsoft.Windows.ImplementationLibrary"" version=""1.0.190716.2"" targetFramework=""native"" />\n+</packages>\n\\ No newline at end of file'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/pch.cpp', 'Line Additions': 5, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,5 @@\n+// pch.cpp: source file corresponding to the pre-compiled header\r\n+\r\n+#include ""pch.h""\r\n+\r\n+// When you are using pre-compiled headers, this source file is necessary for compilation to succeed.\r'}, {'Name': 'src/modules/fancyzones/tests/UnitTests/pch.h', 'Line Additions': 18, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,18 @@\n+// pch.h: This is a precompiled header file.\r\n+// Files listed below are compiled only once, improving build performance for future builds.\r\n+// This also affects IntelliSense performance, including code completion and many code browsing features.\r\n+// However, files listed here are ALL re-compiled if any one of them is updated between builds.\r\n+// Do not add files here that you will be updating frequently as this negates the performance advantage.\r\n+\r\n+#ifndef PCH_H\r\n+#define PCH_H\r\n+\r\n+// add headers that you want to pre-compile here\r\n+#include <Windows.h>\r\n+#include <winrt\\base.h>\r\n+\r\n+#include ""lib\\pch.h""\r\n+#include ""CppUnitTest.h""\r\n+#include ""Util.h""\r\n+\r\n+#endif //PCH_H\r'}, {'Name': 'src/modules/interface/README.md', 'Line Additions': 341, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,341 @@\n+# PowerToys Interface\n+\n+The PowerToys interface that each PowerToy must implement.\n+See [`the example PowerToy`](/src/modules/example_powertoy) for a PowerToys module example that uses this interface.\n+\n+## Interface definition\n+\n+This is the interface definition:\n+\n+```cpp\n+class PowertoyModuleIface {\n+public:\n+  virtual const wchar_t* get_name() = 0;\n+  virtual const wchar_t** get_events() = 0;\n+  virtual bool get_config(wchar_t* buffer, int *buffer_size) = 0;\n+  virtual void set_config(const wchar_t* config) = 0;\n+  virtual void call_custom_action(const wchar_t* action) {};\n+  virtual void enable() = 0;\n+  virtual void disable() = 0;\n+  virtual bool is_enabled() = 0;\n+  virtual intptr_t signal_event(const wchar_t* name, intptr_t data) = 0;\n+  virtual void destroy() = 0;\n+};\n+\n+typedef PowertoyModuleIface* (__cdecl *powertoy_create_func)();\n+```\n+\n+### Runtime logic\n+\n+The PowerToys runner will, for each PowerToy DLL:\n+  - load the DLL,\n+  - call [`powertoy_create()`](#powertoy_create_func) to create the PowerToy.\n+\n+On the received object, the runner will call:\n+  - [`get_name()`](#get_name) to get the name of the PowerToy,\n+  - [`get_events()`](#get_events) to get the list of the events the PowerToy wants to subscribe to,\n+  - [`enable()`](#enable) to initialize the PowerToy.\n+\n+While running, the runner might call the following methods between create_powertoy()\n+and destroy():\n+  - [`disable()`](#disable)/[`enable()`](#enable)/[`is_enabled()`](#is_enabled) to change or get the PowerToy\'s enabled state,\n+  - [`get_config()`](#get_config) to get the available configuration settings,\n+  - [`set_config()`](#set_config) to set settings after they have been edited in the Settings editor,\n+  - [`call_custom_action()`](#call_custom_action) when the user selects a custom action in the Settings editor,\n+  - [`signal_event()`](#signal_event) to send an event the PowerToy registered to.\n+\n+When terminating, the runner will:\n+  - call [`disable()`](#disable),\n+  - call [`destroy()`](#destroy) which should free all the memory and delete the PowerToy object,\n+  - unload the DLL.\n+\n+\n+### Method definition\n+\n+This section contains a more detailed description of each of the interface methods.\n+\n+#### powertoy_create_func\n+\n+```cpp\n+typedef PowertoyModuleIface* (__cdecl *powertoy_create_func)()\n+```\n+\n+Typedef of the factory function that creates the PowerToy object.\n+Must be exported by the DLL as `powertoy_create()`.\n+\n+Called by the PowerToys runner to initialize each PowerToy.\n+It will be called only once before a call to [`destroy()`](#destroy) is made.\n+\n+The returned PowerToy should be in the disabled state. The runner will call the [`enable()`](#enable) method to start the PowerToy.\n+\n+In case of errors returns `nullptr`.\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+\n+```cpp\n+extern ""C"" __declspec(dllexport) PowertoyModuleIface*  __cdecl powertoy_create() {\n+  return new ExamplePowertoy();\n+}\n+\n+ExamplePowertoy::ExamplePowertoy() {\n+  init_settings();\n+}\n+```\n+\n+#### get_name\n+\n+```cpp\n+virtual const wchar_t* get_name()\n+```\n+\n+Returns the name of the PowerToy, it will be cached by the runner.\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+```cpp\n+  virtual const wchar_t* get_name() override {\n+    return L""Example Powertoy"";\n+  }\n+```\n+\n+#### get_events\n+\n+```cpp\n+virtual const wchar_t** get_events()\n+```\n+\n+Returns a null-terminated table of the names of the events the PowerToy wants to subscribe to. Available events:\n+  * ll_keyboard\n+  * win_hook_event\n+\n+A nullptr can be returned to signal that the PowerToy does not want to subscribe to any event.\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+\n+```cpp\n+  virtual const wchar_t** get_events() override {\n+    static const wchar_t* events[] = { ll_keyboard,\n+                                       win_hook_event,\n+                                       nullptr };\n+    return events;\n+  }\n+```\n+\n+#### get_config\n+\n+```\n+virtual bool get_config(wchar_t* buffer, int *buffer_size)\n+```\n+\n+Fills a buffer with the available configuration settings.\n+\n+If `buffer` is a null pointer or the buffer size is not large enough sets the required buffer size in \'buffer_size\' and return false.\n+\n+Returns true if successful.\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+\n+```cpp\n+  virtual bool get_config(wchar_t* buffer, int* buffer_size) override {\n+    HINSTANCE hinstance = reinterpret_cast<HINSTANCE>(&__ImageBase);\n+\n+    // Create a Settings object.\n+    PowerToysSettings::Settings settings(hinstance, get_name());\n+    settings.set_description(L""Serves as an example powertoy, with example settings."");\n+\n+    // Add an overview link to show in the Settings.\n+    settings.set_overview_link(L""https://github.com/microsoft/PowerToys"");\n+\n+    // Add a video link to show in the Settings.\n+    settings.set_video_link(L""https://www.youtube.com/watch?v=d3LHo2yXKoY&t=21462"");\n+\n+    // Add a bool property with a toggle editor.\n+    settings.add_bool_toogle(\n+      L""test_bool_toggle"", // property name.\n+      L""This is what a BoolToggle property looks like"", // description or resource id of the localized string.\n+      test_bool_prop // property value.\n+    );\n+\n+// More settings\n+...\n+\n+    // Add a custom action property. When using this settings type, the ""call_custom_action()"" method should be overriden as well.\n+    settings.add_custom_action(\n+      L""test_custom_action"", // action name.\n+      L""This is what a CustomAction property looks like"", // label above the field.\n+      L""Call a custom action"", // button text.\n+      L""Press the button to call a custom action in the Example PowerToy"" // display values / extended info.\n+    );\n+\n+    return settings.serialize_to_buffer(buffer, buffer_size);\n+  }\n+```\n+\n+#### set_config\n+\n+```cpp\n+virtual void set_config(const wchar_t* config)\n+```\n+\n+After the user has changed the module settings in the Settings editor, the runner calls this method to pass to the module the updated values. It\'s a good place to save the settings as well.\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+\n+```cpp\n+  virtual void set_config(const wchar_t* config) override {\n+    try {\n+      // Parse the PowerToysValues object from the received json string.\n+      PowerToysSettings::PowerToyValues _values =\n+        PowerToysSettings::PowerToyValues::from_json_string(config);\n+\n+      // Update the bool property.\n+      if (_values.is_bool_value(L""test bool_toggle"")) {\n+        test_bool_prop = _values.get_bool_value(L""test bool_toggle"");\n+      }\n+\n+// More settings\n+...\n+\n+      save_settings();\n+    }\n+    catch (std::exception ex) {\n+      // Improper JSON.\n+    }\n+  }\n+```\n+\n+#### call_custom_action\n+\n+```cpp\n+  virtual void call_custom_action(const wchar_t* action)\n+```\n+\n+Calls a custom action in response to the user pressing the custom action button in the Settings editor.\n+This can be used to spawn custom editors defined by the PowerToy.\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+\n+```cpp\n+  virtual void call_custom_action(const wchar_t* action) override {\n+    try {\n+      // Parse the action values, including name.\n+      PowerToysSettings::CustomActionObject action_object =\n+        PowerToysSettings::CustomActionObject::from_json_string(action);\n+\n+      if (action_object.get_name() == L""test_custom_action"") {\n+\n+        // Custom action code to increase and show a counter.\n+        ++this->test_custom_action_num_calls;\n+        std::wstring msg(L""I have been called "");\n+        msg += std::to_wstring(this->test_custom_action_num_calls);\n+        msg += L"" time(s)."";\n+        MessageBox(NULL, msg.c_str(), L""Custom action call."", MB_OK | MB_TOPMOST);\n+      }\n+    }\n+    catch (std::exception ex) {\n+      // Improper JSON.\n+    }\n+  }\n+```\n+\n+#### enable\n+\n+```cpp\n+  virtual void enable()\n+```\n+\n+Enables the PowerToy.\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+\n+```cpp\n+  virtual void enable() {\n+    m_enabled = true;\n+  }\n+```\n+\n+#### disable\n+\n+```cpp\n+  virtual void disable()\n+```\n+\n+Disables the PowerToy, should free as much memory as possible.\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+\n+```cpp\n+  virtual void disable() {\n+    m_enabled = false;\n+  }\n+```\n+\n+#### is_enabled\n+\n+```cpp\n+  virtual bool is_enabled() = 0;\n+```\n+\n+Returns the PowerToy state.\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+\n+```cpp\n+  virtual bool is_enabled() override {\n+    return m_enabled;\n+  }\n+```\n+#### signal_event\n+\n+```cpp\n+  virtual intptr_t signal_event(const wchar_t* name, intptr_t data) = 0;\n+```\n+\n+Handle event. Only the events the PowerToy subscribed to will be signaled.\n+The data argument and return value meaning are event-specific:\n+  * ll_keyboard: see [`lowlevel_keyboard_event_data.h`](./lowlevel_keyboard_event_data.h).\n+  * win_hook_event: see [`win_hook_event_data.h`](./win_hook_event_data.h)\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+\n+```cpp\n+  virtual intptr_t signal_event(const wchar_t* name, intptr_t data)  override {\n+    if (wcscmp(name, ll_keyboard) == 0) {\n+      auto& event = *(reinterpret_cast<LowlevelKeyboardEvent*>(data));\n+      // Return 1 if the keypress is to be suppressed (not forwarded to Windows),\n+      // otherwise return 0.\n+      return 0;\n+    } else if (wcscmp(name, win_hook_event) == 0) {\n+      auto& event = *(reinterpret_cast<WinHookEvent*>(data));\n+      // Return value is ignored\n+      return 0;\n+    }\n+    return 0;\n+  }\n+```\n+\n+#### destroy\n+\n+```cpp\n+  virtual void destroy()\n+```\n+Destroy the PowerToy and free all memory.\n+\n+Sample code from [`the example PowerToy`](/src/modules/example_powertoy/dllmain.cpp):\n+\n+```cpp\n+  virtual void destroy() override {\n+    delete this;\n+  }\n+```\n+\n+## Code organization\n+\n+#### [`powertoy_module_interface.h`](./powertoy_module_interface.h)\n+Contains the PowerToys interface definition.\n+\n+#### [`lowlevel_keyboard_event_data.h`](./lowlevel_keyboard_event_data.h)\n+Contains the `LowlevelKeyboardEvent` structure that\'s passed to `signal_event` for `ll_keyboard` events.\n+\n+#### [`win_hook_event_data.h`](./win_hook_event_data.h)\n+Contains the `WinHookEvent` structure that\'s passed to `signal_event` for `win_hook_event` events.\n+'}, {'Name': 'src/modules/interface/lowlevel_keyboard_event_data.h', 'Line Additions': 45, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,45 @@\n+#pragma once\r\n+#include <Windows.h>\r\n+\r\n+/*\r\n+  ll_keyboard - Lowlevel Keyboard Hook\r\n+\r\n+  The PowerToys runner installs low-level keyboard hook using\r\n+    SetWindowsHookEx(WH_KEYBOARD_LL, ...)\r\n+  See https://docs.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ms644985(v%3Dvs.85)\r\n+  for details.\r\n+\r\n+  When a keyboard event is signaled and ncCode equals HC_ACTION, the wParam\r\n+  and lParam event parameters are passed to all subscribed clients in\r\n+  the LowlevelKeyboardEvent struct.\r\n+\r\n+  The intptr_t data event argument is a pointer to the LowlevelKeyboardEvent struct.\r\n+\r\n+  A non-zero return value from any of the subscribed PowerToys will cause\r\n+  the runner hook proc to return 1, thus swallowing the keyboard event.\r\n+\r\n+  Example usage, that makes Windows ignore the L key:\r\n+\r\n+  virtual intptr_t signal_event(const wchar_t* name, intptr_t data) override {\r\n+    if (wcscmp(name, ll_keyboard) == 0) {\r\n+      auto& event = *(reinterpret_cast<LowlevelKeyboardEvent*>(data));\r\n+      // The L key has vkCode of 0x4C\r\n+      if (event.wParam ==  WM_KEYDOWN && event.lParam->vkCode == 0x4C) {\r\n+        return 1;\r\n+      } else {\r\n+        return 0;\r\n+      }\r\n+    } else {\r\n+      return 0;\r\n+    }\r\n+  }\r\n+*/\r\n+\r\n+namespace {\r\n+  const wchar_t* ll_keyboard = L""ll_keyboard"";\r\n+}\r\n+\r\n+struct LowlevelKeyboardEvent {\r\n+  KBDLLHOOKSTRUCT* lParam;\r\n+  WPARAM wParam;\r\n+};\r'}, {'Name': 'src/modules/interface/powertoy_module_interface.h', 'Line Additions': 86, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,86 @@\n+#pragma once\r\n+\r\n+/*\r\n+  DLL Interface for PowerToys. The powertoy_create() (see below) must return\r\n+  an object that implements this interface.\r\n+\r\n+  See src/modules/example_powertoy for simple, noop, PowerToy implementation.\r\n+\r\n+  The PowerToys runner will, for each PowerToy DLL:\r\n+    - load the DLL,\r\n+    - call powertoy_create() to create the PowerToy.\r\n+\r\n+  On the received object, the runner will call:\r\n+    - get_name() to get the name of the PowerToy,\r\n+    - get_events() to get the list of the events the PowerToy wants to subscribe to,\r\n+    - enable() to initialize the PowerToy.\r\n+\r\n+  While running, the runner might call the following methods between create_powertoy()\r\n+  and destroy():\r\n+    - disable()/enable()/is_enabled() to change or get the PowerToy\'s enabled state,\r\n+    - get_config() to get the available configuration settings,\r\n+    - set_config() to set various settings,\r\n+    - call_custom_action() when the user selects clicks a custom action in settings,\r\n+    - signal_event() to send an event the PowerToy registered to.\r\n+\r\n+  When terminating, the runner will:\r\n+    - call disable(),\r\n+    - call destroy() which should free all the memory and delete the PowerToy object,\r\n+    - unload the DLL.\r\n+ */\r\n+\r\n+class PowertoyModuleIface {\r\n+public:\r\n+  /* Returns the name of the PowerToy, this will be cached by the runner. */\r\n+  virtual const wchar_t* get_name() = 0;\r\n+  /* Returns a null-terminated table of the names of the events the PowerToy wants to \r\n+     subscribe to. Available events:\r\n+       * ll_keyboard\r\n+       * win_hook_event\r\n+\r\n+     A nullptr can be returned to signal that the PowerToy does not want to subscribe\r\n+     to any event.\r\n+  */\r\n+  virtual const wchar_t** get_events() = 0;\r\n+  /* Fills a buffer with the available configuration settings.\r\n+   * If \'buffer\' is a null ptr or the buffer size is not large enough\r\n+   * sets the required buffer size in \'buffer_size\' and return false.\r\n+   * Returns true if successful.\r\n+   */\r\n+  virtual bool get_config(wchar_t* buffer, int *buffer_size) = 0;\r\n+  /* Sets the configuration values. */\r\n+  virtual void set_config(const wchar_t* config) = 0;\r\n+  /* Call custom action from settings screen. */\r\n+  virtual void call_custom_action(const wchar_t* action) {};\r\n+  /* Enables the PowerToy. */\r\n+  virtual void enable() = 0;\r\n+  /* Disables the PowerToy, should free as much memory as possible. */\r\n+  virtual void disable() = 0;\r\n+  /* Should return if the PowerToys is enabled or disabled. */\r\n+  virtual bool is_enabled() = 0;\r\n+  /* Handle event. Only the events the PowerToy subscribed to will be signaled.\r\n+     The data argument and return value meaning are event-specific:\r\n+       * ll_keyboard: see lowlevel_keyboard_event_data.h.\r\n+       * win_hook_event: see win_hook_event_data.h\r\n+  */\r\n+  virtual intptr_t signal_event(const wchar_t* name, intptr_t data) = 0;\r\n+  /* Destroy the PowerToy and free all memory. */\r\n+  virtual void destroy() = 0;\r\n+};\r\n+\r\n+/*\r\n+  Typedef of the factory function that creates the PowerToy object.\r\n+\r\n+  Must be exported by the DLL as powertoy_create(), e.g.:\r\n+\r\n+  extern ""C"" __declspec(dllexport) PowertoyModuleIface* __cdecl powertoy_create()\r\n+  \r\n+  Called by the PowerToys runner to initialize each PowerToy.\r\n+  It will be called only once before a call to destroy() method is made.\r\n+\r\n+  Returned PowerToy should be in disabled state. The runner will call\r\n+  the enable() method to start the PowerToy.\r\n+\r\n+  In case of errors return nullptr.\r\n+*/\r\n+typedef PowertoyModuleIface* (__cdecl *powertoy_create_func)();\r'}, {'Name': 'src/modules/interface/win_hook_event_data.h', 'Line Additions': 50, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,50 @@\n+#pragma once\r\n+#include <Windows.h>\r\n+\r\n+/*\r\n+  win_hook_event - Windows Event Hook\r\n+\r\n+  The PowerToys runner installs event hook functions for a range of events. See\r\n+  https://docs.microsoft.com/pl-pl/windows/win32/api/winuser/nf-winuser-setwineventhook\r\n+  for details.\r\n+  \r\n+  The intptr_t data event argument is a pointer to the WinHookEvent struct.\r\n+\r\n+  The return value of the event handler is ignored.\r\n+\r\n+  Example usage, that detects a window being resized:\r\n+\r\n+  virtual intptr_t signal_event(const wchar_t* name, intptr_t data) override {\r\n+    if (wcscmp(name, win_hook_event) == 0) {\r\n+      auto& event = *(reinterpret_cast<WinHookEvent*>(data));\r\n+      switch (event.event) {\r\n+      case EVENT_SYSTEM_MOVESIZESTART:\r\n+        size_start(event.hwnd);\r\n+        break;\r\n+      case EVENT_SYSTEM_MOVESIZEEND:\r\n+        size_end(event.hwnd);\r\n+        break;\r\n+      default:\r\n+        break;\r\n+      }\r\n+    }\r\n+    return 0;\r\n+  }\r\n+\r\n+  Taking to long to process the events has negative impact on the whole system\r\n+  performance. To address this, the events are signaled from a different\r\n+  thread, not from the event hook callback itself.\r\n+*/\r\n+\r\n+namespace {\r\n+  const wchar_t* win_hook_event = L""win_hook_event"";\r\n+}\r\n+\r\n+struct WinHookEvent {\r\n+  DWORD event;\r\n+  HWND hwnd;\r\n+  LONG idObject;\r\n+  LONG idChild;\r\n+  DWORD idEventThread;\r\n+  DWORD dwmsEventTime;\r\n+};\r'}, {'Name': 'src/modules/shortcut_guide/README.md', 'Line Additions': 46, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,46 @@\n+# Windows Key Shortcut Guide\n+\n+# Introduction\n+The Windows Key Shortcut Guide shows common keyboard shortcuts that use the Windows key.\n+\n+# Usage\n+Press and hold the keyboard Windows key for about 1 second, an overlay appears showing keyboard shortcuts that use the Windows Key:\n+- Shortcuts for changing the position of the active window.\n+- Common Windows shortcuts.\n+- Taskbar shortcuts.\n+\n+Releasing the Windows key will make the overlay disappear.  If the shortcut guide was visible for less than a second, the start menu will appear after the shortcut guide is dismissed.\n+\n+![Image of the Overlay](/doc/images/shortcut_guide/usage.png)\n+\n+Windows key keyboard shortcuts can be used while the guide is being shown and the result of those shortcuts (active window moved, arrow shortcut behavior changes, etc) will be displayed in the guide.\n+\n+# Options\n+These configurations can be edited from the PowerToys Settings screen:\n+- ""How long to press the Windows key before showing the Shortcut Guide (ms)"" - How many milliseconds to press the Windows key before the Shortcut Guide is shown.\n+- ""Opacity of the Shortcut Guide\'s overlay background (%)"" - Changing this setting controls the opacity of the Shortcut Guide\'s overlay background, occluding the work environment beneath the Shortcut Guide to different degrees.\n+\n+![Image of the Options](/doc/images/shortcut_guide/settings.png)\n+\n+# Backlog\n+The backlog for the utility can be found [here](https://github.com/Microsoft/PowerToys/tree/master/doc/planning/ShortcutGuideBacklog.md) and the source code is [here](https://github.com/Microsoft/PowerToys/tree/master/src/modules/shortcut_guide).\n+\n+# Code organization\n+\n+#### [`dllmain.cpp`](./dllmain.cpp)\n+Contains DLL boilerplate code.\n+\n+#### [`shortcut_guide.cpp`](./shortcut_guide.cpp)\n+Contains the module interface code. It initializes the settings values and the keyboard event listener.\n+\n+#### [`overlay_window.cpp`](./overlay_window.cpp)\n+Contains the code for loading the SVGs, creating and rendering of the overlay window.\n+\n+#### [`keyboard_state.cpp`](./keyboard_state.cpp)\n+Contains helper methods for checking the current state of the keyboard.\n+\n+#### [`target_state.cpp`](./target_state.cpp)\n+State machine that handles the keyboard events. It’s responsible for deciding when to show the overlay, when to suppress the Start menu (if the overlay is displayed long enough), etc.\n+\n+#### [`trace.cpp`](./trace.cpp)\n+Contains code for telemetry.'}, {'Name': 'src/modules/shortcut_guide/dllmain.cpp', 'Line Additions': 30, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,30 @@\n+// dllmain.cpp : Defines the entry point for the DLL application.\r\n+#include ""pch.h""\r\n+#include <mutex>\r\n+#include ""shortcut_guide.h""\r\n+#include ""overlay_window.h""\r\n+#include ""trace.h""\r\n+\r\n+BOOL APIENTRY DllMain(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved) {\r\n+  switch (ul_reason_for_call) {\r\n+  case DLL_PROCESS_ATTACH:\r\n+    Trace::RegisterProvider();\r\n+    break;\r\n+  case DLL_THREAD_ATTACH:\r\n+  case DLL_THREAD_DETACH:\r\n+    break;\r\n+  case DLL_PROCESS_DETACH:\r\n+    Trace::UnregisterProvider();\r\n+    break;\r\n+  }\r\n+  return TRUE;\r\n+}\r\n+\r\n+extern ""C"" __declspec(dllexport) PowertoyModuleIface*  __cdecl powertoy_create() {\r\n+  if (!instance) {\r\n+    instance = new OverlayWindow();\r\n+    return instance;\r\n+  } else {\r\n+    return nullptr;\r\n+  }\r\n+}\n\\ No newline at end of file'}, {'Name': 'src/modules/shortcut_guide/keyboard_state.cpp', 'Line Additions': 22, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,22 @@\n+#include ""pch.h""\r\n+#include ""keyboard_state.h""\r\n+\r\n+bool winkey_held() {\r\n+  auto left = GetAsyncKeyState(VK_LWIN);\r\n+  auto right = GetAsyncKeyState(VK_RWIN);\r\n+  return (left & 0x8000) || (right & 0x8000);\r\n+}\r\n+\r\n+bool only_winkey_key_held() {\r\n+  /* There are situations, when some of the keys are not registered correctly by\r\n+     GetKeyboardState. The M key can get stuck as ""pressed"" after Win+M, and\r\n+     Shift etc. keys are not always reported as expected.\r\n+  */\r\n+  for (int vk = 0; vk <= VK_OEM_CLEAR; ++vk) {\r\n+    if (vk == VK_LWIN || vk == VK_RWIN)\r\n+      continue;\r\n+    if (GetAsyncKeyState(vk) & 0x8000)\r\n+      return false;\r\n+  }\r\n+  return true;\r\n+}\n\\ No newline at end of file'}, {'Name': 'src/modules/shortcut_guide/keyboard_state.h', 'Line Additions': 3, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,3 @@\n+#pragma once\r\n+bool winkey_held();\r\n+bool only_winkey_key_held();\r'}, {'Name': 'src/modules/shortcut_guide/overlay_window.cpp', 'Line Additions': 717, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,717 @@\n+\ufeff#include ""pch.h""\n+#include ""overlay_window.h""\n+#include ""common/monitors.h""\n+#include ""common/tasklist_positions.h""\n+#include ""common/start_visible.h""\n+#include ""keyboard_state.h""\n+#include ""shortcut_guide.h""\n+#include ""trace.h""\n+\n+D2DOverlaySVG& D2DOverlaySVG::load(const std::wstring& filename, ID2D1DeviceContext5* d2d_dc) {\n+  D2DSVG::load(filename, d2d_dc);\n+  window_group = nullptr;\n+  thumbnail_top_left = {};\n+  thumbnail_bottom_right = {};\n+  thumbnail_scaled_rect = {};\n+  return *this;\n+}\n+\n+D2DOverlaySVG& D2DOverlaySVG::resize(int x, int y, int width, int height, float fill, float max_scale) {\n+  D2DSVG::resize(x, y, width, height, fill, max_scale);\n+  if (thumbnail_bottom_right.x != 0 && thumbnail_bottom_right.y != 0) {\n+    auto scaled_top_left = transform.TransformPoint(thumbnail_top_left);\n+    auto scanled_bottom_right = transform.TransformPoint(thumbnail_bottom_right);\n+    thumbnail_scaled_rect.left = (int)scaled_top_left.x;\n+    thumbnail_scaled_rect.top = (int)scaled_top_left.y;\n+    thumbnail_scaled_rect.right = (int)scanled_bottom_right.x;\n+    thumbnail_scaled_rect.bottom = (int)scanled_bottom_right.y;\n+  }\n+  return *this;\n+}\n+\n+D2DOverlaySVG& D2DOverlaySVG::find_thumbnail(const std::wstring& id) {\n+  winrt::com_ptr<ID2D1SvgElement> thumbnail_box;\n+  winrt::check_hresult(svg->FindElementById(id.c_str(), thumbnail_box.put()));\n+  winrt::check_hresult(thumbnail_box->GetAttributeValue(L""x"", &thumbnail_top_left.x));\n+  winrt::check_hresult(thumbnail_box->GetAttributeValue(L""y"", &thumbnail_top_left.y));\n+  winrt::check_hresult(thumbnail_box->GetAttributeValue(L""width"", &thumbnail_bottom_right.x));\n+  thumbnail_bottom_right.x += thumbnail_top_left.x;\n+  winrt::check_hresult(thumbnail_box->GetAttributeValue(L""height"", &thumbnail_bottom_right.y));\n+  thumbnail_bottom_right.y += thumbnail_top_left.y;\n+  return *this;\n+}\n+\n+D2DOverlaySVG& D2DOverlaySVG::find_window_group(const std::wstring& id) {\n+  window_group = nullptr;\n+  winrt::check_hresult(svg->FindElementById(id.c_str(), window_group.put()));\n+  return *this;\n+}\n+\n+ScaleResult D2DOverlaySVG::get_thumbnail_rect_and_scale(int x_offset, int y_offset, int window_cx, int window_cy, float fill) {\n+  if (thumbnail_bottom_right.x == 0 && thumbnail_bottom_right.y == 0) {\n+    return {};\n+  }\n+  int thumbnail_scaled_rect_width = thumbnail_scaled_rect.right - thumbnail_scaled_rect.left;\n+  int thumbnail_scaled_rect_heigh = thumbnail_scaled_rect.bottom - thumbnail_scaled_rect.top;\n+  if (thumbnail_scaled_rect_heigh == 0 || thumbnail_scaled_rect_width == 0 ||\n+    window_cx == 0 || window_cy == 0) {\n+    return {};\n+  }\n+  float scale_h = fill * thumbnail_scaled_rect_width / window_cx;\n+  float scale_v = fill * thumbnail_scaled_rect_heigh / window_cy;\n+  float use_scale = min(scale_h, scale_v);\n+  RECT thumb_rect;\n+  thumb_rect.left = thumbnail_scaled_rect.left + (int)(thumbnail_scaled_rect_width - use_scale * window_cx) / 2 + x_offset;\n+  thumb_rect.right = thumbnail_scaled_rect.right - (int)(thumbnail_scaled_rect_width - use_scale * window_cx) / 2 + x_offset;\n+  thumb_rect.top = thumbnail_scaled_rect.top + (int)(thumbnail_scaled_rect_heigh - use_scale * window_cy) / 2 + y_offset;\n+  thumb_rect.bottom = thumbnail_scaled_rect.bottom - (int)(thumbnail_scaled_rect_heigh - use_scale * window_cy) / 2 + y_offset;\n+  ScaleResult result;\n+  result.scale = use_scale;\n+  result.rect = thumb_rect;\n+  return result;\n+}\n+\n+winrt::com_ptr<ID2D1SvgElement> D2DOverlaySVG::find_element(const std::wstring& id) {\n+  winrt::com_ptr< ID2D1SvgElement> element;\n+  winrt::check_hresult(svg->FindElementById(id.c_str(), element.put()));\n+  return element;\n+}\n+\n+D2DOverlaySVG& D2DOverlaySVG::toggle_window_group(bool active) {\n+  if (window_group) {\n+    window_group->SetAttributeValue(L""fill-opacity"", active ? 1.0f : 0.3f);\n+  }\n+  return *this;\n+}\n+\n+D2D1_RECT_F D2DOverlaySVG::get_maximize_label() const {\n+  D2D1_RECT_F result;\n+  auto height = (float)(thumbnail_scaled_rect.bottom - thumbnail_scaled_rect.top);\n+  auto width = (float)(thumbnail_scaled_rect.right - thumbnail_scaled_rect.left);\n+  if (width >= height) {\n+    result.top = thumbnail_scaled_rect.bottom + height * 0.210f;\n+    result.bottom = thumbnail_scaled_rect.bottom + height * 0.310f;\n+    result.left = thumbnail_scaled_rect.left + width * 0.009f;\n+    result.right = thumbnail_scaled_rect.right + width * 0.009f;\n+  } else {\n+    result.top = thumbnail_scaled_rect.top + height * 0.323f;\n+    result.bottom = thumbnail_scaled_rect.top + height * 0.398f;\n+    result.left = (float)thumbnail_scaled_rect.right;\n+    result.right = thumbnail_scaled_rect.right + width * 1.45f;\n+  }\n+  return result;\n+}\n+D2D1_RECT_F D2DOverlaySVG::get_minimize_label() const {\n+  D2D1_RECT_F result;\n+  auto height = (float)(thumbnail_scaled_rect.bottom - thumbnail_scaled_rect.top);\n+  auto width = (float)(thumbnail_scaled_rect.right - thumbnail_scaled_rect.left);\n+  if (width >= height) {\n+    result.top = thumbnail_scaled_rect.bottom + height * 0.8f;\n+    result.bottom = thumbnail_scaled_rect.bottom + height * 0.9f;\n+    result.left = thumbnail_scaled_rect.left + width * 0.009f;\n+    result.right = thumbnail_scaled_rect.right + width * 0.009f;\n+  } else {\n+    result.top = thumbnail_scaled_rect.top + height * 0.725f;\n+    result.bottom = thumbnail_scaled_rect.top + height * 0.800f;\n+    result.left = (float)thumbnail_scaled_rect.right;\n+    result.right = thumbnail_scaled_rect.right + width * 1.45f;\n+  }\n+  return result;\n+}\n+D2D1_RECT_F D2DOverlaySVG::get_snap_left() const {\n+  D2D1_RECT_F result;\n+  auto height = (float)(thumbnail_scaled_rect.bottom - thumbnail_scaled_rect.top);\n+  auto width = (float)(thumbnail_scaled_rect.right - thumbnail_scaled_rect.left);\n+  if (width >= height) {\n+    result.top = thumbnail_scaled_rect.bottom + height * 0.5f;\n+    result.bottom = thumbnail_scaled_rect.bottom + height * 0.6f;\n+    result.left = thumbnail_scaled_rect.left + width * 0.009f;\n+    result.right = thumbnail_scaled_rect.left + width * 0.339f;\n+  } else {\n+    result.top = thumbnail_scaled_rect.top + height * 0.523f;\n+    result.bottom = thumbnail_scaled_rect.top + height * 0.598f;\n+    result.left = (float)thumbnail_scaled_rect.right;\n+    result.right = thumbnail_scaled_rect.right + width * 0.450f;\n+  }\n+  return result;\n+}\n+D2D1_RECT_F D2DOverlaySVG::get_snap_right() const {\n+  D2D1_RECT_F result;\n+  auto height = (float)(thumbnail_scaled_rect.bottom - thumbnail_scaled_rect.top);\n+  auto width = (float)(thumbnail_scaled_rect.right - thumbnail_scaled_rect.left);\n+  if (width >= height) {\n+    result.top = thumbnail_scaled_rect.bottom + height * 0.5f;\n+    result.bottom = thumbnail_scaled_rect.bottom + height * 0.6f;\n+    result.left = thumbnail_scaled_rect.left + width * 0.679f;\n+    result.right = thumbnail_scaled_rect.right + width * 1.009f;\n+  } else {\n+    result.top = thumbnail_scaled_rect.top + height * 0.523f;\n+    result.bottom = thumbnail_scaled_rect.top + height * 0.598f;\n+    result.left = (float)thumbnail_scaled_rect.right + width;\n+    result.right = thumbnail_scaled_rect.right + width * 1.45f;\n+  }\n+  return result;\n+}\n+\n+\n+D2DOverlayWindow::D2DOverlayWindow() : animation(0.3), total_screen({}) {\n+  tasklist_thread = std::thread([&] {\n+    while (running) {\n+      // Removing <std::mutex> causes C3538 on std::unique_lock lock(mutex); in show(..)\n+      std::unique_lock<std::mutex> lock(tasklist_cv_mutex);\n+      tasklist_cv.wait(lock, [&] { return !running || tasklist_update; });\n+      if (!running)\n+        return;\n+      lock.unlock();\n+      while (running && tasklist_update) {\n+        std::vector<TasklistButton> buttons;\n+        if (tasklist.update_buttons(buttons)) {\n+          std::unique_lock lock(mutex);\n+          tasklist_buttons.swap(buttons);\n+        }\n+        std::this_thread::sleep_for(std::chrono::milliseconds(500));\n+      }\n+    }\n+  });\n+}\n+\n+void D2DOverlayWindow::show(HWND active_window) {\n+  std::unique_lock lock(mutex);\n+  tasklist_buttons.clear();\n+  this->active_window = active_window;\n+  auto old_bck = colors.start_color_menu;\n+  if (initialized && colors.update()) {\n+    // update background colors\n+    landscape.recolor(old_bck, colors.start_color_menu);\n+    portrait.recolor(old_bck, colors.start_color_menu);\n+    for (auto& arrow : arrows) {\n+      arrow.recolor(old_bck, colors.start_color_menu);\n+    }\n+    if (colors.light_mode) {\n+      landscape.recolor(0xDDDDDD, 0x222222);\n+      portrait.recolor(0xDDDDDD, 0x222222);\n+      for (auto& arrow : arrows) {\n+        arrow.recolor(0xDDDDDD, 0x222222);\n+      }\n+    } else {\n+      landscape.recolor(0x222222, 0xDDDDDD);\n+      portrait.recolor(0x222222, 0xDDDDDD);\n+      for (auto& arrow : arrows) {\n+        arrow.recolor(0x222222, 0xDDDDDD);\n+      }\n+    }\n+  }\n+  monitors = MonitorInfo::GetMonitors(true);\n+  // calculate the rect covering all the screens\n+  total_screen = ScreenSize(monitors[0].rect);\n+  for (auto& monitor : monitors) {\n+    total_screen.rect.left = min(total_screen.rect.left, monitor.rect.left);\n+    total_screen.rect.top = min(total_screen.rect.top, monitor.rect.top);\n+    total_screen.rect.right = max(total_screen.rect.right, monitor.rect.right);\n+    total_screen.rect.bottom = max(total_screen.rect.bottom, monitor.rect.bottom);\n+  }\n+  // make sure top-right corner of all the monitor rects is (0,0)\n+  monitor_dx = -total_screen.left();\n+  monitor_dy = -total_screen.top();\n+  total_screen.rect.left += monitor_dx;\n+  total_screen.rect.right += monitor_dx;\n+  total_screen.rect.top += monitor_dy;\n+  total_screen.rect.bottom += monitor_dy;\n+  tasklist.update();\n+  if (active_window) {\n+    // Ignore errors, if this fails we will just not show the thumbnail\n+    DwmRegisterThumbnail(hwnd, active_window, &thumbnail);\n+  }\n+  animation.reset();\n+  auto primary_screen = MonitorInfo::GetPrimaryMonitor();\n+  shown_start_time = std::chrono::steady_clock::now();\n+  lock.unlock();\n+  D2DWindow::show(primary_screen.left(), primary_screen.top(), primary_screen.width(), primary_screen.height());\n+  key_pressed.clear();\n+  tasklist_cv_mutex.lock();\n+  tasklist_update = true;\n+  tasklist_cv_mutex.unlock();\n+  tasklist_cv.notify_one();\n+  Trace::EventShow();\n+}\n+\n+void D2DOverlayWindow::animate(int vk_code) {\n+  animate(vk_code, 0);\n+}\n+void D2DOverlayWindow::animate(int vk_code, int offset) {\n+  if (!initialized || !use_overlay) {\n+    return;\n+  }\n+  bool done = false;\n+  for (auto& animation : key_animations) {\n+    if (animation.vk_code == vk_code) {\n+      animation.animation.reset(0.1, 0, 1);\n+      done = true;\n+    }\n+  }\n+  if (done) {\n+    return;\n+  }\n+  AnimateKeys animation;\n+  std::wstring id;\n+  animation.vk_code = vk_code;\n+  winrt::com_ptr<ID2D1SvgElement> button_letter, parrent;\n+  if (vk_code >= 0x41 && vk_code <= 0x5A) {\n+    id.push_back(\'A\' + (vk_code - 0x41));\n+  } else {\n+    switch (vk_code) {\n+    case VK_SNAPSHOT:\n+    case VK_PRINT:\n+      id = L""PrnScr"";\n+      break;\n+    case VK_CONTROL:\n+    case VK_LCONTROL:\n+    case VK_RCONTROL:\n+      id = L""Ctrl"";\n+      break;\n+    case VK_UP:\n+      id = L""KeyUp"";\n+      break;\n+    case VK_LEFT:\n+      id = L""KeyLeft"";\n+      break;\n+    case VK_DOWN:\n+      id = L""KeyDown"";\n+      break;\n+    case VK_RIGHT:\n+      id = L""KeyRight"";\n+      break;\n+    case VK_OEM_PLUS:\n+    case VK_ADD:\n+      id = L""KeyPlus"";\n+      break;\n+    case VK_OEM_MINUS:\n+    case VK_SUBTRACT:\n+      id = L""KeyMinus"";\n+      break;\n+    case VK_TAB:\n+      id = L""Tab"";\n+      break;\n+    case VK_RETURN:\n+      id = L""Enter"";\n+      break;\n+    default:\n+      return;\n+    }\n+  }\n+\n+  if (offset > 0) {\n+    id += L""_"" + std::to_wstring(offset);\n+  }\n+  button_letter = use_overlay->find_element(id);\n+  if (!button_letter) {\n+    return;\n+  }\n+  button_letter->GetParent(parrent.put());\n+  if (!parrent) {\n+    return;\n+  }\n+  parrent->GetPreviousChild(button_letter.get(), animation.button.put());\n+  if (!animation.button || !animation.button->IsAttributeSpecified(L""fill"")) {\n+    animation.button = nullptr;\n+    parrent->GetNextChild(button_letter.get(), animation.button.put());\n+  }\n+  if (!animation.button || !animation.button->IsAttributeSpecified(L""fill"")) {\n+    return;\n+  }\n+  winrt::com_ptr<ID2D1SvgPaint> paint;\n+  animation.button->GetAttributeValue(L""fill"", paint.put());\n+  paint->GetColor(&animation.original);\n+  animate(vk_code, offset + 1);\n+  std::unique_lock lock(mutex);\n+  animation.animation.reset(0.1, 0, 1);\n+  key_animations.push_back(animation);\n+  key_pressed.push_back(vk_code);\n+}\n+\n+void D2DOverlayWindow::on_show() { \n+  // show override does everything\n+}\n+\n+void D2DOverlayWindow::on_hide() {\n+  tasklist_cv_mutex.lock();\n+  tasklist_update = false;\n+  tasklist_cv_mutex.unlock();\n+  tasklist_cv.notify_one();\n+  if (thumbnail) {\n+    DwmUnregisterThumbnail(thumbnail);\n+  }\n+  std::chrono::steady_clock::time_point shown_end_time = std::chrono::steady_clock::now();\n+  Trace::EventHide(std::chrono::duration_cast<std::chrono::milliseconds>(shown_end_time - shown_start_time).count(), key_pressed);\n+  key_pressed.clear();\n+}\n+\n+D2DOverlayWindow::~D2DOverlayWindow() {\n+  tasklist_cv_mutex.lock();\n+  running = false;\n+  tasklist_cv_mutex.unlock();\n+  tasklist_cv.notify_one();\n+  tasklist_thread.join();\n+}\n+\n+void D2DOverlayWindow::apply_overlay_opacity(float opacity) {\n+  if (opacity <= 0.0f) {\n+    opacity = 0.0f;\n+  }\n+  if (opacity >= 1.0f) {\n+    opacity = 1.0f;\n+  }\n+  overlay_opacity = opacity;\n+}\n+\n+float D2DOverlayWindow::get_overlay_opacity() {\n+  return overlay_opacity;\n+}\n+\n+void D2DOverlayWindow::init() {\n+  colors.update();\n+  landscape.load(L""svgs\\\\overlay.svg"", d2d_dc.get())\n+           .find_thumbnail(L""path-1"")\n+           .find_window_group(L""Group-1"")\n+           .recolor(0x000000, colors.start_color_menu);\n+  portrait.load(L""svgs\\\\overlay_portrait.svg"", d2d_dc.get())\n+          .find_thumbnail(L""path-1"")\n+          .find_window_group(L""Group-1"")\n+          .recolor(0x000000, colors.start_color_menu);\n+  no_active.load(L""svgs\\\\no_active_window.svg"", d2d_dc.get());\n+  arrows.resize(10);\n+  for (unsigned i = 0; i < arrows.size(); ++i) {\n+    arrows[i].load(L""svgs\\\\"" + std::to_wstring((i + 1) % 10) + L"".svg"", d2d_dc.get())\n+             .recolor(0x000000, colors.start_color_menu);\n+  }\n+  if (!colors.light_mode) {\n+    landscape.recolor(0x222222, 0xDDDDDD);\n+    portrait.recolor(0x222222, 0xDDDDDD);\n+    for (auto& arrow : arrows) {\n+      arrow.recolor(0x222222, 0xDDDDDD);\n+    }\n+  }\n+}\n+\n+void D2DOverlayWindow::resize() {\n+  window_rect = *get_window_pos(hwnd);\n+  float no_active_scale, font;\n+  if (window_width >= window_height) { // portriat is broke right now\n+    use_overlay = &landscape;\n+    no_active_scale = 0.3f;\n+    font = 15.0f;\n+  } else {\n+    use_overlay = &portrait;\n+    no_active_scale = 0.5f;\n+    font = 16.0f;\n+  }\n+  use_overlay->resize(0, 0, window_width, window_height, 0.8f);\n+  auto thumb_no_active_rect = use_overlay->get_thumbnail_rect_and_scale(0, 0, no_active.width(), no_active.height(), no_active_scale).rect;\n+  no_active.resize(thumb_no_active_rect.left,\n+                   thumb_no_active_rect.top,\n+                   thumb_no_active_rect.right - thumb_no_active_rect.left,\n+                   thumb_no_active_rect.bottom - thumb_no_active_rect.top,\n+                   1.0f);\n+  text.resize(font, use_overlay->get_scale());\n+}\n+\n+void render_arrow(D2DSVG& arrow, TasklistButton& button, RECT window, float max_scale, ID2D1DeviceContext5* d2d_dc) {\n+  int dx = 0, dy = 0;\n+  // Calculate taskbar orientation\n+  arrow.toggle_element(L""left"", false);\n+  arrow.toggle_element(L""right"", false);\n+  arrow.toggle_element(L""top"", false);\n+  arrow.toggle_element(L""bottom"", false);\n+  if (button.x <= window.left) { // taskbar on left\n+    dx = 1;\n+    arrow.toggle_element(L""left"", true);\n+  }\n+  if (button.x >= window.right) { // taskbar on right\n+    dx = -1;\n+    arrow.toggle_element(L""right"", true);\n+  }\n+  if (button.y <= window.top) { // taskbar on top\n+    dy = 1;\n+    arrow.toggle_element(L""top"", true);\n+  }\n+  if (button.y >= window.bottom) { // taskbar on bottom\n+    dy = -1;\n+    arrow.toggle_element(L""bottom"", true);\n+  }\n+  double arrow_ratio = (double)arrow.height() / arrow.width();\n+  if (dy != 0) {\n+    // assume button is 25% wider than taller, +10% to make room for each of the arrows that are hidden\n+    auto render_arrow_width = (int)(button.height * 1.25f * 1.2f);\n+    auto render_arrow_height = (int)(render_arrow_width * arrow_ratio);\n+    auto y_edge = dy == -1 ? button.y : button.y + button.height;\n+    arrow.resize(button.x + (button.width - render_arrow_width) / 2,\n+                 dy == -1 ? button.y - render_arrow_height : 0,\n+                 render_arrow_width, render_arrow_height, 0.95f, max_scale)\n+         .render(d2d_dc);\n+  }\n+  else {\n+    // same as above - make room for the hidden arrow\n+    auto render_arrow_height = (int)(button.height * 1.2f);\n+    auto render_arrow_width = (int)(render_arrow_height / arrow_ratio);\n+    arrow.resize(dx == -1 ? button.x - render_arrow_width : 0,\n+                 button.y + (button.height - render_arrow_height) / 2,\n+                 render_arrow_width, render_arrow_height, 0.95f, max_scale)\n+         .render(d2d_dc);\n+  }\n+}\n+\n+bool D2DOverlayWindow::show_thumbnail(const RECT& rect, double alpha) {\n+  if (!thumbnail) {\n+    return false;\n+  }\n+  DWM_THUMBNAIL_PROPERTIES thumb_properties;\n+  thumb_properties.dwFlags = DWM_TNP_SOURCECLIENTAREAONLY | DWM_TNP_VISIBLE | DWM_TNP_RECTDESTINATION | DWM_TNP_OPACITY;\n+  thumb_properties.fSourceClientAreaOnly = FALSE;\n+  thumb_properties.fVisible = TRUE;\n+  thumb_properties.opacity = (BYTE)(255*alpha);\n+  thumb_properties.rcDestination = rect;\n+  if (DwmUpdateThumbnailProperties(thumbnail, &thumb_properties) != S_OK) {\n+    return false;\n+  }\n+  return true;\n+}\n+\n+void D2DOverlayWindow::hide_thumbnail() {\n+  DWM_THUMBNAIL_PROPERTIES thumb_properties;\n+  thumb_properties.dwFlags = DWM_TNP_VISIBLE;\n+  thumb_properties.fVisible = FALSE;\n+  DwmUpdateThumbnailProperties(thumbnail, &thumb_properties);\n+}\n+\n+void D2DOverlayWindow::render(ID2D1DeviceContext5* d2d_dc) {\n+  if (!winkey_held() || is_start_visible()) {\n+    hide();\n+    instance->was_hidden();\n+    return;\n+  }\n+  d2d_dc->Clear();\n+  int x_offset = 0, y_offset = 0, dimention = 0;\n+  auto current_anim_value = (float)animation.value(Animation::AnimFunctions::LINEAR);\n+  SetLayeredWindowAttributes(hwnd, 0, (int)(255*current_anim_value), LWA_ALPHA);\n+  double pos_anim_value = 1 - animation.value(Animation::AnimFunctions::EASE_OUT_EXPO);\n+  if (!tasklist_buttons.empty()) {\n+    if (tasklist_buttons[0].x <= window_rect.left) { // taskbar on left\n+      x_offset = (int)(-pos_anim_value * use_overlay->width() * use_overlay->get_scale());\n+    }\n+    if (tasklist_buttons[0].x >= window_rect.right) { // taskbar on right\n+      x_offset = (int)(pos_anim_value * use_overlay->width() * use_overlay->get_scale());\n+    }\n+    if (tasklist_buttons[0].y <= window_rect.top) { // taskbar on top\n+      y_offset = (int)(-pos_anim_value * use_overlay->height() * use_overlay->get_scale());\n+    }\n+    if (tasklist_buttons[0].y >= window_rect.bottom) { // taskbar on bottom\n+      y_offset = (int)(pos_anim_value * use_overlay->height() * use_overlay->get_scale());\n+    }\n+  } else {\n+    x_offset = 0;\n+    y_offset = (int)(pos_anim_value * use_overlay->height() * use_overlay->get_scale());\n+  }\n+  // Draw background\n+  winrt::com_ptr<ID2D1SolidColorBrush> brush;\n+  float brush_opacity = get_overlay_opacity();\n+  D2D1_COLOR_F brushColor = colors.light_mode ? D2D1::ColorF(1.0f, 1.0f, 1.0f, brush_opacity) : D2D1::ColorF(0, 0, 0, brush_opacity);\n+  winrt::check_hresult(d2d_dc->CreateSolidColorBrush(brushColor, brush.put()));\n+  D2D1_RECT_F background_rect = {};\n+  background_rect.bottom = (float)window_height;\n+  background_rect.right = (float)window_width;\n+  d2d_dc->SetTransform(D2D1::Matrix3x2F::Identity());\n+  d2d_dc->FillRectangle(background_rect, brush.get());\n+ \n+  // Thumbnail logic:\n+  auto window_state = get_window_state(active_window);\n+  auto thumb_window = get_window_pos(active_window);\n+  bool minature_shown = active_window != nullptr && thumbnail != nullptr && thumb_window && window_state != MINIMIZED;\n+  RECT client_rect;\n+  if (thumb_window && GetClientRect(active_window, &client_rect)) {\n+    int dx = ((thumb_window->right - thumb_window->left) - (client_rect.right - client_rect.left)) / 2;\n+    int dy = ((thumb_window->bottom - thumb_window->top) - (client_rect.bottom - client_rect.top)) / 2;\n+    thumb_window->left += dx;\n+    thumb_window->right -= dx;\n+    thumb_window->top += dy;\n+    thumb_window->bottom -= dy;\n+  }\n+  if (minature_shown && thumb_window->right - thumb_window->left <= 0 || thumb_window->bottom - thumb_window->top <= 0) {\n+    minature_shown = false;\n+  }\n+  bool render_monitors = true;\n+  auto total_monitor_with_screen = total_screen;\n+  if (thumb_window) {\n+    total_monitor_with_screen.rect.left = min(total_monitor_with_screen.rect.left, thumb_window->left + monitor_dx);\n+    total_monitor_with_screen.rect.top = min(total_monitor_with_screen.rect.top, thumb_window->top + monitor_dy);\n+    total_monitor_with_screen.rect.right = max(total_monitor_with_screen.rect.right, thumb_window->right + monitor_dx);\n+    total_monitor_with_screen.rect.bottom = max(total_monitor_with_screen.rect.bottom, thumb_window->bottom + monitor_dy);\n+  }\n+  // Only allow the new rect beeing slight bigger.\n+  if (total_monitor_with_screen.width() - total_screen.width() > (thumb_window->right - thumb_window->left) / 2 ||\n+      total_monitor_with_screen.height() - total_screen.height() > (thumb_window->bottom - thumb_window->top) / 2) {\n+    render_monitors = false;\n+  }\n+  if (window_state == MINIMIZED) {\n+    total_monitor_with_screen = total_screen;\n+  }\n+  auto rect_and_scale = use_overlay->get_thumbnail_rect_and_scale(0, 0, total_monitor_with_screen.width(), total_monitor_with_screen.height(), 1);\n+  if (minature_shown) {\n+    RECT thumbnail_pos;\n+    if (render_monitors) {\n+      thumbnail_pos.left = (int)((thumb_window->left + monitor_dx) * rect_and_scale.scale + rect_and_scale.rect.left);\n+      thumbnail_pos.top = (int)((thumb_window->top + monitor_dy) * rect_and_scale.scale + rect_and_scale.rect.top);\n+      thumbnail_pos.right = (int)((thumb_window->right + monitor_dx) * rect_and_scale.scale + rect_and_scale.rect.left);\n+      thumbnail_pos.bottom = (int)((thumb_window->bottom + monitor_dy) * rect_and_scale.scale + rect_and_scale.rect.top);\n+    } else {\n+      thumbnail_pos = use_overlay->get_thumbnail_rect_and_scale(0, 0, thumb_window->right - thumb_window->left, thumb_window->bottom - thumb_window->top, 1).rect;\n+    }\n+    // If the animation is done show the thumbnail\n+    //   we cannot animate the thumbnail, the animation lags behind\n+    minature_shown = show_thumbnail(thumbnail_pos, current_anim_value);\n+  } else {\n+    hide_thumbnail();\n+  }\n+  if (window_state == MINIMIZED) {\n+    render_monitors = true;\n+  }\n+  // render the monitors\n+  if (render_monitors) {\n+    brushColor = D2D1::ColorF(colors.desktop_fill_color, minature_shown ? current_anim_value : current_anim_value * 0.3f);\n+    brush = nullptr;\n+    winrt::check_hresult(d2d_dc->CreateSolidColorBrush(brushColor, brush.put()));\n+    for (auto& monitor : monitors) {\n+      D2D1_RECT_F monitor_rect;\n+      monitor_rect.left = (float)((monitor.rect.left + monitor_dx) * rect_and_scale.scale + rect_and_scale.rect.left);\n+      monitor_rect.top = (float)((monitor.rect.top + monitor_dy) * rect_and_scale.scale + rect_and_scale.rect.top);\n+      monitor_rect.right = (float)((monitor.rect.right + monitor_dx) * rect_and_scale.scale + rect_and_scale.rect.left);\n+      monitor_rect.bottom = (float)((monitor.rect.bottom + monitor_dy)  * rect_and_scale.scale + rect_and_scale.rect.top);\n+      d2d_dc->SetTransform(D2D1::Matrix3x2F::Identity());\n+      d2d_dc->FillRectangle(monitor_rect, brush.get());\n+    }\n+  }\n+  // Finalize the overlay - dimm the buttons if no thumbnail is present and show ""No active window""\n+  use_overlay->toggle_window_group(minature_shown || window_state == MINIMIZED);\n+  if (!minature_shown && window_state != MINIMIZED) {\n+    no_active.render(d2d_dc);\n+    window_state = UNKNONW;\n+  }\n+\n+  // Set the animation - move the draw window according to animation step\n+  auto popin = D2D1::Matrix3x2F::Translation((float)x_offset, (float)y_offset);\n+  d2d_dc->SetTransform(popin);\n+\n+  // Animate keys\n+  for (unsigned id = 0; id < key_animations.size();) {\n+    auto& animation = key_animations[id];\n+    D2D1_COLOR_F color;\n+    auto value = (float)animation.animation.value(Animation::AnimFunctions::EASE_OUT_EXPO);\n+    color.a = 1.0f;\n+    color.r = animation.original.r + (1.0f - animation.original.r) * value;\n+    color.g = animation.original.g + (1.0f - animation.original.g) * value;\n+    color.b = animation.original.b + (1.0f - animation.original.b) * value;\n+    animation.button->SetAttributeValue(L""fill"", color);\n+    if (animation.animation.done()) {\n+      if (value == 1) {\n+        animation.animation.reset(0.05, 1, 0);\n+        animation.animation.value(Animation::AnimFunctions::EASE_OUT_EXPO);\n+      } else {\n+        key_animations.erase(key_animations.begin() + id);\n+        continue;\n+      }\n+    }\n+    ++id;\n+  }\n+  // Finally: render the overlay...\n+  use_overlay->render(d2d_dc);\n+  // ... window arrows texts ...\n+  std::wstring left, right, up, down;\n+  bool left_disabled = false;\n+  bool right_disabled = false;\n+  bool up_disabled = false;\n+  bool down_disabled = false;\n+  switch (window_state) {\n+  case MINIMIZED:\n+    left = L""No action"";\n+    left_disabled = true;\n+    right = L""No action"";\n+    right_disabled = true;\n+    up = L""Restore"";\n+    down = L""No action"";\n+    down_disabled = true;\n+    break;\n+  case MAXIMIZED:\n+    left = L""Snap left"";\n+    right = L""Snap right"";\n+    up = L""No action"";\n+    up_disabled = true;\n+    down = L""Restore"";\n+    break;\n+  case SNAPED_TOP_LEFT:\n+    left = L""Snap upper right"";\n+    right = L""Snap upper right"";\n+    up = L""Maximize"";\n+    down = L""Snap left"";\n+    break;\n+  case SNAPED_LEFT:\n+    left = L""Snap right"";\n+    right = L""Restore"";\n+    up = L""Snap upper left"";\n+    down = L""Snap lower left"";\n+    break;\n+  case SNAPED_BOTTOM_LEFT:\n+    left = L""Snap lower right"";\n+    right = L""Snap lower right"";\n+    up = L""Snap left"";\n+    down = L""Minimize"";\n+    break;\n+  case SNAPED_TOP_RIGHT:\n+    left = L""Snap upper left"";\n+    right = L""Snap upper left"";\n+    up = L""Maximize"";\n+    down = L""Snap right"";\n+    break;\n+  case SNAPED_RIGHT:\n+    left = L""Restore"";\n+    right = L""Snap left"";\n+    up = L""Snap upper right"";\n+    down = L""Snap lower right"";\n+    break;\n+  case SNAPED_BOTTOM_RIGHT:\n+    left = L""Snap lower left"";\n+    right = L""Snap lower left"";\n+    up = L""Snap right"";\n+    down = L""Minimize"";\n+    break;\n+  case RESTORED:\n+    left = L""Snap left"";\n+    right = L""Snap right"";\n+    up = L""Maximize"";\n+    down = L""Minimize"";\n+    break;\n+  default:\n+    left = L""No action"";\n+    left_disabled = true;\n+    right = L""No action"";\n+    right_disabled = true;\n+    up = L""No action"";\n+    up_disabled = true;\n+    down = L""No action"";\n+    down_disabled = true;\n+  }\n+  auto text_color = D2D1::ColorF(colors.light_mode ? 0x222222 : 0xDDDDDD, minature_shown || window_state == MINIMIZED ? 1.0f : 0.3f);\n+  use_overlay->find_element(L""KeyUpGroup"")->SetAttributeValue(L""fill-opacity"", up_disabled ? 0.3f : 1.0f);\n+  text.set_aligment_center().write(d2d_dc, text_color, use_overlay->get_maximize_label(), up);\n+  use_overlay->find_element(L""KeyDownGroup"")->SetAttributeValue(L""fill-opacity"", down_disabled ? 0.3f : 1.0f);\n+  text.write(d2d_dc, text_color, use_overlay->get_minimize_label(), down);\n+  use_overlay->find_element(L""KeyLeftGroup"")->SetAttributeValue(L""fill-opacity"", left_disabled ? 0.3f : 1.0f);\n+  text.set_aligment_right().write(d2d_dc, text_color, use_overlay->get_snap_left(), left);\n+  use_overlay->find_element(L""KeyRightGroup"")->SetAttributeValue(L""fill-opacity"", right_disabled ? 0.3f : 1.0f);\n+  text.set_aligment_left().write(d2d_dc, text_color, use_overlay->get_snap_right(), right);\n+  // ... and the arrows with numbers\n+  for (auto&& button : tasklist_buttons) {\n+    if ((size_t)(button.keynum) - 1 >= arrows.size()) {\n+      continue;\n+    }\n+    render_arrow(arrows[(size_t)(button.keynum) - 1], button, window_rect, use_overlay->get_scale(), d2d_dc);\n+  }\n+}'}, {'Name': 'src/modules/shortcut_guide/overlay_window.h', 'Line Additions': 86, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,86 @@\n+#pragma once\n+#include ""common/d2d_svg.h""\n+#include ""common/d2d_window.h""\n+#include ""common/d2d_text.h""\n+#include ""common/monitors.h""\n+#include ""common/animation.h""\n+#include ""common/windows_colors.h""\n+#include ""common/tasklist_positions.h""\n+\n+struct ScaleResult {\n+  double scale;\n+  RECT rect;\n+};\n+\n+class D2DOverlaySVG : public D2DSVG {\n+public:\n+  D2DOverlaySVG& load(const std::wstring& filename, ID2D1DeviceContext5* d2d_dc);\n+  D2DOverlaySVG& resize(int x, int y, int width, int height, float fill, float max_scale = -1.0f);\n+  D2DOverlaySVG& find_thumbnail(const std::wstring& id);\n+  D2DOverlaySVG& find_window_group(const std::wstring& id);\n+  ScaleResult get_thumbnail_rect_and_scale(int x_offset, int y_offset, int window_cx, int window_cy, float fill);\n+  D2DOverlaySVG& toggle_window_group(bool active);\n+  winrt::com_ptr<ID2D1SvgElement> find_element(const std::wstring& id);\n+  D2D1_RECT_F get_maximize_label() const;\n+  D2D1_RECT_F get_minimize_label() const;\n+  D2D1_RECT_F get_snap_left() const;\n+  D2D1_RECT_F get_snap_right() const;\n+private:\n+  D2D1_POINT_2F thumbnail_top_left = {};\n+  D2D1_POINT_2F thumbnail_bottom_right = {};\n+  RECT thumbnail_scaled_rect = {};\n+  winrt::com_ptr<ID2D1SvgElement> window_group;\n+};\n+\n+struct AnimateKeys {\n+  Animation animation;\n+  D2D1_COLOR_F original;\n+  winrt::com_ptr<ID2D1SvgElement> button;\n+  int vk_code;\n+};\n+\n+class D2DOverlayWindow : public D2DWindow {\n+public:\n+  D2DOverlayWindow();\n+  void show(HWND active_window);\n+  void animate(int vk_code);\n+  ~D2DOverlayWindow();\n+  void apply_overlay_opacity(float opacity);\n+\n+private:\n+  void animate(int vk_code, int offset);\n+  bool show_thumbnail(const RECT& rect_and_scale, double alpha);\n+  void hide_thumbnail();\n+  virtual void init() override;\n+  virtual void resize() override;\n+  virtual void render(ID2D1DeviceContext5* d2d_dc) override;\n+  virtual void on_show() override;\n+  virtual void on_hide() override;\n+  float get_overlay_opacity();\n+\n+  bool running = true;\n+  std::vector<AnimateKeys> key_animations;\n+  std::vector<int> key_pressed;\n+  std::vector<MonitorInfo> monitors;\n+  ScreenSize total_screen;\n+  int monitor_dx = 0, monitor_dy = 0;\n+  D2DText text;\n+  WindowsColors colors;\n+  Animation animation;\n+  RECT window_rect = {};\n+  Tasklist tasklist;\n+  std::vector<TasklistButton> tasklist_buttons;\n+  std::thread tasklist_thread;\n+  bool tasklist_update = false;\n+  std::mutex tasklist_cv_mutex;\n+  std::condition_variable tasklist_cv;\n+\n+  HTHUMBNAIL thumbnail;\n+  HWND active_window = nullptr;\n+  D2DOverlaySVG landscape, portrait;\n+  D2DOverlaySVG* use_overlay;\n+  D2DSVG no_active;\n+  std::vector<D2DSVG> arrows;\n+  std::chrono::steady_clock::time_point shown_start_time;\n+  float overlay_opacity = 0.9f;\n+};'}, {'Name': 'src/modules/shortcut_guide/pch.cpp', 'Line Additions': 9, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,9 @@\n+#include ""pch.h""\r\n+#pragma comment(lib, ""shlwapi.lib"")\r\n+#pragma comment(lib, ""shcore.lib"")\r\n+#pragma comment(lib, ""windowsapp"")\r\n+#pragma comment(lib, ""dxgi"")\r\n+#pragma comment(lib, ""d3d11"")\r\n+#pragma comment(lib, ""d2d1"")\r\n+#pragma comment(lib, ""dcomp"")\r\n+#pragma comment(lib, ""dwmapi"")\r'}, {'Name': 'src/modules/shortcut_guide/pch.h', 'Line Additions': 27, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,27 @@\n+#pragma once\r\n+#include ""resource.h""\r\n+#include <winrt/base.h>\r\n+#include <Windows.h>\r\n+#include <dxgi1_3.h>\r\n+#include <d3d11_2.h>\r\n+#include <d2d1_3.h>\r\n+#include <d2d1_3helper.h>\r\n+#include <d2d1helper.h>\r\n+#include <dwrite.h>\r\n+#include <dcomp.h>\r\n+#include <dwmapi.h>\r\n+#include <Shobjidl.h>\r\n+#include <Shlwapi.h>\r\n+#include <string>\r\n+#include <algorithm>\r\n+#include <chrono>\r\n+#include <mutex>\r\n+#include <thread>\r\n+#include <functional>\r\n+#include <condition_variable>\r\n+#include <stdexcept>\r\n+#include <tuple>\r\n+#include <unordered_set>\r\n+#include <string>\r\n+#include <common/common.h>\r\n+#include <ProjectTelemetry.h>\r'}, {'Name': 'src/modules/shortcut_guide/resource.h', 'Line Additions': 2, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,2 @@\n+#define IDS_SETTING_DESCRIPTION_PRESS_TIME 101\n+#define IDS_SETTING_DESCRIPTION_OVERLAY_OPACITY 102'}, {'Name': 'src/modules/shortcut_guide/shortcut_guide.cpp', 'Line Additions': 170, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,170 @@\n+#include ""pch.h""\r\n+#include ""shortcut_guide.h""\r\n+#include ""target_state.h""\r\n+#include ""trace.h""\r\n+#include <common/settings_objects.h>\r\n+\r\n+extern ""C"" IMAGE_DOS_HEADER __ImageBase;\r\n+\r\n+OverlayWindow* instance = nullptr;\r\n+\r\n+OverlayWindow::OverlayWindow() {\r\n+  init_settings();\r\n+}\r\n+\r\n+const wchar_t * OverlayWindow::get_name() {\r\n+  return L""Shortcut Guide"";\r\n+}\r\n+\r\n+const wchar_t ** OverlayWindow::get_events() {\r\n+  static const wchar_t* events[2] = { ll_keyboard, 0 };\r\n+  return events;\r\n+}\r\n+\r\n+bool OverlayWindow::get_config(wchar_t* buffer, int *buffer_size) {\r\n+  HINSTANCE hinstance = reinterpret_cast<HINSTANCE>(&__ImageBase);\r\n+\r\n+  PowerToysSettings::Settings settings(hinstance, get_name());\r\n+  settings.set_description(L""Shows a help overlay with Windows shortcuts when the Windows key is pressed."");\r\n+  settings.set_overview_link(L""https://github.com/microsoft/PowerToys/blob/master/src/modules/shortcut_guide/README.md"");\r\n+  settings.set_icon_key(L""pt-shortcut-guide"");\r\n+\r\n+  settings.add_int_spinner(\r\n+    pressTime.name,\r\n+    pressTime.resourceId,\r\n+    pressTime.value,\r\n+    100,\r\n+    10000,\r\n+    100\r\n+  );\r\n+\r\n+  settings.add_int_spinner(\r\n+    overlayOpacity.name,\r\n+    overlayOpacity.resourceId,\r\n+    overlayOpacity.value,\r\n+    0,\r\n+    100,\r\n+    1\r\n+  );\r\n+\r\n+  return settings.serialize_to_buffer(buffer, buffer_size);\r\n+}\r\n+\r\n+void OverlayWindow::set_config(const wchar_t * config) {\r\n+  try {\r\n+    PowerToysSettings::PowerToyValues _values =\r\n+      PowerToysSettings::PowerToyValues::from_json_string(config);\r\n+    if (_values.is_int_value(pressTime.name)) {\r\n+      int press_delay_time = _values.get_int_value(pressTime.name);\r\n+      pressTime.value = press_delay_time;\r\n+      if (target_state) {\r\n+        target_state->set_delay(press_delay_time);\r\n+      }\r\n+    }\r\n+    if (_values.is_int_value(overlayOpacity.name)) {\r\n+      int overlay_opacity = _values.get_int_value(overlayOpacity.name);\r\n+      overlayOpacity.value = overlay_opacity;\r\n+      if (winkey_popup) {\r\n+        winkey_popup->apply_overlay_opacity(((float)overlayOpacity.value) / 100.0f);\r\n+      }\r\n+    }\r\n+    _values.save_to_settings_file();\r\n+  }\r\n+  catch (std::exception ex) {\r\n+    // Improper JSON.\r\n+  }\r\n+}\r\n+\r\n+void OverlayWindow::enable() {\r\n+  if (!_enabled) {\r\n+    winkey_popup = new D2DOverlayWindow();\r\n+    winkey_popup->apply_overlay_opacity(((float)overlayOpacity.value)/100.0f);\r\n+    target_state = new TargetState(pressTime.value);\r\n+    winkey_popup->initialize();\r\n+    desktop = GetDesktopWindow();\r\n+    shell = GetShellWindow();\r\n+  }\r\n+  _enabled = true;\r\n+}\r\n+\r\n+void OverlayWindow::disable() {\r\n+  if (_enabled) {\r\n+    winkey_popup->hide();\r\n+    target_state->exit();\r\n+    int a = 0;\r\n+    delete target_state;\r\n+    delete winkey_popup;\r\n+    target_state = nullptr;\r\n+    winkey_popup = nullptr;\r\n+  }\r\n+  _enabled = false;\r\n+}\r\n+\r\n+bool OverlayWindow::is_enabled() {\r\n+  return _enabled;\r\n+}\r\n+\r\n+intptr_t OverlayWindow::signal_event(const wchar_t * name, intptr_t data) {\r\n+  if (_enabled && wcscmp(name, ll_keyboard) == 0) {\r\n+    auto& event = *(reinterpret_cast<LowlevelKeyboardEvent*>(data));\r\n+    if (event.wParam == WM_KEYDOWN ||\r\n+        event.wParam == WM_SYSKEYDOWN ||\r\n+        event.wParam == WM_KEYUP ||\r\n+        event.wParam == WM_SYSKEYUP) {\r\n+      bool supress = target_state->signal_event(event.lParam->vkCode, \r\n+                                                event.wParam == WM_KEYDOWN || event.wParam == WM_SYSKEYDOWN);\r\n+      return supress ? 1 : 0;\r\n+    }\r\n+  }\r\n+  return 0;\r\n+}\r\n+\r\n+void OverlayWindow::on_held() {\r\n+  auto active_window = GetForegroundWindow();\r\n+  active_window = GetAncestor(active_window, GA_ROOT);\r\n+  if (active_window == desktop || active_window == shell) {\r\n+    active_window = nullptr;\r\n+  }\r\n+  auto window_styles = active_window ? GetWindowLong(active_window, GWL_STYLE) : 0;\r\n+  if ((window_styles & WS_CHILD) || (window_styles & WS_DISABLED)) {\r\n+    active_window = nullptr;\r\n+  }\r\n+  char class_name[256] = """";\r\n+  GetClassNameA(active_window, class_name, 256);\r\n+  if (strcmp(class_name, ""SysListView32"") == 0 ||\r\n+    strcmp(class_name, ""WorkerW"") == 0 ||\r\n+    strcmp(class_name, ""Shell_TrayWnd"") == 0 ||\r\n+    strcmp(class_name, ""Shell_SecondaryTrayWnd"") == 0) {\r\n+    active_window = nullptr;\r\n+  }\r\n+  winkey_popup->show(active_window);\r\n+}\r\n+\r\n+void OverlayWindow::on_held_press(DWORD vkCode) {\r\n+  winkey_popup->animate(vkCode);\r\n+}\r\n+\r\n+void OverlayWindow::was_hidden() {\r\n+  target_state->was_hiden();\r\n+}\r\n+\r\n+void OverlayWindow::destroy() {\r\n+  delete this;\r\n+  instance = nullptr;\r\n+}\r\n+\r\n+void OverlayWindow::init_settings() {\r\n+  try {\r\n+    PowerToysSettings::PowerToyValues settings =\r\n+      PowerToysSettings::PowerToyValues::load_from_settings_file(get_name());\r\n+    if (settings.is_int_value(pressTime.name)) {\r\n+      pressTime.value = settings.get_int_value(pressTime.name);\r\n+    }\r\n+    if (settings.is_int_value(overlayOpacity.name)) {\r\n+      overlayOpacity.value = settings.get_int_value(overlayOpacity.name);\r\n+    }\r\n+  }\r\n+  catch (std::exception ex) {\r\n+    // Error while loading from the settings file. Just let default values stay as they are.\r\n+  }\r\n+}\r'}, {'Name': 'src/modules/shortcut_guide/shortcut_guide.h', 'Line Additions': 49, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,49 @@\n+#pragma once\r\n+#include <interface/powertoy_module_interface.h>\r\n+#include <interface/lowlevel_keyboard_event_data.h>\r\n+#include ""overlay_window.h""\r\n+\r\n+// We support only one instance of the overlay\r\n+extern class OverlayWindow* instance;\r\n+\r\n+class TargetState;\r\n+\r\n+class OverlayWindow : public PowertoyModuleIface {\r\n+public:\r\n+  OverlayWindow();\r\n+  virtual const wchar_t* get_name() override;\r\n+  virtual const wchar_t** get_events() override;\r\n+  virtual bool get_config(wchar_t* buffer, int *buffer_size) override;\r\n+\r\n+  virtual void set_config(const wchar_t* config) override;\r\n+  virtual void enable() override;\r\n+  virtual void disable() override;\r\n+  virtual bool is_enabled() override;\r\n+  virtual intptr_t signal_event(const wchar_t* name, intptr_t data)  override;\r\n+\r\n+  void on_held();\r\n+  void on_held_press(DWORD vkCode);\r\n+  void was_hidden();\r\n+\r\n+  virtual void destroy() override;\r\n+private:\r\n+  TargetState* target_state;\r\n+  D2DOverlayWindow *winkey_popup;\r\n+  HWND desktop, shell;\r\n+  HWND active_window;\r\n+  bool _enabled = false;\r\n+\r\n+  void init_settings();\r\n+\r\n+  struct PressTime {\r\n+    PCWSTR name = L""press_time"";\r\n+    int value = 900; // ms\r\n+    int resourceId = IDS_SETTING_DESCRIPTION_PRESS_TIME;\r\n+  } pressTime;\r\n+\r\n+  struct OverlayOpacity {\r\n+    PCWSTR name = L""overlay_opacity"";\r\n+    int value = 90; // percent\r\n+    int resourceId = IDS_SETTING_DESCRIPTION_OVERLAY_OPACITY;\r\n+  } overlayOpacity;\r\n+};\r'}, {'Name': 'src/modules/shortcut_guide/shortcut_guide.rc', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/modules/shortcut_guide/shortcut_guide.vcxproj', 'Line Additions': 128, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,128 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project DefaultTargets=""Build"" ToolsVersion=""15.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup Label=""ProjectConfigurations"">\r\n+    <ProjectConfiguration Include=""Debug|x64"">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=""Release|x64"">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=""Globals"">\r\n+    <VCProjectVersion>15.0</VCProjectVersion>\r\n+    <ProjectGuid>{A46629C4-1A6C-40FA-A8B6-10E5102BB0BA}</ProjectGuid>\r\n+    <Keyword>Win32Proj</Keyword>\r\n+    <RootNamespace>overlaywindow</RootNamespace>\r\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseDebugLibraries>true</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\r\n+    <UseDebugLibraries>false</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\r\n+  <ImportGroup Label=""ExtensionSettings"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""Shared"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=""UserMacros"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <LinkIncremental>false</LinkIncremental>\r\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\modules\\</OutDir>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <LinkIncremental>true</LinkIncremental>\r\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\modules\\</OutDir>\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <ClCompile>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <PreprocessorDefinitions>NDEBUG;OVERLAYWINDOW_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <AdditionalIncludeDirectories>..\\..\\common\\inc;..\\..\\common\\Telemetry;..\\..\\;..\\;..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <ClCompile>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <PreprocessorDefinitions>_DEBUG;OVERLAYWINDOW_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <AdditionalIncludeDirectories>..\\..\\common\\inc;..\\..\\common\\Telemetry;..\\..\\;..\\;..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <SubSystem>Windows</SubSystem>\r\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\r\n+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\r\n+    </Link>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""overlay_window.h"" />\r\n+    <ClInclude Include=""keyboard_state.h"" />\r\n+    <ClInclude Include=""resource.h"" />\r\n+    <ClInclude Include=""shortcut_guide.h"" />\r\n+    <ClInclude Include=""pch.h"" />\r\n+    <ClInclude Include=""target_state.h"" />\r\n+    <ClInclude Include=""trace.h"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""overlay_window.cpp"" />\r\n+    <ClCompile Include=""dllmain.cpp"" />\r\n+    <ClCompile Include=""keyboard_state.cpp"" />\r\n+    <ClCompile Include=""shortcut_guide.cpp"" />\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""target_state.cpp"" />\r\n+    <ClCompile Include=""trace.cpp"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=""..\\..\\common\\common.vcxproj"">\r\n+      <Project>{74485049-c722-400f-abe5-86ac52d929b3}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""shortcut_guide.rc"" />\r\n+  </ItemGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\r\n+  <ImportGroup Label=""ExtensionTargets"">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/shortcut_guide/shortcut_guide.vcxproj.filters', 'Line Additions': 52, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,52 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""pch.cpp"" />\r\n+    <ClCompile Include=""dllmain.cpp"" />\r\n+    <ClCompile Include=""keyboard_state.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""shortcut_guide.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""target_state.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""overlay_window.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""trace.cpp"">\r\n+      <Filter>Source Files</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""pch.h"" />\r\n+    <ClInclude Include=""keyboard_state.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""shortcut_guide.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""target_state.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""overlay_window.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""trace.h"">\r\n+      <Filter>Header Files</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""resource.h"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <Filter Include=""Header Files"">\r\n+      <UniqueIdentifier>{2c7c97f7-0d87-4230-a4b2-baf2cfc35d58}</UniqueIdentifier>\r\n+    </Filter>\r\n+    <Filter Include=""Source Files"">\r\n+      <UniqueIdentifier>{aa4b6713-589d-42ef-804d-3a045833f83f}</UniqueIdentifier>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""shortcut_guide.rc"" />\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/modules/shortcut_guide/target_state.cpp', 'Line Additions': 147, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,147 @@\n+#include ""pch.h""\r\n+#include ""target_state.h""\r\n+#include ""common/start_visible.h""\r\n+#include ""keyboard_state.h""\r\n+\r\n+TargetState::TargetState(int ms_delay) : delay(std::chrono::milliseconds(ms_delay)), thread(&TargetState::thread_proc, this)\r\n+{ }\r\n+\r\n+bool TargetState::signal_event(unsigned vk_code, bool key_down) {\r\n+  std::unique_lock lock(mutex);\r\n+  if (!events.empty() && events.back().key_down == key_down && events.back().vk_code == vk_code) {\r\n+    return false;\r\n+  }\r\n+  bool supress = false;\r\n+  if (!key_down && (vk_code == VK_LWIN || vk_code == VK_RWIN) &&\r\n+    state == Shown &&\r\n+    std::chrono::system_clock::now() - singnal_timestamp > std::chrono::seconds(1) &&\r\n+    !key_was_pressed) {\r\n+    supress = true;\r\n+  }\r\n+  events.push_back({ key_down, vk_code });\r\n+  lock.unlock();\r\n+  cv.notify_one();\r\n+  if (supress) {\r\n+    INPUT input[3] = { {},{},{} };\r\n+    input[0].type = INPUT_KEYBOARD;\r\n+    input[0].ki.wVk = VK_CONTROL;\r\n+    input[1].type = INPUT_KEYBOARD;\r\n+    input[1].ki.wVk = VK_CONTROL;\r\n+    input[1].ki.dwFlags = KEYEVENTF_KEYUP;\r\n+    input[2].type = INPUT_KEYBOARD;\r\n+    input[2].ki.wVk = VK_LWIN;\r\n+    input[2].ki.dwFlags = KEYEVENTF_KEYUP;\r\n+    SendInput(3, input, sizeof(INPUT));\r\n+  }\r\n+  return supress;\r\n+}\r\n+\r\n+void TargetState::was_hiden() {\r\n+  std::unique_lock<std::mutex> lock(mutex);\r\n+  state = Hidden;\r\n+  events.clear();\r\n+  lock.unlock();\r\n+  cv.notify_one();\r\n+}\r\n+\r\n+void TargetState::exit() {\r\n+  std::unique_lock lock(mutex);\r\n+  events.clear();\r\n+  state = Exiting;\r\n+  lock.unlock();\r\n+  cv.notify_one();\r\n+  thread.join();\r\n+}\r\n+\r\n+KeyEvent TargetState::next() {\r\n+  auto e = events.front();\r\n+  events.pop_front();\r\n+  return e;\r\n+}\r\n+\r\n+void TargetState::handle_hidden() {\r\n+  std::unique_lock lock(mutex);\r\n+  if (events.empty())\r\n+    cv.wait(lock);\r\n+  if (events.empty() || state == Exiting)\r\n+    return;\r\n+  auto event = next();\r\n+  if (event.key_down && (event.vk_code == VK_LWIN || event.vk_code == VK_RWIN)) {\r\n+    state = Timeout;\r\n+    winkey_timestamp = std::chrono::system_clock::now();\r\n+  }\r\n+}\r\n+\r\n+void TargetState::handle_shown() {\r\n+  std::unique_lock lock(mutex);\r\n+  if (events.empty()) {\r\n+    cv.wait(lock);\r\n+  }\r\n+  if (events.empty() || state == Exiting) {\r\n+    return;\r\n+  }\r\n+  auto event = next();\r\n+  if (event.key_down && (event.vk_code == VK_LWIN || event.vk_code == VK_RWIN)) {\r\n+    return;\r\n+  }\r\n+  if (!event.key_down && (event.vk_code == VK_LWIN || event.vk_code == VK_RWIN) || !winkey_held()) {\r\n+    state = Hidden;\r\n+    lock.unlock();\r\n+    return;\r\n+  }\r\n+  if (event.key_down) {\r\n+    key_was_pressed = true;\r\n+    lock.unlock();\r\n+    instance->on_held_press(event.vk_code);\r\n+  }\r\n+}\r\n+\r\n+void TargetState::thread_proc() {\r\n+  while (true) {\r\n+    switch (state) {\r\n+    case Hidden:\r\n+      handle_hidden();\r\n+      break;\r\n+    case Timeout:\r\n+      handle_timeout();\r\n+      break;\r\n+    case Shown:\r\n+      handle_shown();\r\n+      break;\r\n+    case Exiting:\r\n+    default:\r\n+      return;\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+void TargetState::handle_timeout() {\r\n+  std::unique_lock lock(mutex);\r\n+  auto wait_time = delay - (std::chrono::system_clock::now() - winkey_timestamp);\r\n+  if (events.empty())\r\n+    cv.wait_for(lock, delay);\r\n+  if (state == Exiting)\r\n+    return;\r\n+  while (!events.empty()) {\r\n+    auto event = events.front();\r\n+    if (event.key_down && (event.vk_code == VK_LWIN || event.vk_code == VK_RWIN))\r\n+      events.pop_front();\r\n+    else\r\n+      break;\r\n+  }\r\n+  if (!events.empty() || !only_winkey_key_held() || is_start_visible()) {\r\n+    state = Hidden;\r\n+    return;\r\n+  }\r\n+  if (std::chrono::system_clock::now() - winkey_timestamp < delay)\r\n+    return;\r\n+  singnal_timestamp = std::chrono::system_clock::now();\r\n+  key_was_pressed = false;\r\n+  state = Shown;\r\n+  lock.unlock();\r\n+  instance->on_held();\r\n+}\r\n+\r\n+void TargetState::set_delay(int ms_delay) {\r\n+  delay = std::chrono::milliseconds(ms_delay);\r\n+}\r'}, {'Name': 'src/modules/shortcut_guide/target_state.h', 'Line Additions': 35, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,35 @@\n+#pragma once\n+#include <deque>\n+#include <thread>\n+#include <mutex>\n+#include <condition_variable>\n+#include <chrono>\n+#include ""shortcut_guide.h""\n+\n+struct KeyEvent {\n+  bool key_down;\n+  unsigned vk_code;\n+};\n+\n+class TargetState {\n+public:\n+  TargetState(int ms_delay);\n+  bool signal_event(unsigned vk_code, bool key_down);\n+  void was_hiden();\n+  void exit();\n+  void set_delay(int ms_delay);\n+private:\n+  KeyEvent next();\n+  void handle_hidden();\n+  void handle_timeout();\n+  void handle_shown();\n+  void thread_proc();\n+  std::mutex mutex;\n+  std::condition_variable cv;\n+  std::chrono::system_clock::time_point winkey_timestamp, singnal_timestamp;\n+  std::chrono::milliseconds delay;\n+  std::deque<KeyEvent> events;\n+  enum { Hidden, Timeout, Shown, Exiting } state = Hidden;\n+  bool key_was_pressed = false;\n+  std::thread thread;\n+};'}, {'Name': 'src/modules/shortcut_guide/trace.cpp', 'Line Additions': 47, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,47 @@\n+#include ""pch.h""\n+#include ""trace.h""\n+\n+TRACELOGGING_DEFINE_PROVIDER(\n+  g_hProvider,\n+  ""Microsoft.PowerToys"",\n+  // {38e8889b-9731-53f5-e901-e8a7c1753074}\n+  (0x38e8889b, 0x9731, 0x53f5, 0xe9, 0x01, 0xe8, 0xa7, 0xc1, 0x75, 0x30, 0x74),\n+  TraceLoggingOptionProjectTelemetry());\n+\n+void Trace::RegisterProvider() {\n+  TraceLoggingRegister(g_hProvider);\n+}\n+\n+void Trace::UnregisterProvider() {\n+  TraceLoggingUnregister(g_hProvider);\n+}\n+\n+void Trace::EventShow() {\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""ShortcutGuide::Event::ShowGuide"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+}\n+\n+void Trace::EventHide(const __int64 duration_ms, std::vector<int> &key_pressed) {\n+  std::string vk_codes;\n+  std::vector<int>::iterator it;\n+  for (it = key_pressed.begin(); it != key_pressed.end(); ) {\n+    vk_codes += std::to_string(*it);\n+    if (++it != key_pressed.end()) {\n+      vk_codes += "" "";\n+    }\n+  }\n+\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""ShortcutGuide::Event::HideGuide"",\n+    TraceLoggingInt64(duration_ms, ""Duration in ms""),\n+    TraceLoggingInt64(key_pressed.size(), ""# of key pressed""),\n+    TraceLoggingString(vk_codes.c_str(), ""list of key pressed""),\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+}'}, {'Name': 'src/modules/shortcut_guide/trace.h', 'Line Additions': 9, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,9 @@\n+#pragma once\n+\n+class Trace {\n+public:\n+  static void RegisterProvider();\n+  static void UnregisterProvider();\n+  static void EventShow();\n+  static void EventHide(const __int64 duration_ms, std::vector<int> &key_pressed);\n+};'}, {'Name': 'src/runner/README.md', 'Line Additions': 50, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,50 @@\n+# PowerToys Runner\n+\n+# Introduction\n+\n+The PowerToys Runner contains the project for the PowerToys.exe executable.\n+It's responsible for:\n+- Loading the individual PowerToys modules.\n+- Passing registered events to the PowerToys.\n+- Showing a system tray icon to manage the PowerToys.\n+- Bridging between the PowerToys modules and the Settings editor.\n+\n+![Image of the tray icon](/doc/images/runner/tray.png)\n+\n+# Code organization\n+\n+#### [`main.cpp`](./main.cpp)\n+Contains the executable starting point, initialization code and the list of known PowerToys.\n+\n+#### [`powertoy_module.h`](./powertoy_module.h) and [`powertoy_module.cpp`](./powertoy_module.cpp)\n+Contains code for initializing and managing the PowerToy modules.\n+\n+#### [`powertoys_events.cpp`](./powertoys_events.cpp)\n+Contains code that handles the various events listeners, and forwards those events to the PowerToys modules.\n+\n+#### [`lowlevel_keyboard_event.cpp`](./lowlevel_keyboard_event.cpp)\n+Contains code for registering the low level keyboard event hook that listens for keyboard events.\n+\n+#### [`win_hook_event.cpp`](./win_hook_event.cpp)\n+Contains code for registering a Windows event hook through `SetWinEventHook`, that listens for various events raised when a window is interacted with.\n+\n+#### [`tray_icon.cpp`](./tray_icon.cpp)\n+Contains code for managing the PowerToys tray icon and its menu commands.\n+\n+#### [`settings_window.cpp`](./settings_window.cpp)\n+Contains code for starting the PowerToys settings window and communicating with it.\n+\n+#### [`general_settings.cpp`](./general_settings.cpp)\n+Contains code for loading, saving and applying the general setings.\n+\n+#### [`auto_start_helper.cpp`](./auto_start_helper.cpp)\n+Contains helper code for registering and unregistering PowerToys to run when the user logs in.\n+\n+#### [`unhandled_exception_handler.cpp`](./unhandled_exception_handler.cpp)\n+Contains helper code to get stack traces in builds. Can be used by adding a call to `init_global_error_handlers` in [`WinMain`](./main.cpp).\n+\n+#### [`trace.cpp`](./trace.cpp)\n+Contains code for telemetry.\n+\n+#### [`svgs`](./svgs/)\n+Contains the SVG assets used by the PowerToys modules.""}, {'Name': 'src/runner/auto_start_helper.cpp', 'Line Additions': 362, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,362 @@\n+#include ""pch.h""\n+#include ""auto_start_helper.h""\n+\n+#include <Lmcons.h>\n+\n+#include <comdef.h>\n+#include <taskschd.h>\n+#pragma comment(lib, ""taskschd.lib"")\n+#pragma comment(lib, ""comsupp.lib"")\n+\n+#include <Shlobj.h>\n+\n+// Helper macros from wix.\n+// TODO: use ""s"" and ""..."" parameters to report errors from these functions.\n+#define ExitOnFailure(x,s,...)   if (FAILED(x)) { goto LExit; }\n+#define ExitWithLastError(x,s,...) { DWORD Dutil_er = ::GetLastError(); x = HRESULT_FROM_WIN32(Dutil_er); if (!FAILED(x)) { x = E_FAIL; }  goto LExit; }\n+#define ExitFunction()        { goto LExit; }\n+\n+\n+const DWORD USERNAME_DOMAIN_LEN = DNLEN + UNLEN + 2; // Domain Name + \'\\\' + User Name + \'\\0\'\n+const DWORD USERNAME_LEN = UNLEN + 1; // User Name + \'\\0\'\n+\n+\n+bool enable_auto_start_task_for_this_user() {\n+  HRESULT hr = S_OK;\n+\n+  WCHAR username_domain[USERNAME_DOMAIN_LEN];\n+  WCHAR username[USERNAME_LEN];\n+\n+  std::wstring wstrTaskName;\n+\n+  ITaskService *pService = NULL;\n+  ITaskFolder *pTaskFolder = NULL;\n+  ITaskDefinition *pTask = NULL;\n+  IRegistrationInfo *pRegInfo = NULL;\n+  ITaskSettings *pSettings = NULL;\n+  ITriggerCollection *pTriggerCollection = NULL;\n+  IRegisteredTask *pRegisteredTask = NULL;\n+\n+  // ------------------------------------------------------\n+  // Get the Domain/Username for the trigger.\n+  if (!GetEnvironmentVariable(L""USERNAME"", username, USERNAME_LEN)) {\n+    ExitWithLastError(hr, ""Getting username failed: %x"", hr);\n+  }\n+  if (!GetEnvironmentVariable(L""USERDOMAIN"", username_domain, USERNAME_DOMAIN_LEN)) {\n+    ExitWithLastError(hr, ""Getting the user\'s domain failed: %x"", hr);\n+  }\n+  wcscat_s(username_domain, L""\\\\"");\n+  wcscat_s(username_domain, username);\n+\n+  // Task Name.\n+  wstrTaskName = L""Autorun for "";\n+  wstrTaskName += username;\n+\n+  // Get the executable path passed to the custom action.\n+  WCHAR wszExecutablePath[MAX_PATH];\n+  GetModuleFileName(NULL, wszExecutablePath, MAX_PATH);\n+\n+  // ------------------------------------------------------\n+  // Create an instance of the Task Service.\n+  hr = CoCreateInstance(CLSID_TaskScheduler,\n+    NULL,\n+    CLSCTX_INPROC_SERVER,\n+    IID_ITaskService,\n+    (void**)&pService);\n+  ExitOnFailure(hr, ""Failed to create an instance of ITaskService: %x"", hr);\n+\n+  // Connect to the task service.\n+  hr = pService->Connect(_variant_t(), _variant_t(),\n+    _variant_t(), _variant_t());\n+  ExitOnFailure(hr, ""ITaskService::Connect failed: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Get the PowerToys task folder. Creates it if it doesn\'t exist.\n+  hr = pService->GetFolder(_bstr_t(L""\\\\PowerToys""), &pTaskFolder);\n+  if (FAILED(hr)) {\n+    // Folder doesn\'t exist. Get the Root folder and create the PowerToys subfolder.\n+    ITaskFolder *pRootFolder = NULL;\n+    hr = pService->GetFolder(_bstr_t(L""\\\\""), &pRootFolder);\n+    ExitOnFailure(hr, ""Cannot get Root Folder pointer: %x"", hr);\n+    hr = pRootFolder->CreateFolder(_bstr_t(L""\\\\PowerToys""), _variant_t(L""""), &pTaskFolder);\n+    if (FAILED(hr)) {\n+      pRootFolder->Release();\n+      ExitOnFailure(hr, ""Cannot create PowerToys task folder: %x"", hr);\n+    }\n+  }\n+\n+  // If the task exists, just enable it.\n+  {\n+    IRegisteredTask *pExistingRegisteredTask = NULL;\n+    hr=pTaskFolder->GetTask(_bstr_t(wstrTaskName.c_str()), &pExistingRegisteredTask);\n+    if (SUCCEEDED(hr)) {\n+      // Task exists, try enabling it.\n+      hr = pExistingRegisteredTask->put_Enabled(VARIANT_TRUE);\n+      pExistingRegisteredTask->Release();\n+      if (SUCCEEDED(hr)) {\n+        // Function enable. Sounds like a success.\n+        ExitFunction();\n+      }\n+    }\n+  }\n+\n+  // Create the task builder object to create the task.\n+  hr = pService->NewTask(0, &pTask);\n+  ExitOnFailure(hr, ""Failed to create a task definition: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Get the registration info for setting the identification.\n+  hr = pTask->get_RegistrationInfo(&pRegInfo);\n+  ExitOnFailure(hr, ""Cannot get identification pointer: %x"", hr);\n+  hr = pRegInfo->put_Author(_bstr_t(username_domain));\n+  ExitOnFailure(hr, ""Cannot put identification info: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Create the settings for the task\n+  hr = pTask->get_Settings(&pSettings);\n+  ExitOnFailure(hr, ""Cannot get settings pointer: %x"", hr);\n+\n+  hr = pSettings->put_StartWhenAvailable(VARIANT_FALSE);\n+  ExitOnFailure(hr, ""Cannot put_StartWhenAvailable setting info: %x"", hr);\n+  hr = pSettings->put_StopIfGoingOnBatteries(VARIANT_FALSE);\n+  ExitOnFailure(hr, ""Cannot put_StopIfGoingOnBatteries setting info: %x"", hr);\n+  hr = pSettings->put_ExecutionTimeLimit(_bstr_t(L""PT0S"")); //Unlimited\n+  ExitOnFailure(hr, ""Cannot put_ExecutionTimeLimit setting info: %x"", hr);\n+  hr = pSettings->put_DisallowStartIfOnBatteries(VARIANT_FALSE);\n+  ExitOnFailure(hr, ""Cannot put_DisallowStartIfOnBatteries setting info: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Get the trigger collection to insert the logon trigger.\n+  hr = pTask->get_Triggers(&pTriggerCollection);\n+  ExitOnFailure(hr, ""Cannot get trigger collection: %x"", hr);\n+\n+  // Add the logon trigger to the task.\n+  {\n+    ITrigger *pTrigger = NULL;\n+    ILogonTrigger *pLogonTrigger = NULL;\n+    hr = pTriggerCollection->Create(TASK_TRIGGER_LOGON, &pTrigger);\n+    ExitOnFailure(hr, ""Cannot create the trigger: %x"", hr);\n+\n+    hr = pTrigger->QueryInterface(\n+      IID_ILogonTrigger, (void**)&pLogonTrigger);\n+    pTrigger->Release();\n+    ExitOnFailure(hr, ""QueryInterface call failed for ILogonTrigger: %x"", hr);\n+\n+    hr = pLogonTrigger->put_Id(_bstr_t(L""Trigger1""));\n+\n+    // Timing issues may make explorer not be started when the task runs.\n+    // Add a little delay to mitigate this.\n+    hr = pLogonTrigger->put_Delay(_bstr_t(L""PT03S""));\n+\n+    // Define the user. The task will execute when the user logs on.\n+    // The specified user must be a user on this computer.\n+    hr = pLogonTrigger->put_UserId(_bstr_t(username_domain));\n+    pLogonTrigger->Release();\n+    ExitOnFailure(hr, ""Cannot add user ID to logon trigger: %x"", hr);\n+  }\n+\n+  // ------------------------------------------------------\n+  // Add an Action to the task. This task will execute the path passed to this custom action.\n+  {\n+    IActionCollection *pActionCollection = NULL;\n+    IAction *pAction = NULL;\n+    IExecAction *pExecAction = NULL;\n+\n+    // Get the task action collection pointer.\n+    hr = pTask->get_Actions(&pActionCollection);\n+    ExitOnFailure(hr, ""Cannot get Task collection pointer: %x"", hr);\n+\n+    // Create the action, specifying that it is an executable action.\n+    hr = pActionCollection->Create(TASK_ACTION_EXEC, &pAction);\n+    pActionCollection->Release();\n+    ExitOnFailure(hr, ""Cannot create the action: %x"", hr);\n+\n+    // QI for the executable task pointer.\n+    hr = pAction->QueryInterface(\n+      IID_IExecAction, (void**)&pExecAction);\n+    pAction->Release();\n+    ExitOnFailure(hr, ""QueryInterface call failed for IExecAction: %x"", hr);\n+\n+    // Set the path of the executable to PowerToys (passed as CustomActionData).\n+    hr = pExecAction->put_Path(_bstr_t(wszExecutablePath));\n+    pExecAction->Release();\n+    ExitOnFailure(hr, ""Cannot set path of executable: %x"", hr);\n+  }\n+\n+  // ------------------------------------------------------\n+  // Create the principal for the task\n+  {\n+    IPrincipal *pPrincipal = NULL;\n+    hr = pTask->get_Principal(&pPrincipal);\n+    ExitOnFailure(hr, ""Cannot get principal pointer: %x"", hr);\n+\n+    // Set up principal information:\n+    hr = pPrincipal->put_Id(_bstr_t(L""Principal1""));\n+\n+    hr = pPrincipal->put_UserId(_bstr_t(username_domain));\n+\n+    hr = pPrincipal->put_LogonType(TASK_LOGON_INTERACTIVE_TOKEN);\n+\n+    // Run the task with the highest available privileges.\n+    if (IsUserAnAdmin()) {\n+      hr = pPrincipal->put_RunLevel(_TASK_RUNLEVEL::TASK_RUNLEVEL_HIGHEST);\n+    } else {\n+      hr = pPrincipal->put_RunLevel(_TASK_RUNLEVEL::TASK_RUNLEVEL_LUA);\n+    }\n+    pPrincipal->Release();\n+    ExitOnFailure(hr, ""Cannot put principal run level: %x"", hr);\n+  }\n+  // ------------------------------------------------------\n+  //  Save the task in the PowerToys folder.\n+  hr = pTaskFolder->RegisterTaskDefinition(\n+    _bstr_t(wstrTaskName.c_str()),\n+    pTask,\n+    TASK_CREATE_OR_UPDATE,\n+    _variant_t(username_domain),\n+    _variant_t(),\n+    TASK_LOGON_INTERACTIVE_TOKEN,\n+    _variant_t(L""""),\n+    &pRegisteredTask);\n+  ExitOnFailure(hr, ""Error saving the Task : %x"", hr);\n+\n+LExit:\n+  if (pService) pService->Release();\n+  if (pTaskFolder) pTaskFolder->Release();\n+  if (pTask) pTask->Release();\n+  if (pRegInfo) pRegInfo->Release();\n+  if (pSettings) pSettings->Release();\n+  if (pTriggerCollection) pTriggerCollection->Release();\n+  if (pRegisteredTask) pRegisteredTask->Release();\n+\n+  return(SUCCEEDED(hr));\n+}\n+\n+bool disable_auto_start_task_for_this_user() {\n+  HRESULT hr = S_OK;\n+\n+  WCHAR username[USERNAME_LEN];\n+  std::wstring wstrTaskName;\n+\n+  ITaskService *pService = NULL;\n+  ITaskFolder *pTaskFolder = NULL;\n+\n+  // ------------------------------------------------------\n+  // Get the Username for the task.\n+  if (!GetEnvironmentVariable(L""USERNAME"", username, USERNAME_LEN)) {\n+    ExitWithLastError(hr, ""Getting username failed: %x"", hr);\n+  }\n+\n+  // Task Name.\n+  wstrTaskName = L""Autorun for "";\n+  wstrTaskName += username;\n+\n+  // ------------------------------------------------------\n+  // Create an instance of the Task Service.\n+  hr = CoCreateInstance(CLSID_TaskScheduler,\n+    NULL,\n+    CLSCTX_INPROC_SERVER,\n+    IID_ITaskService,\n+    (void**)&pService);\n+  ExitOnFailure(hr, ""Failed to create an instance of ITaskService: %x"", hr);\n+\n+  // Connect to the task service.\n+  hr = pService->Connect(_variant_t(), _variant_t(),\n+    _variant_t(), _variant_t());\n+  ExitOnFailure(hr, ""ITaskService::Connect failed: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Get the PowerToys task folder.\n+  hr = pService->GetFolder(_bstr_t(L""\\\\PowerToys""), &pTaskFolder);\n+  if (FAILED(hr)) {\n+    // Folder doesn\'t exist. No need to disable a non-existing task.\n+    hr = S_OK;\n+    ExitFunction();\n+  }\n+\n+  // ------------------------------------------------------\n+  // If the task exists, disable.\n+  {\n+    IRegisteredTask *pExistingRegisteredTask = NULL;\n+    hr = pTaskFolder->GetTask(_bstr_t(wstrTaskName.c_str()), &pExistingRegisteredTask);\n+    if (SUCCEEDED(hr)) {\n+      // Task exists, try disabling it.\n+      hr = pExistingRegisteredTask->put_Enabled(VARIANT_FALSE);\n+      pExistingRegisteredTask->Release();\n+      if (SUCCEEDED(hr)) {\n+        // Function disable. Sounds like a success.\n+        ExitFunction();\n+      }\n+    }\n+  }\n+\n+LExit:\n+  if (pService) pService->Release();\n+  if (pTaskFolder) pTaskFolder->Release();\n+\n+  return(SUCCEEDED(hr));\n+}\n+\n+bool is_auto_start_task_active_for_this_user(){\n+  HRESULT hr = S_OK;\n+\n+  WCHAR username[USERNAME_LEN];\n+  std::wstring wstrTaskName;\n+\n+  ITaskService *pService = NULL;\n+  ITaskFolder *pTaskFolder = NULL;\n+\n+  // ------------------------------------------------------\n+  // Get the Username for the task.\n+  if (!GetEnvironmentVariable(L""USERNAME"", username, USERNAME_LEN)) {\n+    ExitWithLastError(hr, ""Getting username failed: %x"", hr);\n+  }\n+\n+  // Task Name.\n+  wstrTaskName = L""Autorun for "";\n+  wstrTaskName += username;\n+\n+  // ------------------------------------------------------\n+  // Create an instance of the Task Service.\n+  hr = CoCreateInstance(CLSID_TaskScheduler,\n+    NULL,\n+    CLSCTX_INPROC_SERVER,\n+    IID_ITaskService,\n+    (void**)&pService);\n+  ExitOnFailure(hr, ""Failed to create an instance of ITaskService: %x"", hr);\n+\n+  // Connect to the task service.\n+  hr = pService->Connect(_variant_t(), _variant_t(),\n+    _variant_t(), _variant_t());\n+  ExitOnFailure(hr, ""ITaskService::Connect failed: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // Get the PowerToys task folder.\n+  hr = pService->GetFolder(_bstr_t(L""\\\\PowerToys""), &pTaskFolder);\n+  ExitOnFailure(hr, ""ITaskFolder doesn\'t exist: %x"", hr);\n+\n+  // ------------------------------------------------------\n+  // If the task exists, disable.\n+  {\n+    IRegisteredTask *pExistingRegisteredTask = NULL;\n+    hr = pTaskFolder->GetTask(_bstr_t(wstrTaskName.c_str()), &pExistingRegisteredTask);\n+    if (SUCCEEDED(hr)) {\n+      // Task exists, get its value.\n+      VARIANT_BOOL is_enabled;\n+      hr = pExistingRegisteredTask->get_Enabled(&is_enabled);\n+      pExistingRegisteredTask->Release();\n+      if (SUCCEEDED(hr)) {\n+        // Got the value. Return it.\n+        hr = (is_enabled == VARIANT_TRUE) ? S_OK : E_FAIL; // Fake success or fail to return the value.\n+        ExitFunction();\n+      }\n+    }\n+  }\n+\n+LExit:\n+  if (pService) pService->Release();\n+  if (pTaskFolder) pTaskFolder->Release();\n+\n+  return(SUCCEEDED(hr));\n+\n+}\n+'}, {'Name': 'src/runner/auto_start_helper.h', 'Line Additions': 4, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,4 @@\n+#pragma once\n+bool is_auto_start_task_active_for_this_user();\n+bool enable_auto_start_task_for_this_user();\n+bool disable_auto_start_task_for_this_user();'}, {'Name': 'src/runner/general_settings.cpp', 'Line Additions': 91, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,91 @@\n+#include ""pch.h""\n+#include ""general_settings.h""\n+#include ""auto_start_helper.h""\n+#include <common/settings_helpers.h>\n+#include ""powertoy_module.h""\n+\n+using namespace web;\n+\n+web::json::value load_general_settings() {\n+  return PTSettingsHelper::load_general_settings();\n+}\n+\n+web::json::value get_general_settings() {\n+  json::value result = json::value::object();\n+  bool startup = is_auto_start_task_active_for_this_user();\n+  result.as_object()[L""startup""] = json::value::boolean(startup);\n+\n+  json::value enabled = json::value::object();\n+  for (auto&[name, powertoy] : modules()) {\n+    enabled.as_object()[name] = json::value::boolean(powertoy.is_enabled());\n+  }\n+  result.as_object()[L""enabled""] = enabled;\n+  return result;\n+}\n+\n+void apply_general_settings(const json::value& general_configs) {\n+  bool contains_startup = general_configs.has_boolean_field(L""startup"");\n+  if (contains_startup) {\n+    bool startup = general_configs.at(L""startup"").as_bool();\n+    bool current_startup = is_auto_start_task_active_for_this_user();\n+    if (current_startup != startup) {\n+      if (startup) {\n+        enable_auto_start_task_for_this_user();\n+      } else {\n+        disable_auto_start_task_for_this_user();\n+      }\n+    }\n+  }\n+  bool contains_enabled = general_configs.has_object_field(L""enabled"");\n+  if (contains_enabled) {\n+    for (auto enabled_element : general_configs.at(L""enabled"").as_object()) {\n+      if (enabled_element.second.is_boolean() && modules().find(enabled_element.first) != modules().end()) {\n+        bool module_inst_enabled = modules().at(enabled_element.first).is_enabled();\n+        bool target_enabled = enabled_element.second.as_bool();\n+        if (module_inst_enabled != target_enabled) {\n+          if (target_enabled) {\n+            modules().at(enabled_element.first).enable();\n+          } else {\n+            modules().at(enabled_element.first).disable();\n+          }\n+        }\n+      }\n+    }\n+  }\n+  json::value save_settings = get_general_settings();\n+  PTSettingsHelper::save_general_settings(save_settings);\n+}\n+\n+void start_initial_powertoys() {\n+  bool only_enable_some_powertoys = false;\n+\n+  std::unordered_set<std::wstring> powertoys_to_enable;\n+\n+  json::value general_settings;\n+  try {\n+    general_settings = load_general_settings();\n+    json::value enabled = general_settings[L""enabled""];\n+    for (auto enabled_element : enabled.as_object()) {\n+      if (enabled_element.second.as_bool()) {\n+        // Enable this powertoy.\n+        powertoys_to_enable.emplace(enabled_element.first);\n+      }\n+    }\n+    only_enable_some_powertoys = true;\n+  }\n+  catch (std::exception ex) {\n+    // Couldn\'t read the general settings correctly.\n+    // Load all powertoys.\n+    only_enable_some_powertoys = false;\n+  }\n+\n+  for (auto&[name, powertoy] : modules()) {\n+    if (only_enable_some_powertoys) {\n+      if (powertoys_to_enable.find(name)!=powertoys_to_enable.end()) {\n+        powertoy.enable();\n+      }\n+    } else {\n+      powertoy.enable();\n+    }\n+  }\n+}'}, {'Name': 'src/runner/general_settings.h', 'Line Additions': 6, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,6 @@\n+#pragma once\n+#include <cpprest/json.h>\n+\n+web::json::value get_general_settings();\n+void apply_general_settings(const web::json::value& general_configs);\n+void start_initial_powertoys();'}, {'Name': 'src/runner/lowlevel_keyboard_event.cpp', 'Line Additions': 36, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,36 @@\n+#include ""pch.h""\r\n+#include ""lowlevel_keyboard_event.h""\r\n+#include ""powertoys_events.h""\r\n+\r\n+namespace {\r\n+  HHOOK hook_handle = nullptr;\r\n+  HHOOK hook_handle_copy = nullptr; // make sure we do use nullptr in CallNextHookEx call\r\n+  LRESULT CALLBACK hook_proc(int nCode, WPARAM wParam, LPARAM lParam) {\r\n+    LowlevelKeyboardEvent event;\r\n+    if (nCode == HC_ACTION) {\r\n+      event.lParam = reinterpret_cast<KBDLLHOOKSTRUCT*>(lParam);\r\n+      event.wParam = wParam;\r\n+      if (powertoys_events().signal_event(ll_keyboard, reinterpret_cast<intptr_t>(&event)) != 0) {\r\n+        return 1;\r\n+      }\r\n+    }\r\n+    return CallNextHookEx(hook_handle_copy, nCode, wParam, lParam);\r\n+  }\r\n+}\r\n+\r\n+void start_lowlevel_keyboard_hook() {\r\n+  if (!hook_handle) {\r\n+    hook_handle = SetWindowsHookEx(WH_KEYBOARD_LL, hook_proc, GetModuleHandle(NULL), NULL);\r\n+    hook_handle_copy = hook_handle;\r\n+    if (!hook_handle) {\r\n+      throw std::runtime_error(""Cannot install keyboard listener"");\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+void stop_lowlevel_keyboard_hook() {\r\n+  if (hook_handle) {\r\n+    UnhookWindowsHookEx(hook_handle);\r\n+    hook_handle = nullptr;\r\n+  }\r\n+}\r'}, {'Name': 'src/runner/lowlevel_keyboard_event.h', 'Line Additions': 5, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,5 @@\n+#pragma once\r\n+#include <interface/lowlevel_keyboard_event_data.h>\r\n+\r\n+void start_lowlevel_keyboard_hook();\r\n+void stop_lowlevel_keyboard_hook();\r'}, {'Name': 'src/runner/main.cpp', 'Line Additions': 81, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,81 @@\n+#include ""pch.h""\r\n+#include <ShellScalingApi.h>\r\n+#include <lmcons.h>\r\n+#include <filesystem>\r\n+#include ""tray_icon.h""\r\n+#include ""powertoy_module.h""\r\n+#include ""lowlevel_keyboard_event.h""\r\n+#include ""trace.h""\r\n+#include ""general_settings.h""\r\n+\r\n+#if _DEBUG && _WIN64\r\n+#include ""unhandled_exception_handler.h""\r\n+#endif\r\n+\r\n+void chdir_current_executable() {\r\n+  // Change current directory to the path of the executable.\r\n+  WCHAR executable_path[MAX_PATH];\r\n+  GetModuleFileName(NULL, executable_path, MAX_PATH);\r\n+  PathRemoveFileSpec(executable_path);\r\n+  if(!SetCurrentDirectory(executable_path)) {\r\n+    show_last_error_message(L""Change Directory to Executable Path"", GetLastError());\r\n+  }\r\n+}\r\n+\r\n+int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {\r\n+  WCHAR username[UNLEN + 1];\r\n+  DWORD username_length = UNLEN + 1;\r\n+  GetUserNameW(username, &username_length);\r\n+  auto runner_mutex = CreateMutexW(NULL, TRUE, (std::wstring(L""Local\\\\PowerToyRunMutex"") + username).c_str());\r\n+  if (runner_mutex == NULL || GetLastError() == ERROR_ALREADY_EXISTS) {\r\n+    // The app is already running\r\n+    return 0;\r\n+  }\r\n+  \r\n+  #if _DEBUG && _WIN64\r\n+  //Global error handlers to diagnose errors.\r\n+  //We prefer this not not show any longer until there\'s a bug to diagnose.\r\n+  //init_global_error_handlers();\r\n+  #endif\r\n+  Trace::RegisterProvider();\r\n+  winrt::init_apartment();\r\n+  start_tray_icon();\r\n+  int result;\r\n+  try {\r\n+\r\n+    // Singletons initialization order needs to be preserved, first events and\r\n+    // then modules to guarantee the reverse destruction order.\r\n+    powertoys_events();\r\n+    modules();\r\n+\r\n+    chdir_current_executable();\r\n+    // Load Powertyos DLLS\r\n+    // For now only load known DLLs\r\n+    std::unordered_set<std::wstring> known_dlls = {\r\n+      L""shortcut_guide.dll"",\r\n+      L""fancyzones.dll"" \r\n+    };\r\n+    for (auto& file : std::filesystem::directory_iterator(L""modules/"")) {\r\n+      if (file.path().extension() != L"".dll"")\r\n+        continue;\r\n+      if (known_dlls.find(file.path().filename()) == known_dlls.end())\r\n+        continue;\r\n+      try {\r\n+        auto module = load_powertoy(file.path().wstring());\r\n+        modules().emplace(module.get_name(), std::move(module));\r\n+      } catch (...) { }\r\n+    } \r\n+     // Start initial powertoys\r\n+    start_initial_powertoys();\r\n+\r\n+    Trace::EventLaunch();\r\n+\r\n+    result = run_message_loop();\r\n+  } catch (std::runtime_error err) {\r\n+    std::string err_what = err.what();\r\n+    MessageBoxW(NULL, std::wstring(err_what.begin(),err_what.end()).c_str(), L""Error"", MB_OK | MB_ICONERROR);\r\n+    result = -1;\r\n+  }\r\n+  Trace::UnregisterProvider();\r\n+  return result;\r\n+}\r'}, {'Name': 'src/runner/pch.cpp', 'Line Additions': 9, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,9 @@\n+#include ""pch.h""\n+#pragma comment(lib, ""shlwapi.lib"")\n+#pragma comment(lib, ""shcore.lib"")\n+#pragma comment(lib, ""windowsapp"")\n+#pragma comment(lib, ""dxgi"")\n+#pragma comment(lib, ""d3d11"")\n+#pragma comment(lib, ""d2d1"")\n+#pragma comment(lib, ""dcomp"")\n+#pragma comment(lib, ""dwmapi"")\n\\ No newline at end of file'}, {'Name': 'src/runner/pch.h', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+#pragma once\n+#include <winrt/base.h>\n+#include <Windows.h>\n+#include <dxgi1_3.h>\n+#include <d3d11_2.h>\n+#include <d2d1_3.h>\n+#include <d2d1_3helper.h>\n+#include <d2d1helper.h>\n+#include <dwrite.h>\n+#include <dcomp.h>\n+#include <dwmapi.h>\n+#include <Shobjidl.h>\n+#include <Shlwapi.h>\n+#include <string>\n+#include <algorithm>\n+#include <chrono>\n+#include <mutex>\n+#include <thread>\n+#include <functional>\n+#include <condition_variable>\n+#include <stdexcept>\n+#include <tuple>\n+#include <unordered_set>\n+#include <string>\n+#include <common/common.h>\n+#include <ProjectTelemetry.h>'}, {'Name': 'src/runner/powertoy_module.cpp', 'Line Additions': 24, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,24 @@\n+#include ""pch.h""\r\n+#include ""powertoy_module.h""\r\n+#include ""lowlevel_keyboard_event.h""\r\n+#include <algorithm>\r\n+\r\n+std::unordered_map<std::wstring, PowertoyModule>& modules() {\r\n+  static std::unordered_map<std::wstring, PowertoyModule> modules;\r\n+  return modules;\r\n+}\r\n+\r\n+PowertoyModule load_powertoy(const std::wstring& filename) {\r\n+  auto handle = winrt::check_pointer(LoadLibraryW(filename.c_str()));\r\n+  auto create = reinterpret_cast<powertoy_create_func>(GetProcAddress(handle, ""powertoy_create""));\r\n+  if (!create) {\r\n+    FreeLibrary(handle);\r\n+    winrt::throw_last_error();\r\n+  }\r\n+  auto module = create();\r\n+  if (!module) {\r\n+    FreeLibrary(handle);\r\n+    winrt::throw_last_error();\r\n+  }\r\n+  return PowertoyModule(module, handle);\r\n+}\r'}, {'Name': 'src/runner/powertoy_module.h', 'Line Additions': 83, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,83 @@\n+#pragma once\r\n+#include ""powertoys_events.h""\r\n+#include <interface/powertoy_module_interface.h>\r\n+#include <string>\r\n+#include <memory>\r\n+#include <mutex>\r\n+#include <vector>\r\n+#include <functional>\r\n+\r\n+class PowertoyModule;\r\n+\r\n+struct PowertoyModuleDeleter {\r\n+  void operator()(PowertoyModuleIface* module) {\r\n+    if (module) {\r\n+      powertoys_events().unregister_receiver(module);\r\n+      module->disable();\r\n+      module->destroy();\r\n+    }\r\n+  }\r\n+};\r\n+\r\n+struct PowertoyModuleDLLDeleter {\r\n+  using pointer = HMODULE;\r\n+  void operator()(HMODULE  handle) {\r\n+    FreeLibrary(handle);\r\n+  }\r\n+};\r\n+\r\n+\r\n+class PowertoyModule {\r\n+public:\r\n+  PowertoyModule(PowertoyModuleIface* module, HMODULE  handle) : handle(handle), module(module) {\r\n+    if (!module)\r\n+      throw std::runtime_error(""Module not initialized"");\r\n+    name = module->get_name();\r\n+    auto want_signals = module->get_events();\r\n+    if (want_signals) {\r\n+      for (; *want_signals; ++want_signals) {\r\n+        powertoys_events().register_receiver(*want_signals, module);\r\n+      }\r\n+    }\r\n+  }\r\n+  const std::wstring& get_name() const {\r\n+    return name;\r\n+  }\r\n+  const std::wstring get_config() const {\r\n+    std::wstring result;\r\n+    int size = 0;\r\n+    module->get_config(nullptr, &size);\r\n+    wchar_t *buffer = new wchar_t[size];\r\n+    if (module->get_config(buffer, &size)) {\r\n+      result.assign(buffer);\r\n+    }\r\n+    delete[] buffer;\r\n+    return result;\r\n+  }\r\n+  void set_config(const std::wstring& config) {\r\n+    module->set_config(config.c_str());\r\n+  }\r\n+  void call_custom_action(const std::wstring& action) {\r\n+    module->call_custom_action(action.c_str());\r\n+  }\r\n+  intptr_t signal_event(const std::wstring& signal_event, intptr_t data) {\r\n+    return module->signal_event(signal_event.c_str(), data);\r\n+  }\r\n+  bool is_enabled() {\r\n+    return module->is_enabled();\r\n+  }\r\n+  void enable() {\r\n+    module->enable();\r\n+  }\r\n+  void disable() {\r\n+    module->disable();\r\n+  }\r\n+private:\r\n+  std::unique_ptr<HMODULE, PowertoyModuleDLLDeleter> handle;\r\n+  std::unique_ptr<PowertoyModuleIface, PowertoyModuleDeleter> module;\r\n+  std::wstring name;\r\n+};\r\n+\r\n+\r\n+PowertoyModule load_powertoy(const std::wstring& filename);\r\n+std::unordered_map<std::wstring, PowertoyModule>& modules();\n\\ No newline at end of file'}, {'Name': 'src/runner/powertoys_events.cpp', 'Line Additions': 54, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,54 @@\n+#include ""pch.h""\r\n+#include ""powertoys_events.h""\r\n+#include ""lowlevel_keyboard_event.h""\r\n+#include ""win_hook_event.h""\r\n+\r\n+void first_subscribed(const std::wstring& event) {\r\n+  if (event == ll_keyboard)\r\n+    start_lowlevel_keyboard_hook();\r\n+  else if (event == win_hook_event)\r\n+    start_win_hook_event();\r\n+}\r\n+\r\n+void last_unsubscribed(const std::wstring& event) {\r\n+  if (event == ll_keyboard)\r\n+    stop_lowlevel_keyboard_hook();\r\n+  else if (event == win_hook_event)\r\n+    stop_win_hook_event();\r\n+}\r\n+\r\n+PowertoysEvents& powertoys_events() {\r\n+  static PowertoysEvents powertoys_events;\r\n+  return powertoys_events;\r\n+}\r\n+\r\n+void PowertoysEvents::register_receiver(const std::wstring & event, PowertoyModuleIface* module) {\r\n+  std::unique_lock lock(mutex);\r\n+  auto& subscribers = receivers[event];\r\n+  if (subscribers.empty()) {\r\n+    first_subscribed(event);\r\n+  }\r\n+  subscribers.push_back(module);\r\n+}\r\n+\r\n+void PowertoysEvents::unregister_receiver(PowertoyModuleIface* module) {\r\n+  std::unique_lock lock(mutex);\r\n+  for (auto&[event, subscribers] : receivers) {\r\n+    subscribers.erase(remove(begin(subscribers), end(subscribers), module), end(subscribers));\r\n+    if (subscribers.empty()) {\r\n+      last_unsubscribed(event);\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+intptr_t PowertoysEvents::signal_event(const std::wstring & event, intptr_t data) {\r\n+  intptr_t rvalue = 0;\r\n+  std::shared_lock lock(mutex);\r\n+  if (auto it = receivers.find(event); it != end(receivers)) {\r\n+    for (auto& module : it->second) {\r\n+      if (module)\r\n+        rvalue |= module->signal_event(event.c_str(), data);\r\n+    }\r\n+  }\r\n+  return rvalue;\r\n+}\n\\ No newline at end of file'}, {'Name': 'src/runner/powertoys_events.h', 'Line Additions': 19, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,19 @@\n+#pragma once\r\n+#include <interface/powertoy_module_interface.h>\r\n+#include <string>\r\n+\r\n+class PowertoysEvents {\r\n+public:\r\n+  void register_receiver(const std::wstring& event, PowertoyModuleIface* module);\r\n+  void unregister_receiver(PowertoyModuleIface* module);\r\n+  intptr_t signal_event(const std::wstring& event, intptr_t data);\r\n+private:\r\n+  std::shared_mutex mutex;\r\n+  std::unordered_map<std::wstring, std::vector<PowertoyModuleIface*>> receivers;\r\n+};\r\n+\r\n+PowertoysEvents& powertoys_events();\r\n+\r\n+void first_subscribed(const std::wstring& event);\r\n+void last_unsubscribed(const std::wstring& event);\r\n+\r'}, {'Name': 'src/runner/resource.h', 'Line Additions': 5, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,5 @@\n+#define APPICON 101\n+#define ID_TRAY_MENU 102\n+#define ID_EXIT_MENU_COMMAND 40001\n+#define ID_SETTINGS_MENU_COMMAND 40002\n+#define ID_ABOUT_MENU_COMMAND 40003'}, {'Name': 'src/runner/runner.rc', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/runner/runner.vcxproj', 'Line Additions': 226, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,226 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project DefaultTargets=""Build"" ToolsVersion=""15.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup Label=""ProjectConfigurations"">\r\n+    <ProjectConfiguration Include=""Debug|x64"">\r\n+      <Configuration>Debug</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+    <ProjectConfiguration Include=""Release|x64"">\r\n+      <Configuration>Release</Configuration>\r\n+      <Platform>x64</Platform>\r\n+    </ProjectConfiguration>\r\n+  </ItemGroup>\r\n+  <PropertyGroup Label=""Globals"">\r\n+    <VCProjectVersion>15.0</VCProjectVersion>\r\n+    <ProjectGuid>{9412D5C6-2CF2-4FC2-A601-B55508EA9B27}</ProjectGuid>\r\n+    <RootNamespace>powertoys</RootNamespace>\r\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\r\n+    <ProjectName>runner</ProjectName>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <UseDebugLibraries>true</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\r\n+    <ConfigurationType>Application</ConfigurationType>\r\n+    <UseDebugLibraries>false</UseDebugLibraries>\r\n+    <PlatformToolset>v142</PlatformToolset>\r\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\r\n+    <CharacterSet>Unicode</CharacterSet>\r\n+  </PropertyGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\r\n+  <ImportGroup Label=""ExtensionSettings"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""Shared"">\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\r\n+  </ImportGroup>\r\n+  <PropertyGroup Label=""UserMacros"" />\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <TargetName>PowerToys</TargetName>\r\n+  </PropertyGroup>\r\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <TargetName>PowerToys</TargetName>\r\n+  </PropertyGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\r\n+    <ClCompile>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>Disabled</Optimization>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <AdditionalIncludeDirectories>..\\common\\inc;..\\common\\Telemetry;..;..\\modules;..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <UACExecutionLevel>HighestAvailable</UACExecutionLevel>\r\n+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\r\n+    </Link>\r\n+    <Manifest>\r\n+      <EnableDpiAwareness>PerMonitorHighDPIAware</EnableDpiAwareness>\r\n+    </Manifest>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\r\n+    <ClCompile>\r\n+      <WarningLevel>Level3</WarningLevel>\r\n+      <Optimization>MaxSpeed</Optimization>\r\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\r\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\r\n+      <SDLCheck>true</SDLCheck>\r\n+      <ConformanceMode>true</ConformanceMode>\r\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\r\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\r\n+      <PrecompiledHeader>Use</PrecompiledHeader>\r\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\r\n+      <AdditionalIncludeDirectories>..\\common\\inc;..\\common\\Telemetry;..;..\\modules;..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\r\n+      <PreprocessorDefinitions>_UNICODE;UNICODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>\r\n+    </ClCompile>\r\n+    <Link>\r\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\r\n+      <OptimizeReferences>true</OptimizeReferences>\r\n+      <UACExecutionLevel>HighestAvailable</UACExecutionLevel>\r\n+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\r\n+    </Link>\r\n+    <Manifest>\r\n+      <EnableDpiAwareness>PerMonitorHighDPIAware</EnableDpiAwareness>\r\n+    </Manifest>\r\n+  </ItemDefinitionGroup>\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""auto_start_helper.cpp"" />\r\n+    <ClCompile Include=""general_settings.cpp"" />\r\n+    <ClCompile Include=""lowlevel_keyboard_event.cpp"" />\r\n+    <ClCompile Include=""pch.cpp"">\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\r\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""powertoys_events.cpp"" />\r\n+    <ClCompile Include=""powertoy_module.cpp"" />\r\n+    <ClCompile Include=""main.cpp"" />\r\n+    <ClCompile Include=""settings_window.cpp"" />\r\n+    <ClCompile Include=""trace.cpp"" />\r\n+    <ClCompile Include=""tray_icon.cpp"" />\r\n+    <ClCompile Include=""unhandled_exception_handler.cpp"" />\r\n+    <ClCompile Include=""win_hook_event.cpp"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""auto_start_helper.h"" />\r\n+    <ClInclude Include=""general_settings.h"" />\r\n+    <ClInclude Include=""lowlevel_keyboard_event.h"" />\r\n+    <ClInclude Include=""pch.h"" />\r\n+    <ClInclude Include=""powertoys_events.h"" />\r\n+    <ClInclude Include=""powertoy_module.h"" />\r\n+    <ClInclude Include=""resource.h"" />\r\n+    <ClInclude Include=""settings_window.h"" />\r\n+    <ClInclude Include=""trace.h"" />\r\n+    <ClInclude Include=""tray_icon.h"" />\r\n+    <ClInclude Include=""unhandled_exception_handler.h"" />\r\n+    <ClInclude Include=""win_hook_event.h"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""runner.rc"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <CopyFileToFolders Include=""svgs\\0.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\1.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\2.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\3.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\4.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\5.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\6.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\7.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\8.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\9.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\no_active_window.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\overlay.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\overlay_portrait.svg"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\icon.ico"">\r\n+      <DeploymentContent>true</DeploymentContent>\r\n+      <FileType>Document</FileType>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+      <DestinationFolders Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">$(OutDir)\\svgs</DestinationFolders>\r\n+    </CopyFileToFolders>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ProjectReference Include=""..\\common\\common.vcxproj"">\r\n+      <Project>{74485049-c722-400f-abe5-86ac52d929b3}</Project>\r\n+    </ProjectReference>\r\n+  </ItemGroup>\r\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\r\n+  <ImportGroup Label=""ExtensionTargets"">\r\n+  </ImportGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/runner/runner.vcxproj.filters', 'Line Additions': 127, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,127 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\r\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\r\n+  <ItemGroup>\r\n+    <ClCompile Include=""main.cpp"" />\r\n+    <ClCompile Include=""pch.cpp"" />\r\n+    <ClCompile Include=""unhandled_exception_handler.cpp"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""lowlevel_keyboard_event.cpp"">\r\n+      <Filter>Events</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""tray_icon.cpp"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""powertoy_module.cpp"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""trace.cpp"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""settings_window.cpp"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""auto_start_helper.cpp"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""general_settings.cpp"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""powertoys_events.cpp"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClCompile>\r\n+    <ClCompile Include=""win_hook_event.cpp"">\r\n+      <Filter>Events</Filter>\r\n+    </ClCompile>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ClInclude Include=""pch.h"" />\r\n+    <ClInclude Include=""unhandled_exception_handler.h"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""resource.h"" />\r\n+    <ClInclude Include=""lowlevel_keyboard_event.h"">\r\n+      <Filter>Events</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""tray_icon.h"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""powertoy_module.h"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""trace.h"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""settings_window.h"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""auto_start_helper.h"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""general_settings.h"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""powertoys_events.h"">\r\n+      <Filter>Utils</Filter>\r\n+    </ClInclude>\r\n+    <ClInclude Include=""win_hook_event.h"">\r\n+      <Filter>Events</Filter>\r\n+    </ClInclude>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <Filter Include=""Utils"">\r\n+      <UniqueIdentifier>{bc27e9c1-8afa-4d62-8179-789f4651c0b6}</UniqueIdentifier>\r\n+    </Filter>\r\n+    <Filter Include=""svgs"">\r\n+      <UniqueIdentifier>{1123565f-43ba-4eb8-a6f5-2d5f8f3ae6af}</UniqueIdentifier>\r\n+    </Filter>\r\n+    <Filter Include=""Events"">\r\n+      <UniqueIdentifier>{d409b25e-c0f1-4913-bb32-da4a21339c76}</UniqueIdentifier>\r\n+    </Filter>\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <ResourceCompile Include=""runner.rc"" />\r\n+  </ItemGroup>\r\n+  <ItemGroup>\r\n+    <CopyFileToFolders Include=""svgs\\icon.ico"" />\r\n+    <CopyFileToFolders Include=""svgs\\0.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\1.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\2.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\3.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\4.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\5.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\6.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\7.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\8.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\9.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\no_active_window.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\overlay.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+    <CopyFileToFolders Include=""svgs\\overlay_portrait.svg"">\r\n+      <Filter>svgs</Filter>\r\n+    </CopyFileToFolders>\r\n+  </ItemGroup>\r\n+</Project>\n\\ No newline at end of file'}, {'Name': 'src/runner/settings_window.cpp', 'Line Additions': 265, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,265 @@\n+#include ""pch.h""\n+#include <WinSafer.h>\n+#include <Sddl.h>\n+#include <sstream>\n+#include <accctrl.h>\n+#include <aclapi.h>\n+#include <cpprest/json.h>\n+#include ""powertoy_module.h""\n+#include <common/two_way_pipe_message_ipc.h>\n+#include ""tray_icon.h""\n+#include ""general_settings.h""\n+\n+#define BUFSIZE 1024\n+\n+using namespace web;\n+\n+TwoWayPipeMessageIPC* current_settings_ipc = NULL;\n+\n+json::value get_power_toys_settings() {\n+  json::value result = json::value::object();\n+  for (auto&[name, powertoy] : modules()) {\n+    try {\n+      json::value powertoys_config = json::value::parse(powertoy.get_config());\n+      result.as_object()[name] = powertoys_config;\n+    }\n+    catch (json::json_exception ex) {\n+      //Malformed JSON.\n+    }\n+  }\n+  return result;\n+}\n+\n+json::value get_all_settings() {\n+  json::value result = json::value::object();\n+  result.as_object()[L""general""] = get_general_settings();\n+  result.as_object()[L""powertoys""] = get_power_toys_settings();\n+  return result;\n+}\n+\n+void dispatch_json_action_to_module(const json::value& powertoys_configs) {\n+  for (auto powertoy_element : powertoys_configs.as_object()) {\n+    std::wstringstream ws;\n+    ws << powertoy_element.second;\n+    if (modules().find(powertoy_element.first) != modules().end()) {\n+      modules().at(powertoy_element.first).call_custom_action(ws.str());\n+    }\n+  }\n+}\n+\n+void send_json_config_to_module(const std::wstring& module_key, const std::wstring& settings) {\n+  if (modules().find(module_key) != modules().end()) {\n+    modules().at(module_key).set_config(settings);\n+  }\n+}\n+\n+void dispatch_json_config_to_modules(const json::value& powertoys_configs) {\n+  for (auto powertoy_element : powertoys_configs.as_object()) {\n+    std::wstringstream ws;\n+    ws << powertoy_element.second;\n+    send_json_config_to_module(powertoy_element.first, ws.str());\n+  }\n+};\n+\n+void dispatch_received_json(const std::wstring &json_to_parse) {\n+  json::value j = json::value::parse(json_to_parse);\n+  for(auto base_element : j.as_object()) {\n+    if (base_element.first == L""general"") {\n+      apply_general_settings(base_element.second);\n+      std::wstringstream ws;\n+      ws << get_all_settings();\n+      if (current_settings_ipc != NULL) {\n+        current_settings_ipc->send(ws.str());\n+      }\n+    } else if (base_element.first == L""powertoys"") {\n+      dispatch_json_config_to_modules(base_element.second);\n+      std::wstringstream ws;\n+      ws << get_all_settings();\n+      if (current_settings_ipc != NULL) {\n+        current_settings_ipc->send(ws.str());\n+      }\n+    } else if (base_element.first == L""refresh"") {\n+      std::wstringstream ws;\n+      ws << get_all_settings();\n+      if (current_settings_ipc != NULL) {\n+        current_settings_ipc->send(ws.str());\n+      }\n+    } else if (base_element.first == L""action"") {\n+      dispatch_json_action_to_module(base_element.second);\n+    }\n+  }\n+  return;\n+}\n+\n+void dispatch_received_json_callback(PVOID data) {\n+  std::wstring* msg = (std::wstring*)data;\n+  dispatch_received_json(*msg);\n+  delete msg;\n+}\n+\n+void receive_json_send_to_main_thread(const std::wstring &msg) {\n+  std::wstring* copy = new std::wstring(msg);\n+  dispatch_run_on_main_ui_thread(dispatch_received_json_callback, copy);\n+}\n+\n+DWORD g_settings_process_id = 0;\n+\n+void run_settings_window() {\n+  STARTUPINFO startup_info = { sizeof(startup_info) };\n+  PROCESS_INFORMATION process_info = { 0 };\n+  HANDLE process = NULL;\n+  HANDLE hToken = NULL;\n+  STARTUPINFOEX siex = { 0 };\n+  PPROC_THREAD_ATTRIBUTE_LIST pptal = NULL;\n+  WCHAR executable_path[MAX_PATH];\n+  GetModuleFileName(NULL, executable_path, MAX_PATH);\n+  PathRemoveFileSpec(executable_path);\n+  wcscat_s(executable_path, L""\\\\PowerToysSettings.exe"");\n+  WCHAR executable_args[MAX_PATH * 3];\n+  // Generate unique names for the pipes, if getting a UUID is possible\n+  std::wstring powertoys_pipe_name(L""\\\\\\\\.\\\\pipe\\\\powertoys_runner_"");\n+  std::wstring settings_pipe_name(L""\\\\\\\\.\\\\pipe\\\\powertoys_settings_"");\n+  SIZE_T size = 0;\n+  UUID temp_uuid;\n+  UuidCreate(&temp_uuid);\n+  wchar_t* uuid_chars;\n+  UuidToString(&temp_uuid, (RPC_WSTR*)&uuid_chars);\n+  if (uuid_chars != NULL) {\n+    powertoys_pipe_name += std::wstring(uuid_chars);\n+    settings_pipe_name += std::wstring(uuid_chars);\n+    RpcStringFree((RPC_WSTR*)&uuid_chars);\n+    uuid_chars = NULL;\n+  }\n+  DWORD powertoys_pid = GetCurrentProcessId();\n+  // Arguments for calling the settings executable:\n+  // C:\\powertoys_path\\PowerToysSettings.exe powertoys_pipe settings_pipe powertoys_pid\n+  // powertoys_pipe - PowerToys pipe server.\n+  // settings_pipe - Settings pipe server.\n+  // powertoys_pid - PowerToys process pid.\n+  wcscpy_s(executable_args, L""\\"""");\n+  wcscat_s(executable_args, executable_path);\n+  wcscat_s(executable_args, L""\\"""");\n+  wcscat_s(executable_args, L"" "");\n+  wcscat_s(executable_args, powertoys_pipe_name.c_str());\n+  wcscat_s(executable_args, L"" "");\n+  wcscat_s(executable_args, settings_pipe_name.c_str());\n+  wcscat_s(executable_args, L"" "");\n+  wcscat_s(executable_args, std::to_wstring(powertoys_pid).c_str());\n+\n+  // Run the Settings process with non-elevated privileges\n+\n+  HWND hwnd = GetShellWindow();\n+  if (!hwnd) {\n+    goto LExit;\n+  }\n+  DWORD pid;\n+  GetWindowThreadProcessId(hwnd, &pid);\n+\n+  process = OpenProcess(PROCESS_CREATE_PROCESS, FALSE, pid);\n+  if (!process) {\n+    goto LExit;\n+  }\n+\n+  InitializeProcThreadAttributeList(nullptr, 1, 0, &size);\n+  pptal = (PPROC_THREAD_ATTRIBUTE_LIST)new char[size];\n+  if (!pptal) {\n+    goto LExit;\n+  }\n+\n+  if (!InitializeProcThreadAttributeList(pptal, 1, 0, &size)) {\n+    goto LExit;\n+  }\n+\n+  if (!UpdateProcThreadAttribute(pptal,\n+      0,\n+      PROC_THREAD_ATTRIBUTE_PARENT_PROCESS,\n+      &process,\n+      sizeof(process),\n+      nullptr,\n+      nullptr)) {\n+    goto LExit;\n+  }\n+\n+  siex.lpAttributeList = pptal;\n+  siex.StartupInfo.cb = sizeof(siex);\n+\n+  if (!CreateProcessW(executable_path,\n+      executable_args,\n+      nullptr,\n+      nullptr,\n+      FALSE,\n+      EXTENDED_STARTUPINFO_PRESENT,\n+      nullptr,\n+      nullptr,\n+      &siex.StartupInfo,\n+      &process_info)) {\n+    goto LExit;\n+  }\n+\n+  if (!OpenProcessToken(GetCurrentProcess(), TOKEN_QUERY, &hToken)) {\n+    goto LExit;\n+  }\n+  current_settings_ipc = new TwoWayPipeMessageIPC(powertoys_pipe_name, settings_pipe_name, receive_json_send_to_main_thread);\n+  current_settings_ipc->start(hToken);\n+  g_settings_process_id = process_info.dwProcessId;\n+\n+  WaitForSingleObject(process_info.hProcess, INFINITE);\n+  if (WaitForSingleObject(process_info.hProcess, INFINITE) != WAIT_OBJECT_0) {\n+    show_last_error_message(L""Couldn\'t wait on the Settings Window to close."", GetLastError());\n+  }\n+\n+LExit:\n+\n+  if (process_info.hProcess) {\n+    CloseHandle(process_info.hProcess);\n+  }\n+\n+  if (process_info.hThread) {\n+    CloseHandle(process_info.hThread);\n+  }\n+\n+  if (pptal) {\n+    delete[](char*)pptal;\n+  }\n+\n+  if (process) {\n+    CloseHandle(process);\n+  }\n+\n+  if (current_settings_ipc) {\n+    current_settings_ipc->end();\n+    delete current_settings_ipc;\n+    current_settings_ipc = NULL;\n+  }\n+\n+  if (hToken) {\n+    CloseHandle(hToken);\n+  }\n+\n+  g_settings_process_id = 0;\n+}\n+\n+void bring_settings_to_front() {\n+\n+  auto callback = [](HWND hwnd, LPARAM data) -> BOOL\n+  {\n+    DWORD processId;\n+    if (GetWindowThreadProcessId(hwnd, &processId) && processId == g_settings_process_id) {\n+      ShowWindow(hwnd, SW_NORMAL);\n+      SetForegroundWindow(hwnd);\n+      return FALSE;\n+    }\n+\n+    return TRUE;\n+  };\n+\n+  EnumWindows(callback, 0);\n+}\n+\n+void open_settings_window() {\n+  if (g_settings_process_id != 0) {\n+    bring_settings_to_front();\n+  } else {\n+    std::thread(run_settings_window).detach();\n+  }\n+}'}, {'Name': 'src/runner/settings_window.h', 'Line Additions': 2, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,2 @@\n+#pragma once\n+void open_settings_window();'}, {'Name': 'src/runner/svgs/0.svg', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""53px"" height=""52px"" viewBox=""0 0 53 52"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>0</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""Artboard"" transform=""translate(-7.000000, -159.000000)"">\n+            <g id=""0"" transform=""translate(7.000000, 159.000000)"">\n+                <rect id=""Rectangle"" fill=""#000000"" x=""7"" y=""6"" width=""40"" height=""40""></rect>\n+                <g id=""left"" transform=""translate(0.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""bottom"" transform=""translate(15.000000, 28.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""right"" transform=""translate(29.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""top"" transform=""translate(16.000000, 0.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(11.311985, 12.000000) rotate(-314.000000) translate(-11.311985, -12.000000) "" x=""3.31198537"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <path d=""M26.5,31.1376953 C24.166655,31.1376953 23,29.4993653 23,26.2226562 C23,24.522778 23.3155893,23.2273808 23.9467773,22.3364258 C24.5779654,21.4454708 25.4928325,21 26.6914062,21 C28.9700635,21 30.109375,22.6656734 30.109375,25.9970703 C30.109375,27.6559328 29.798343,28.9274044 29.1762695,29.8115234 C28.5541961,30.6956424 27.6621152,31.1376953 26.5,31.1376953 Z M26.5957031,22.6474609 C25.6614537,22.6474609 25.1943359,23.8209518 25.1943359,26.1679688 C25.1943359,28.3782663 25.6523392,29.4833984 26.5683594,29.4833984 C27.461593,29.4833984 27.9082031,28.3440869 27.9082031,26.0654297 C27.9082031,23.7867725 27.4707075,22.6474609 26.5957031,22.6474609 Z"" fill=""#FFFFFF"" fill-rule=""nonzero""></path>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/1.svg', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""53px"" height=""52px"" viewBox=""0 0 53 52"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>1</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""Artboard"" transform=""translate(-67.000000, -159.000000)"">\n+            <g id=""1"" transform=""translate(67.000000, 159.000000)"">\n+                <rect id=""Rectangle"" fill=""#000000"" x=""7"" y=""6"" width=""40"" height=""40""></rect>\n+                <g id=""left"" transform=""translate(0.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""bottom"" transform=""translate(15.000000, 28.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""right"" transform=""translate(29.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""top"" transform=""translate(16.000000, 0.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(11.311985, 12.000000) rotate(-314.000000) translate(-11.311985, -12.000000) "" x=""3.31198537"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <polygon fill=""#FFFFFF"" fill-rule=""nonzero"" points=""30.2548828 30.9667969 24.0546875 30.9667969 24.0546875 29.2578125 26.0849609 29.2578125 26.0849609 23.1533203 24 23.6044922 24 21.8544922 28.2382812 21 28.2382812 29.2578125 30.2548828 29.2578125""></polygon>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/2.svg', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""53px"" height=""52px"" viewBox=""0 0 53 52"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>2</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""Artboard"" transform=""translate(-127.000000, -159.000000)"">\n+            <g id=""2"" transform=""translate(127.000000, 159.000000)"">\n+                <rect id=""Rectangle"" fill=""#000000"" x=""7"" y=""6"" width=""40"" height=""40""></rect>\n+                <g id=""left"" transform=""translate(0.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""bottom"" transform=""translate(15.000000, 28.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""right"" transform=""translate(29.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""top"" transform=""translate(16.000000, 0.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(11.311985, 12.000000) rotate(-314.000000) translate(-11.311985, -12.000000) "" x=""3.31198537"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <path d=""M26.4746094,29.1347656 L26.4746094,29.1757812 L30.453125,29.1757812 L30.453125,30.9667969 L24,30.9667969 L24,29.2851562 L26.8095703,26.5986328 C27.3746773,26.0563124 27.772297,25.6017271 28.0024414,25.2348633 C28.2325858,24.8679995 28.3476562,24.4817729 28.3476562,24.0761719 C28.3476562,23.1738236 27.8623095,22.7226562 26.8916016,22.7226562 C26.0484984,22.7226562 25.2418658,23.0576138 24.4716797,23.7275391 L24.4716797,21.8271484 C25.3238975,21.2757134 26.2854764,21 27.3564453,21 C28.3590545,21 29.1417615,21.2517878 29.7045898,21.7553711 C30.2674182,22.2589543 30.5488281,22.9391233 30.5488281,23.7958984 C30.5488281,24.9397844 29.8629626,26.1223897 28.4912109,27.34375 L26.4746094,29.1347656 Z"" fill=""#FFFFFF"" fill-rule=""nonzero""></path>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/3.svg', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""53px"" height=""52px"" viewBox=""0 0 53 52"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>3</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""Artboard"" transform=""translate(-187.000000, -159.000000)"">\n+            <g id=""3"" transform=""translate(187.000000, 159.000000)"">\n+                <rect id=""Rectangle"" fill=""#000000"" x=""7"" y=""6"" width=""40"" height=""40""></rect>\n+                <g id=""left"" transform=""translate(0.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""bottom"" transform=""translate(15.000000, 28.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""right"" transform=""translate(29.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""top"" transform=""translate(16.000000, 0.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(11.311985, 12.000000) rotate(-314.000000) translate(-11.311985, -12.000000) "" x=""3.31198537"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <path d=""M24,30.6455078 L24,28.765625 C24.6562533,29.244143 25.4218706,29.4833984 26.296875,29.4833984 C26.84831,29.4833984 27.2778305,29.36491 27.5854492,29.1279297 C27.8930679,28.8909493 28.046875,28.560549 28.046875,28.1367188 C28.046875,27.6992166 27.85661,27.3619804 27.4760742,27.125 C27.0955385,26.8880196 26.5725945,26.7695312 25.9072266,26.7695312 L25.0253906,26.7695312 L25.0253906,25.1152344 L25.8388672,25.1152344 C27.1149152,25.1152344 27.7529297,24.6914105 27.7529297,23.84375 C27.7529297,23.04622 27.2630257,22.6474609 26.2832031,22.6474609 C25.6269498,22.6474609 24.9889354,22.8593729 24.3691406,23.2832031 L24.3691406,21.5195312 C25.0572951,21.1731754 25.8593704,21 26.7753906,21 C27.7779998,21 28.5584282,21.2255837 29.1166992,21.6767578 C29.6749702,22.1279319 29.9541016,22.7135381 29.9541016,23.4335938 C29.9541016,24.7141991 29.304694,25.5162744 28.0058594,25.8398438 L28.0058594,25.8740234 C28.6985712,25.9606124 29.2454407,26.2124003 29.6464844,26.6293945 C30.047528,27.0463888 30.2480469,27.5579397 30.2480469,28.1640625 C30.2480469,29.0800827 29.9130893,29.8046848 29.2431641,30.3378906 C28.5732388,30.8710964 27.6481179,31.1376953 26.4677734,31.1376953 C25.4560496,31.1376953 24.6334667,30.9736345 24,30.6455078 Z"" fill=""#FFFFFF"" fill-rule=""nonzero""></path>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/4.svg', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""53px"" height=""52px"" viewBox=""0 0 53 52"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>4</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""Artboard"" transform=""translate(-247.000000, -159.000000)"">\n+            <g id=""4"" transform=""translate(247.000000, 159.000000)"">\n+                <rect id=""Rectangle"" fill=""#000000"" x=""7"" y=""6"" width=""40"" height=""40""></rect>\n+                <g id=""left"" transform=""translate(0.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""bottom"" transform=""translate(15.000000, 28.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""right"" transform=""translate(29.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""top"" transform=""translate(16.000000, 0.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(11.311985, 12.000000) rotate(-314.000000) translate(-11.311985, -12.000000) "" x=""3.31198537"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <path d=""M30.4169922,28.7177734 L29.2412109,28.7177734 L29.2412109,30.8027344 L27.2724609,30.8027344 L27.2724609,28.7177734 L23,28.7177734 L23,27.34375 L27.1152344,21 L29.2412109,21 L29.2412109,27.1796875 L30.4169922,27.1796875 L30.4169922,28.7177734 Z M27.2998047,23.1601562 L27.2587891,23.1601562 C27.1949867,23.3242196 27.071941,23.5794254 26.8896484,23.9257812 L24.7910156,27.1796875 L27.2724609,27.1796875 L27.2724609,24.0966797 C27.2724609,23.8232408 27.2815754,23.5110695 27.2998047,23.1601562 Z"" fill=""#FFFFFF"" fill-rule=""nonzero""></path>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/5.svg', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""53px"" height=""52px"" viewBox=""0 0 53 52"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>5</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""Artboard"" transform=""translate(-307.000000, -159.000000)"">\n+            <g id=""5"" transform=""translate(307.000000, 159.000000)"">\n+                <rect id=""Rectangle"" fill=""#000000"" x=""7"" y=""6"" width=""40"" height=""40""></rect>\n+                <g id=""left"" transform=""translate(0.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""bottom"" transform=""translate(15.000000, 28.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""right"" transform=""translate(29.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""top"" transform=""translate(16.000000, 0.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(11.311985, 12.000000) rotate(-314.000000) translate(-11.311985, -12.000000) "" x=""3.31198537"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <path d=""M24,30.5498047 L24,28.7041016 C24.6699252,29.1142599 25.3831342,29.3193359 26.1396484,29.3193359 C26.7093127,29.3193359 27.1547835,29.1837579 27.4760742,28.9125977 C27.7973649,28.6414374 27.9580078,28.2734398 27.9580078,27.8085938 C27.9580078,26.8378858 27.2721423,26.3525391 25.9003906,26.3525391 C25.4537738,26.3525391 24.9137401,26.3935543 24.2802734,26.4755859 L24.2802734,21 L29.7080078,21 L29.7080078,22.7636719 L26.1259766,22.7636719 L26.1259766,24.7255859 C26.4130874,24.6982421 26.6842435,24.6845703 26.9394531,24.6845703 C27.9466196,24.6845703 28.7350232,24.9488906 29.3046875,25.4775391 C29.8743518,26.0061875 30.1591797,26.7171179 30.1591797,27.6103516 C30.1591797,28.5992888 29.8196649,29.4070607 29.140625,30.0336914 C28.4615851,30.6603221 27.5410214,30.9736328 26.3789062,30.9736328 C25.4355422,30.9736328 24.6425813,30.8323582 24,30.5498047 Z"" fill=""#FFFFFF"" fill-rule=""nonzero""></path>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/6.svg', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""53px"" height=""52px"" viewBox=""0 0 53 52"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>6</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""Artboard"" transform=""translate(-367.000000, -159.000000)"">\n+            <g id=""6"" transform=""translate(367.000000, 159.000000)"">\n+                <rect id=""Rectangle"" fill=""#000000"" x=""7"" y=""6"" width=""40"" height=""40""></rect>\n+                <g id=""left"" transform=""translate(0.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""bottom"" transform=""translate(15.000000, 28.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""right"" transform=""translate(29.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""top"" transform=""translate(16.000000, 0.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(11.311985, 12.000000) rotate(-314.000000) translate(-11.311985, -12.000000) "" x=""3.31198537"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <path d=""M30.2070312,21.2666016 L30.2070312,23.0712891 C29.710284,22.7887356 29.1679717,22.6474609 28.5800781,22.6474609 C27.8554651,22.6474609 27.2709983,22.9243136 26.8266602,23.4780273 C26.382322,24.031741 26.1510418,24.7734329 26.1328125,25.703125 L26.1738281,25.703125 C26.6432315,25.0104132 27.3290971,24.6640625 28.2314453,24.6640625 C29.0517619,24.6640625 29.7023088,24.9420545 30.1831055,25.4980469 C30.6639021,26.0540392 30.9042969,26.7900345 30.9042969,27.7060547 C30.9042969,28.6904346 30.5852896,29.5084603 29.9472656,30.1601562 C29.3092416,30.8118522 28.4980518,31.1376953 27.5136719,31.1376953 C26.4108018,31.1376953 25.5494823,30.7389363 24.9296875,29.9414062 C24.3098927,29.1438762 24,28.0250723 24,26.5849609 C24,24.88964 24.398759,23.5349986 25.1962891,22.5209961 C25.9938191,21.5069936 27.076165,21 28.4433594,21 C29.1998736,21 29.7877583,21.0888663 30.2070312,21.2666016 Z M27.5,26.2636719 C27.1035136,26.2636719 26.7879244,26.4026679 26.5532227,26.6806641 C26.318521,26.9586602 26.2011719,27.3141254 26.2011719,27.7470703 C26.2011719,28.2255883 26.3207996,28.6346012 26.5600586,28.9741211 C26.7993176,29.313641 27.1171855,29.4833984 27.5136719,29.4833984 C27.9010436,29.4833984 28.2109363,29.33187 28.4433594,29.0288086 C28.6757824,28.7257472 28.7919922,28.3304061 28.7919922,27.8427734 C28.7919922,26.7900338 28.3613324,26.2636719 27.5,26.2636719 Z"" fill=""#FFFFFF"" fill-rule=""nonzero""></path>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/7.svg', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""53px"" height=""52px"" viewBox=""0 0 53 52"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>7</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""Artboard"" transform=""translate(-427.000000, -159.000000)"">\n+            <g id=""7"" transform=""translate(427.000000, 159.000000)"">\n+                <rect id=""Rectangle"" fill=""#000000"" x=""7"" y=""6"" width=""40"" height=""40""></rect>\n+                <g id=""left"" transform=""translate(0.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""bottom"" transform=""translate(15.000000, 28.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""right"" transform=""translate(29.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""top"" transform=""translate(16.000000, 0.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(11.311985, 12.000000) rotate(-314.000000) translate(-11.311985, -12.000000) "" x=""3.31198537"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <polygon fill=""#FFFFFF"" fill-rule=""nonzero"" points=""30.8222656 21.9980469 27.3632812 30.8027344 25.0800781 30.8027344 28.5664062 22.7636719 24 22.7636719 24 21 30.8222656 21""></polygon>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/8.svg', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""53px"" height=""52px"" viewBox=""0 0 53 52"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>8</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""Artboard"" transform=""translate(-487.000000, -159.000000)"">\n+            <g id=""8"" transform=""translate(487.000000, 159.000000)"">\n+                <rect id=""Rectangle"" fill=""#000000"" x=""7"" y=""6"" width=""40"" height=""40""></rect>\n+                <g id=""left"" transform=""translate(0.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""bottom"" transform=""translate(15.000000, 28.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""right"" transform=""translate(29.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""top"" transform=""translate(16.000000, 0.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(11.311985, 12.000000) rotate(-314.000000) translate(-11.311985, -12.000000) "" x=""3.31198537"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <path d=""M25.9755859,25.8740234 L25.9755859,25.8398438 C24.8544866,25.379555 24.2939453,24.6344453 24.2939453,23.6044922 C24.2939453,22.847978 24.5947236,22.2247746 25.1962891,21.7348633 C25.7978546,21.244952 26.574865,21 27.5273438,21 C28.4980517,21 29.2727836,21.2290016 29.8515625,21.6870117 C30.4303414,22.1450218 30.7197266,22.7363245 30.7197266,23.4609375 C30.7197266,24.5319064 30.0999411,25.32031 28.8603516,25.8261719 L28.8603516,25.8535156 C29.5257195,26.0494801 30.0418276,26.3719053 30.4086914,26.8208008 C30.7755552,27.2696963 30.9589844,27.7744113 30.9589844,28.3349609 C30.9589844,29.2008507 30.6388378,29.8844376 29.9985352,30.3857422 C29.3582325,30.8870468 28.4638729,31.1376953 27.3154297,31.1376953 C26.3219351,31.1376953 25.5209991,30.8927433 24.9125977,30.402832 C24.3041962,29.9129207 24,29.2646525 24,28.4580078 C24,27.286778 24.6585221,26.4254585 25.9755859,25.8740234 Z M28.6894531,23.6455078 C28.6894531,23.3128239 28.5834972,23.0473643 28.371582,22.8491211 C28.1596669,22.6508779 27.878257,22.5517578 27.5273438,22.5517578 C27.1855452,22.5517578 26.9018566,22.6554352 26.6762695,22.862793 C26.4506825,23.0701508 26.3378906,23.3356104 26.3378906,23.6591797 C26.3378906,24.2698598 26.7298138,24.7324203 27.5136719,25.046875 C28.29753,24.7233057 28.6894531,24.2561879 28.6894531,23.6455078 Z M27.4179688,26.6943359 C26.5019485,27.0543638 26.0439453,27.6057906 26.0439453,28.3486328 C26.0439453,28.7041033 26.1840806,28.9980457 26.4643555,29.2304688 C26.7446303,29.4628918 27.0852845,29.5791016 27.4863281,29.5791016 C27.919273,29.5791016 28.2679023,29.4651704 28.5322266,29.2373047 C28.7965508,29.009439 28.9287109,28.7086607 28.9287109,28.3349609 C28.9287109,27.5875614 28.4251352,27.0406918 27.4179688,26.6943359 Z"" fill=""#FFFFFF"" fill-rule=""nonzero""></path>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/9.svg', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""53px"" height=""52px"" viewBox=""0 0 53 52"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>9</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""Artboard"" transform=""translate(-547.000000, -159.000000)"">\n+            <g id=""9"" transform=""translate(547.000000, 159.000000)"">\n+                <rect id=""Rectangle"" fill=""#000000"" x=""7"" y=""6"" width=""40"" height=""40""></rect>\n+                <g id=""left"" transform=""translate(0.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""bottom"" transform=""translate(15.000000, 28.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""right"" transform=""translate(29.000000, 14.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(12.000000, 12.000000) rotate(-314.000000) translate(-12.000000, -12.000000) "" x=""4"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <g id=""top"" transform=""translate(16.000000, 0.000000)"" fill=""#000000"">\n+                    <rect id=""carat"" transform=""translate(11.311985, 12.000000) rotate(-314.000000) translate(-11.311985, -12.000000) "" x=""3.31198537"" y=""4"" width=""16"" height=""16""></rect>\n+                </g>\n+                <path d=""M24.5605469,30.7548828 L24.5605469,28.9775391 C25.0755234,29.3147803 25.6953089,29.4833984 26.4199219,29.4833984 C27.1764361,29.4833984 27.7609029,29.2270533 28.1733398,28.7143555 C28.5857768,28.2016576 28.7942708,27.4736375 28.7988281,26.5302734 L28.7578125,26.5166016 C28.3248676,27.1591829 27.6663456,27.4804688 26.7822266,27.4804688 C25.9801392,27.4804688 25.3159206,27.2001981 24.7895508,26.6396484 C24.263181,26.0790988 24,25.352218 24,24.4589844 C24,23.4153594 24.3212858,22.5779654 24.9638672,21.9467773 C25.6064485,21.3155893 26.4381459,21 27.4589844,21 C28.5071667,21 29.342282,21.3964804 29.9643555,22.1894531 C30.5864289,22.9824258 30.8974609,24.1171801 30.8974609,25.59375 C30.8974609,27.3437587 30.5226274,28.705236 29.7729492,29.6782227 C29.023271,30.6512093 27.9762437,31.1376953 26.6318359,31.1376953 C25.8343059,31.1376953 25.1438831,31.0100924 24.5605469,30.7548828 Z M27.3974609,22.6474609 C27.0237612,22.6474609 26.716147,22.7989894 26.4746094,23.1020508 C26.2330717,23.4051122 26.1123047,23.795896 26.1123047,24.2744141 C26.1123047,24.7711613 26.2319324,25.1619452 26.4711914,25.4467773 C26.7104504,25.7316095 27.0351542,25.8740234 27.4453125,25.8740234 C27.8190123,25.8740234 28.1243478,25.7384454 28.3613281,25.4672852 C28.5983085,25.1961249 28.7167969,24.8554708 28.7167969,24.4453125 C28.7167969,23.930336 28.5926119,23.5019548 28.3442383,23.1601562 C28.0958646,22.8183577 27.7802754,22.6474609 27.3974609,22.6474609 Z"" fill=""#FFFFFF"" fill-rule=""nonzero""></path>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/icon.ico', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/runner/svgs/no_active_window.svg', 'Line Additions': 20, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,20 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""158px"" height=""39px"" viewBox=""0 0 158 39"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 53.2 (72643) - https://sketchapp.com -->\n+    <title>Group 7</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Devices"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""1.1-No-Active-Window"" transform=""translate(-213.000000, -236.000000)"">\n+            <g id=""Group-5"" transform=""translate(60.000000, 110.000000)"">\n+                <g id=""Group-1"">\n+                    <g id=""windows_bg"">\n+                        <g id=""Group-7"" transform=""translate(153.000000, 126.000000)"">\n+                            <rect id=""Rectangle"" fill=""#FFFFFF"" opacity=""0.8"" x=""0"" y=""0"" width=""158"" height=""39"" rx=""3""></rect>\n+                            <path d=""M27.4667969,24.1035156 L25.9580078,24.1035156 L20.5527344,15.7319336 C20.4160149,15.5219716 20.3037114,15.3022472 20.2158203,15.0727539 L20.171875,15.0727539 C20.2109377,15.2973644 20.2304687,15.7783166 20.2304687,16.515625 L20.2304687,24.1035156 L19,24.1035156 L19,13.6005859 L20.5966797,13.6005859 L25.8554687,21.840332 C26.0751964,22.1821306 26.2167966,22.4165033 26.2802734,22.543457 L26.3095703,22.543457 C26.2607419,22.2407211 26.2363281,21.7255896 26.2363281,20.9980469 L26.2363281,13.6005859 L27.4667969,13.6005859 L27.4667969,24.1035156 Z M33.3764788,24.2792969 C32.2680749,24.2792969 31.3830739,23.9289586 30.7214495,23.2282715 C30.0598251,22.5275844 29.7290179,21.5986386 29.7290179,20.4414062 C29.7290179,19.1816343 30.0732527,18.1977574 30.7617327,17.4897461 C31.4502127,16.7817347 32.3803792,16.4277344 33.5522601,16.4277344 C34.6704297,16.4277344 35.5432237,16.7719692 36.1706683,17.4604492 C36.7981128,18.1489292 37.1118304,19.1035095 37.1118304,20.3242188 C37.1118304,21.5205138 36.773699,22.4787562 36.0974261,23.1989746 C35.4211532,23.9191931 34.5141798,24.2792969 33.3764788,24.2792969 Z M33.4643695,17.4384766 C32.6928812,17.4384766 32.0825358,17.7009251 31.6333148,18.2258301 C31.1840938,18.750735 30.9594866,19.4746048 30.9594866,20.3974609 C30.9594866,21.2861373 31.1865352,21.9868138 31.640639,22.4995117 C32.0947428,23.0122096 32.7026469,23.2685547 33.4643695,23.2685547 C34.2407405,23.2685547 34.8376584,23.0170924 35.2551409,22.5141602 C35.6726235,22.011228 35.8813616,21.2959031 35.8813616,20.3681641 C35.8813616,19.4306594 35.6726235,18.7080104 35.2551409,18.2001953 C34.8376584,17.6923803 34.2407405,17.4384766 33.4643695,17.4384766 Z M48.8726006,24.1035156 L47.6714287,24.1035156 L47.6714287,22.9316406 L47.6421318,22.9316406 C47.1196683,23.8300826 46.350633,24.2792969 45.3350029,24.2792969 C44.5879289,24.2792969 44.0032179,24.0815449 43.5808525,23.6860352 C43.1584871,23.2905254 42.9473076,22.7656283 42.9473076,22.1113281 C42.9473076,20.7099539 43.7724947,19.8945324 45.4228935,19.6650391 L47.6714287,19.3500977 C47.6714287,18.0756772 47.1562971,17.4384766 46.1260185,17.4384766 C45.2226937,17.4384766 44.4072722,17.7460907 43.6797295,18.3613281 L43.6797295,17.1308594 C44.4170379,16.662107 45.2666387,16.4277344 46.2285576,16.4277344 C47.9912617,16.4277344 48.8726006,17.3603422 48.8726006,19.2255859 L48.8726006,24.1035156 Z M47.6714287,20.3095703 L45.8623467,20.5585938 C45.3057033,20.6367191 44.8857856,20.7746572 44.602581,20.9724121 C44.3193765,21.170167 44.1777764,21.5205053 44.1777764,22.0234375 C44.1777764,22.3896503 44.3083903,22.6887195 44.5696221,22.9206543 C44.8308538,23.1525891 45.1787507,23.2685547 45.6133232,23.2685547 C46.2090293,23.2685547 46.7009678,23.0598165 47.0891533,22.642334 C47.4773388,22.2248514 47.6714287,21.6962923 47.6714287,21.0566406 L47.6714287,20.3095703 Z M56.4302318,23.7592773 C55.854057,24.1059588 55.1704701,24.2792969 54.3794505,24.2792969 C53.3101092,24.2792969 52.4470807,23.9314 51.7903392,23.2355957 C51.1335976,22.5397914 50.8052318,21.6377009 50.8052318,20.5292969 C50.8052318,19.2939391 51.1592321,18.3015174 51.8672435,17.552002 C52.5752548,16.8024865 53.5200696,16.4277344 54.7017161,16.4277344 C55.3608991,16.4277344 55.941948,16.5498035 56.4448802,16.7939453 L56.4448802,18.0244141 C55.8882368,17.6337871 55.2925396,17.4384766 54.6577708,17.4384766 C53.8911654,17.4384766 53.2625096,17.713132 52.7717845,18.2624512 C52.2810594,18.8117703 52.0357005,19.5331987 52.0357005,20.4267578 C52.0357005,21.3056685 52.2664111,21.9990209 52.7278392,22.5068359 C53.1892673,23.014651 53.8081576,23.2685547 54.5845286,23.2685547 C55.2388288,23.2685547 55.854057,23.0512717 56.4302318,22.6166992 L56.4302318,23.7592773 Z M61.9077848,24.0302734 C61.6245803,24.1865242 61.2510489,24.2646484 60.7871793,24.2646484 C59.4736962,24.2646484 58.8169645,23.5322339 58.8169645,22.0673828 L58.8169645,17.6289062 L57.527902,17.6289062 L57.527902,16.6035156 L58.8169645,16.6035156 L58.8169645,14.7724609 L60.0181364,14.3842773 L60.0181364,16.6035156 L61.9077848,16.6035156 L61.9077848,17.6289062 L60.0181364,17.6289062 L60.0181364,21.8549805 C60.0181364,22.3579127 60.1035847,22.7167958 60.274484,22.9316406 C60.4453833,23.1464854 60.7285836,23.2539062 61.1240934,23.2539062 C61.4268293,23.2539062 61.6880572,23.1708993 61.9077848,23.0048828 L61.9077848,24.0302734 Z M64.309166,14.6992188 C64.0943212,14.6992188 63.9112175,14.6259773 63.7598496,14.4794922 C63.6084816,14.3330071 63.5327988,14.1474621 63.5327988,13.9228516 C63.5327988,13.6982411 63.6084816,13.5114754 63.7598496,13.3625488 C63.9112175,13.2136223 64.0943212,13.1391602 64.309166,13.1391602 C64.5288937,13.1391602 64.7156594,13.2136223 64.8694687,13.3625488 C65.0232781,13.5114754 65.1001816,13.6982411 65.1001816,13.9228516 C65.1001816,14.1376964 65.0232781,14.3208 64.8694687,14.472168 C64.7156594,14.6235359 64.5288937,14.6992188 64.309166,14.6992188 Z M64.8951035,24.1035156 L63.6939316,24.1035156 L63.6939316,16.6035156 L64.8951035,16.6035156 L64.8951035,24.1035156 Z M73.4048831,16.6035156 L70.4166019,24.1035156 L69.2374026,24.1035156 L66.3956058,16.6035156 L67.7139651,16.6035156 L69.618262,22.0527344 C69.7598643,22.453127 69.847754,22.8022446 69.8819339,23.1000977 L69.9112308,23.1000977 C69.9600591,22.7241192 70.0381834,22.3847671 70.1456058,22.0820312 L72.1377933,16.6035156 L73.4048831,16.6035156 Z M80.8160299,20.6538086 L75.5206198,20.6538086 C75.5401511,21.4887737 75.7647582,22.1332985 76.1944479,22.5874023 C76.6241375,23.0415062 77.2149519,23.2685547 77.9669088,23.2685547 C78.8116396,23.2685547 79.587999,22.9902372 80.2960104,22.4335938 L80.2960104,23.5615234 C79.6368274,24.0400415 78.7652541,24.2792969 77.6812643,24.2792969 C76.6216887,24.2792969 75.7891775,23.9387241 75.1837057,23.2575684 C74.5782339,22.5764126 74.2755026,21.6181702 74.2755026,20.3828125 C74.2755026,19.2158145 74.6063098,18.2648963 75.2679342,17.5300293 C75.9295586,16.7951623 76.7510836,16.4277344 77.7325338,16.4277344 C78.713984,16.4277344 79.4732538,16.745114 80.0103659,17.3798828 C80.5474779,18.0146516 80.8160299,18.8959905 80.8160299,20.0239258 L80.8160299,20.6538086 Z M79.5855612,19.6357422 C79.5806783,18.9423793 79.4134437,18.402834 79.0838522,18.0170898 C78.7542607,17.6313457 78.2965016,17.4384766 77.7105612,17.4384766 C77.1441521,17.4384766 76.6631999,17.6411113 76.2676901,18.0463867 C75.8721803,18.4516622 75.6280421,18.981442 75.5352682,19.6357422 L79.5855612,19.6357422 Z M96.5538509,16.6035156 L94.3053157,24.1035156 L93.0601985,24.1035156 L91.5147884,18.7348633 C91.4561943,18.5297841 91.4171322,18.2978529 91.3976009,18.0390625 L91.368304,18.0390625 C91.3536555,18.2148446 91.3023865,18.4418931 91.2144954,18.7202148 L89.5372493,24.1035156 L88.3360774,24.1035156 L86.0655696,16.6035156 L87.3253352,16.6035156 L88.8780696,22.2431641 C88.926898,22.4140634 88.9610773,22.6386705 88.9806087,22.9169922 L89.0392024,22.9169922 C89.0538509,22.7021474 89.0977958,22.4726575 89.1710384,22.2285156 L90.899554,16.6035156 L91.9981868,16.6035156 L93.5509212,22.2578125 C93.5997496,22.4384775 93.6363703,22.6630846 93.6607845,22.9316406 L93.7193782,22.9316406 C93.7291439,22.74121 93.7706474,22.5166029 93.8438899,22.2578125 L95.3673274,16.6035156 L96.5538509,16.6035156 Z M98.7428297,14.6992188 C98.5279849,14.6992188 98.3448813,14.6259773 98.1935133,14.4794922 C98.0421454,14.3330071 97.9664625,14.1474621 97.9664625,13.9228516 C97.9664625,13.6982411 98.0421454,13.5114754 98.1935133,13.3625488 C98.3448813,13.2136223 98.5279849,13.1391602 98.7428297,13.1391602 C98.9625574,13.1391602 99.1493231,13.2136223 99.3031324,13.3625488 C99.4569418,13.5114754 99.5338453,13.6982411 99.5338453,13.9228516 C99.5338453,14.1376964 99.4569418,14.3208 99.3031324,14.472168 C99.1493231,14.6235359 98.9625574,14.6992188 98.7428297,14.6992188 Z M99.3287672,24.1035156 L98.1275953,24.1035156 L98.1275953,16.6035156 L99.3287672,16.6035156 L99.3287672,24.1035156 Z M108.168137,24.1035156 L106.966965,24.1035156 L106.966965,19.8261719 C106.966965,18.234367 106.385916,17.4384766 105.223801,17.4384766 C104.623212,17.4384766 104.126391,17.6643044 103.733322,18.1159668 C103.340254,18.5676292 103.143723,19.1376919 103.143723,19.8261719 L103.143723,24.1035156 L101.942551,24.1035156 L101.942551,16.6035156 L103.143723,16.6035156 L103.143723,17.8486328 L103.173019,17.8486328 C103.739429,16.9013625 104.559733,16.4277344 105.633957,16.4277344 C106.454274,16.4277344 107.081709,16.6926243 107.516281,17.2224121 C107.950854,17.7521999 108.168137,18.5175731 108.168137,19.5185547 L108.168137,24.1035156 Z M117.01483,24.1035156 L115.813658,24.1035156 L115.813658,22.8291016 L115.784362,22.8291016 C115.227718,23.7959033 114.368352,24.2792969 113.206237,24.2792969 C112.263849,24.2792969 111.510683,23.9436069 110.946715,23.2722168 C110.382747,22.6008267 110.100768,21.6865292 110.100768,20.5292969 C110.100768,19.2890563 110.413265,18.2954139 111.038268,17.5483398 C111.663271,16.8012658 112.495782,16.4277344 113.535826,16.4277344 C114.566105,16.4277344 115.315609,16.8330038 115.784362,17.6435547 L115.813658,17.6435547 L115.813658,13 L117.01483,13 L117.01483,24.1035156 Z M115.813658,20.7124023 L115.813658,19.6064453 C115.813658,19.0009735 115.613465,18.4882833 115.213073,18.0683594 C114.81268,17.6484354 114.304872,17.4384766 113.689635,17.4384766 C112.95721,17.4384766 112.381043,17.7070286 111.961119,18.2441406 C111.541195,18.7812527 111.331237,19.5234328 111.331237,20.4707031 C111.331237,21.3349653 111.532651,22.0173315 111.935485,22.5178223 C112.338319,23.018313 112.879085,23.2685547 113.557799,23.2685547 C114.226748,23.2685547 114.769955,23.0268579 115.187438,22.543457 C115.60492,22.0600562 115.813658,21.4497107 115.813658,20.7124023 Z M122.76338,24.2792969 C121.654976,24.2792969 120.769975,23.9289586 120.10835,23.2282715 C119.446726,22.5275844 119.115919,21.5986386 119.115919,20.4414062 C119.115919,19.1816343 119.460153,18.1977574 120.148633,17.4897461 C120.837113,16.7817347 121.76728,16.4277344 122.939161,16.4277344 C124.05733,16.4277344 124.930124,16.7719692 125.557569,17.4604492 C126.185014,18.1489292 126.498731,19.1035095 126.498731,20.3242188 C126.498731,21.5205138 126.1606,22.4787562 125.484327,23.1989746 C124.808054,23.9191931 123.901081,24.2792969 122.76338,24.2792969 Z M122.85127,17.4384766 C122.079782,17.4384766 121.469436,17.7009251 121.020215,18.2258301 C120.570994,18.750735 120.346387,19.4746048 120.346387,20.3974609 C120.346387,21.2861373 120.573436,21.9868138 121.02754,22.4995117 C121.481643,23.0122096 122.089548,23.2685547 122.85127,23.2685547 C123.627641,23.2685547 124.224559,23.0170924 124.642042,22.5141602 C125.059524,22.011228 125.268262,21.2959031 125.268262,20.3681641 C125.268262,19.4306594 125.059524,18.7080104 124.642042,18.2001953 C124.224559,17.6923803 123.627641,17.4384766 122.85127,17.4384766 Z M138.048061,16.6035156 L135.799526,24.1035156 L134.554409,24.1035156 L133.008999,18.7348633 C132.950405,18.5297841 132.911343,18.2978529 132.891811,18.0390625 L132.862515,18.0390625 C132.847866,18.2148446 132.796597,18.4418931 132.708706,18.7202148 L131.03146,24.1035156 L129.830288,24.1035156 L127.55978,16.6035156 L128.819546,16.6035156 L130.37228,22.2431641 C130.421109,22.4140634 130.455288,22.6386705 130.474819,22.9169922 L130.533413,22.9169922 C130.548062,22.7021474 130.592006,22.4726575 130.665249,22.2285156 L132.393765,16.6035156 L133.492397,16.6035156 L135.045132,22.2578125 C135.09396,22.4384775 135.130581,22.6630846 135.154995,22.9316406 L135.213589,22.9316406 C135.223354,22.74121 135.264858,22.5166029 135.338101,22.2578125 L136.861538,16.6035156 L138.048061,16.6035156 Z"" id=""Noactivewindow"" fill=""#222222"" fill-rule=""nonzero""></path>\n+                        </g>\n+                    </g>\n+                </g>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/runner/svgs/overlay.svg', 'Line Additions': 207, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/runner/svgs/overlay_portrait.svg', 'Line Additions': 209, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/runner/trace.cpp', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+#include ""pch.h""\n+#include ""trace.h""\n+\n+TRACELOGGING_DEFINE_PROVIDER(\n+  g_hProvider,\n+  ""Microsoft.PowerToys"",\n+  // {38e8889b-9731-53f5-e901-e8a7c1753074}\n+  (0x38e8889b, 0x9731, 0x53f5, 0xe9, 0x01, 0xe8, 0xa7, 0xc1, 0x75, 0x30, 0x74),\n+  TraceLoggingOptionProjectTelemetry());\n+\n+void Trace::RegisterProvider() {\n+  TraceLoggingRegister(g_hProvider);\n+}\n+\n+void Trace::UnregisterProvider() {\n+  TraceLoggingUnregister(g_hProvider);\n+}\n+\n+void Trace::EventLaunch() {\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""Runner::Event::Launch"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+}'}, {'Name': 'src/runner/trace.h', 'Line Additions': 8, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,8 @@\n+#pragma once\n+\n+class Trace {\n+public:\n+  static void RegisterProvider();\n+  static void UnregisterProvider();\n+  static void EventLaunch();\n+};'}, {'Name': 'src/runner/tray_icon.cpp', 'Line Additions': 158, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,158 @@\n+#include ""pch.h""\n+#include ""resource.h""\n+#include ""settings_window.h""\n+#include ""tray_icon.h""\n+#include <Windows.h>\n+\n+extern ""C"" IMAGE_DOS_HEADER __ImageBase;\n+\n+HWND tray_icon_hwnd = NULL;\n+\n+// Message code that Windows will use for tray icon notifications.\n+UINT wm_icon_notify = 0;\n+\n+// Contains the Windows Message for taskbar creation.\n+UINT wm_taskbar_restart = 0;\n+UINT wm_run_on_main_ui_thread = 0;\n+\n+NOTIFYICONDATAW tray_icon_data;\n+static bool about_box_shown = false;\n+\n+HMENU h_menu = nullptr;\n+HMENU h_sub_menu = nullptr;\n+\n+// Struct to fill with callback and the data. The window_proc is responsible for cleaning it.\n+struct run_on_main_ui_thread_msg {\n+  main_loop_callback_function _callback;\n+  PVOID data;\n+};\n+\n+bool dispatch_run_on_main_ui_thread(main_loop_callback_function _callback, PVOID data) {\n+  if (tray_icon_hwnd == NULL) {\n+    return false;\n+  }\n+  struct run_on_main_ui_thread_msg *wnd_msg = new struct run_on_main_ui_thread_msg();\n+  wnd_msg->_callback = _callback;\n+  wnd_msg->data = data;\n+\n+  PostMessage(tray_icon_hwnd, wm_run_on_main_ui_thread, 0, (LPARAM)wnd_msg);\n+\n+  return true;\n+}\n+\n+LRESULT __stdcall tray_icon_window_proc(HWND window, UINT message, WPARAM wparam, LPARAM lparam) {\n+  switch (message) {\n+  case WM_CREATE:\n+    if (wm_taskbar_restart == 0) {\n+      tray_icon_hwnd = window;\n+      wm_taskbar_restart = RegisterWindowMessageW(L""TaskbarCreated"");\n+      wm_run_on_main_ui_thread = RegisterWindowMessage(L""RunOnMainThreadCallback"");\n+    }\n+    break;\n+  case WM_DESTROY:\n+    Shell_NotifyIcon(NIM_DELETE, &tray_icon_data);\n+    PostQuitMessage(0);\n+    break;\n+  case WM_CLOSE:\n+    DestroyWindow(window);\n+    break;\n+  case WM_COMMAND:\n+    switch(wparam) {\n+      case ID_SETTINGS_MENU_COMMAND:\n+        open_settings_window();\n+        break;\n+      case ID_EXIT_MENU_COMMAND:\n+        if (h_menu) {\n+          DestroyMenu(h_menu);\n+        }\n+        DestroyWindow(window);\n+        break;\n+      case ID_ABOUT_MENU_COMMAND:\n+        if (!about_box_shown) {\n+          about_box_shown = true;\n+          MessageBox(nullptr, L""PowerToys\\nVersion 0.11.0\\n\\xa9 2019 Microsoft Corporation"", L""About PowerToys"", MB_OK);\n+          about_box_shown = false;\n+        }\n+        break;\n+    }\n+    break;\n+  default:\n+    if (message == wm_icon_notify) {\n+      switch(lparam) {\n+        case WM_LBUTTONUP:\n+        {\n+          open_settings_window();\n+          break;\n+        }\n+        case WM_RBUTTONUP:\n+        case WM_CONTEXTMENU:\n+        {\n+          if (!h_menu) {\n+            h_menu = LoadMenu(reinterpret_cast<HINSTANCE>(&__ImageBase), MAKEINTRESOURCE(ID_TRAY_MENU));\n+          }\n+          if (!h_sub_menu) {\n+            h_sub_menu = GetSubMenu(h_menu, 0);\n+          }\n+          POINT mouse_pointer;\n+          GetCursorPos(&mouse_pointer);\n+          SetForegroundWindow(window); // Needed for the context menu to disappear.\n+          TrackPopupMenu(h_sub_menu, TPM_CENTERALIGN|TPM_BOTTOMALIGN, mouse_pointer.x, mouse_pointer.y, 0, window, nullptr);\n+        }\n+        break;\n+      }\n+    } else if (message == wm_run_on_main_ui_thread) {\n+      if (lparam != NULL) {\n+        struct run_on_main_ui_thread_msg *msg = (struct run_on_main_ui_thread_msg *)lparam;\n+        msg->_callback(msg->data);\n+        delete msg;\n+        lparam = NULL;\n+      }\n+      break;\n+    } else if (message == wm_taskbar_restart) {\n+      Shell_NotifyIcon(NIM_ADD, &tray_icon_data);\n+      break;\n+    }\n+  }\n+  return DefWindowProc(window, message, wparam, lparam);\n+}\n+\n+void start_tray_icon() {\n+  auto h_instance = reinterpret_cast<HINSTANCE>(&__ImageBase);\n+  auto icon = LoadIcon(h_instance, MAKEINTRESOURCE(APPICON));\n+  if (icon) {\n+    UINT id_tray_icon = wm_icon_notify = RegisterWindowMessageW(L""WM_PowerToysIconNotify"");\n+\n+    static LPCWSTR class_name = L""PToyTrayIconWindow"";\n+    WNDCLASS wc = {};\n+    wc.hCursor = LoadCursor(nullptr, IDC_ARROW);\n+    wc.hInstance = h_instance;\n+    wc.lpszClassName = class_name;\n+    wc.style = CS_HREDRAW | CS_VREDRAW;\n+    wc.lpfnWndProc = tray_icon_window_proc;\n+    wc.hIcon = icon;\n+    RegisterClass(&wc);\n+    auto hwnd = CreateWindowW(wc.lpszClassName,\n+                              L""PToyTrayIconWindow"",\n+                              WS_OVERLAPPEDWINDOW | WS_POPUP,\n+                              CW_USEDEFAULT,\n+                              CW_USEDEFAULT,\n+                              CW_USEDEFAULT,\n+                              CW_USEDEFAULT,\n+                              nullptr,\n+                              nullptr,\n+                              wc.hInstance,\n+                              nullptr);\n+    WINRT_VERIFY(hwnd);\n+\n+    memset(&tray_icon_data, 0, sizeof(tray_icon_data));\n+    tray_icon_data.cbSize = sizeof(tray_icon_data);\n+    tray_icon_data.hIcon = icon;\n+    tray_icon_data.hWnd = hwnd;\n+    tray_icon_data.uID = id_tray_icon;\n+    tray_icon_data.uCallbackMessage = wm_icon_notify;\n+    wcscpy_s(tray_icon_data.szTip, sizeof(tray_icon_data.szTip) / sizeof(WCHAR), L""PowerToys"");\n+    tray_icon_data.uFlags = NIF_ICON | NIF_TIP | NIF_MESSAGE;\n+\n+    Shell_NotifyIcon(NIM_ADD, &tray_icon_data);\n+  }\n+}'}, {'Name': 'src/runner/tray_icon.h', 'Line Additions': 9, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,9 @@\n+#pragma once\n+// Start the Tray Icon\n+void start_tray_icon();\n+// Open the Settings Window\n+void open_settings_window();\n+// Callback type to be called by the tray icon loop\n+typedef void(*main_loop_callback_function)(PVOID);\n+// Calls a callback in _callback\n+bool dispatch_run_on_main_ui_thread(main_loop_callback_function _callback, PVOID data);'}, {'Name': 'src/runner/unhandled_exception_handler.cpp', 'Line Additions': 134, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,134 @@\n+#include ""pch.h""\n+#if _DEBUG && _WIN64 \n+#include ""unhandled_exception_handler.h""\n+#include <DbgHelp.h>\n+#pragma comment(lib, ""DbgHelp.lib"")\n+#include <string>\n+#include <sstream>\n+#include <signal.h>\n+\n+static IMAGEHLP_SYMBOL64* p_symbol = (IMAGEHLP_SYMBOL64*)malloc(sizeof(IMAGEHLP_SYMBOL64) + MAX_PATH * sizeof(WCHAR));\n+static IMAGEHLP_LINE64 line;\n+static bool processing_exception = false;\n+static WCHAR module_path[MAX_PATH];\n+static LPTOP_LEVEL_EXCEPTION_FILTER default_top_level_exception_handler = NULL;\n+\n+static const WCHAR* exception_description(const DWORD& code) {\n+  switch (code) {\n+  case EXCEPTION_ACCESS_VIOLATION:         return L""EXCEPTION_ACCESS_VIOLATION"";\n+  case EXCEPTION_ARRAY_BOUNDS_EXCEEDED:    return L""EXCEPTION_ARRAY_BOUNDS_EXCEEDED"";\n+  case EXCEPTION_BREAKPOINT:               return L""EXCEPTION_BREAKPOINT"";\n+  case EXCEPTION_DATATYPE_MISALIGNMENT:    return L""EXCEPTION_DATATYPE_MISALIGNMENT"";\n+  case EXCEPTION_FLT_DENORMAL_OPERAND:     return L""EXCEPTION_FLT_DENORMAL_OPERAND"";\n+  case EXCEPTION_FLT_DIVIDE_BY_ZERO:       return L""EXCEPTION_FLT_DIVIDE_BY_ZERO"";\n+  case EXCEPTION_FLT_INEXACT_RESULT:       return L""EXCEPTION_FLT_INEXACT_RESULT"";\n+  case EXCEPTION_FLT_INVALID_OPERATION:    return L""EXCEPTION_FLT_INVALID_OPERATION"";\n+  case EXCEPTION_FLT_OVERFLOW:             return L""EXCEPTION_FLT_OVERFLOW"";\n+  case EXCEPTION_FLT_STACK_CHECK:          return L""EXCEPTION_FLT_STACK_CHECK"";\n+  case EXCEPTION_FLT_UNDERFLOW:            return L""EXCEPTION_FLT_UNDERFLOW"";\n+  case EXCEPTION_ILLEGAL_INSTRUCTION:      return L""EXCEPTION_ILLEGAL_INSTRUCTION"";\n+  case EXCEPTION_IN_PAGE_ERROR:            return L""EXCEPTION_IN_PAGE_ERROR"";\n+  case EXCEPTION_INT_DIVIDE_BY_ZERO:       return L""EXCEPTION_INT_DIVIDE_BY_ZERO"";\n+  case EXCEPTION_INT_OVERFLOW:             return L""EXCEPTION_INT_OVERFLOW"";\n+  case EXCEPTION_INVALID_DISPOSITION:      return L""EXCEPTION_INVALID_DISPOSITION"";\n+  case EXCEPTION_NONCONTINUABLE_EXCEPTION: return L""EXCEPTION_NONCONTINUABLE_EXCEPTION"";\n+  case EXCEPTION_PRIV_INSTRUCTION:         return L""EXCEPTION_PRIV_INSTRUCTION"";\n+  case EXCEPTION_SINGLE_STEP:              return L""EXCEPTION_SINGLE_STEP"";\n+  case EXCEPTION_STACK_OVERFLOW:           return L""EXCEPTION_STACK_OVERFLOW"";\n+  default:                                 return L""UNKNOWN EXCEPTION"";\n+  }\n+}\n+\n+void init_symbols() {\n+  SymSetOptions(SYMOPT_LOAD_LINES | SYMOPT_UNDNAME);\n+  line.SizeOfStruct = sizeof(IMAGEHLP_LINE64);\n+  auto process = GetCurrentProcess();\n+  SymInitialize(process, NULL, TRUE);\n+}\n+\n+void log_stack_trace(std::wstring& generalErrorDescription) {\n+  memset(p_symbol, \'\\0\', sizeof(*p_symbol) + MAX_PATH);\n+  memset(&module_path[0], \'\\0\', sizeof(module_path));\n+  line.LineNumber = 0;\n+\n+  CONTEXT context;\n+  RtlCaptureContext(&context);\n+  auto process = GetCurrentProcess();\n+  auto thread = GetCurrentThread();\n+  STACKFRAME64 stack;\n+  memset(&stack, 0, sizeof(STACKFRAME64));\n+  stack.AddrPC.Offset = context.Rip;\n+  stack.AddrPC.Mode = AddrModeFlat;\n+  stack.AddrStack.Offset = context.Rsp;\n+  stack.AddrStack.Mode = AddrModeFlat;\n+  stack.AddrFrame.Offset = context.Rbp;\n+  stack.AddrFrame.Mode = AddrModeFlat;\n+\n+  std::wstringstream ss;\n+  ss << generalErrorDescription << std::endl;\n+  for (ULONG frame = 0;; frame++) {\n+    auto result = StackWalk64(IMAGE_FILE_MACHINE_AMD64,\n+                              process,\n+                              thread,\n+                              &stack,\n+                              &context,\n+                              NULL,\n+                              SymFunctionTableAccess64,\n+                              SymGetModuleBase64,\n+                              NULL);\n+\n+    p_symbol->MaxNameLength = MAX_PATH;\n+    p_symbol->SizeOfStruct = sizeof(IMAGEHLP_SYMBOL64);\n+\n+    DWORD64 dw64Displacement;\n+    SymGetSymFromAddr64(process, stack.AddrPC.Offset, &dw64Displacement, p_symbol);\n+    DWORD dwDisplacement;\n+    SymGetLineFromAddr64(process, stack.AddrPC.Offset, &dwDisplacement, &line);\n+\n+    auto module_base = SymGetModuleBase64(process, stack.AddrPC.Offset);\n+    if (module_base) {\n+      GetModuleFileName((HINSTANCE)module_base, module_path, MAX_PATH);\n+    }\n+    ss << module_path << ""!""\n+       << p_symbol->Name\n+       << ""("" << line.FileName << "":"" << line.LineNumber << "")\\n"";\n+    if (!result) {\n+      break;\n+    }\n+  }\n+  auto errorString = ss.str();\n+  MessageBoxW(NULL, errorString.c_str(), L""Unhandled Error"", MB_OK | MB_ICONERROR);\n+\n+}\n+\n+LONG WINAPI unhandled_exceptiont_handler(PEXCEPTION_POINTERS info) {\n+  if (!processing_exception) {\n+    processing_exception = true;\n+    try {\n+      init_symbols();\n+      std::wstring ex_description = L""Exception code not available"";\n+      if (info != NULL && info->ExceptionRecord != NULL && info->ExceptionRecord->ExceptionCode != NULL) {\n+        ex_description = exception_description(info->ExceptionRecord->ExceptionCode);\n+      }\n+      log_stack_trace(ex_description);\n+    }\n+    catch (...) {}\n+    if (default_top_level_exception_handler != NULL && info != NULL) {\n+      default_top_level_exception_handler(info);\n+    }\n+    processing_exception = false;\n+  }\n+  return EXCEPTION_CONTINUE_SEARCH;\n+}\n+\n+extern ""C"" void AbortHandler(int signal_number) {\n+  init_symbols();\n+  std::wstring ex_description = L""SIGABRT was raised."";\n+  log_stack_trace(ex_description);\n+}\n+\n+void init_global_error_handlers() {\n+  default_top_level_exception_handler = SetUnhandledExceptionFilter(unhandled_exceptiont_handler);\n+  signal(SIGABRT, &AbortHandler);\n+}\n+#endif'}, {'Name': 'src/runner/unhandled_exception_handler.h', 'Line Additions': 4, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,4 @@\n+#pragma once\n+#if _DEBUG && _WIN64 \n+void init_global_error_handlers();\n+#endif'}, {'Name': 'src/runner/win_hook_event.cpp', 'Line Additions': 72, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,72 @@\n+#include ""pch.h""\r\n+#include ""win_hook_event.h""\r\n+#include ""powertoy_module.h""\r\n+#include <mutex>\r\n+#include <deque>\r\n+#include <thread>\r\n+\r\n+static std::mutex mutex;\r\n+static std::deque<WinHookEvent> hook_events;\r\n+static std::condition_variable dispatch_cv;\r\n+\r\n+static void CALLBACK win_hook_event_proc(HWINEVENTHOOK winEventHook,\r\n+                                         DWORD event,\r\n+                                         HWND window,\r\n+                                         LONG object,\r\n+                                         LONG child,\r\n+                                         DWORD eventThread,\r\n+                                         DWORD eventTime) {\r\n+  std::unique_lock lock(mutex);\r\n+  hook_events.push_back({ event,\r\n+                          window,\r\n+                          object,\r\n+                          child,\r\n+                          eventThread,\r\n+                          eventTime });\r\n+  lock.unlock();\r\n+  dispatch_cv.notify_one();\r\n+}\r\n+\r\n+static bool running = false;\r\n+static std::thread dispatch_thread;\r\n+static void dispatch_thread_proc() {\r\n+  std::unique_lock lock(mutex);\r\n+  while (running) {\r\n+    dispatch_cv.wait(lock, []{ return !running || !hook_events.empty(); });\r\n+    if (!running)\r\n+      return;\r\n+    while (!hook_events.empty()) {\r\n+      auto event = hook_events.front();\r\n+      hook_events.pop_front();\r\n+      lock.unlock();\r\n+      powertoys_events().signal_event(win_hook_event, reinterpret_cast<intptr_t>(&event));\r\n+      lock.lock();\r\n+    }\r\n+  }\r\n+}\r\n+\r\n+static HWINEVENTHOOK hook_handle;\r\n+\r\n+void start_win_hook_event() {\r\n+  std::lock_guard lock(mutex);\r\n+  if (running)\r\n+    return;\r\n+  running = true;\r\n+  dispatch_thread = std::thread(dispatch_thread_proc);\r\n+  hook_handle = SetWinEventHook(EVENT_MIN, EVENT_MAX, nullptr, win_hook_event_proc, 0, 0, WINEVENT_OUTOFCONTEXT | WINEVENT_SKIPOWNPROCESS);\r\n+}\r\n+\r\n+void stop_win_hook_event() {\r\n+  std::unique_lock lock(mutex);\r\n+  if (!running)\r\n+    return;\r\n+  running = false;\r\n+  UnhookWinEvent(hook_handle);\r\n+  lock.unlock();\r\n+  dispatch_cv.notify_one();\r\n+  dispatch_thread.join();\r\n+  lock.lock();\r\n+  hook_events.clear();\r\n+  hook_events.shrink_to_fit();\r\n+}\r\n+\r'}, {'Name': 'src/runner/win_hook_event.h', 'Line Additions': 7, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,7 @@\n+#pragma once\r\n+\r\n+#include <interface/win_hook_event_data.h>\r\n+\r\n+void start_win_hook_event();\r\n+void stop_win_hook_event();\r\n+\r'}, {'Name': 'src/settings-web/.gitignore', 'Line Additions': 31, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,31 @@\n+# Logs\n+*.log\n+npm-debug.log*\n+yarn-debug.log*\n+yarn-error.log*\n+\n+.DS_Store\n+\n+node_modules\n+lib\n+lib-commonjs\n+lib-esm\n+lib-es2015\n+build\n+coverage\n+dist\n+temp\n+\n+*.scss.ts\n+\n+documentation/lib/core/metadata.js\n+documentation/lib/core/MetadataBlog.js\n+\n+documentation/website/translated_docs\n+documentation/website/build/\n+documentation/website/yarn.lock\n+documentation/website/i18n/*\n+\n+# Rush files\n+common/temp/**\n+package-deps.json'}, {'Name': 'src/settings-web/README.md', 'Line Additions': 186, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,186 @@\n+# Web project for the Settings UI\n+\n+## Introduction\n+\n+This project generates the web UI shown in the [PowerToys Settings](/src/editor).\n+It's a `ReactJS` project created using [UI Fabric](https://developer.microsoft.com/en-us/fabric#/).\n+\n+## Build Commands\n+\n+Here are the commands to build and test this project:\n+\n+### To start the development server\n+\n+```\n+npm install\n+npm run start\n+```\n+\n+### Building and integrating into PowerToys settings project\n+\n+```\n+npm run build\n+```\n+\n+## Updating the icons\n+\n+Icons inside [`src/icons/`](./src/icons/) were generated from the [Office UI Fabric Icons subset generation tool.](https://uifabricicons.azurewebsites.net/)\n+\n+In case the subset needs to be changed, additional steps are needed to include the icon font in the built `dist/bundle.js`:\n+- Copy the inline font data taken from [`src/icons/css/fabric-icons-inline.css`](src/icons/css/fabric-icons-inline.css) and place it in the `fontFace` `src` value in [`src/icons/src/fabric-icons.ts`](src/icons/src/fabric-icons.ts).\n+\n+A list of the current icons in the subset can be seen in the `icons` object in [`src/icons/src/fabric-icons.ts`](src/icons/src/fabric-icons.ts).\n+\n+SVG icons, including the icons for each PowerToy listed in the Settings, are contained in [`src/svg/`](src/svg/). To add additional SVG icons add them to [`src/svg/`](src/svg/) and register them in [`src/setup_icons.tsx`](src/setup_icons.tsx).\n+\n+## Code Structure\n+\n+The project structure is based on the [`UI Fabric` scaffold](https://developer.microsoft.com/en-us/fabric#/get-started/web#option-1-quick-start) obtained by initializing it with `npm init uifabric`.\n+\n+#### [index.html](./index.html)\n+The HTML entry-point of the project.\n+Loads the `ReactJS` distribution script.\n+Defines JavaScript functions to receive and send messages to the [PowerToys Settings](/src/editor) window.\n+\n+#### [src/index.tsx](./src/index.tsx)\n+Main `ReactJS` entrypoint, initializing the `ReactDOM`.\n+\n+#### [src/setup_icons.tsx](./src/setup_icons.tsx)\n+Defines the `setup_powertoys_icons` function that registers the icons to be used in the components.\n+\n+#### [src/components/](./src/components/)\n+Contains the `ReactJS` components, including the Settings controls for each type of setting.\n+\n+#### [src/components/App.tsx](./src/components/App.tsx)\n+Defines the main App component, containing the UI layout, navigation menu, dialogs and main load/save logic.\n+\n+#### [src/components/GeneralSettings.tsx](./src/components/GeneralSettings.tsx)\n+Defines the PowerToys General Settings component, including logic to construct the object sent to PowerToys to change the General settings.\n+\n+#### [src/components/CustomSettingsScreen.tsx](./src/components/CustomSettingsScreen.tsx)\n+Defines the component that generates the settings screen for a PowerToy depending on its settings definition.\n+\n+#### [src/components/BaseSettingsControl.tsx](./src/components/BaseSettingsControl.tsx)\n+Defines the base class for a Settings control.\n+\n+#### [src/css/layout.css](./src/css/layout.css)\n+General layout styles.\n+\n+#### [src/icons/](./src/icons/)\n+Icons generated from the [Office UI Fabric Icons subset generation tool.](https://uifabricicons.azurewebsites.net/)\n+\n+#### [src/svg/](./src/svg/)\n+SVG icon assets.\n+\n+## Creating a new settings control\n+\n+The [`BaseSettingsControl` class](./src/components/BaseSettingsControl.tsx) can be extended to create a new Settings control type.\n+\n+```tsx\n+export class BaseSettingsControl extends React.Component <any, any> {\n+  parent_on_change: Function;\n+  constructor(props:any) {\n+    super(props);\n+    this.parent_on_change=props.on_change;\n+  }\n+  public get_value():any {\n+    return null;\n+  }\n+}\n+```\n+\n+A settings control overrides the `get_value` function to return the value to be used for the Setting the control is representing.\n+It will use the `parent_on_change` property to signal that the user made some changes to the settings.\n+\n+Here's the [`StringTextSettingsControl`](./src/components/StringTextSettingsControl.tsx) component to serve as an example:\n+\n+```tsx\n+export class StringTextSettingsControl extends BaseSettingsControl {\n+  textref:any = null; // Keeps a reference to the corresponding TextField in the DOM.\n+\n+  constructor(props:any) {\n+    super(props);\n+    this.textref = null;\n+    this.state={\n+      property_values: props.setting\n+    }\n+  }\n+\n+  componentWillReceiveProps(props: any) {\n+    // Fully controlled component.\n+    // Reacting to a property change so that the control is redrawn properly.\n+    this.setState({ property_values: props.setting })\n+  }\n+\n+  public get_value() : any {\n+    // Returns the TextField value.\n+    return {value: this.textref.value};\n+  }\n+\n+  public render(): JSX.Element {\n+    // Renders a UI Fabric TextField.\n+    return (\n+      <TextField\n+        onChange = {\n+          (_event,_new_value) => {\n+            // Updates the state with the new value introduced in the TextField.\n+            this.setState( (prev_state:any) => ({\n+                property_values: {\n+                  ...(prev_state.property_values),\n+                  value: _new_value\n+                }\n+              })\n+            );\n+            // Signal the parent that the user changed a value.\n+            this.parent_on_change();\n+          }\n+        }\n+        value={this.state.property_values.value}\n+        label={this.state.property_values.display_name}\n+        componentRef= {(input) => {this.textref=input;}}\n+      />\n+    );\n+  }\n+}\n+```\n+\n+Each settings property has a `editor_type` field that's used to differentiate between the Settings control types:\n+```js\n+'test string_text': {\n+  display_name: 'This is what a string_text looks like',\n+  editor_type: 'string_text',\n+  value: 'A sample string value'\n+}\n+```\n+\n+A new Settings control component can be added to [`src/components/`](./src/components/).\n+To render the new Settings control, its `editor_type` and component instance need to be added to the [`CustomSettingsScreen` component render()](./src/components/CustomSettingsScreen.tsx):\n+```tsx\n+import React from 'react';\n+import {StringTextSettingsControl} from './StringTextSettingsControl';\n+\n+...\n+\n+export class CustomSettingsScreen extends React.Component <any, any> {\n+  references: any;\n+  parent_on_change: Function;\n+...\n+  public render(): JSX.Element {\n+    let power_toys_properties = this.state.powertoy.properties;\n+    return (\n+      <Stack tokens={{childrenGap:20}}>\n+...\n+        {\n+          Object.keys(power_toys_properties).\n+          map( (key) => {\n+            switch(power_toys_properties[key].editor_type) {\n+...\n+              case 'string_text':\n+                return <StringTextSettingsControl\n+                  setting = {power_toys_properties[key]}\n+                  key={key}\n+                  on_change={this.parent_on_change}\n+                  ref={(input) => {this.references[key]=input;}}\n+                  />;\n+...\n+```""}, {'Name': 'src/settings-web/index.html', 'Line Additions': 25, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,25 @@\n+<!DOCTYPE html>\n+<html>\n+  <head>\n+    <script>\n+        window.output_from_webview = function(arg) {\n+          if (typeof (window.external) !== \'undefined\' && (\'notify\' in window.external)) {\n+            window.external.notify(arg);\n+          }\n+        }\n+        function receive_from_settings_app(arg) {\n+          window.react_app_component.receive_config_msg(JSON.parse(arg));\n+          return """";\n+        }\n+        function exit_settings_app() {\n+          window.react_app_component.receive_exit_request();\n+          return """";\n+        }\n+      </script>\n+         <title>PowerToys Settings</title>\n+  </head>\n+  <body>\n+    <div id=""app""></div>\n+    <script src=""dist/bundle.js"" charset=""UTF-8""></script>\n+  </body>\n+</html>'}, {'Name': 'src/settings-web/just.config.js', 'Line Additions': 3, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,3 @@\n+// @ts-check\n+const { taskPresets } = require('just-scripts');\n+taskPresets.webapp();""}, {'Name': 'src/settings-web/package-lock.json', 'Line Additions': 12374, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/settings-web/package.json', 'Line Additions': 42, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,42 @@\n+{\n+  ""name"": ""fabricui"",\n+  ""version"": ""0.0.1"",\n+  ""description"": ""fabricui Package"",\n+  ""repository"": {\n+    ""type"": ""git"",\n+    ""url"": """"\n+  },\n+  ""main"": ""lib-commonjs/index.js"",\n+  ""module"": ""lib/index.js"",\n+  ""sideEffects"": false,\n+  ""typings"": ""lib/index.d.ts"",\n+  ""license"": ""MIT"",\n+  ""scripts"": {\n+    ""just"": ""just-scripts"",\n+    ""clean"": ""rimraf build lib lib-commonjs && just-scripts clean"",\n+    ""build"": ""rimraf build && just-scripts build --min --production && cp index.html build && react-snap && cp -r build/* ../editor/settings-html"",\n+    ""test"": ""just-scripts test"",\n+    ""test:update"": ""just-scripts jest -u"",\n+    ""test:start"": ""just-scripts start-test"",\n+    ""start"": ""just-scripts start"",\n+    ""stack:upgrade"": ""just-scripts upgrade-stack""\n+  },\n+  ""dependencies"": {\n+    ""@svgr/webpack"": ""^4.3.2"",\n+    ""office-ui-fabric-react"": ""^7.4.3"",\n+    ""react"": ""~16.8.0"",\n+    ""react-dom"": ""~16.8.0""\n+  },\n+  ""devDependencies"": {\n+    ""@types/jest"": ""^24.0.0"",\n+    ""@types/react"": ""~16.8.0"",\n+    ""@types/react-dom"": ""~16.8.0"",\n+    ""just-scripts"": ""^0.18.0"",\n+    ""just-stack-uifabric"": "">=0.11.4"",\n+    ""react-snap"": ""^1.23.0"",\n+    ""rimraf"": ""^3.0.0""\n+  },\n+  ""just"": {\n+    ""stack"": ""just-stack-uifabric""\n+  }\n+}'}, {'Name': 'src/settings-web/src/components/App.tsx', 'Line Additions': 282, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,282 @@\n+import React from \'react\';\n+import {Stack, Text, Nav, DefaultButton, PrimaryButton, ScrollablePane, INavLink, Spinner, SpinnerSize, Dialog, DialogType, DialogFooter} from \'office-ui-fabric-react\';\n+import {GeneralSettings} from \'./GeneralSettings\';\n+import {CustomSettingsScreen} from \'./CustomSettingsScreen\';\n+import \'../css/layout.css\';\n+import {setup_powertoys_icons} from \'../setup_icons\';\n+\n+// Register fabric UI icons and powertoys logos as icons.\n+setup_powertoys_icons();\n+\n+export class App extends React.Component <any, any> {\n+  settings_screen_ref:any;\n+  constructor(props: any) {\n+    super(props);\n+    this.settings_screen_ref = null;\n+    this.state = {\n+      data_changed : false,\n+      saving : false,\n+      selected_menu : \'general\',\n+      target_selected_menu : \'\',\n+      show_save_discard_dialog: false,\n+      user_trying_to_exit: false,\n+      settings: {}\n+    }\n+  }\n+\n+  public componentDidMount() {\n+    this.send_message_to_application(JSON.stringify({\'refresh\':true}));\n+  }\n+\n+  public send_message_to_application(msg: string) {\n+    (window as any).output_from_webview(msg);\n+  }\n+\n+  public receive_config_msg(config: any):void {\n+    let current_selected_menu = this.state.selected_menu;\n+    if(!config.hasOwnProperty(\'powertoys\') || !config.powertoys.hasOwnProperty(current_selected_menu)) {\n+      current_selected_menu=\'general\';\n+    }\n+    this.setState({\n+      settings: config,\n+      selected_menu: current_selected_menu,\n+      data_changed: false,\n+      saving: false,\n+      show_save_discard_dialog: false\n+    });\n+    if(this.settings_screen_ref) {\n+      this.settings_screen_ref.forceUpdate();\n+    }\n+  }\n+\n+  public receive_exit_request(): void {\n+    // Settings application wants to close.\n+    // Prompt the user if there are possible unsaved changes.\n+    if(this.state.data_changed) {\n+      this.show_save_exit_dialog();\n+    } else {\n+      // Application can exit.\n+      this.send_message_to_application(\'exit\');\n+    }\n+  }\n+\n+  private show_save_exit_dialog = () : void => {\n+    this.setState({\n+      show_save_discard_dialog: true,\n+      user_trying_to_exit: true\n+    });\n+  }\n+\n+  private on_setting_change = (): void => {\n+    this.setState({data_changed: true});\n+  }\n+\n+  private show_save_discard_dialog = (target_selected_menu: string): void => {\n+    this.setState({\n+      target_selected_menu: target_selected_menu,\n+      show_save_discard_dialog: true,\n+      user_trying_to_exit: false\n+    });\n+  }\n+\n+  private save_clicked = (): void => {\n+    // output_from_webview should be declared in index.html\n+    this.setState({saving : true});\n+    (window as any).output_from_webview(JSON.stringify(this.settings_screen_ref.get_data()));\n+  };\n+\n+  private close_save_discard_dialog = (): void => {\n+    if (this.state.user_trying_to_exit) {\n+      this.send_message_to_application(\'cancel-exit\');\n+    }\n+    this.setState({ show_save_discard_dialog: false });\n+  };\n+  private save_save_discard_dialog = (): void => {\n+    if (this.state.user_trying_to_exit) {\n+      this.send_message_to_application(\'cancel-exit\');\n+    }\n+    this.setState({ show_save_discard_dialog: false });\n+    this.save_clicked();\n+  };\n+  private discard_save_discard_dialog = (): void => {\n+    if (this.state.user_trying_to_exit) {\n+      this.send_message_to_application(\'exit\');\n+    }\n+    this.setState({\n+      show_save_discard_dialog: false,\n+      selected_menu: this.state.target_selected_menu,\n+      data_changed: false,\n+      saving: false\n+    });\n+  };\n+\n+  public render(): JSX.Element {\n+    const powertoys_dict = this.state.settings.powertoys;\n+    let powertoys_links = [];\n+    for(let powertoy_key in powertoys_dict) {\n+      if(powertoys_dict.hasOwnProperty(powertoy_key)) {\n+        powertoys_links.push({\n+          name: powertoys_dict[powertoy_key].name,\n+          key: powertoy_key,\n+          url:\'\',\n+          icon: powertoys_dict[powertoy_key].icon_key || \'CircleRing\'\n+        });\n+      }\n+    }\n+\n+    return (\n+      <div className=\'body\'>\n+        <div className=\'sidebar\'>\n+          <Nav\n+            selectedKey= {this.state.selected_menu}\n+            onLinkClick = {\n+              (ev?: React.MouseEvent<HTMLElement,MouseEvent>, item?: INavLink) => {\n+                let item_menu_key: string|null = ((item && item.key)||null);\n+                if(item_menu_key && item_menu_key!=this.state.selected_menu) {\n+                  if(this.state.data_changed) {\n+                    // There are data changes. Don\'t change screen until the user confirms.\n+                    ev&&ev.preventDefault();\n+                    this.show_save_discard_dialog(item_menu_key);\n+                  } else {\n+                    this.setState({selected_menu : item_menu_key});\n+                  }\n+                }\n+              }\n+            }\n+            styles = {{\n+              navItems: { margin : \'0\'},\n+              compositeLink: {\n+                backgroundColor : \'#f3f2f1\',\n+                color: \'#323130\',\n+                selectors: {\n+                  \'&.is-selected button\' : {\n+                    backgroundColor: \'#e1dfdd\',\n+                    color: \'#201F1E\',\n+                    fontWeight: \'bold\'\n+                  },\n+                  \'&:hover button.ms-Nav-link\' : {\n+                    backgroundColor: \'#e1dfdd\',\n+                    color: \'#323130\'\n+                  },\n+                  \'i.ms-Button-icon\' : {\n+                    color: \'#201F1E\',\n+                    fontWeight: \'normal\'\n+                  },\n+                  \'&:hover i.ms-Button-icon\' : {\n+                    color: \'#201F1E\',\n+                  },\n+                  \'&:active i.ms-Button-icon\' : {\n+                    color: \'#201F1E\',\n+                  },\n+                },\n+              },\n+            }}\n+            groups = {[\n+              {\n+                links: [\n+                  { name: \'General Settings\', key:\'general\', url:\'\', icon: \'Settings\' }\n+                ].\n+                concat(powertoys_links)\n+              }\n+            ]}\n+          />\n+        </div>\n+        <div className=\'editorzone\'>\n+          <div className=\'editorhead\'>\n+            <div className=\'editortitle\'>\n+              <Text\n+                variant=\'xxLarge\'\n+                styles= {{ root: { display:\'block\', whiteSpace:\'no-wrap\', overflow:\'hidden\', textOverflow:\'ellipsis\' }}}\n+              >\n+                { this.state.selected_menu!=\'general\' ?\n+                  powertoys_dict[this.state.selected_menu].name + "" Settings"" :\n+                  ""PowerToys General Settings""\n+                }\n+              </Text>\n+            </div>\n+            <div className=\'editorheadbuttons\'>\n+              <Stack horizontal={true} tokens={{childrenGap:16}}>\n+                <PrimaryButton\n+                  styles={{\n+                    root: {\n+                      minWidth: \'100px\'\n+                    }\n+                  }}\n+                  disabled = { (!this.state.data_changed) || this.state.saving}\n+                  text= {this.state.saving?\'Saving\':\'Save\'}\n+                  onClick={this.save_clicked}\n+                  >\n+                    {this.state.saving ? <Spinner size={SpinnerSize.small}/> : <span/>}\n+                  </PrimaryButton>\n+              </Stack>\n+            </div>\n+          </div>\n+          <div className=\'editorbody\'>\n+            <ScrollablePane\n+            styles= {{\n+              contentContainer: {\n+                paddingTop: \'16px\',\n+                paddingLeft: \'16px\',\n+                paddingRight: \'16px\'\n+                // padding bottom will be applied by an empty span in the contents, for edge compatibility.\n+              }\n+            }}\n+            >\n+            {\n+              (() => {\n+                if(this.state.selected_menu === \'general\' && this.state.settings.hasOwnProperty(\'general\')) {\n+                  return <GeneralSettings\n+                    key=""general""\n+                    settings_key=""general""\n+                    settings={this.state.settings}\n+                    on_change={this.on_setting_change}\n+                    ref={(input:any) => {this.settings_screen_ref = input;}}\n+                  />\n+                } else if( this.state.settings.hasOwnProperty(\'powertoys\') && this.state.selected_menu in this.state.settings.powertoys) {\n+                  return <CustomSettingsScreen\n+                    key={this.state.selected_menu}\n+                    settings_key={this.state.selected_menu}\n+                    powertoy={this.state.settings.powertoys[this.state.selected_menu]}\n+                    on_change={this.on_setting_change}\n+                    ref={(input:any) => {this.settings_screen_ref = input;}}\n+                    />\n+                }\n+              })()\n+            }\n+            </ScrollablePane>\n+          </div>\n+        </div>\n+        <Dialog\n+          hidden={!this.state.show_save_discard_dialog}\n+          onDismiss={this.close_save_discard_dialog}\n+          dialogContentProps={{\n+            type: DialogType.normal,\n+            title: \'Changes not saved\',\n+            subText: this.state.user_trying_to_exit ?\n+              \'Would you like to save your changes or exit the settings?\' :\n+              \'Would you like to save or discard your changes?\'\n+          }}\n+          modalProps={{\n+            isBlocking: true,\n+            styles: { main: { maxWidth: 450 } }\n+          }}\n+        >\n+          <DialogFooter\n+            styles={{\n+              actionsRight: {\n+                textAlign:\'center\'\n+                }\n+              }}\n+            >\n+            <PrimaryButton onClick={this.save_save_discard_dialog} text=""Save"" />\n+            <PrimaryButton\n+              onClick={this.discard_save_discard_dialog}\n+              text={this.state.user_trying_to_exit ? ""Exit"" : ""Discard""}\n+              />\n+            <DefaultButton onClick={this.close_save_discard_dialog} text=""Cancel"" />\n+          </DialogFooter>\n+        </Dialog>\n+      </div>\n+    );\n+  }\n+};'}, {'Name': 'src/settings-web/src/components/BaseSettingsControl.tsx', 'Line Additions': 13, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,13 @@\n+import React from 'react';\n+\n+export class BaseSettingsControl extends React.Component <any, any> {\n+  parent_on_change: Function;\n+  constructor(props:any) {\n+    super(props);\n+    this.parent_on_change=props.on_change;\n+  }\n+  public get_value():any {\n+    return null;\n+  }\n+}\n+""}, {'Name': 'src/settings-web/src/components/BoolToggleSettingsControl.tsx', 'Line Additions': 49, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,49 @@\n+import React from \'react\';\n+import {BaseSettingsControl} from \'./BaseSettingsControl\';\n+import { Toggle } from \'office-ui-fabric-react\';\n+\n+export class BoolToggleSettingsControl extends BaseSettingsControl {\n+  toggleref:any = null;\n+\n+  constructor(props:any) {\n+    super(props);\n+    this.toggleref = null;\n+    this.state={\n+      property_values: props.setting\n+    }\n+  }\n+\n+  componentWillReceiveProps(props: any) {\n+    this.setState({ property_values: props.setting })\n+  }\n+\n+\n+  public get_value() : any {\n+    return {value: this.toggleref.checked};\n+  }\n+\n+  public render(): JSX.Element {\n+    return (\n+      <Toggle\n+        onChange={\n+          (_event,_check) => { \n+            this.setState( (prev_state:any) => ({\n+                property_values: { \n+                  ...(prev_state.property_values),\n+                  value: _check\n+                }\n+              })\n+            );\n+            this.parent_on_change();\n+          }\n+        }\n+        checked={this.state.property_values.value}\n+        label={this.state.property_values.display_name}\n+        onText=""On""\n+        offText=""Off""\n+        componentRef= {(input) => {this.toggleref=input;}}\n+      />\n+    );\n+  }\n+\n+}\n\\ No newline at end of file'}, {'Name': 'src/settings-web/src/components/ColorPickerSettingsControl.tsx', 'Line Additions': 45, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,45 @@\n+import React from \'react\';\n+import {BaseSettingsControl} from \'./BaseSettingsControl\';\n+import { ColorPicker, Stack, Label, getColorFromString, IColor } from \'office-ui-fabric-react\';\n+\n+export class ColorPickerSettingsControl extends BaseSettingsControl {\n+  colorpickerref:any = null;\n+\n+  constructor(props:any) {\n+    super(props);\n+    this.colorpickerref = null;\n+    this.state={\n+      property_values: props.setting\n+    }\n+  }\n+\n+  componentWillReceiveProps(props: any) {\n+    this.setState({ property_values: props.setting })\n+  }\n+\n+  public get_value() : any {\n+    return {value: this.colorpickerref.color.str};\n+  }\n+\n+  public render(): JSX.Element {\n+    let current_color : IColor | undefined = getColorFromString(this.state.property_values.value);\n+    return (\n+      <Stack>\n+        <Label>{this.state.property_values.display_name}</Label>\n+        <ColorPicker\n+          styles= {{\n+            panel: {padding:0}\n+          }}\n+          color={current_color===undefined?""#000000"":current_color}\n+          componentRef= {(input) => {this.colorpickerref=input;}}\n+          alphaSliderHidden = {true}\n+          onChange = { () => {\n+              this.parent_on_change();\n+            }\n+          }\n+        />\n+      </Stack>\n+    );\n+  }\n+\n+}\n\\ No newline at end of file'}, {'Name': 'src/settings-web/src/components/CustomActionSettingsControl.tsx', 'Line Additions': 54, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,54 @@\n+import React from 'react';\n+import {BaseSettingsControl} from './BaseSettingsControl';\n+import {Label, Stack, PrimaryButton, Text } from 'office-ui-fabric-react';\n+\n+export class CustomActionSettingsControl extends BaseSettingsControl {\n+  colorpickerref:any = null;\n+\n+  constructor(props:any) {\n+    super(props);\n+    this.colorpickerref = null;\n+    this.state={\n+      property_values: props.setting,\n+      call_action_callback: props.action_callback,\n+      name: props.action_name\n+    }\n+  }\n+\n+  componentWillReceiveProps(props: any) {\n+    this.setState({\n+      property_values: props.setting,\n+      name:props.action_name\n+    });\n+  }\n+\n+  public get_value() : any {\n+    return {value: this.state.property_values.value};\n+  }\n+\n+  public render(): JSX.Element {\n+    return (\n+      <Stack>\n+        <Label>{this.state.property_values.display_name}</Label>\n+        {\n+          this.state.property_values.value ?\n+            <Text styles ={{\n+              root: {\n+                paddingBottom: '0.5em'\n+              }\n+            }}>{this.state.property_values.value}</Text>\n+          : <span/>\n+        }\n+        <PrimaryButton\n+            styles={{\n+              root: {\n+                alignSelf: 'start'\n+              }\n+          }}\n+          text={this.state.property_values.button_text}\n+          onClick={()=>this.state.call_action_callback(this.state.name, this.state.property_values)}\n+        />\n+      </Stack>\n+    );\n+  }\n+}""}, {'Name': 'src/settings-web/src/components/CustomSettingsScreen.tsx', 'Line Additions': 150, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,150 @@\n+import React from 'react';\n+import {Stack, Text, Link} from 'office-ui-fabric-react';\n+import {BoolToggleSettingsControl} from './BoolToggleSettingsControl';\n+import {StringTextSettingsControl} from './StringTextSettingsControl';\n+import {IntSpinnerSettingsControl} from './IntSpinnerSettingsControl';\n+import {ColorPickerSettingsControl} from './ColorPickerSettingsControl';\n+import {CustomActionSettingsControl} from './CustomActionSettingsControl';\n+\n+export class CustomSettingsScreen extends React.Component <any, any> {\n+  references: any;\n+  parent_on_change: Function;\n+\n+  constructor(props: any) {\n+    super(props);\n+    this.references={};\n+    this.parent_on_change = props.on_change;\n+    this.state = {\n+      settings_key: props.settings_key,\n+      powertoy: props.powertoy,\n+    }\n+  }\n+  shouldComponentUpdate(nextProps:any, nextState:any)\n+  {\n+    // This component and its children manage their state.\n+    // React only to state changes when forceUpdate is called by the App component.\n+    return false;\n+  }\n+  componentWillReceiveProps(props: any) {\n+    this.setState({ powertoy: props.powertoy })\n+  }\n+\n+  public get_data(): any {\n+    let properties : any = {};\n+    Object.keys(this.references).forEach(key => {\n+      properties[key]= this.references[key].get_value();\n+    });\n+    let result : any = {};\n+    result[this.state.settings_key] = {\n+      name: this.state.powertoy.name,\n+      properties:properties\n+    };\n+    return {powertoys: result};\n+  }\n+\n+  private call_custom_action(action_name: any, action_values: any) {\n+    let result = {action: {\n+      [this.state.settings_key]: {\n+        action_name: action_name,\n+        value: action_values.value\n+      }\n+    }};\n+    (window as any).output_from_webview(JSON.stringify(result));\n+  }\n+\n+  public render(): JSX.Element {\n+    let power_toys_properties = this.state.powertoy.properties;\n+    return (\n+      <Stack tokens={{childrenGap:20}}>\n+        <Stack>\n+          <Text variant='large'>{this.state.powertoy.description}</Text>\n+          {\n+            this.state.powertoy.hasOwnProperty('overview_link')\n+            ?\n+            <Stack horizontal tokens={{childrenGap:5}}>\n+              <Link\n+                styles = {{\n+                  root: {\n+                    alignSelf:'center'\n+                  }\n+                }}\n+                href={this.state.powertoy.overview_link}\n+                target='_blank'\n+              >Module overview</Link>\n+            </Stack>\n+            :\n+            null\n+          }\n+          {\n+            this.state.powertoy.hasOwnProperty('video_link')\n+            ?\n+            <Stack horizontal tokens={{childrenGap:5}}>\n+              <Link\n+                styles = {{\n+                  root: {\n+                    alignSelf:'center'\n+                  }\n+                }}\n+                href={this.state.powertoy.video_link} target='_blank'>Video demo</Link>\n+            </Stack>\n+            :\n+            null\n+          }\n+        </Stack>\n+        {\n+          Object.keys(power_toys_properties).\n+          sort(function(a, b) {\n+            return ( // Order powertoys settings\n+              (power_toys_properties[a].order || 0) -\n+              (power_toys_properties[b].order || 0)\n+            )\n+          }).\n+          map( (key) => {\n+            switch(power_toys_properties[key].editor_type) {\n+              case 'bool_toggle':\n+                return <BoolToggleSettingsControl\n+                  setting={power_toys_properties[key]}\n+                  key={key}\n+                  on_change={this.parent_on_change}\n+                  ref={(input) => {this.references[key]=input;}}\n+                  />;\n+              case 'string_text':\n+                return <StringTextSettingsControl\n+                  setting = {power_toys_properties[key]}\n+                  key={key}\n+                  on_change={this.parent_on_change}\n+                  ref={(input) => {this.references[key]=input;}}\n+                  />;\n+              case 'int_spinner':\n+                return <IntSpinnerSettingsControl\n+                  setting = {power_toys_properties[key]}\n+                  key={key}\n+                  on_change={this.parent_on_change}\n+                  ref={(input) => {this.references[key]=input;}}\n+                  />;\n+              case 'color_picker':\n+                return <ColorPickerSettingsControl\n+                  setting = {power_toys_properties[key]}\n+                  key={key}\n+                  on_change={this.parent_on_change}\n+                  ref={(input) => {this.references[key]=input;}}\n+                  />;\n+              case 'custom_action':\n+                return <CustomActionSettingsControl\n+                  setting={power_toys_properties[key]}\n+                  action_name={key}\n+                  action_callback={(action_name: any, action_values:any) => {this.call_custom_action(action_name, action_values);} }\n+                  key={key}\n+                  ref={(input) => {this.references[key]=input;}}\n+                  />;\n+              default:\n+                return null;\n+            }\n+          })\n+        }\n+        {/* An empty span to always give 30px padding in Edge. */}\n+        <span/>\n+      </Stack>\n+    )\n+  }\n+}""}, {'Name': 'src/settings-web/src/components/GeneralSettings.tsx', 'Line Additions': 137, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,137 @@\n+import React from \'react\';\n+import { Stack, Text, DefaultButton, Label, Link} from \'office-ui-fabric-react\';\n+import {BoolToggleSettingsControl} from \'./BoolToggleSettingsControl\'\n+import { Separator } from \'office-ui-fabric-react/lib/Separator\';\n+\n+export class GeneralSettings extends React.Component <any, any> {\n+  references: any = {};\n+  startup_reference: any;\n+  parent_on_change: Function;\n+  constructor(props: any) {\n+    super(props);\n+    this.references={};\n+    this.startup_reference=null;\n+    this.parent_on_change = props.on_change;\n+    this.state = {\n+      settings_key: props.settings_key,\n+      settings: props.settings,\n+    }\n+  }\n+  shouldComponentUpdate(nextProps:any, nextState:any)\n+  {\n+    // This component and its children manage their state.\n+    // React only to state changes when forceUpdate is called by the App component.\n+    return false;\n+  }\n+  componentWillReceiveProps(props: any) {\n+    this.setState({ settings: props.settings })\n+  }\n+\n+  public get_data(): any {\n+    let enabled : any = {};\n+    Object.keys(this.references).forEach(key => {\n+      enabled[key]=this.references[key].get_value().value;\n+    });\n+    let result : any = {};\n+    result[this.state.settings_key]= {\n+      startup: this.startup_reference.get_value().value,\n+      enabled: enabled\n+    };\n+    return result;\n+  }\n+\n+  public render(): JSX.Element {\n+    let power_toys_enabled = this.state.settings.general.enabled;\n+    return (\n+      <Stack tokens={{childrenGap:20}}>\n+        <Text variant=\'xLarge\'>Available PowerToys</Text>\n+        { Object.keys(power_toys_enabled).map(\n+          (key) => {\n+            let enabled_value=power_toys_enabled[key];\n+            return <Stack key={key}>\n+              <Stack horizontal tokens={{childrenGap:5}}>\n+                <Label>{key}</Label>\n+                {(\n+                  this.state.settings.powertoys &&\n+                  this.state.settings.powertoys.hasOwnProperty(key) &&\n+                  this.state.settings.powertoys[key].hasOwnProperty(\'overview_link\'))\n+                  ?\n+                  <Link\n+                    styles = {{\n+                      root: {\n+                        alignSelf:\'center\'\n+                      }\n+                    }}\n+                    href={this.state.settings.powertoys[key].overview_link}\n+                    target=\'_blank\'\n+                  >(Overview)</Link>\n+                  :\n+                  null\n+                }\n+                {(\n+                  this.state.settings.powertoys &&\n+                  this.state.settings.powertoys.hasOwnProperty(key) &&\n+                  this.state.settings.powertoys[key].hasOwnProperty(\'video_link\'))\n+                  ?\n+                  <Link\n+                    styles = {{\n+                      root: {\n+                        alignSelf:\'center\'\n+                      }\n+                    }}\n+                    href={this.state.settings.powertoys[key].video_link}\n+                    target=\'_blank\'\n+                  >(Video)</Link>\n+                  :\n+                  null\n+                }\n+              </Stack>\n+              {(\n+                this.state.settings.powertoys &&\n+                this.state.settings.powertoys.hasOwnProperty(key) &&\n+                this.state.settings.powertoys[key].hasOwnProperty(\'description\'))\n+                ?\n+                <Text\n+                  styles = {{\n+                    root: {\n+                      paddingBottom: \'5px\'\n+                    }\n+                  }}\n+                >{this.state.settings.powertoys[key].description}</Text>\n+                :\n+                null\n+              }\n+              <BoolToggleSettingsControl\n+                setting={{value: enabled_value}}\n+                on_change={this.parent_on_change}\n+                ref={(input) => {this.references[key]=input;}}\n+              />\n+            </Stack>;\n+          })\n+        }\n+        <Separator />\n+        <Text variant=\'xLarge\'>General</Text>\n+        <BoolToggleSettingsControl\n+          setting={{display_name: \'Start at login\', value: this.state.settings.general.startup}}\n+          on_change={this.parent_on_change}\n+          ref={(input) => {this.startup_reference=input;}}\n+          />\n+        <Stack>\n+        <Label>Version 0.11.0</Label>\n+          <DefaultButton\n+            styles={{\n+                root: {\n+                  backgroundColor: ""#FFFFFF"",\n+                  alignSelf: ""start""\n+                }\n+            }}\n+            href=\'https://github.com/microsoft/PowerToys/releases\'\n+            target=\'_blank\'\n+          >Check for updates</DefaultButton>\n+        </Stack>\n+        {/* An empty span to always give 30px padding in Edge. */}\n+        <span/>\n+      </Stack>\n+    )\n+  }\n+}'}, {'Name': 'src/settings-web/src/components/IntSpinnerSettingsControl.tsx', 'Line Additions': 99, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,99 @@\n+import React from 'react';\n+import {BaseSettingsControl} from './BaseSettingsControl';\n+import { SpinButton } from 'office-ui-fabric-react';\n+import { Position } from 'office-ui-fabric-react/lib/utilities/positioning';\n+\n+export class IntSpinnerSettingsControl extends BaseSettingsControl {\n+  spinbuttonref:any = null;\n+\n+  constructor(props:any) {\n+    super(props);\n+    this.spinbuttonref = null;\n+    this.state={\n+      property_values: props.setting\n+    }\n+  }\n+\n+  componentWillReceiveProps(props: any) {\n+    this.setState({ property_values: props.setting });\n+  }\n+\n+  public get_value() : any {\n+    return {value: parseInt(this.spinbuttonref.value)};\n+  }\n+\n+  public render(): JSX.Element {\n+    return (\n+      <SpinButton\n+        styles= {{\n+          spinButtonWrapperTopBottom: {\n+            maxWidth:'250px',\n+            alignSelf: 'start'\n+          },\n+          input: {\n+            // The input area of the SpinButton overlaps the border, causing\n+            // graphical issues depending on the Display scaling settings.\n+            // Removing background color fixes the graphical issues.\n+            backgroundColor: 'transparent',\n+          },\n+        }}\n+        value={this.state.property_values.value}\n+        onValidate={(value: string) => {\n+          if(value.trim().length === 0 || isNaN(+value)) {\n+            value=String(this.state.property_values.value);\n+          } else if (Number(value)<this.spinbuttonref.props.min) {\n+            value=String(this.spinbuttonref.props.min);\n+          } else if (Number(value)>this.spinbuttonref.props.max) {\n+            value=String(this.spinbuttonref.props.max);\n+          }\n+          this.setState( (prev_state:any) => ({\n+            property_values: { \n+              ...(prev_state.property_values),\n+              value: parseInt(value)\n+            }\n+          }));\n+          this.parent_on_change();\n+          return value;\n+        }}\n+        onIncrement={(value: string) => {\n+          if (Number(value) + this.spinbuttonref.props.step > this.spinbuttonref.props.max) {\n+            value = String(this.spinbuttonref.props.max);\n+          } else {\n+            value = String(+value + this.spinbuttonref.props.step) ;\n+          }\n+          this.setState( (prev_state:any) => ({\n+            property_values: { \n+              ...(prev_state.property_values),\n+              value: parseInt(value)\n+            }\n+          }));\n+          this.parent_on_change();\n+          return value;\n+        }}\n+        onDecrement={(value: string) => {\n+          if (Number(value) - this.spinbuttonref.props.step < this.spinbuttonref.props.min) {\n+            value = String(this.spinbuttonref.props.min);\n+          } else {\n+            value = String(+value - this.spinbuttonref.props.step) ;\n+          }\n+          this.setState( (prev_state:any) => ({\n+            property_values: { \n+              ...(prev_state.property_values),\n+              value: parseInt(value)\n+            }\n+          }));\n+          this.parent_on_change();\n+          return value;\n+        }}\n+        precision={0}\n+        step={this.state.property_values.step || 1}\n+        min={this.state.property_values.min || 0}\n+        max={this.state.property_values.max || 999999999}\n+        label={this.state.property_values.display_name}\n+        labelPosition={Position.top}\n+        componentRef= {(input) => {this.spinbuttonref=input;}}\n+      />\n+    );\n+  }\n+\n+}\n\\ No newline at end of file""}, {'Name': 'src/settings-web/src/components/StringTextSettingsControl.tsx', 'Line Additions': 51, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,51 @@\n+import React from 'react';\n+import {BaseSettingsControl} from './BaseSettingsControl';\n+import { TextField } from 'office-ui-fabric-react';\n+\n+export class StringTextSettingsControl extends BaseSettingsControl {\n+  textref:any = null; // Keeps a reference to the corresponding TextField in the DOM.\n+\n+  constructor(props:any) {\n+    super(props);\n+    this.textref = null;\n+    this.state={\n+      property_values: props.setting\n+    }\n+  }\n+  \n+  componentWillReceiveProps(props: any) {\n+    // Fully controlled component.\n+    // Reacting to a property change so that the control is redrawn properly.\n+    this.setState({ property_values: props.setting })\n+  }\n+\n+  public get_value() : any {\n+    // Returns the TextField value.\n+    return {value: this.textref.value};\n+  }\n+\n+  public render(): JSX.Element {\n+    // Renders a UI Fabric TextField.\n+    return (\n+      <TextField\n+        onChange = {\n+          (_event,_new_value) => {\n+            // Updates the state with the new value introduced in the TextField.\n+            this.setState( (prev_state:any) => ({\n+                property_values: {\n+                  ...(prev_state.property_values),\n+                  value: _new_value\n+                }\n+              })\n+            );\n+            // Signal the parent that the user changed a value.\n+            this.parent_on_change();\n+          }\n+        }\n+        value={this.state.property_values.value}\n+        label={this.state.property_values.display_name}\n+        componentRef= {(input) => {this.textref=input;}}\n+      />\n+    );\n+  }\n+}\n\\ No newline at end of file""}, {'Name': 'src/settings-web/src/components/fabric.png', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/settings-web/src/css/layout.css', 'Line Additions': 61, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,61 @@\n+.body {\n+  display: flex;\n+  flex-direction: row;\n+  height: 100%;\n+}\n+\n+.body .sidebar {\n+  order: -1;\n+  max-width: 228px;\n+  min-width: 228px;\n+  flex-basis: 228px;\n+  display: flex;\n+  flex-direction: column;\n+  background-color: #f3f2f1;\n+}\n+\n+.body .sidebar.collapsed {\n+  max-width: 48px;\n+  min-width: 48px;\n+  flex-basis: 48px;\n+}\n+\n+.body .editorzone {\n+  display: flex;\n+  flex-direction: column;\n+  flex-grow: 1;\n+}\n+\n+.body .editorzone .editorhead {\n+  display: flex;\n+  flex-direction: row;\n+  flex-grow: 1;\n+  min-height: 50px;\n+  max-height: 50px;\n+  border-bottom: 1px solid #f3f2f1;\n+  padding-left: 16px;\n+  padding-right: 16px;\n+}\n+\n+.body .editorzone .editorhead .editortitle {\n+  align-self: center;\n+  flex-basis: 0;\n+  flex-grow: 1;\n+  flex-shrink: 1;\n+  white-space: nowrap;\n+  overflow: hidden;\n+  text-overflow: ellipsis;\n+}\n+\n+.body .editorzone .editorhead .editorheadbuttons {\n+  justify-self: right;\n+  justify-content: right;\n+  align-self: center;\n+}\n+\n+.body .editorzone .editorbody {\n+  display: flex;\n+  position: relative;\n+  flex-direction: column;\n+  flex-grow: 1;\n+}'}, {'Name': 'src/settings-web/src/icons/README.md', 'Line Additions': 136, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,136 @@\n+# What is a font subset and why should I use one?\n+As the name implies, a font subset contains a portion of the complete set of characters included in a font. This is useful for fonts like [Office UI Fabric\'s icon font](https://developer.microsoft.com/en-us/fabric#/styles/icons), which includes far more characters than what any single application will need or should serve at once (>1000 characters, which is ~150KB for the .woff). Using a subset ensures that an application is only using the glyphs it needs at any given time, and saves significant bytes over the wire.\n+\n+If you\'re reading this, you\'ve probably already generated a subset of Fabric\'s icon font. Follow the instructions below to understand its contents and learn how to integrate it into your project.\n+\n+## Contents\n+1. [Get started](#get-started)\n+    - [Folder structure](#folder-structure)\n+2. [How to use icon subsets](#how-to-use-icon-subsets)\n+    - [Which subset should I use?](#which-subset-should-i-use)\n+      - [CSS and SCSS subsets](#css-and-scss-subsets)\n+      - [TypeScript subsets](#typescript-subsets)\n+3. [Maintaining a subset](#maintaining-a-subset)\n+    - [Font config options](#font-config-options)\n+      - [Subset chunk settings](#subset-chunk-settings)\n+\n+# Get started\n+## Folder structure\n+Each subset package will include some variation the following files, assuming a font name of `fabric-icons` (which can be configured in the tool—see Font config options below). Note that if ""Create subset chunks"" was selected when generating a subset, there will be an additional HTML, JSON, CSS, SCSS, and TS file for each generated ""chunked"" subset.\n+\n+```\n+fabric-icons\n+│   README.md: The docs you\'re reading now.\n+│   microsoft-ui-fabric-assets-license: License and usage terms for the fonts.\n+│   fabric-icons.html - Demo HTML for a given subset.\n+│\n+└─── config\n+│   │   fabric-icons.json - Configuration file for the subset package.\n+|        > Contains the list of icon names to be included as well as options for\n+|        > the subset itself. See the section below on ""maintaining a subset""\n+|        > for more details.\n+│\n+└─── css\n+|   │   fabric-icons.css - @font-face definition and icon classes for the subset. Links to the subsetted font file.\n+|   │   fabric-icons-inline.css - Same as standard CSS, but includes the base64-encoded WOFF font file inline.\n+│\n+└─── scss\n+|   │   fabric-icons.scss - Same as standard CSS and adds a mixin for each icon.\n+|   │   fabric-icons-inline.scss - Same as standard SCSS, but includes the base64-encoded WOFF font file inline.\n+│\n+└─── fonts\n+|   │   fabric-icons.woff - The subsetted icon font.\n+│\n+└─── src\n+|   │   index.ts - Contains top-level exports for all subset initialization code.\n+|   │   fabric-icons.ts - TypeScript subset options and initialization code.\n+|   │   IconNames.ts - Contains const enum of all available icon names for Intellisense.\n+```\n+\n+# How to use icon subsets\n+The icon subsets included here are based on the CSS and SCSS approaches of [office-ui-fabric-core](https://github.com/OfficeDev/office-ui-fabric-core/) (see the [icons page on the Fabric website](https://developer.microsoft.com/en-us/fabric#/styles/icons)), and TypeScript-based approach of [`@uifabric/icons`](https://www.npmjs.com/package/@uifabric/icons), which is what\'s used in [office-ui-fabric-react](https://github.com/OfficeDev/office-ui-fabric-react/). Each subset can be used independently of either of those projects, meaning your app doesn\'t need to have them installed in order to use the icon subsets in this package. The instructions here will help you get started quickly using each subset method, but you should refer to the full documentation for each for more detail.\n+\n+## Which subset should I use?\n+\n+### CSS and SCSS subsets\n+The CSS and SCSS methods are similar to what\'s used in [office-ui-fabric-core](https://github.com/OfficeDev/office-ui-fabric-core/), which is useful for quickly applying Microsoft\'s design language to an HTML and CSS-based web app. Both include class names you can use in plain HTML, and differ only in that the SCSS files require a SASS preprocessor to use its icon mixins and build its output into plain CSS.\n+\n+**Use the CSS subset** if your app is relatively simple (e.g. no build process) or you aren\'t already using SCSS. Simply add a link to one of the icons CSS files to your page, or `@import` it into another CSS file, and add the icon classes to HTML elements like so:\n+```css\n+<i class=""ms-Icon ms-Icon--Edit""></i>\n+```\n+\n+**Use the SCSS subset** if your app already uses [SCSS](http://sass-lang.com/) in a build pipeline, or you wish to use the icon mixins to inject the icon code into your own class names.\n+\n+For example, if you wish to use the same Edit icon as before but without using the standard `.ms-Icon--Edit` class, you can use the mixins to inject the icon code into a custom class like so:\n+\n+```scss\n+.myClassName:before { @include ms-Icon--Edit }\n+```\n+\n+This would result in the following code being generated:\n+\n+```scss\n+.myClassName:before { content: ""\\E70F""; }\n+```\n+\n+You may wish to use this approach if there may be multiple versions of Fabric on the page and you want to ensure there won\'t be any rendering conflicts. However, be sure to either add the `.ms-Icon` class to those elements *or* `@include ms-Icon` in your custom class name as this sets the `@font-family` to the font in your subset.\n+\n+### TypeScript subsets\n+The TypeScript subset method included under `src` is similar to what\'s used in [`@uifabric/icons`](https://www.npmjs.com/package/@uifabric/icons) and will make the most sense in applications that use [office-ui-fabric-react](https://github.com/OfficeDev/office-ui-fabric-react/) controls.\n+\n+As a prerequisite to using these subsets, ensure that your project is configured to build TypeScript. You may wish to use a tool like [create-react-app-typescript](https://github.com/wmonk/create-react-app-typescript) or Microsoft\'s own [TypeScript-React-Starter](https://github.com/Microsoft/TypeScript-React-Starter). This is a temporary limitation—future updates to the subsetter tool will include pre-compiled subsets that you\'ll be able to use with simpler configurations.\n+\n+Once your project is configured, in your source code, import the `initializeIcons` function and call it on the page(s) you wish to use the icons:\n+\n+```tsx\n+import { initializeIcons } from \'path-to-subset/src\';\n+\n+initializeIcons();\n+```\n+\n+This defines an `@font-face` rule and registers a map of icon names for the subset. Once initialized, icons can be used through the `getIcon` API in `office-ui-fabric-react`, like below:\n+\n+```tsx\n+import { Icon } from \'office-ui-fabric-react/lib/Icon\';\n+\n+<Icon iconName=\'Snow\' />\n+```\n+\n+CSS classnames can also be used directly on elements using the `getIconClassNames` API from `@uifabric/styling`:\n+\n+```tsx\n+import { getIconClassName } from \'@uifabric/styling\';\n+\n+return `<i class=""${getIconClassName(\'Snow\')}"" />`;\n+```\n+\n+More details on JavaScript-based icon usage can be found on [Office UI Fabric React\'s wiki](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Using-icons), [`@uifabric/icons`](https://www.npmjs.com/package/@uifabric/icons), and [`@uifabric/styling`](https://www.npmjs.com/package/@uifabric/styling#using-fabric-core-classes).\n+\n+\n+# Maintaining a subset\n+Each subset package has a configuration JSON file that describes which icons are included in that subset and which options were selected for the subset, such as `chunkSubsets` or `excludeGlyphs`. This file is used to maintain and update the subset over time--it can be dragged and dropped on to the Fabric Icons tool to pre-populate icon selection and whichever options were chosen in the tool.\n+\n+It is recommended to check this file in to a project\'s source control and update it each time you make changes to a subset.\n+\n+Most options map to a text field or checkbox in the ""Subset options"" section of the details pane of Fabric Icons tool. This is represented by the ""Tool label"" column below.\n+\n+\n+## Font config options\n+| Option        | Default value | Tool label | Description  |\n+|:------------- |:--------------|:--- |:-----------------|\n+| `fontName` | `\'fabric-icons\'` | Font file name | The name given to each of the subset\'s HTML, CSS, SCSS, TS, and JSON files. |\n+| `fontFamilyName` | `\'FabricMDL2Icons\'` | Font-family name | The name of the font-family given in the @font-face definition for the subset. It is recommended to change this only if the icon subset will be used in conjunction with multiple, different versions of Fabric or other icon subsets on the same page. |\n+| `excludeGlyphs` | `false` | Exclude selection from subset | Produces a subset that excludes the selected glyphs from the full Fabric icon set. This is useful if you wish to create a subset that includes all of the Fabric icons EXCEPT for the selected icons.|\n+| `chunkSubsets` | `false` | Create subset chunks | Controls whether to produce additional subsets that can be loaded on-demand.|\n+| `hashFontFileName` | `false` | Hash font file name | Controls whether to add a unique hash to the .woff font file based on glyph selection and subset options. This is useful for [CDN cache busting](http://www.adopsinsider.com/ad-ops-basics/what-is-a-cache-buster-and-how-does-it-work//) if you plan on hosting font files on a CDN, which may serve old cached versions of a font without a busting mechanism. |\n+| `subsetChunkSettings` | { } | N/A | Additional configuration options for subset chunks. Options here only apply if `chunkSubsets` is `true`. See ""Subset chunk settings"" below for more details. |\n+| `glyphs` | [{ }] | N/A | The list of icons included in a subset, populated from selecting icons in the Fabric Icons tool. Each glyph is an object with a `name` and `unicode` property. |\n+\n+### Subset chunk settings\n+Each option here is a property of `subsetChunkSettings`, and only apply if `chunkSubsets` is `true`.\n+\n+| Option        | Default value | Tool label | Description  |\n+|:------------- |:--------------|:--- |:-----------------|\n+| `maxSubsetSize` | `100` | Max subset chunk size | The maximum number of icons to be included in a generated subset chunk. Larger chunks take longer to load as they will have more characters and larger fonts, but smaller chunks may incur more HTTP requests. |\n+'}, {'Name': 'src/settings-web/src/icons/config/fabric-icons.json', 'Line Additions': 77, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,77 @@\n+{\n+  ""fontName"": ""fabric-icons"",\n+  ""fontFamilyName"": ""FabricMDL2Icons"",\n+  ""excludeGlyphs"": false,\n+  ""excludeThirdPartyIcons"": false,\n+  ""chunkSubsets"": false,\n+  ""hashFontFileName"": false,\n+  ""subsetChunkSettings"": {\n+    ""maxSubsetSize"": 100\n+  },\n+  ""glyphs"": [\n+    {\n+      ""name"": ""GlobalNavButton"",\n+      ""unicode"": ""E700""\n+    },\n+    {\n+      ""name"": ""ChevronDown"",\n+      ""unicode"": ""E70D""\n+    },\n+    {\n+      ""name"": ""ChevronUp"",\n+      ""unicode"": ""E70E""\n+    },\n+    {\n+      ""name"": ""Cancel"",\n+      ""unicode"": ""E711""\n+    },\n+    {\n+      ""name"": ""Settings"",\n+      ""unicode"": ""E713""\n+    },\n+    {\n+      ""name"": ""ChevronLeft"",\n+      ""unicode"": ""E76B""\n+    },\n+    {\n+      ""name"": ""ChevronRight"",\n+      ""unicode"": ""E76C""\n+    },\n+    {\n+      ""name"": ""ChevronUpSmall"",\n+      ""unicode"": ""E96D""\n+    },\n+    {\n+      ""name"": ""ChevronDownSmall"",\n+      ""unicode"": ""E96E""\n+    },\n+    {\n+      ""name"": ""ChevronLeftSmall"",\n+      ""unicode"": ""E96F""\n+    },\n+    {\n+      ""name"": ""ChevronRightSmall"",\n+      ""unicode"": ""E970""\n+    },\n+    {\n+      ""name"": ""ChevronUpMed"",\n+      ""unicode"": ""E971""\n+    },\n+    {\n+      ""name"": ""ChevronDownMed"",\n+      ""unicode"": ""E972""\n+    },\n+    {\n+      ""name"": ""ChevronLeftMed"",\n+      ""unicode"": ""E973""\n+    },\n+    {\n+      ""name"": ""ChevronRightMed"",\n+      ""unicode"": ""E974""\n+    },\n+    {\n+      ""name"": ""CircleRing"",\n+      ""unicode"": ""EA3A""\n+    }\n+  ]\n+}\n\\ No newline at end of file'}, {'Name': 'src/settings-web/src/icons/css/fabric-icons-inline.css', 'Line Additions': 34, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,34 @@\n+/*\n+  Your use of the content in the files referenced here is subject to the terms of the license at https://aka.ms/fabric-assets-license\n+*/\n+@font-face {\n+  font-family: \'FabricMDL2Icons\';\n+  src: url(\'data:application/octet-stream;base64,d09GRgABAAAAAAu8AA4AAAAAFYgAA2PXAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABRAAAAEgAAABgMUZxSWNtYXAAAAGMAAAAWwAAAXqhL5+fY3Z0IAAAAegAAAAgAAAAKgnZCa9mcGdtAAACCAAAAPAAAAFZ/J7mjmdhc3AAAAL4AAAADAAAAAwACAAbZ2x5ZgAAAwQAAANmAAAFdLqlsAxoZWFkAAAGbAAAADIAAAA2AGEB92hoZWEAAAagAAAAFQAAACQQAQgDaG10eAAABrgAAAAmAAAAJhJIBzVsb2NhAAAG4AAAACQAAAAkDIYOZG1heHAAAAcEAAAAHQAAACAAKgH2bmFtZQAAByQAAAP2AAAJ+o+d8VFwb3N0AAALHAAAABQAAAAg/1EAiHByZXAAAAswAAAAiQAAANN4vfIOeJxjYGG/yjiBgZWBgXUWqzEDA6M0hGa+yJDGJMTBysrFyMQIBgxAIMCAAL7BCgoMDs8ZXllxgPkQkgGsjgXCU2BgAADopwgseJxjYGBgZoBgGQZGBhAoAfIYwXwWhgggLcQgABRhes7wnPc533PB58LPc16WvLL6/5+BAUks+2UuSEySUeKrxHeJTxIfJWaLzRa9BjUTDTCyYRMdWQAAVKwc+wB4nGPQYghlKGBoYFjFyMDYwOzAeIDBAYsIEAAAqhwHlXicXY+/TsNADMZzJLSEJ0A6IZ11KkOViJ3phksk1CUlDOelgNRKpO+AlIXFA8/ibhnzYgjMEf4utr/P+ny/c6f5yXx2nKVHKilWnDfhoNQLDurtmf35IU/vNmVhTNV5VvdlwWoJomtOF/VNsGjI0PWWTG0eH7acLWKXxY7w0nDShk7qbQB2qL/HHeJVPJLFI4QS30/xfYxL+rUsVobTiyasA/des/OoAUzFYxN49BoQf8ikP3VnE+NsOWXbwE5zgkSfygL3RJqE+0uPf/Wgkv+G+23Iv6tB9U3c9Bb0h2HBgrChl2fbUAkaYPkOhPxkxgABAAIACAAK//8AD3iclZPPaxtXEMdn3uzuSC1Waq/ktVJQa8mSECVqKlveQ0BxIZCkEB19WKOQUw6F6BISEASsQImbgi92bj2YRDR/QAKhxn9Arrnl1F5CqotzkFNoVrxdOrv6EQX3Uv3YNzvzmfedtzsDCp4CGD+Zd4GAAdz55fni8vzyU/pTv1Avgh/AvDv85ZHRBPkQAHYTYEkCJCEFFTiKvQTGN78DfHEIc2D9fQifAck1Edum2Oe/w+X6cmZ+eknAB/j4N7vdroZuV+H2NiDY+Be/s85JJqCTRBd539O2tj3at86JRe88fUu49/Ce53gOPgdIIiexLGwSHWNLPfOCa8E1Tz0Lmp56rp57BnxyGzQFgegUFlg85CG4cBt24FdRTC9m0lbGpKLFtkl5q5AvFahol8riWivV19brRdtcd8VVW1+tLa4KtOgUbWxgfa1UdstmFct2matYyFtcZjuFXGQnhZn0osNOMYcOOW4OV2vrruNSA13TxVpOZdIpVchXVX2toexaQ9aq3KfEn1PWP4hIB+HrpbOXwvuPkwtJ+T0O7186uxS+PkBCDIMDrEgUtydR3JYoVg7Cn5VhqOPNcPDV96WLrx45552lb5f2X10sbXwdDjaPR1E8czqKZzb1XvPhzQsXbj5sTlb3xpVK5coNd7waK/+vmGD2IOEfoiWKU7njT0udjZ4qVf04W1a0Bt2ZwuJVeoQUcWBtRb2UVNIg3NMt3fIooEARPdHXPQq1inob8TcgM+AgYovJqPPMnlYUevo6PaEow4tyY1ZJz1tbU1babma3FvWo52nSFLPA2GLfuhyNzahP0QDyT7Sv/ROSgOYBsfYH5E/4Q+F7ER/3vyTxiWbNJ8TEVm+gmfyB9olHdR+CONmP91eyv2P1ouAIYx7riKKwLWEvT9hoYFST/EkB7E9VhIWsynLf6kxZ5rbe03sd6lO/o7LUjm2d7UQs7nDf7I/OGE2hnFEi1KZ2R0tQMvRebI9q3oGs2eeYHz1rNts6O6GysUQsJs86C1mrM2ZHM65EeKI+FZGt4xeZkC98KRMNWDNyaiGTVillFPIrVSVTtdBQKzJfhsyX+FKGzJdhwC5ab44eXL364OhNONzdDYeTO7R277192buzsXGn9/LtvRk7Af9Jj3f60D2VMLalwn8BDliIAQAAeJxjYGRgYGBOvp43+b9GPL/NVwZuDgYQ2P/3YAOIvunUvwhEczCAxTkZmEAUAGSmCn0AAHicY2BkYOBgAAE4yciACpgAAsoAHQAAAAUqAKYIAAAAABMA8wAGAAMBpQIDAAcABwG5AV0AGQAZAYcCGQAAAAAAAAAWAEgAXAB+AW4BhAGaAbAByAHgAfYCDAIiAjoCUAJmArp4nGNgZGBgEGSYw8DCAAKMYJILhBkjQUwAFCoBIgAAAHictVQ/axxHFH+nO1sKjkUwBFxOEYIsjj1bKozsSthxZTWyEbgJzO3M7Q7e2xlmZr1scOHSRT5GGkM+RUggZep8gtSpUua9t7N3ku9ilEDu2NnfvHl/f+/NAsDd0dcwgv53jE+PR3AHdz3egV34JuExyp8nPEH8bcI34HNwCd+EL+BtwrtwAt8nvAdfwi8J34JD+D3h26OfR5OE9+Fw51eMMpp8hju182fCI/hqfJHwDuyPv0t4jPL3CU8Q/5jwDbg7/i3hmyDGfyS8C36yl/AeHE4GP7fg5eSHhG+P30/+SngfXu69++mDOLr/4KE4M7m3wS6ieGK9s15GY+tMnFaVODdFGYM410H7N1plz+Tcm1ycPX1+JE5D0DGc66KppN882JRcaB/QszjOjk/6Uzrsz17owmphgpAieqn0UvrXwi5ELPWl/ApvG0fi3C6drI0O2dbkyxjdo9msbdtsOZxnaDOLnbOFl67sZgtbxzBbm4fGucpoJeggE69sI5ayE03QmAQmRmIRrci9llFPhTLBVbKbClkr4bzB0xxVNL5lEE77pYkR3c07LqIyua7JFx4EYf0AFhRhulmq81Y1eZwKYh5tp2QzBDC1aEuTl5cyazGoqfOqUdimVfa2rjpxYO4JvZxjLmt19PCpbFldmboQXoeInSJW1wHIfOXrMTNwYDBK1EtqgTcYVdm2rqxUV9mTPVXaUzkWQ+HaRNdEoTSVSTqlrtxVRnEY6y6pU0PQIfJTmrnBnLPrdxs+gIAjuA8P4CGiMzCQgwcLAZ8FRJQ9QeTxztMqUWIQ1ZDhySlU+BdwjrICSjwLvNP41qj9BleFms/Qbo578k0xnuKX5YjtA2uSHVkV0KA/iZrXsbiOzgXnEVLOAr90GT4nV2wHy8t2Lzgbi6tAHapK4hOZAYXSJWf5GmXEEp2UrLuNv4L3DTI4aOf4XuJeYk6G2cr+BfPEc0TpI5jhv+V/hv4+ts9SnBnijr0U7Mehhw6lC/ZG1c62Rg+cs8OOGO6jWFlQ719xTYKZ6PDdMHc9Ez1jgzbJLFftUYPq0DDFvWI9xx3vWEJ8UBzHnelt8+RFp71k3477SjVHPiOrOecxdKLiishqyKu3CNwFvyFZrGqYXqurjvcKbXLcT5mvfub7uNNVnI8rMDyJLfOU47qdszZVSto5VtPw3Kmt3JNNxegA9e/hmyZ0nnjZ5r3P4b9yu/au2FOBMs9zHNOdGmZ1WwVD9M28Hl+aAaqkryVyvOEWkP++VoWSliu3fCs/NXvyylRp7otNa19Vjxu+WQ1bUrZDNwc/pFnxTf7nGe2/jHXqzNr7cENMYpnmh/KdM9N9b/+Hu/03eW84mAAAeJxjYGYAg/9+DOUMmEAQACk7Adl4nNvAoM2wiZGTSZtxExeI3M7Vmhtqq8rAob2dOzXYQU8GxOKJ8LDQkASxeJ3NteWFQSw+HRUZER4Qi19OQpiPA8QS4OPhZGcBsQTBAMQS2jChIMAAyGLYzgg3mgluNDPcaBa40axwo9nkJKFGs8ON5oAbzQk3epMwI7v2BgYF19pMCRcAxAEoGgAAAA==\') format(\'truetype\');\n+}\n+\n+.ms-Icon {\n+  -moz-osx-font-smoothing: grayscale;\n+  -webkit-font-smoothing: antialiased;\n+  display: inline-block;\n+  font-family: \'FabricMDL2Icons\';\n+  font-style: normal;\n+  font-weight: normal;\n+  speak: none;\n+}\n+\n+.ms-Icon--GlobalNavButton:before { content: ""\\E700""; }\n+.ms-Icon--ChevronDown:before { content: ""\\E70D""; }\n+.ms-Icon--ChevronUp:before { content: ""\\E70E""; }\n+.ms-Icon--Cancel:before { content: ""\\E711""; }\n+.ms-Icon--Settings:before { content: ""\\E713""; }\n+.ms-Icon--ChevronLeft:before { content: ""\\E76B""; }\n+.ms-Icon--ChevronRight:before { content: ""\\E76C""; }\n+.ms-Icon--ChevronUpSmall:before { content: ""\\E96D""; }\n+.ms-Icon--ChevronDownSmall:before { content: ""\\E96E""; }\n+.ms-Icon--ChevronLeftSmall:before { content: ""\\E96F""; }\n+.ms-Icon--ChevronRightSmall:before { content: ""\\E970""; }\n+.ms-Icon--ChevronUpMed:before { content: ""\\E971""; }\n+.ms-Icon--ChevronDownMed:before { content: ""\\E972""; }\n+.ms-Icon--ChevronLeftMed:before { content: ""\\E973""; }\n+.ms-Icon--ChevronRightMed:before { content: ""\\E974""; }\n+.ms-Icon--CircleRing:before { content: ""\\EA3A""; }'}, {'Name': 'src/settings-web/src/icons/css/fabric-icons.css', 'Line Additions': 34, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,34 @@\n+/*\n+  Your use of the content in the files referenced here is subject to the terms of the license at https://aka.ms/fabric-assets-license\n+*/\n+@font-face {\n+  font-family: \'FabricMDL2Icons\';\n+  src: url(\'../fonts/fabric-icons.woff\') format(\'woff\');\n+}\n+\n+.ms-Icon {\n+  -moz-osx-font-smoothing: grayscale;\n+  -webkit-font-smoothing: antialiased;\n+  display: inline-block;\n+  font-family: \'FabricMDL2Icons\';\n+  font-style: normal;\n+  font-weight: normal;\n+  speak: none;\n+}\n+\n+.ms-Icon--GlobalNavButton:before { content: ""\\E700""; }\n+.ms-Icon--ChevronDown:before { content: ""\\E70D""; }\n+.ms-Icon--ChevronUp:before { content: ""\\E70E""; }\n+.ms-Icon--Cancel:before { content: ""\\E711""; }\n+.ms-Icon--Settings:before { content: ""\\E713""; }\n+.ms-Icon--ChevronLeft:before { content: ""\\E76B""; }\n+.ms-Icon--ChevronRight:before { content: ""\\E76C""; }\n+.ms-Icon--ChevronUpSmall:before { content: ""\\E96D""; }\n+.ms-Icon--ChevronDownSmall:before { content: ""\\E96E""; }\n+.ms-Icon--ChevronLeftSmall:before { content: ""\\E96F""; }\n+.ms-Icon--ChevronRightSmall:before { content: ""\\E970""; }\n+.ms-Icon--ChevronUpMed:before { content: ""\\E971""; }\n+.ms-Icon--ChevronDownMed:before { content: ""\\E972""; }\n+.ms-Icon--ChevronLeftMed:before { content: ""\\E973""; }\n+.ms-Icon--ChevronRightMed:before { content: ""\\E974""; }\n+.ms-Icon--CircleRing:before { content: ""\\EA3A""; }'}, {'Name': 'src/settings-web/src/icons/fabric-icons.html', 'Line Additions': 276, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,276 @@\n+<!doctype html>\n+<html lang=""en"">\n+<head>\n+  <meta charset=""UTF-8"">\n+  <title>fabric-icons demo</title>\n+  <link rel=""stylesheet"" href=""css/fabric-icons.css"">\n+  <style>\n+  * {\n+    box-sizing: border-box;\n+  }\n+\n+  html,\n+  body {\n+    padding: 0;\n+    margin: 0;\n+    color: #333333;\n+    font-family: ""Segoe UI Regular WestEuropean"", ""Segoe UI"", Tahoma, Arial, sans-serif;\n+    font-size: 14px;\n+    font-weight: normal;\n+  }\n+\n+  body {\n+    padding: 0 20px;\n+  }\n+\n+  .IconContainer {\n+    font-size: 14px;\n+    float: left;\n+    margin: 0 5px 5px 0;\n+    width: 50px;\n+    height: 50px;\n+    line-height: 51px;\n+  }\n+\n+  .IconContainer-icon {\n+    text-align: center;\n+  }\n+\n+  .IconContainer-name,\n+  .IconContainer-unicode {\n+    display: none;\n+  }\n+  </style>\n+</head>\n+<body>\n+  <h1 class=""ms-font-su"">fabric-icons</h1>\n+\n+  <div class=""Icons"">\n+    \n+    <div class=""IconContainer"" title=""GlobalNavButton - E700"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--GlobalNavButton""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        GlobalNavButton\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E700\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronDown - E70D"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronDown""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronDown\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E70D\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronUp - E70E"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronUp""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronUp\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E70E\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""Cancel - E711"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--Cancel""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        Cancel\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E711\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""Settings - E713"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--Settings""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        Settings\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E713\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronLeft - E76B"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronLeft""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronLeft\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E76B\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronRight - E76C"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronRight""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronRight\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E76C\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronUpSmall - E96D"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronUpSmall""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronUpSmall\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E96D\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronDownSmall - E96E"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronDownSmall""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronDownSmall\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E96E\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronLeftSmall - E96F"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronLeftSmall""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronLeftSmall\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E96F\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronRightSmall - E970"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronRightSmall""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronRightSmall\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E970\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronUpMed - E971"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronUpMed""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronUpMed\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E971\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronDownMed - E972"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronDownMed""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronDownMed\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E972\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronLeftMed - E973"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronLeftMed""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronLeftMed\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E973\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""ChevronRightMed - E974"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--ChevronRightMed""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        ChevronRightMed\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        E974\n+      </div>\n+    </div>\n+    \n+    <div class=""IconContainer"" title=""CircleRing - EA3A"">\n+      <div class=""IconContainer-icon"">\n+        <i class=""ms-Icon ms-Icon--CircleRing""></i>\n+      </div>\n+\n+      <div class=""IconContainer-name ms-font-l"">\n+        CircleRing\n+      </div>\n+\n+      <div class=""IconContainer-unicode ms-font-s"">\n+        EA3A\n+      </div>\n+    </div>\n+    \n+  </div>\n+</body>\n+</html>\n\\ No newline at end of file'}, {'Name': 'src/settings-web/src/icons/fonts/fabric-icons.woff', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/settings-web/src/icons/microsoft-ui-fabric-assets-license.pdf', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'src/settings-web/src/icons/scss/fabric-icons-inline.scss', 'Line Additions': 55, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,55 @@\n+/*\n+  Your use of the content in the files referenced here is subject to the terms of the license at https://aka.ms/fabric-assets-license\n+*/\n+@font-face {\n+  font-family: \'FabricMDL2Icons\';\n+  src: url(\'data:application/octet-stream;base64,d09GRgABAAAAAAu8AA4AAAAAFYgAA2PXAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABRAAAAEgAAABgMUZxSWNtYXAAAAGMAAAAWwAAAXqhL5+fY3Z0IAAAAegAAAAgAAAAKgnZCa9mcGdtAAACCAAAAPAAAAFZ/J7mjmdhc3AAAAL4AAAADAAAAAwACAAbZ2x5ZgAAAwQAAANmAAAFdLqlsAxoZWFkAAAGbAAAADIAAAA2AGEB92hoZWEAAAagAAAAFQAAACQQAQgDaG10eAAABrgAAAAmAAAAJhJIBzVsb2NhAAAG4AAAACQAAAAkDIYOZG1heHAAAAcEAAAAHQAAACAAKgH2bmFtZQAAByQAAAP2AAAJ+o+d8VFwb3N0AAALHAAAABQAAAAg/1EAiHByZXAAAAswAAAAiQAAANN4vfIOeJxjYGG/yjiBgZWBgXUWqzEDA6M0hGa+yJDGJMTBysrFyMQIBgxAIMCAAL7BCgoMDs8ZXllxgPkQkgGsjgXCU2BgAADopwgseJxjYGBgZoBgGQZGBhAoAfIYwXwWhgggLcQgABRhes7wnPc533PB58LPc16WvLL6/5+BAUks+2UuSEySUeKrxHeJTxIfJWaLzRa9BjUTDTCyYRMdWQAAVKwc+wB4nGPQYghlKGBoYFjFyMDYwOzAeIDBAYsIEAAAqhwHlXicXY+/TsNADMZzJLSEJ0A6IZ11KkOViJ3phksk1CUlDOelgNRKpO+AlIXFA8/ibhnzYgjMEf4utr/P+ny/c6f5yXx2nKVHKilWnDfhoNQLDurtmf35IU/vNmVhTNV5VvdlwWoJomtOF/VNsGjI0PWWTG0eH7acLWKXxY7w0nDShk7qbQB2qL/HHeJVPJLFI4QS30/xfYxL+rUsVobTiyasA/des/OoAUzFYxN49BoQf8ikP3VnE+NsOWXbwE5zgkSfygL3RJqE+0uPf/Wgkv+G+23Iv6tB9U3c9Bb0h2HBgrChl2fbUAkaYPkOhPxkxgABAAIACAAK//8AD3iclZPPaxtXEMdn3uzuSC1Waq/ktVJQa8mSECVqKlveQ0BxIZCkEB19WKOQUw6F6BISEASsQImbgi92bj2YRDR/QAKhxn9Arrnl1F5CqotzkFNoVrxdOrv6EQX3Uv3YNzvzmfedtzsDCp4CGD+Zd4GAAdz55fni8vzyU/pTv1Avgh/AvDv85ZHRBPkQAHYTYEkCJCEFFTiKvQTGN78DfHEIc2D9fQifAck1Edum2Oe/w+X6cmZ+eknAB/j4N7vdroZuV+H2NiDY+Be/s85JJqCTRBd539O2tj3at86JRe88fUu49/Ce53gOPgdIIiexLGwSHWNLPfOCa8E1Tz0Lmp56rp57BnxyGzQFgegUFlg85CG4cBt24FdRTC9m0lbGpKLFtkl5q5AvFahol8riWivV19brRdtcd8VVW1+tLa4KtOgUbWxgfa1UdstmFct2matYyFtcZjuFXGQnhZn0osNOMYcOOW4OV2vrruNSA13TxVpOZdIpVchXVX2toexaQ9aq3KfEn1PWP4hIB+HrpbOXwvuPkwtJ+T0O7186uxS+PkBCDIMDrEgUtydR3JYoVg7Cn5VhqOPNcPDV96WLrx45552lb5f2X10sbXwdDjaPR1E8czqKZzb1XvPhzQsXbj5sTlb3xpVK5coNd7waK/+vmGD2IOEfoiWKU7njT0udjZ4qVf04W1a0Bt2ZwuJVeoQUcWBtRb2UVNIg3NMt3fIooEARPdHXPQq1inob8TcgM+AgYovJqPPMnlYUevo6PaEow4tyY1ZJz1tbU1babma3FvWo52nSFLPA2GLfuhyNzahP0QDyT7Sv/ROSgOYBsfYH5E/4Q+F7ER/3vyTxiWbNJ8TEVm+gmfyB9olHdR+CONmP91eyv2P1ouAIYx7riKKwLWEvT9hoYFST/EkB7E9VhIWsynLf6kxZ5rbe03sd6lO/o7LUjm2d7UQs7nDf7I/OGE2hnFEi1KZ2R0tQMvRebI9q3oGs2eeYHz1rNts6O6GysUQsJs86C1mrM2ZHM65EeKI+FZGt4xeZkC98KRMNWDNyaiGTVillFPIrVSVTtdBQKzJfhsyX+FKGzJdhwC5ab44eXL364OhNONzdDYeTO7R277192buzsXGn9/LtvRk7Af9Jj3f60D2VMLalwn8BDliIAQAAeJxjYGRgYGBOvp43+b9GPL/NVwZuDgYQ2P/3YAOIvunUvwhEczCAxTkZmEAUAGSmCn0AAHicY2BkYOBgAAE4yciACpgAAsoAHQAAAAUqAKYIAAAAABMA8wAGAAMBpQIDAAcABwG5AV0AGQAZAYcCGQAAAAAAAAAWAEgAXAB+AW4BhAGaAbAByAHgAfYCDAIiAjoCUAJmArp4nGNgZGBgEGSYw8DCAAKMYJILhBkjQUwAFCoBIgAAAHictVQ/axxHFH+nO1sKjkUwBFxOEYIsjj1bKozsSthxZTWyEbgJzO3M7Q7e2xlmZr1scOHSRT5GGkM+RUggZep8gtSpUua9t7N3ku9ilEDu2NnfvHl/f+/NAsDd0dcwgv53jE+PR3AHdz3egV34JuExyp8nPEH8bcI34HNwCd+EL+BtwrtwAt8nvAdfwi8J34JD+D3h26OfR5OE9+Fw51eMMpp8hju182fCI/hqfJHwDuyPv0t4jPL3CU8Q/5jwDbg7/i3hmyDGfyS8C36yl/AeHE4GP7fg5eSHhG+P30/+SngfXu69++mDOLr/4KE4M7m3wS6ieGK9s15GY+tMnFaVODdFGYM410H7N1plz+Tcm1ycPX1+JE5D0DGc66KppN882JRcaB/QszjOjk/6Uzrsz17owmphgpAieqn0UvrXwi5ELPWl/ApvG0fi3C6drI0O2dbkyxjdo9msbdtsOZxnaDOLnbOFl67sZgtbxzBbm4fGucpoJeggE69sI5ayE03QmAQmRmIRrci9llFPhTLBVbKbClkr4bzB0xxVNL5lEE77pYkR3c07LqIyua7JFx4EYf0AFhRhulmq81Y1eZwKYh5tp2QzBDC1aEuTl5cyazGoqfOqUdimVfa2rjpxYO4JvZxjLmt19PCpbFldmboQXoeInSJW1wHIfOXrMTNwYDBK1EtqgTcYVdm2rqxUV9mTPVXaUzkWQ+HaRNdEoTSVSTqlrtxVRnEY6y6pU0PQIfJTmrnBnLPrdxs+gIAjuA8P4CGiMzCQgwcLAZ8FRJQ9QeTxztMqUWIQ1ZDhySlU+BdwjrICSjwLvNP41qj9BleFms/Qbo578k0xnuKX5YjtA2uSHVkV0KA/iZrXsbiOzgXnEVLOAr90GT4nV2wHy8t2Lzgbi6tAHapK4hOZAYXSJWf5GmXEEp2UrLuNv4L3DTI4aOf4XuJeYk6G2cr+BfPEc0TpI5jhv+V/hv4+ts9SnBnijr0U7Mehhw6lC/ZG1c62Rg+cs8OOGO6jWFlQ719xTYKZ6PDdMHc9Ez1jgzbJLFftUYPq0DDFvWI9xx3vWEJ8UBzHnelt8+RFp71k3477SjVHPiOrOecxdKLiishqyKu3CNwFvyFZrGqYXqurjvcKbXLcT5mvfub7uNNVnI8rMDyJLfOU47qdszZVSto5VtPw3Kmt3JNNxegA9e/hmyZ0nnjZ5r3P4b9yu/au2FOBMs9zHNOdGmZ1WwVD9M28Hl+aAaqkryVyvOEWkP++VoWSliu3fCs/NXvyylRp7otNa19Vjxu+WQ1bUrZDNwc/pFnxTf7nGe2/jHXqzNr7cENMYpnmh/KdM9N9b/+Hu/03eW84mAAAeJxjYGYAg/9+DOUMmEAQACk7Adl4nNvAoM2wiZGTSZtxExeI3M7Vmhtqq8rAob2dOzXYQU8GxOKJ8LDQkASxeJ3NteWFQSw+HRUZER4Qi19OQpiPA8QS4OPhZGcBsQTBAMQS2jChIMAAyGLYzgg3mgluNDPcaBa40axwo9nkJKFGs8ON5oAbzQk3epMwI7v2BgYF19pMCRcAxAEoGgAAAA==\') format(\'truetype\');\n+}\n+\n+.ms-Icon {\n+  -moz-osx-font-smoothing: grayscale;\n+  -webkit-font-smoothing: antialiased;\n+  display: inline-block;\n+  font-family: \'FabricMDL2Icons\';\n+  font-style: normal;\n+  font-weight: normal;\n+  speak: none;\n+}\n+\n+// Mixins\n+@mixin ms-Icon--GlobalNavButton { content: ""\\E700""; }\n+@mixin ms-Icon--ChevronDown { content: ""\\E70D""; }\n+@mixin ms-Icon--ChevronUp { content: ""\\E70E""; }\n+@mixin ms-Icon--Cancel { content: ""\\E711""; }\n+@mixin ms-Icon--Settings { content: ""\\E713""; }\n+@mixin ms-Icon--ChevronLeft { content: ""\\E76B""; }\n+@mixin ms-Icon--ChevronRight { content: ""\\E76C""; }\n+@mixin ms-Icon--ChevronUpSmall { content: ""\\E96D""; }\n+@mixin ms-Icon--ChevronDownSmall { content: ""\\E96E""; }\n+@mixin ms-Icon--ChevronLeftSmall { content: ""\\E96F""; }\n+@mixin ms-Icon--ChevronRightSmall { content: ""\\E970""; }\n+@mixin ms-Icon--ChevronUpMed { content: ""\\E971""; }\n+@mixin ms-Icon--ChevronDownMed { content: ""\\E972""; }\n+@mixin ms-Icon--ChevronLeftMed { content: ""\\E973""; }\n+@mixin ms-Icon--ChevronRightMed { content: ""\\E974""; }\n+@mixin ms-Icon--CircleRing { content: ""\\EA3A""; }\n+\n+\n+// Classes\n+.ms-Icon--GlobalNavButton:before { @include ms-Icon--GlobalNavButton }\n+.ms-Icon--ChevronDown:before { @include ms-Icon--ChevronDown }\n+.ms-Icon--ChevronUp:before { @include ms-Icon--ChevronUp }\n+.ms-Icon--Cancel:before { @include ms-Icon--Cancel }\n+.ms-Icon--Settings:before { @include ms-Icon--Settings }\n+.ms-Icon--ChevronLeft:before { @include ms-Icon--ChevronLeft }\n+.ms-Icon--ChevronRight:before { @include ms-Icon--ChevronRight }\n+.ms-Icon--ChevronUpSmall:before { @include ms-Icon--ChevronUpSmall }\n+.ms-Icon--ChevronDownSmall:before { @include ms-Icon--ChevronDownSmall }\n+.ms-Icon--ChevronLeftSmall:before { @include ms-Icon--ChevronLeftSmall }\n+.ms-Icon--ChevronRightSmall:before { @include ms-Icon--ChevronRightSmall }\n+.ms-Icon--ChevronUpMed:before { @include ms-Icon--ChevronUpMed }\n+.ms-Icon--ChevronDownMed:before { @include ms-Icon--ChevronDownMed }\n+.ms-Icon--ChevronLeftMed:before { @include ms-Icon--ChevronLeftMed }\n+.ms-Icon--ChevronRightMed:before { @include ms-Icon--ChevronRightMed }\n+.ms-Icon--CircleRing:before { @include ms-Icon--CircleRing }\n+'}, {'Name': 'src/settings-web/src/icons/scss/fabric-icons.scss', 'Line Additions': 55, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,55 @@\n+/*\n+  Your use of the content in the files referenced here is subject to the terms of the license at https://aka.ms/fabric-assets-license\n+*/\n+@font-face {\n+  font-family: \'FabricMDL2Icons\';\n+  src: url(\'../fonts/fabric-icons.woff\') format(\'woff\');\n+}\n+\n+.ms-Icon {\n+  -moz-osx-font-smoothing: grayscale;\n+  -webkit-font-smoothing: antialiased;\n+  display: inline-block;\n+  font-family: \'FabricMDL2Icons\';\n+  font-style: normal;\n+  font-weight: normal;\n+  speak: none;\n+}\n+\n+// Mixins\n+@mixin ms-Icon--GlobalNavButton { content: ""\\E700""; }\n+@mixin ms-Icon--ChevronDown { content: ""\\E70D""; }\n+@mixin ms-Icon--ChevronUp { content: ""\\E70E""; }\n+@mixin ms-Icon--Cancel { content: ""\\E711""; }\n+@mixin ms-Icon--Settings { content: ""\\E713""; }\n+@mixin ms-Icon--ChevronLeft { content: ""\\E76B""; }\n+@mixin ms-Icon--ChevronRight { content: ""\\E76C""; }\n+@mixin ms-Icon--ChevronUpSmall { content: ""\\E96D""; }\n+@mixin ms-Icon--ChevronDownSmall { content: ""\\E96E""; }\n+@mixin ms-Icon--ChevronLeftSmall { content: ""\\E96F""; }\n+@mixin ms-Icon--ChevronRightSmall { content: ""\\E970""; }\n+@mixin ms-Icon--ChevronUpMed { content: ""\\E971""; }\n+@mixin ms-Icon--ChevronDownMed { content: ""\\E972""; }\n+@mixin ms-Icon--ChevronLeftMed { content: ""\\E973""; }\n+@mixin ms-Icon--ChevronRightMed { content: ""\\E974""; }\n+@mixin ms-Icon--CircleRing { content: ""\\EA3A""; }\n+\n+\n+// Classes\n+.ms-Icon--GlobalNavButton:before { @include ms-Icon--GlobalNavButton }\n+.ms-Icon--ChevronDown:before { @include ms-Icon--ChevronDown }\n+.ms-Icon--ChevronUp:before { @include ms-Icon--ChevronUp }\n+.ms-Icon--Cancel:before { @include ms-Icon--Cancel }\n+.ms-Icon--Settings:before { @include ms-Icon--Settings }\n+.ms-Icon--ChevronLeft:before { @include ms-Icon--ChevronLeft }\n+.ms-Icon--ChevronRight:before { @include ms-Icon--ChevronRight }\n+.ms-Icon--ChevronUpSmall:before { @include ms-Icon--ChevronUpSmall }\n+.ms-Icon--ChevronDownSmall:before { @include ms-Icon--ChevronDownSmall }\n+.ms-Icon--ChevronLeftSmall:before { @include ms-Icon--ChevronLeftSmall }\n+.ms-Icon--ChevronRightSmall:before { @include ms-Icon--ChevronRightSmall }\n+.ms-Icon--ChevronUpMed:before { @include ms-Icon--ChevronUpMed }\n+.ms-Icon--ChevronDownMed:before { @include ms-Icon--ChevronDownMed }\n+.ms-Icon--ChevronLeftMed:before { @include ms-Icon--ChevronLeftMed }\n+.ms-Icon--ChevronRightMed:before { @include ms-Icon--ChevronRightMed }\n+.ms-Icon--CircleRing:before { @include ms-Icon--CircleRing }\n+'}, {'Name': 'src/settings-web/src/icons/src/IconNames.ts', 'Line Additions': 1757, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,1757 @@\n+/**\n+ * @deprecated Const enum use is deprecated. See GitHub issue #7110: https://github.com/OfficeDev/office-ui-fabric-react/issues/7110\n+ */\n+export const enum IconNames {\n+ GlobalNavButton = 'GlobalNavButton',\n+ InternetSharing = 'InternetSharing',\n+ Brightness = 'Brightness',\n+ MapPin = 'MapPin',\n+ Airplane = 'Airplane',\n+ Tablet = 'Tablet',\n+ QuickNote = 'QuickNote',\n+ ChevronDown = 'ChevronDown',\n+ ChevronUp = 'ChevronUp',\n+ Edit = 'Edit',\n+ Add = 'Add',\n+ Cancel = 'Cancel',\n+ More = 'More',\n+ Settings = 'Settings',\n+ Video = 'Video',\n+ Mail = 'Mail',\n+ People = 'People',\n+ Phone = 'Phone',\n+ Pin = 'Pin',\n+ Shop = 'Shop',\n+ Stop = 'Stop',\n+ Link = 'Link',\n+ Filter = 'Filter',\n+ AllApps = 'AllApps',\n+ Zoom = 'Zoom',\n+ ZoomOut = 'ZoomOut',\n+ Microphone = 'Microphone',\n+ Search = 'Search',\n+ Camera = 'Camera',\n+ Attach = 'Attach',\n+ Send = 'Send',\n+ FavoriteList = 'FavoriteList',\n+ PageSolid = 'PageSolid',\n+ Forward = 'Forward',\n+ Back = 'Back',\n+ Refresh = 'Refresh',\n+ Share = 'Share',\n+ Lock = 'Lock',\n+ BlockedSite = 'BlockedSite',\n+ ReportHacked = 'ReportHacked',\n+ EMI = 'EMI',\n+ MiniLink = 'MiniLink',\n+ Blocked = 'Blocked',\n+ FavoriteStar = 'FavoriteStar',\n+ FavoriteStarFill = 'FavoriteStarFill',\n+ ReadingMode = 'ReadingMode',\n+ Favicon = 'Favicon',\n+ Remove = 'Remove',\n+ Checkbox = 'Checkbox',\n+ CheckboxComposite = 'CheckboxComposite',\n+ CheckboxFill = 'CheckboxFill',\n+ CheckboxIndeterminate = 'CheckboxIndeterminate',\n+ CheckboxCompositeReversed = 'CheckboxCompositeReversed',\n+ CheckMark = 'CheckMark',\n+ BackToWindow = 'BackToWindow',\n+ FullScreen = 'FullScreen',\n+ Print = 'Print',\n+ Up = 'Up',\n+ Down = 'Down',\n+ OEM = 'OEM',\n+ Delete = 'Delete',\n+ Save = 'Save',\n+ ReturnKey = 'ReturnKey',\n+ Cloud = 'Cloud',\n+ Flashlight = 'Flashlight',\n+ CommandPrompt = 'CommandPrompt',\n+ Sad = 'Sad',\n+ RealEstate = 'RealEstate',\n+ SIPMove = 'SIPMove',\n+ EraseTool = 'EraseTool',\n+ GripperTool = 'GripperTool',\n+ Dialpad = 'Dialpad',\n+ PageLeft = 'PageLeft',\n+ PageRight = 'PageRight',\n+ MultiSelect = 'MultiSelect',\n+ KeyboardClassic = 'KeyboardClassic',\n+ Play = 'Play',\n+ Pause = 'Pause',\n+ ChevronLeft = 'ChevronLeft',\n+ ChevronRight = 'ChevronRight',\n+ InkingTool = 'InkingTool',\n+ Emoji2 = 'Emoji2',\n+ GripperBarHorizontal = 'GripperBarHorizontal',\n+ System = 'System',\n+ Personalize = 'Personalize',\n+ SearchAndApps = 'SearchAndApps',\n+ Globe = 'Globe',\n+ EaseOfAccess = 'EaseOfAccess',\n+ ContactInfo = 'ContactInfo',\n+ Unpin = 'Unpin',\n+ Contact = 'Contact',\n+ Memo = 'Memo',\n+ IncomingCall = 'IncomingCall',\n+ Paste = 'Paste',\n+ WindowsLogo = 'WindowsLogo',\n+ Error = 'Error',\n+ GripperBarVertical = 'GripperBarVertical',\n+ Unlock = 'Unlock',\n+ Slideshow = 'Slideshow',\n+ Calendar = 'Calendar',\n+ Megaphone = 'Megaphone',\n+ AutoEnhanceOn = 'AutoEnhanceOn',\n+ AutoEnhanceOff = 'AutoEnhanceOff',\n+ Color = 'Color',\n+ SaveAs = 'SaveAs',\n+ Light = 'Light',\n+ Filters = 'Filters',\n+ AspectRatio = 'AspectRatio',\n+ Contrast = 'Contrast',\n+ Redo = 'Redo',\n+ Undo = 'Undo',\n+ Crop = 'Crop',\n+ PhotoCollection = 'PhotoCollection',\n+ Album = 'Album',\n+ Rotate = 'Rotate',\n+ PanoIndicator = 'PanoIndicator',\n+ Translate = 'Translate',\n+ RedEye = 'RedEye',\n+ ThumbnailView = 'ThumbnailView',\n+ Package = 'Package',\n+ Telemarketer = 'Telemarketer',\n+ Warning = 'Warning',\n+ Financial = 'Financial',\n+ Education = 'Education',\n+ ShoppingCart = 'ShoppingCart',\n+ Train = 'Train',\n+ Flag = 'Flag',\n+ Move = 'Move',\n+ Page = 'Page',\n+ TouchPointer = 'TouchPointer',\n+ Merge = 'Merge',\n+ TurnRight = 'TurnRight',\n+ Ferry = 'Ferry',\n+ Highlight = 'Highlight',\n+ PowerButton = 'PowerButton',\n+ Tab = 'Tab',\n+ Admin = 'Admin',\n+ TVMonitor = 'TVMonitor',\n+ Speakers = 'Speakers',\n+ Game = 'Game',\n+ UnstackSelected = 'UnstackSelected',\n+ StackIndicator = 'StackIndicator',\n+ Nav2DMapView = 'Nav2DMapView',\n+ StreetsideSplitMinimize = 'StreetsideSplitMinimize',\n+ Car = 'Car',\n+ Bus = 'Bus',\n+ EatDrink = 'EatDrink',\n+ SeeDo = 'SeeDo',\n+ LocationCircle = 'LocationCircle',\n+ Home = 'Home',\n+ SwitcherStartEnd = 'SwitcherStartEnd',\n+ ParkingLocation = 'ParkingLocation',\n+ IncidentTriangle = 'IncidentTriangle',\n+ Touch = 'Touch',\n+ MapDirections = 'MapDirections',\n+ CaretHollow = 'CaretHollow',\n+ CaretSolid = 'CaretSolid',\n+ History = 'History',\n+ Location = 'Location',\n+ MapLayers = 'MapLayers',\n+ SearchNearby = 'SearchNearby',\n+ Work = 'Work',\n+ Recent = 'Recent',\n+ Hotel = 'Hotel',\n+ Bank = 'Bank',\n+ LocationDot = 'LocationDot',\n+ Dictionary = 'Dictionary',\n+ ChromeBack = 'ChromeBack',\n+ FolderOpen = 'FolderOpen',\n+ Pinned = 'Pinned',\n+ PinnedFill = 'PinnedFill',\n+ RevToggleKey = 'RevToggleKey',\n+ USB = 'USB',\n+ View = 'View',\n+ Previous = 'Previous',\n+ Next = 'Next',\n+ Clear = 'Clear',\n+ Sync = 'Sync',\n+ Download = 'Download',\n+ Help = 'Help',\n+ Upload = 'Upload',\n+ Emoji = 'Emoji',\n+ MailForward = 'MailForward',\n+ ClosePane = 'ClosePane',\n+ OpenPane = 'OpenPane',\n+ PreviewLink = 'PreviewLink',\n+ ZoomIn = 'ZoomIn',\n+ Bookmarks = 'Bookmarks',\n+ Document = 'Document',\n+ ProtectedDocument = 'ProtectedDocument',\n+ OpenInNewWindow = 'OpenInNewWindow',\n+ MailFill = 'MailFill',\n+ ViewAll = 'ViewAll',\n+ Switch = 'Switch',\n+ Rename = 'Rename',\n+ Go = 'Go',\n+ Remote = 'Remote',\n+ SelectAll = 'SelectAll',\n+ Orientation = 'Orientation',\n+ Import = 'Import',\n+ Folder = 'Folder',\n+ Picture = 'Picture',\n+ ChromeClose = 'ChromeClose',\n+ ShowResults = 'ShowResults',\n+ Message = 'Message',\n+ CalendarDay = 'CalendarDay',\n+ CalendarWeek = 'CalendarWeek',\n+ MailReplyAll = 'MailReplyAll',\n+ Read = 'Read',\n+ Cut = 'Cut',\n+ PaymentCard = 'PaymentCard',\n+ Copy = 'Copy',\n+ Important = 'Important',\n+ MailReply = 'MailReply',\n+ Sort = 'Sort',\n+ GotoToday = 'GotoToday',\n+ Font = 'Font',\n+ FontColor = 'FontColor',\n+ FolderFill = 'FolderFill',\n+ Permissions = 'Permissions',\n+ DisableUpdates = 'DisableUpdates',\n+ Unfavorite = 'Unfavorite',\n+ Italic = 'Italic',\n+ Underline = 'Underline',\n+ Bold = 'Bold',\n+ MoveToFolder = 'MoveToFolder',\n+ Dislike = 'Dislike',\n+ Like = 'Like',\n+ AlignRight = 'AlignRight',\n+ AlignCenter = 'AlignCenter',\n+ AlignLeft = 'AlignLeft',\n+ OpenFile = 'OpenFile',\n+ ClearSelection = 'ClearSelection',\n+ FontDecrease = 'FontDecrease',\n+ FontIncrease = 'FontIncrease',\n+ FontSize = 'FontSize',\n+ CellPhone = 'CellPhone',\n+ Tag = 'Tag',\n+ RepeatOne = 'RepeatOne',\n+ RepeatAll = 'RepeatAll',\n+ Calculator = 'Calculator',\n+ Library = 'Library',\n+ PostUpdate = 'PostUpdate',\n+ NewFolder = 'NewFolder',\n+ CalendarReply = 'CalendarReply',\n+ UnsyncFolder = 'UnsyncFolder',\n+ SyncFolder = 'SyncFolder',\n+ BlockContact = 'BlockContact',\n+ AddFriend = 'AddFriend',\n+ Accept = 'Accept',\n+ BulletedList = 'BulletedList',\n+ Preview = 'Preview',\n+ News = 'News',\n+ Chat = 'Chat',\n+ Group = 'Group',\n+ World = 'World',\n+ Comment = 'Comment',\n+ DockLeft = 'DockLeft',\n+ DockRight = 'DockRight',\n+ Repair = 'Repair',\n+ Accounts = 'Accounts',\n+ Street = 'Street',\n+ RadioBullet = 'RadioBullet',\n+ Stopwatch = 'Stopwatch',\n+ Clock = 'Clock',\n+ WorldClock = 'WorldClock',\n+ AlarmClock = 'AlarmClock',\n+ Photo = 'Photo',\n+ ActionCenter = 'ActionCenter',\n+ Hospital = 'Hospital',\n+ Timer = 'Timer',\n+ FullCircleMask = 'FullCircleMask',\n+ LocationFill = 'LocationFill',\n+ ChromeMinimize = 'ChromeMinimize',\n+ ChromeRestore = 'ChromeRestore',\n+ Annotation = 'Annotation',\n+ Fingerprint = 'Fingerprint',\n+ Handwriting = 'Handwriting',\n+ ChromeFullScreen = 'ChromeFullScreen',\n+ Completed = 'Completed',\n+ Label = 'Label',\n+ FlickDown = 'FlickDown',\n+ FlickUp = 'FlickUp',\n+ FlickLeft = 'FlickLeft',\n+ FlickRight = 'FlickRight',\n+ MiniExpand = 'MiniExpand',\n+ MiniContract = 'MiniContract',\n+ Streaming = 'Streaming',\n+ MusicInCollection = 'MusicInCollection',\n+ OneDriveLogo = 'OneDriveLogo',\n+ CompassNW = 'CompassNW',\n+ Code = 'Code',\n+ LightningBolt = 'LightningBolt',\n+ Info = 'Info',\n+ CalculatorMultiply = 'CalculatorMultiply',\n+ CalculatorAddition = 'CalculatorAddition',\n+ CalculatorSubtract = 'CalculatorSubtract',\n+ CalculatorPercentage = 'CalculatorPercentage',\n+ CalculatorEqualTo = 'CalculatorEqualTo',\n+ PrintfaxPrinterFile = 'PrintfaxPrinterFile',\n+ StorageOptical = 'StorageOptical',\n+ Communications = 'Communications',\n+ Headset = 'Headset',\n+ Health = 'Health',\n+ FrontCamera = 'FrontCamera',\n+ ChevronUpSmall = 'ChevronUpSmall',\n+ ChevronDownSmall = 'ChevronDownSmall',\n+ ChevronLeftSmall = 'ChevronLeftSmall',\n+ ChevronRightSmall = 'ChevronRightSmall',\n+ ChevronUpMed = 'ChevronUpMed',\n+ ChevronDownMed = 'ChevronDownMed',\n+ ChevronLeftMed = 'ChevronLeftMed',\n+ ChevronRightMed = 'ChevronRightMed',\n+ Devices2 = 'Devices2',\n+ PC1 = 'PC1',\n+ PresenceChickletVideo = 'PresenceChickletVideo',\n+ Reply = 'Reply',\n+ HalfAlpha = 'HalfAlpha',\n+ ConstructionCone = 'ConstructionCone',\n+ DoubleChevronLeftMed = 'DoubleChevronLeftMed',\n+ Volume0 = 'Volume0',\n+ Volume1 = 'Volume1',\n+ Volume2 = 'Volume2',\n+ Volume3 = 'Volume3',\n+ Chart = 'Chart',\n+ Robot = 'Robot',\n+ Manufacturing = 'Manufacturing',\n+ LockSolid = 'LockSolid',\n+ FitPage = 'FitPage',\n+ FitWidth = 'FitWidth',\n+ BidiLtr = 'BidiLtr',\n+ BidiRtl = 'BidiRtl',\n+ RightDoubleQuote = 'RightDoubleQuote',\n+ Sunny = 'Sunny',\n+ CloudWeather = 'CloudWeather',\n+ Cloudy = 'Cloudy',\n+ PartlyCloudyDay = 'PartlyCloudyDay',\n+ PartlyCloudyNight = 'PartlyCloudyNight',\n+ ClearNight = 'ClearNight',\n+ RainShowersDay = 'RainShowersDay',\n+ Rain = 'Rain',\n+ Thunderstorms = 'Thunderstorms',\n+ RainSnow = 'RainSnow',\n+ Snow = 'Snow',\n+ BlowingSnow = 'BlowingSnow',\n+ Frigid = 'Frigid',\n+ Fog = 'Fog',\n+ Squalls = 'Squalls',\n+ Duststorm = 'Duststorm',\n+ Unknown = 'Unknown',\n+ Precipitation = 'Precipitation',\n+ SortLines = 'SortLines',\n+ Ribbon = 'Ribbon',\n+ AreaChart = 'AreaChart',\n+ Assign = 'Assign',\n+ FlowChart = 'FlowChart',\n+ CheckList = 'CheckList',\n+ Diagnostic = 'Diagnostic',\n+ Generate = 'Generate',\n+ LineChart = 'LineChart',\n+ Equalizer = 'Equalizer',\n+ BarChartHorizontal = 'BarChartHorizontal',\n+ BarChartVertical = 'BarChartVertical',\n+ Freezing = 'Freezing',\n+ FunnelChart = 'FunnelChart',\n+ Processing = 'Processing',\n+ Quantity = 'Quantity',\n+ ReportDocument = 'ReportDocument',\n+ StackColumnChart = 'StackColumnChart',\n+ SnowShowerDay = 'SnowShowerDay',\n+ HailDay = 'HailDay',\n+ WorkFlow = 'WorkFlow',\n+ HourGlass = 'HourGlass',\n+ StoreLogoMed20 = 'StoreLogoMed20',\n+ TimeSheet = 'TimeSheet',\n+ TriangleSolid = 'TriangleSolid',\n+ UpgradeAnalysis = 'UpgradeAnalysis',\n+ VideoSolid = 'VideoSolid',\n+ RainShowersNight = 'RainShowersNight',\n+ SnowShowerNight = 'SnowShowerNight',\n+ Teamwork = 'Teamwork',\n+ HailNight = 'HailNight',\n+ PeopleAdd = 'PeopleAdd',\n+ Glasses = 'Glasses',\n+ DateTime2 = 'DateTime2',\n+ Shield = 'Shield',\n+ Header1 = 'Header1',\n+ PageAdd = 'PageAdd',\n+ NumberedList = 'NumberedList',\n+ PowerBILogo = 'PowerBILogo',\n+ Info2 = 'Info2',\n+ MusicInCollectionFill = 'MusicInCollectionFill',\n+ List = 'List',\n+ Asterisk = 'Asterisk',\n+ ErrorBadge = 'ErrorBadge',\n+ CircleRing = 'CircleRing',\n+ CircleFill = 'CircleFill',\n+ Record2 = 'Record2',\n+ AllAppsMirrored = 'AllAppsMirrored',\n+ BookmarksMirrored = 'BookmarksMirrored',\n+ BulletedListMirrored = 'BulletedListMirrored',\n+ CaretHollowMirrored = 'CaretHollowMirrored',\n+ CaretSolidMirrored = 'CaretSolidMirrored',\n+ ChromeBackMirrored = 'ChromeBackMirrored',\n+ ClearSelectionMirrored = 'ClearSelectionMirrored',\n+ ClosePaneMirrored = 'ClosePaneMirrored',\n+ DockLeftMirrored = 'DockLeftMirrored',\n+ DoubleChevronLeftMedMirrored = 'DoubleChevronLeftMedMirrored',\n+ GoMirrored = 'GoMirrored',\n+ HelpMirrored = 'HelpMirrored',\n+ ImportMirrored = 'ImportMirrored',\n+ ImportAllMirrored = 'ImportAllMirrored',\n+ ListMirrored = 'ListMirrored',\n+ MailForwardMirrored = 'MailForwardMirrored',\n+ MailReplyMirrored = 'MailReplyMirrored',\n+ MailReplyAllMirrored = 'MailReplyAllMirrored',\n+ MiniContractMirrored = 'MiniContractMirrored',\n+ MiniExpandMirrored = 'MiniExpandMirrored',\n+ OpenPaneMirrored = 'OpenPaneMirrored',\n+ ParkingLocationMirrored = 'ParkingLocationMirrored',\n+ SendMirrored = 'SendMirrored',\n+ ShowResultsMirrored = 'ShowResultsMirrored',\n+ ThumbnailViewMirrored = 'ThumbnailViewMirrored',\n+ Media = 'Media',\n+ Devices3 = 'Devices3',\n+ Focus = 'Focus',\n+ VideoLightOff = 'VideoLightOff',\n+ Lightbulb = 'Lightbulb',\n+ StatusTriangle = 'StatusTriangle',\n+ VolumeDisabled = 'VolumeDisabled',\n+ Puzzle = 'Puzzle',\n+ EmojiNeutral = 'EmojiNeutral',\n+ EmojiDisappointed = 'EmojiDisappointed',\n+ HomeSolid = 'HomeSolid',\n+ Ringer = 'Ringer',\n+ PDF = 'PDF',\n+ HeartBroken = 'HeartBroken',\n+ StoreLogo16 = 'StoreLogo16',\n+ MultiSelectMirrored = 'MultiSelectMirrored',\n+ Broom = 'Broom',\n+ AddToShoppingList = 'AddToShoppingList',\n+ Cocktails = 'Cocktails',\n+ Wines = 'Wines',\n+ Articles = 'Articles',\n+ Cycling = 'Cycling',\n+ DietPlanNotebook = 'DietPlanNotebook',\n+ Pill = 'Pill',\n+ ExerciseTracker = 'ExerciseTracker',\n+ HandsFree = 'HandsFree',\n+ Medical = 'Medical',\n+ Running = 'Running',\n+ Weights = 'Weights',\n+ Trackers = 'Trackers',\n+ AddNotes = 'AddNotes',\n+ AllCurrency = 'AllCurrency',\n+ BarChart4 = 'BarChart4',\n+ CirclePlus = 'CirclePlus',\n+ Coffee = 'Coffee',\n+ Cotton = 'Cotton',\n+ Market = 'Market',\n+ Money = 'Money',\n+ PieDouble = 'PieDouble',\n+ PieSingle = 'PieSingle',\n+ RemoveFilter = 'RemoveFilter',\n+ Savings = 'Savings',\n+ Sell = 'Sell',\n+ StockDown = 'StockDown',\n+ StockUp = 'StockUp',\n+ Lamp = 'Lamp',\n+ Source = 'Source',\n+ MSNVideos = 'MSNVideos',\n+ Cricket = 'Cricket',\n+ Golf = 'Golf',\n+ Baseball = 'Baseball',\n+ Soccer = 'Soccer',\n+ MoreSports = 'MoreSports',\n+ AutoRacing = 'AutoRacing',\n+ CollegeHoops = 'CollegeHoops',\n+ CollegeFootball = 'CollegeFootball',\n+ ProFootball = 'ProFootball',\n+ ProHockey = 'ProHockey',\n+ Rugby = 'Rugby',\n+ SubstitutionsIn = 'SubstitutionsIn',\n+ Tennis = 'Tennis',\n+ Arrivals = 'Arrivals',\n+ Design = 'Design',\n+ Website = 'Website',\n+ Drop = 'Drop',\n+ HistoricalWeather = 'HistoricalWeather',\n+ SkiResorts = 'SkiResorts',\n+ Snowflake = 'Snowflake',\n+ BusSolid = 'BusSolid',\n+ FerrySolid = 'FerrySolid',\n+ AirplaneSolid = 'AirplaneSolid',\n+ TrainSolid = 'TrainSolid',\n+ Heart = 'Heart',\n+ HeartFill = 'HeartFill',\n+ Ticket = 'Ticket',\n+ WifiWarning4 = 'WifiWarning4',\n+ Devices4 = 'Devices4',\n+ AzureLogo = 'AzureLogo',\n+ BingLogo = 'BingLogo',\n+ MSNLogo = 'MSNLogo',\n+ OutlookLogoInverse = 'OutlookLogoInverse',\n+ OfficeLogo = 'OfficeLogo',\n+ SkypeLogo = 'SkypeLogo',\n+ Door = 'Door',\n+ EditMirrored = 'EditMirrored',\n+ GiftCard = 'GiftCard',\n+ DoubleBookmark = 'DoubleBookmark',\n+ StatusErrorFull = 'StatusErrorFull',\n+ Certificate = 'Certificate',\n+ FastForward = 'FastForward',\n+ Rewind = 'Rewind',\n+ Photo2 = 'Photo2',\n+ OpenSource = 'OpenSource',\n+ Movers = 'Movers',\n+ CloudDownload = 'CloudDownload',\n+ Family = 'Family',\n+ WindDirection = 'WindDirection',\n+ Bug = 'Bug',\n+ SiteScan = 'SiteScan',\n+ BrowserScreenShot = 'BrowserScreenShot',\n+ F12DevTools = 'F12DevTools',\n+ CSS = 'CSS',\n+ JS = 'JS',\n+ DeliveryTruck = 'DeliveryTruck',\n+ ReminderPerson = 'ReminderPerson',\n+ ReminderGroup = 'ReminderGroup',\n+ TabletMode = 'TabletMode',\n+ Umbrella = 'Umbrella',\n+ NetworkTower = 'NetworkTower',\n+ CityNext = 'CityNext',\n+ CityNext2 = 'CityNext2',\n+ Section = 'Section',\n+ OneNoteLogoInverse = 'OneNoteLogoInverse',\n+ ToggleFilled = 'ToggleFilled',\n+ ToggleBorder = 'ToggleBorder',\n+ SliderThumb = 'SliderThumb',\n+ ToggleThumb = 'ToggleThumb',\n+ Documentation = 'Documentation',\n+ Badge = 'Badge',\n+ Giftbox = 'Giftbox',\n+ VisualStudioLogo = 'VisualStudioLogo',\n+ HomeGroup = 'HomeGroup',\n+ ExcelLogoInverse = 'ExcelLogoInverse',\n+ WordLogoInverse = 'WordLogoInverse',\n+ PowerPointLogoInverse = 'PowerPointLogoInverse',\n+ Cafe = 'Cafe',\n+ SpeedHigh = 'SpeedHigh',\n+ Commitments = 'Commitments',\n+ ThisPC = 'ThisPC',\n+ MusicNote = 'MusicNote',\n+ MicOff = 'MicOff',\n+ PlaybackRate1x = 'PlaybackRate1x',\n+ EdgeLogo = 'EdgeLogo',\n+ CompletedSolid = 'CompletedSolid',\n+ AlbumRemove = 'AlbumRemove',\n+ MessageFill = 'MessageFill',\n+ TabletSelected = 'TabletSelected',\n+ MobileSelected = 'MobileSelected',\n+ LaptopSelected = 'LaptopSelected',\n+ TVMonitorSelected = 'TVMonitorSelected',\n+ DeveloperTools = 'DeveloperTools',\n+ Shapes = 'Shapes',\n+ InsertTextBox = 'InsertTextBox',\n+ LowerBrightness = 'LowerBrightness',\n+ WebComponents = 'WebComponents',\n+ OfflineStorage = 'OfflineStorage',\n+ DOM = 'DOM',\n+ CloudUpload = 'CloudUpload',\n+ ScrollUpDown = 'ScrollUpDown',\n+ DateTime = 'DateTime',\n+ Event = 'Event',\n+ Cake = 'Cake',\n+ Tiles = 'Tiles',\n+ Org = 'Org',\n+ PartyLeader = 'PartyLeader',\n+ DRM = 'DRM',\n+ CloudAdd = 'CloudAdd',\n+ AppIconDefault = 'AppIconDefault',\n+ Photo2Add = 'Photo2Add',\n+ Photo2Remove = 'Photo2Remove',\n+ Calories = 'Calories',\n+ POI = 'POI',\n+ AddTo = 'AddTo',\n+ RadioBtnOff = 'RadioBtnOff',\n+ RadioBtnOn = 'RadioBtnOn',\n+ ExploreContent = 'ExploreContent',\n+ Embed = 'Embed',\n+ Product = 'Product',\n+ ProgressLoopInner = 'ProgressLoopInner',\n+ ProgressLoopOuter = 'ProgressLoopOuter',\n+ Blocked2 = 'Blocked2',\n+ FangBody = 'FangBody',\n+ PageHeader = 'PageHeader',\n+ Glimmer = 'Glimmer',\n+ ChatInviteFriend = 'ChatInviteFriend',\n+ Brush = 'Brush',\n+ Shirt = 'Shirt',\n+ Crown = 'Crown',\n+ Diamond = 'Diamond',\n+ ScaleUp = 'ScaleUp',\n+ QRCode = 'QRCode',\n+ Feedback = 'Feedback',\n+ SharepointLogoInverse = 'SharepointLogoInverse',\n+ YammerLogo = 'YammerLogo',\n+ Hide = 'Hide',\n+ Uneditable = 'Uneditable',\n+ ReturnToSession = 'ReturnToSession',\n+ OpenFolderHorizontal = 'OpenFolderHorizontal',\n+ CalendarMirrored = 'CalendarMirrored',\n+ SwayLogoInverse = 'SwayLogoInverse',\n+ OutOfOffice = 'OutOfOffice',\n+ Trophy = 'Trophy',\n+ ReopenPages = 'ReopenPages',\n+ EmojiTabSymbols = 'EmojiTabSymbols',\n+ AADLogo = 'AADLogo',\n+ AccessLogo = 'AccessLogo',\n+ AdminALogoInverse32 = 'AdminALogoInverse32',\n+ AdminCLogoInverse32 = 'AdminCLogoInverse32',\n+ AdminDLogoInverse32 = 'AdminDLogoInverse32',\n+ AdminELogoInverse32 = 'AdminELogoInverse32',\n+ AdminLLogoInverse32 = 'AdminLLogoInverse32',\n+ AdminMLogoInverse32 = 'AdminMLogoInverse32',\n+ AdminOLogoInverse32 = 'AdminOLogoInverse32',\n+ AdminPLogoInverse32 = 'AdminPLogoInverse32',\n+ AdminSLogoInverse32 = 'AdminSLogoInverse32',\n+ AdminYLogoInverse32 = 'AdminYLogoInverse32',\n+ DelveLogoInverse = 'DelveLogoInverse',\n+ ExchangeLogoInverse = 'ExchangeLogoInverse',\n+ LyncLogo = 'LyncLogo',\n+ OfficeVideoLogoInverse = 'OfficeVideoLogoInverse',\n+ SocialListeningLogo = 'SocialListeningLogo',\n+ VisioLogoInverse = 'VisioLogoInverse',\n+ Balloons = 'Balloons',\n+ Cat = 'Cat',\n+ MailAlert = 'MailAlert',\n+ MailCheck = 'MailCheck',\n+ MailLowImportance = 'MailLowImportance',\n+ MailPause = 'MailPause',\n+ MailRepeat = 'MailRepeat',\n+ SecurityGroup = 'SecurityGroup',\n+ Table = 'Table',\n+ VoicemailForward = 'VoicemailForward',\n+ VoicemailReply = 'VoicemailReply',\n+ Waffle = 'Waffle',\n+ RemoveEvent = 'RemoveEvent',\n+ EventInfo = 'EventInfo',\n+ ForwardEvent = 'ForwardEvent',\n+ WipePhone = 'WipePhone',\n+ AddOnlineMeeting = 'AddOnlineMeeting',\n+ JoinOnlineMeeting = 'JoinOnlineMeeting',\n+ RemoveLink = 'RemoveLink',\n+ PeopleBlock = 'PeopleBlock',\n+ PeopleRepeat = 'PeopleRepeat',\n+ PeopleAlert = 'PeopleAlert',\n+ PeoplePause = 'PeoplePause',\n+ TransferCall = 'TransferCall',\n+ AddPhone = 'AddPhone',\n+ UnknownCall = 'UnknownCall',\n+ NoteReply = 'NoteReply',\n+ NoteForward = 'NoteForward',\n+ NotePinned = 'NotePinned',\n+ RemoveOccurrence = 'RemoveOccurrence',\n+ Timeline = 'Timeline',\n+ EditNote = 'EditNote',\n+ CircleHalfFull = 'CircleHalfFull',\n+ Room = 'Room',\n+ Unsubscribe = 'Unsubscribe',\n+ Subscribe = 'Subscribe',\n+ HardDrive = 'HardDrive',\n+ RecurringTask = 'RecurringTask',\n+ TaskManager = 'TaskManager',\n+ TaskManagerMirrored = 'TaskManagerMirrored',\n+ Combine = 'Combine',\n+ Split = 'Split',\n+ DoubleChevronUp = 'DoubleChevronUp',\n+ DoubleChevronLeft = 'DoubleChevronLeft',\n+ DoubleChevronRight = 'DoubleChevronRight',\n+ Ascending = 'Ascending',\n+ Descending = 'Descending',\n+ TextBox = 'TextBox',\n+ TextField = 'TextField',\n+ NumberField = 'NumberField',\n+ Dropdown = 'Dropdown',\n+ PenWorkspace = 'PenWorkspace',\n+ BookingsLogo = 'BookingsLogo',\n+ ClassNotebookLogoInverse = 'ClassNotebookLogoInverse',\n+ DelveAnalyticsLogo = 'DelveAnalyticsLogo',\n+ DocsLogoInverse = 'DocsLogoInverse',\n+ Dynamics365Logo = 'Dynamics365Logo',\n+ DynamicSMBLogo = 'DynamicSMBLogo',\n+ OfficeAssistantLogo = 'OfficeAssistantLogo',\n+ OfficeStoreLogo = 'OfficeStoreLogo',\n+ OneNoteEduLogoInverse = 'OneNoteEduLogoInverse',\n+ PlannerLogo = 'PlannerLogo',\n+ PowerApps = 'PowerApps',\n+ Suitcase = 'Suitcase',\n+ ProjectLogoInverse = 'ProjectLogoInverse',\n+ CaretLeft8 = 'CaretLeft8',\n+ CaretRight8 = 'CaretRight8',\n+ CaretUp8 = 'CaretUp8',\n+ CaretDown8 = 'CaretDown8',\n+ CaretLeftSolid8 = 'CaretLeftSolid8',\n+ CaretRightSolid8 = 'CaretRightSolid8',\n+ CaretUpSolid8 = 'CaretUpSolid8',\n+ CaretDownSolid8 = 'CaretDownSolid8',\n+ ClearFormatting = 'ClearFormatting',\n+ Superscript = 'Superscript',\n+ Subscript = 'Subscript',\n+ Strikethrough = 'Strikethrough',\n+ Export = 'Export',\n+ ExportMirrored = 'ExportMirrored',\n+ SingleBookmark = 'SingleBookmark',\n+ SingleBookmarkSolid = 'SingleBookmarkSolid',\n+ DoubleChevronDown = 'DoubleChevronDown',\n+ FollowUser = 'FollowUser',\n+ ReplyAll = 'ReplyAll',\n+ WorkforceManagement = 'WorkforceManagement',\n+ RecruitmentManagement = 'RecruitmentManagement',\n+ Questionnaire = 'Questionnaire',\n+ ManagerSelfService = 'ManagerSelfService',\n+ ProductRelease = 'ProductRelease',\n+ ReplyMirrored = 'ReplyMirrored',\n+ ReplyAllMirrored = 'ReplyAllMirrored',\n+ Medal = 'Medal',\n+ AddGroup = 'AddGroup',\n+ QuestionnaireMirrored = 'QuestionnaireMirrored',\n+ CloudImportExport = 'CloudImportExport',\n+ TemporaryUser = 'TemporaryUser',\n+ CaretSolid16 = 'CaretSolid16',\n+ GroupedDescending = 'GroupedDescending',\n+ GroupedAscending = 'GroupedAscending',\n+ SortUp = 'SortUp',\n+ SortDown = 'SortDown',\n+ AwayStatus = 'AwayStatus',\n+ MyMoviesTV = 'MyMoviesTV',\n+ SyncToPC = 'SyncToPC',\n+ GenericScan = 'GenericScan',\n+ AustralianRules = 'AustralianRules',\n+ WifiEthernet = 'WifiEthernet',\n+ TrackersMirrored = 'TrackersMirrored',\n+ DateTimeMirrored = 'DateTimeMirrored',\n+ StopSolid = 'StopSolid',\n+ DoubleChevronUp12 = 'DoubleChevronUp12',\n+ DoubleChevronDown12 = 'DoubleChevronDown12',\n+ DoubleChevronLeft12 = 'DoubleChevronLeft12',\n+ DoubleChevronRight12 = 'DoubleChevronRight12',\n+ CalendarAgenda = 'CalendarAgenda',\n+ ConnectVirtualMachine = 'ConnectVirtualMachine',\n+ AddEvent = 'AddEvent',\n+ AssetLibrary = 'AssetLibrary',\n+ DataConnectionLibrary = 'DataConnectionLibrary',\n+ DocLibrary = 'DocLibrary',\n+ FormLibrary = 'FormLibrary',\n+ FormLibraryMirrored = 'FormLibraryMirrored',\n+ ReportLibrary = 'ReportLibrary',\n+ ReportLibraryMirrored = 'ReportLibraryMirrored',\n+ ContactCard = 'ContactCard',\n+ CustomList = 'CustomList',\n+ CustomListMirrored = 'CustomListMirrored',\n+ IssueTracking = 'IssueTracking',\n+ IssueTrackingMirrored = 'IssueTrackingMirrored',\n+ PictureLibrary = 'PictureLibrary',\n+ OfficeAddinsLogo = 'OfficeAddinsLogo',\n+ OfflineOneDriveParachute = 'OfflineOneDriveParachute',\n+ OfflineOneDriveParachuteDisabled = 'OfflineOneDriveParachuteDisabled',\n+ LargeGrid = 'LargeGrid',\n+ TriangleSolidUp12 = 'TriangleSolidUp12',\n+ TriangleSolidDown12 = 'TriangleSolidDown12',\n+ TriangleSolidLeft12 = 'TriangleSolidLeft12',\n+ TriangleSolidRight12 = 'TriangleSolidRight12',\n+ TriangleUp12 = 'TriangleUp12',\n+ TriangleDown12 = 'TriangleDown12',\n+ TriangleLeft12 = 'TriangleLeft12',\n+ TriangleRight12 = 'TriangleRight12',\n+ ArrowUpRight8 = 'ArrowUpRight8',\n+ ArrowDownRight8 = 'ArrowDownRight8',\n+ DocumentSet = 'DocumentSet',\n+ DelveAnalytics = 'DelveAnalytics',\n+ ArrowUpRightMirrored8 = 'ArrowUpRightMirrored8',\n+ ArrowDownRightMirrored8 = 'ArrowDownRightMirrored8',\n+ CompanyDirectory = 'CompanyDirectory',\n+ OpenEnrollment = 'OpenEnrollment',\n+ CompanyDirectoryMirrored = 'CompanyDirectoryMirrored',\n+ OneDriveAdd = 'OneDriveAdd',\n+ ProfileSearch = 'ProfileSearch',\n+ Header2 = 'Header2',\n+ Header3 = 'Header3',\n+ Header4 = 'Header4',\n+ RingerSolid = 'RingerSolid',\n+ Eyedropper = 'Eyedropper',\n+ MarketDown = 'MarketDown',\n+ CalendarWorkWeek = 'CalendarWorkWeek',\n+ SidePanel = 'SidePanel',\n+ GlobeFavorite = 'GlobeFavorite',\n+ CaretTopLeftSolid8 = 'CaretTopLeftSolid8',\n+ CaretTopRightSolid8 = 'CaretTopRightSolid8',\n+ ViewAll2 = 'ViewAll2',\n+ DocumentReply = 'DocumentReply',\n+ PlayerSettings = 'PlayerSettings',\n+ ReceiptForward = 'ReceiptForward',\n+ ReceiptReply = 'ReceiptReply',\n+ ReceiptCheck = 'ReceiptCheck',\n+ Fax = 'Fax',\n+ RecurringEvent = 'RecurringEvent',\n+ ReplyAlt = 'ReplyAlt',\n+ ReplyAllAlt = 'ReplyAllAlt',\n+ EditStyle = 'EditStyle',\n+ EditMail = 'EditMail',\n+ Lifesaver = 'Lifesaver',\n+ LifesaverLock = 'LifesaverLock',\n+ InboxCheck = 'InboxCheck',\n+ FolderSearch = 'FolderSearch',\n+ CollapseMenu = 'CollapseMenu',\n+ ExpandMenu = 'ExpandMenu',\n+ Boards = 'Boards',\n+ SunAdd = 'SunAdd',\n+ SunQuestionMark = 'SunQuestionMark',\n+ LandscapeOrientation = 'LandscapeOrientation',\n+ DocumentSearch = 'DocumentSearch',\n+ PublicCalendar = 'PublicCalendar',\n+ PublicContactCard = 'PublicContactCard',\n+ PublicEmail = 'PublicEmail',\n+ PublicFolder = 'PublicFolder',\n+ WordDocument = 'WordDocument',\n+ PowerPointDocument = 'PowerPointDocument',\n+ ExcelDocument = 'ExcelDocument',\n+ GroupedList = 'GroupedList',\n+ ClassroomLogo = 'ClassroomLogo',\n+ Sections = 'Sections',\n+ EditPhoto = 'EditPhoto',\n+ Starburst = 'Starburst',\n+ ShareiOS = 'ShareiOS',\n+ AirTickets = 'AirTickets',\n+ PencilReply = 'PencilReply',\n+ Tiles2 = 'Tiles2',\n+ SkypeCircleCheck = 'SkypeCircleCheck',\n+ SkypeCircleClock = 'SkypeCircleClock',\n+ SkypeCircleMinus = 'SkypeCircleMinus',\n+ SkypeCheck = 'SkypeCheck',\n+ SkypeClock = 'SkypeClock',\n+ SkypeMinus = 'SkypeMinus',\n+ SkypeMessage = 'SkypeMessage',\n+ ClosedCaption = 'ClosedCaption',\n+ ATPLogo = 'ATPLogo',\n+ OfficeFormsLogoInverse = 'OfficeFormsLogoInverse',\n+ RecycleBin = 'RecycleBin',\n+ EmptyRecycleBin = 'EmptyRecycleBin',\n+ Hide2 = 'Hide2',\n+ Breadcrumb = 'Breadcrumb',\n+ BirthdayCake = 'BirthdayCake',\n+ ClearFilter = 'ClearFilter',\n+ Flow = 'Flow',\n+ TimeEntry = 'TimeEntry',\n+ CRMProcesses = 'CRMProcesses',\n+ PageEdit = 'PageEdit',\n+ PageArrowRight = 'PageArrowRight',\n+ PageRemove = 'PageRemove',\n+ Database = 'Database',\n+ DataManagementSettings = 'DataManagementSettings',\n+ CRMServices = 'CRMServices',\n+ EditContact = 'EditContact',\n+ ConnectContacts = 'ConnectContacts',\n+ AppIconDefaultAdd = 'AppIconDefaultAdd',\n+ AppIconDefaultList = 'AppIconDefaultList',\n+ ActivateOrders = 'ActivateOrders',\n+ DeactivateOrders = 'DeactivateOrders',\n+ ScatterChart = 'ScatterChart',\n+ DocumentManagement = 'DocumentManagement',\n+ CRMReport = 'CRMReport',\n+ KnowledgeArticle = 'KnowledgeArticle',\n+ Relationship = 'Relationship',\n+ HomeVerify = 'HomeVerify',\n+ ZipFolder = 'ZipFolder',\n+ SurveyQuestions = 'SurveyQuestions',\n+ TextDocument = 'TextDocument',\n+ TextDocumentShared = 'TextDocumentShared',\n+ PageCheckedOut = 'PageCheckedOut',\n+ SaveAndClose = 'SaveAndClose',\n+ Script = 'Script',\n+ Archive = 'Archive',\n+ ActivityFeed = 'ActivityFeed',\n+ Compare = 'Compare',\n+ EventDate = 'EventDate',\n+ ArrowUpRight = 'ArrowUpRight',\n+ CaretRight = 'CaretRight',\n+ SetAction = 'SetAction',\n+ CaretSolidLeft = 'CaretSolidLeft',\n+ CaretSolidDown = 'CaretSolidDown',\n+ CaretSolidRight = 'CaretSolidRight',\n+ CaretSolidUp = 'CaretSolidUp',\n+ PowerAppsLogo = 'PowerAppsLogo',\n+ PowerApps2Logo = 'PowerApps2Logo',\n+ SearchIssue = 'SearchIssue',\n+ SearchIssueMirrored = 'SearchIssueMirrored',\n+ FabricAssetLibrary = 'FabricAssetLibrary',\n+ FabricDataConnectionLibrary = 'FabricDataConnectionLibrary',\n+ FabricDocLibrary = 'FabricDocLibrary',\n+ FabricFormLibrary = 'FabricFormLibrary',\n+ FabricFormLibraryMirrored = 'FabricFormLibraryMirrored',\n+ FabricReportLibrary = 'FabricReportLibrary',\n+ FabricReportLibraryMirrored = 'FabricReportLibraryMirrored',\n+ FabricPublicFolder = 'FabricPublicFolder',\n+ FabricFolderSearch = 'FabricFolderSearch',\n+ FabricMovetoFolder = 'FabricMovetoFolder',\n+ FabricUnsyncFolder = 'FabricUnsyncFolder',\n+ FabricSyncFolder = 'FabricSyncFolder',\n+ FabricOpenFolderHorizontal = 'FabricOpenFolderHorizontal',\n+ FabricFolder = 'FabricFolder',\n+ FabricFolderFill = 'FabricFolderFill',\n+ FabricNewFolder = 'FabricNewFolder',\n+ FabricPictureLibrary = 'FabricPictureLibrary',\n+ AddFavorite = 'AddFavorite',\n+ AddFavoriteFill = 'AddFavoriteFill',\n+ BufferTimeBefore = 'BufferTimeBefore',\n+ BufferTimeAfter = 'BufferTimeAfter',\n+ BufferTimeBoth = 'BufferTimeBoth',\n+ PublishContent = 'PublishContent',\n+ ClipboardList = 'ClipboardList',\n+ ClipboardListMirrored = 'ClipboardListMirrored',\n+ CannedChat = 'CannedChat',\n+ SkypeForBusinessLogo = 'SkypeForBusinessLogo',\n+ TabCenter = 'TabCenter',\n+ PageCheckedin = 'PageCheckedin',\n+ PageList = 'PageList',\n+ ReadOutLoud = 'ReadOutLoud',\n+ CaretBottomLeftSolid8 = 'CaretBottomLeftSolid8',\n+ CaretBottomRightSolid8 = 'CaretBottomRightSolid8',\n+ FolderHorizontal = 'FolderHorizontal',\n+ MicrosoftStaffhubLogo = 'MicrosoftStaffhubLogo',\n+ GiftboxOpen = 'GiftboxOpen',\n+ StatusCircleOuter = 'StatusCircleOuter',\n+ StatusCircleInner = 'StatusCircleInner',\n+ StatusCircleRing = 'StatusCircleRing',\n+ StatusTriangleOuter = 'StatusTriangleOuter',\n+ StatusTriangleInner = 'StatusTriangleInner',\n+ StatusTriangleExclamation = 'StatusTriangleExclamation',\n+ StatusCircleExclamation = 'StatusCircleExclamation',\n+ StatusCircleErrorX = 'StatusCircleErrorX',\n+ StatusCircleCheckmark = 'StatusCircleCheckmark',\n+ StatusCircleInfo = 'StatusCircleInfo',\n+ StatusCircleBlock = 'StatusCircleBlock',\n+ StatusCircleBlock2 = 'StatusCircleBlock2',\n+ StatusCircleQuestionMark = 'StatusCircleQuestionMark',\n+ StatusCircleSync = 'StatusCircleSync',\n+ Toll = 'Toll',\n+ ExploreContentSingle = 'ExploreContentSingle',\n+ CollapseContent = 'CollapseContent',\n+ CollapseContentSingle = 'CollapseContentSingle',\n+ InfoSolid = 'InfoSolid',\n+ GroupList = 'GroupList',\n+ ProgressRingDots = 'ProgressRingDots',\n+ CaloriesAdd = 'CaloriesAdd',\n+ BranchFork = 'BranchFork',\n+ AddHome = 'AddHome',\n+ AddWork = 'AddWork',\n+ MobileReport = 'MobileReport',\n+ ScaleVolume = 'ScaleVolume',\n+ HardDriveGroup = 'HardDriveGroup',\n+ FastMode = 'FastMode',\n+ ToggleLeft = 'ToggleLeft',\n+ ToggleRight = 'ToggleRight',\n+ TriangleShape = 'TriangleShape',\n+ RectangleShape = 'RectangleShape',\n+ CubeShape = 'CubeShape',\n+ Trophy2 = 'Trophy2',\n+ BucketColor = 'BucketColor',\n+ BucketColorFill = 'BucketColorFill',\n+ Taskboard = 'Taskboard',\n+ SingleColumn = 'SingleColumn',\n+ DoubleColumn = 'DoubleColumn',\n+ TripleColumn = 'TripleColumn',\n+ ColumnLeftTwoThirds = 'ColumnLeftTwoThirds',\n+ ColumnRightTwoThirds = 'ColumnRightTwoThirds',\n+ AccessLogoFill = 'AccessLogoFill',\n+ AnalyticsLogo = 'AnalyticsLogo',\n+ AnalyticsQuery = 'AnalyticsQuery',\n+ NewAnalyticsQuery = 'NewAnalyticsQuery',\n+ AnalyticsReport = 'AnalyticsReport',\n+ WordLogo = 'WordLogo',\n+ WordLogoFill = 'WordLogoFill',\n+ ExcelLogo = 'ExcelLogo',\n+ ExcelLogoFill = 'ExcelLogoFill',\n+ OneNoteLogo = 'OneNoteLogo',\n+ OneNoteLogoFill = 'OneNoteLogoFill',\n+ OutlookLogo = 'OutlookLogo',\n+ OutlookLogoFill = 'OutlookLogoFill',\n+ PowerPointLogo = 'PowerPointLogo',\n+ PowerPointLogoFill = 'PowerPointLogoFill',\n+ PublisherLogo = 'PublisherLogo',\n+ PublisherLogoFill = 'PublisherLogoFill',\n+ ScheduleEventAction = 'ScheduleEventAction',\n+ FlameSolid = 'FlameSolid',\n+ ServerProcesses = 'ServerProcesses',\n+ Server = 'Server',\n+ SaveAll = 'SaveAll',\n+ LinkedInLogo = 'LinkedInLogo',\n+ Decimals = 'Decimals',\n+ SidePanelMirrored = 'SidePanelMirrored',\n+ ProtectRestrict = 'ProtectRestrict',\n+ Blog = 'Blog',\n+ UnknownMirrored = 'UnknownMirrored',\n+ PublicContactCardMirrored = 'PublicContactCardMirrored',\n+ GridViewSmall = 'GridViewSmall',\n+ GridViewMedium = 'GridViewMedium',\n+ GridViewLarge = 'GridViewLarge',\n+ Step = 'Step',\n+ StepInsert = 'StepInsert',\n+ StepShared = 'StepShared',\n+ StepSharedAdd = 'StepSharedAdd',\n+ StepSharedInsert = 'StepSharedInsert',\n+ ViewDashboard = 'ViewDashboard',\n+ ViewList = 'ViewList',\n+ ViewListGroup = 'ViewListGroup',\n+ ViewListTree = 'ViewListTree',\n+ TriggerAuto = 'TriggerAuto',\n+ TriggerUser = 'TriggerUser',\n+ PivotChart = 'PivotChart',\n+ StackedBarChart = 'StackedBarChart',\n+ StackedLineChart = 'StackedLineChart',\n+ BuildQueue = 'BuildQueue',\n+ BuildQueueNew = 'BuildQueueNew',\n+ UserFollowed = 'UserFollowed',\n+ ContactLink = 'ContactLink',\n+ Stack = 'Stack',\n+ Bullseye = 'Bullseye',\n+ VennDiagram = 'VennDiagram',\n+ FiveTileGrid = 'FiveTileGrid',\n+ FocalPoint = 'FocalPoint',\n+ RingerRemove = 'RingerRemove',\n+ TeamsLogoInverse = 'TeamsLogoInverse',\n+ TeamsLogo = 'TeamsLogo',\n+ TeamsLogoFill = 'TeamsLogoFill',\n+ SkypeForBusinessLogoFill = 'SkypeForBusinessLogoFill',\n+ SharepointLogo = 'SharepointLogo',\n+ SharepointLogoFill = 'SharepointLogoFill',\n+ DelveLogo = 'DelveLogo',\n+ DelveLogoFill = 'DelveLogoFill',\n+ OfficeVideoLogo = 'OfficeVideoLogo',\n+ OfficeVideoLogoFill = 'OfficeVideoLogoFill',\n+ ExchangeLogo = 'ExchangeLogo',\n+ ExchangeLogoFill = 'ExchangeLogoFill',\n+ Signin = 'Signin',\n+ DocumentApproval = 'DocumentApproval',\n+ CloneToDesktop = 'CloneToDesktop',\n+ InstallToDrive = 'InstallToDrive',\n+ Blur = 'Blur',\n+ Build = 'Build',\n+ ProcessMetaTask = 'ProcessMetaTask',\n+ BranchFork2 = 'BranchFork2',\n+ BranchLocked = 'BranchLocked',\n+ BranchCommit = 'BranchCommit',\n+ BranchCompare = 'BranchCompare',\n+ BranchMerge = 'BranchMerge',\n+ BranchPullRequest = 'BranchPullRequest',\n+ BranchSearch = 'BranchSearch',\n+ BranchShelveset = 'BranchShelveset',\n+ RawSource = 'RawSource',\n+ MergeDuplicate = 'MergeDuplicate',\n+ RowsGroup = 'RowsGroup',\n+ RowsChild = 'RowsChild',\n+ Deploy = 'Deploy',\n+ Redeploy = 'Redeploy',\n+ ServerEnviroment = 'ServerEnviroment',\n+ VisioDiagram = 'VisioDiagram',\n+ HighlightMappedShapes = 'HighlightMappedShapes',\n+ TextCallout = 'TextCallout',\n+ IconSetsFlag = 'IconSetsFlag',\n+ VisioLogo = 'VisioLogo',\n+ VisioLogoFill = 'VisioLogoFill',\n+ VisioDocument = 'VisioDocument',\n+ TimelineProgress = 'TimelineProgress',\n+ TimelineDelivery = 'TimelineDelivery',\n+ Backlog = 'Backlog',\n+ TeamFavorite = 'TeamFavorite',\n+ TaskGroup = 'TaskGroup',\n+ TaskGroupMirrored = 'TaskGroupMirrored',\n+ ScopeTemplate = 'ScopeTemplate',\n+ AssessmentGroupTemplate = 'AssessmentGroupTemplate',\n+ NewTeamProject = 'NewTeamProject',\n+ CommentAdd = 'CommentAdd',\n+ CommentNext = 'CommentNext',\n+ CommentPrevious = 'CommentPrevious',\n+ ShopServer = 'ShopServer',\n+ LocaleLanguage = 'LocaleLanguage',\n+ QueryList = 'QueryList',\n+ UserSync = 'UserSync',\n+ UserPause = 'UserPause',\n+ StreamingOff = 'StreamingOff',\n+ MoreVertical = 'MoreVertical',\n+ ArrowTallUpLeft = 'ArrowTallUpLeft',\n+ ArrowTallUpRight = 'ArrowTallUpRight',\n+ ArrowTallDownLeft = 'ArrowTallDownLeft',\n+ ArrowTallDownRight = 'ArrowTallDownRight',\n+ FieldEmpty = 'FieldEmpty',\n+ FieldFilled = 'FieldFilled',\n+ FieldChanged = 'FieldChanged',\n+ FieldNotChanged = 'FieldNotChanged',\n+ RingerOff = 'RingerOff',\n+ PlayResume = 'PlayResume',\n+ BulletedList2 = 'BulletedList2',\n+ BulletedList2Mirrored = 'BulletedList2Mirrored',\n+ ImageCrosshair = 'ImageCrosshair',\n+ GitGraph = 'GitGraph',\n+ Repo = 'Repo',\n+ RepoSolid = 'RepoSolid',\n+ FolderQuery = 'FolderQuery',\n+ FolderList = 'FolderList',\n+ FolderListMirrored = 'FolderListMirrored',\n+ LocationOutline = 'LocationOutline',\n+ POISolid = 'POISolid',\n+ CalculatorNotEqualTo = 'CalculatorNotEqualTo',\n+ BoxSubtractSolid = 'BoxSubtractSolid',\n+ BoxAdditionSolid = 'BoxAdditionSolid',\n+ BoxMultiplySolid = 'BoxMultiplySolid',\n+ BoxPlaySolid = 'BoxPlaySolid',\n+ BoxCheckmarkSolid = 'BoxCheckmarkSolid',\n+ CirclePauseSolid = 'CirclePauseSolid',\n+ CirclePause = 'CirclePause',\n+ MSNVideosSolid = 'MSNVideosSolid',\n+ CircleStopSolid = 'CircleStopSolid',\n+ CircleStop = 'CircleStop',\n+ NavigateBack = 'NavigateBack',\n+ NavigateBackMirrored = 'NavigateBackMirrored',\n+ NavigateForward = 'NavigateForward',\n+ NavigateForwardMirrored = 'NavigateForwardMirrored',\n+ UnknownSolid = 'UnknownSolid',\n+ UnknownMirroredSolid = 'UnknownMirroredSolid',\n+ CircleAddition = 'CircleAddition',\n+ CircleAdditionSolid = 'CircleAdditionSolid',\n+ FilePDB = 'FilePDB',\n+ FileTemplate = 'FileTemplate',\n+ FileSQL = 'FileSQL',\n+ FileJAVA = 'FileJAVA',\n+ FileASPX = 'FileASPX',\n+ FileCSS = 'FileCSS',\n+ FileSass = 'FileSass',\n+ FileLess = 'FileLess',\n+ FileHTML = 'FileHTML',\n+ JavaScriptLanguage = 'JavaScriptLanguage',\n+ CSharpLanguage = 'CSharpLanguage',\n+ CSharp = 'CSharp',\n+ VisualBasicLanguage = 'VisualBasicLanguage',\n+ VB = 'VB',\n+ CPlusPlusLanguage = 'CPlusPlusLanguage',\n+ CPlusPlus = 'CPlusPlus',\n+ FSharpLanguage = 'FSharpLanguage',\n+ FSharp = 'FSharp',\n+ TypeScriptLanguage = 'TypeScriptLanguage',\n+ PythonLanguage = 'PythonLanguage',\n+ PY = 'PY',\n+ CoffeeScript = 'CoffeeScript',\n+ MarkDownLanguage = 'MarkDownLanguage',\n+ FullWidth = 'FullWidth',\n+ FullWidthEdit = 'FullWidthEdit',\n+ Plug = 'Plug',\n+ PlugSolid = 'PlugSolid',\n+ PlugConnected = 'PlugConnected',\n+ PlugDisconnected = 'PlugDisconnected',\n+ UnlockSolid = 'UnlockSolid',\n+ Variable = 'Variable',\n+ Parameter = 'Parameter',\n+ CommentUrgent = 'CommentUrgent',\n+ Storyboard = 'Storyboard',\n+ DiffInline = 'DiffInline',\n+ DiffSideBySide = 'DiffSideBySide',\n+ ImageDiff = 'ImageDiff',\n+ ImagePixel = 'ImagePixel',\n+ FileBug = 'FileBug',\n+ FileCode = 'FileCode',\n+ FileComment = 'FileComment',\n+ BusinessHoursSign = 'BusinessHoursSign',\n+ FileImage = 'FileImage',\n+ FileSymlink = 'FileSymlink',\n+ AutoFillTemplate = 'AutoFillTemplate',\n+ WorkItem = 'WorkItem',\n+ WorkItemBug = 'WorkItemBug',\n+ LogRemove = 'LogRemove',\n+ ColumnOptions = 'ColumnOptions',\n+ Packages = 'Packages',\n+ BuildIssue = 'BuildIssue',\n+ AssessmentGroup = 'AssessmentGroup',\n+ VariableGroup = 'VariableGroup',\n+ FullHistory = 'FullHistory',\n+ Wheelchair = 'Wheelchair',\n+ SingleColumnEdit = 'SingleColumnEdit',\n+ DoubleColumnEdit = 'DoubleColumnEdit',\n+ TripleColumnEdit = 'TripleColumnEdit',\n+ ColumnLeftTwoThirdsEdit = 'ColumnLeftTwoThirdsEdit',\n+ ColumnRightTwoThirdsEdit = 'ColumnRightTwoThirdsEdit',\n+ StreamLogo = 'StreamLogo',\n+ PassiveAuthentication = 'PassiveAuthentication',\n+ AlertSolid = 'AlertSolid',\n+ MegaphoneSolid = 'MegaphoneSolid',\n+ TaskSolid = 'TaskSolid',\n+ ConfigurationSolid = 'ConfigurationSolid',\n+ BugSolid = 'BugSolid',\n+ CrownSolid = 'CrownSolid',\n+ Trophy2Solid = 'Trophy2Solid',\n+ QuickNoteSolid = 'QuickNoteSolid',\n+ ConstructionConeSolid = 'ConstructionConeSolid',\n+ PageListSolid = 'PageListSolid',\n+ PageListMirroredSolid = 'PageListMirroredSolid',\n+ StarburstSolid = 'StarburstSolid',\n+ ReadingModeSolid = 'ReadingModeSolid',\n+ SadSolid = 'SadSolid',\n+ HealthSolid = 'HealthSolid',\n+ ShieldSolid = 'ShieldSolid',\n+ GiftBoxSolid = 'GiftBoxSolid',\n+ ShoppingCartSolid = 'ShoppingCartSolid',\n+ MailSolid = 'MailSolid',\n+ ChatSolid = 'ChatSolid',\n+ RibbonSolid = 'RibbonSolid',\n+ FinancialSolid = 'FinancialSolid',\n+ FinancialMirroredSolid = 'FinancialMirroredSolid',\n+ HeadsetSolid = 'HeadsetSolid',\n+ PermissionsSolid = 'PermissionsSolid',\n+ ParkingSolid = 'ParkingSolid',\n+ ParkingMirroredSolid = 'ParkingMirroredSolid',\n+ DiamondSolid = 'DiamondSolid',\n+ AsteriskSolid = 'AsteriskSolid',\n+ OfflineStorageSolid = 'OfflineStorageSolid',\n+ BankSolid = 'BankSolid',\n+ DecisionSolid = 'DecisionSolid',\n+ Parachute = 'Parachute',\n+ ParachuteSolid = 'ParachuteSolid',\n+ FiltersSolid = 'FiltersSolid',\n+ ColorSolid = 'ColorSolid',\n+ ReviewSolid = 'ReviewSolid',\n+ ReviewRequestSolid = 'ReviewRequestSolid',\n+ ReviewRequestMirroredSolid = 'ReviewRequestMirroredSolid',\n+ ReviewResponseSolid = 'ReviewResponseSolid',\n+ FeedbackRequestSolid = 'FeedbackRequestSolid',\n+ FeedbackRequestMirroredSolid = 'FeedbackRequestMirroredSolid',\n+ FeedbackResponseSolid = 'FeedbackResponseSolid',\n+ WorkItemBar = 'WorkItemBar',\n+ WorkItemBarSolid = 'WorkItemBarSolid',\n+ Separator = 'Separator',\n+ NavigateExternalInline = 'NavigateExternalInline',\n+ PlanView = 'PlanView',\n+ TimelineMatrixView = 'TimelineMatrixView',\n+ EngineeringGroup = 'EngineeringGroup',\n+ ProjectCollection = 'ProjectCollection',\n+ CaretBottomRightCenter8 = 'CaretBottomRightCenter8',\n+ CaretBottomLeftCenter8 = 'CaretBottomLeftCenter8',\n+ CaretTopRightCenter8 = 'CaretTopRightCenter8',\n+ CaretTopLeftCenter8 = 'CaretTopLeftCenter8',\n+ DonutChart = 'DonutChart',\n+ ChevronUnfold10 = 'ChevronUnfold10',\n+ ChevronFold10 = 'ChevronFold10',\n+ DoubleChevronDown8 = 'DoubleChevronDown8',\n+ DoubleChevronUp8 = 'DoubleChevronUp8',\n+ DoubleChevronLeft8 = 'DoubleChevronLeft8',\n+ DoubleChevronRight8 = 'DoubleChevronRight8',\n+ ChevronDownEnd6 = 'ChevronDownEnd6',\n+ ChevronUpEnd6 = 'ChevronUpEnd6',\n+ ChevronLeftEnd6 = 'ChevronLeftEnd6',\n+ ChevronRightEnd6 = 'ChevronRightEnd6',\n+ ContextMenu = 'ContextMenu',\n+ AzureAPIManagement = 'AzureAPIManagement',\n+ AzureServiceEndpoint = 'AzureServiceEndpoint',\n+ VSTSLogo = 'VSTSLogo',\n+ VSTSAltLogo1 = 'VSTSAltLogo1',\n+ VSTSAltLogo2 = 'VSTSAltLogo2',\n+ FileTypeSolution = 'FileTypeSolution',\n+ WordLogoInverse16 = 'WordLogoInverse16',\n+ WordLogo16 = 'WordLogo16',\n+ WordLogoFill16 = 'WordLogoFill16',\n+ PowerPointLogoInverse16 = 'PowerPointLogoInverse16',\n+ PowerPointLogo16 = 'PowerPointLogo16',\n+ PowerPointLogoFill16 = 'PowerPointLogoFill16',\n+ ExcelLogoInverse16 = 'ExcelLogoInverse16',\n+ ExcelLogo16 = 'ExcelLogo16',\n+ ExcelLogoFill16 = 'ExcelLogoFill16',\n+ OneNoteLogoInverse16 = 'OneNoteLogoInverse16',\n+ OneNoteLogo16 = 'OneNoteLogo16',\n+ OneNoteLogoFill16 = 'OneNoteLogoFill16',\n+ OutlookLogoInverse16 = 'OutlookLogoInverse16',\n+ OutlookLogo16 = 'OutlookLogo16',\n+ OutlookLogoFill16 = 'OutlookLogoFill16',\n+ PublisherLogoInverse16 = 'PublisherLogoInverse16',\n+ PublisherLogo16 = 'PublisherLogo16',\n+ PublisherLogoFill16 = 'PublisherLogoFill16',\n+ VisioLogoInverse16 = 'VisioLogoInverse16',\n+ VisioLogo16 = 'VisioLogo16',\n+ VisioLogoFill16 = 'VisioLogoFill16',\n+ TestBeaker = 'TestBeaker',\n+ TestBeakerSolid = 'TestBeakerSolid',\n+ TestExploreSolid = 'TestExploreSolid',\n+ TestAutoSolid = 'TestAutoSolid',\n+ TestUserSolid = 'TestUserSolid',\n+ TestImpactSolid = 'TestImpactSolid',\n+ TestPlan = 'TestPlan',\n+ TestStep = 'TestStep',\n+ TestParameter = 'TestParameter',\n+ TestSuite = 'TestSuite',\n+ TestCase = 'TestCase',\n+ Sprint = 'Sprint',\n+ SignOut = 'SignOut',\n+ TriggerApproval = 'TriggerApproval',\n+ Rocket = 'Rocket',\n+ AzureKeyVault = 'AzureKeyVault',\n+ Onboarding = 'Onboarding',\n+ Transition = 'Transition',\n+ LikeSolid = 'LikeSolid',\n+ DislikeSolid = 'DislikeSolid',\n+ CRMCustomerInsightsApp = 'CRMCustomerInsightsApp',\n+ EditCreate = 'EditCreate',\n+ SearchData = 'SearchData',\n+ UnSetColor = 'UnSetColor',\n+ DeclineCall = 'DeclineCall',\n+ RectangularClipping = 'RectangularClipping',\n+ TeamsLogo16 = 'TeamsLogo16',\n+ TeamsLogoFill16 = 'TeamsLogoFill16',\n+ Spacer = 'Spacer',\n+ SkypeLogo16 = 'SkypeLogo16',\n+ SkypeForBusinessLogo16 = 'SkypeForBusinessLogo16',\n+ SkypeForBusinessLogoFill16 = 'SkypeForBusinessLogoFill16',\n+ FilterSolid = 'FilterSolid',\n+ MailUndelivered = 'MailUndelivered',\n+ MailTentative = 'MailTentative',\n+ MailTentativeMirrored = 'MailTentativeMirrored',\n+ MailReminder = 'MailReminder',\n+ ReceiptUndelivered = 'ReceiptUndelivered',\n+ ReceiptTentative = 'ReceiptTentative',\n+ ReceiptTentativeMirrored = 'ReceiptTentativeMirrored',\n+ Inbox = 'Inbox',\n+ IRMReply = 'IRMReply',\n+ IRMReplyMirrored = 'IRMReplyMirrored',\n+ IRMForward = 'IRMForward',\n+ IRMForwardMirrored = 'IRMForwardMirrored',\n+ VoicemailIRM = 'VoicemailIRM',\n+ EventAccepted = 'EventAccepted',\n+ EventTentative = 'EventTentative',\n+ EventTentativeMirrored = 'EventTentativeMirrored',\n+ EventDeclined = 'EventDeclined',\n+ IDBadge = 'IDBadge',\n+ BackgroundColor = 'BackgroundColor',\n+ OfficeFormsLogoInverse16 = 'OfficeFormsLogoInverse16',\n+ OfficeFormsLogo = 'OfficeFormsLogo',\n+ OfficeFormsLogoFill = 'OfficeFormsLogoFill',\n+ OfficeFormsLogo16 = 'OfficeFormsLogo16',\n+ OfficeFormsLogoFill16 = 'OfficeFormsLogoFill16',\n+ OfficeFormsLogoInverse24 = 'OfficeFormsLogoInverse24',\n+ OfficeFormsLogo24 = 'OfficeFormsLogo24',\n+ OfficeFormsLogoFill24 = 'OfficeFormsLogoFill24',\n+ PageLock = 'PageLock',\n+ NotExecuted = 'NotExecuted',\n+ NotImpactedSolid = 'NotImpactedSolid',\n+ FieldReadOnly = 'FieldReadOnly',\n+ FieldRequired = 'FieldRequired',\n+ BacklogBoard = 'BacklogBoard',\n+ ExternalBuild = 'ExternalBuild',\n+ ExternalTFVC = 'ExternalTFVC',\n+ ExternalXAML = 'ExternalXAML',\n+ IssueSolid = 'IssueSolid',\n+ DefectSolid = 'DefectSolid',\n+ LadybugSolid = 'LadybugSolid',\n+ NugetLogo = 'NugetLogo',\n+ TFVCLogo = 'TFVCLogo',\n+ ProjectLogo32 = 'ProjectLogo32',\n+ ProjectLogoFill32 = 'ProjectLogoFill32',\n+ ProjectLogo16 = 'ProjectLogo16',\n+ ProjectLogoFill16 = 'ProjectLogoFill16',\n+ SwayLogo32 = 'SwayLogo32',\n+ SwayLogoFill32 = 'SwayLogoFill32',\n+ SwayLogo16 = 'SwayLogo16',\n+ SwayLogoFill16 = 'SwayLogoFill16',\n+ ClassNotebookLogo32 = 'ClassNotebookLogo32',\n+ ClassNotebookLogoFill32 = 'ClassNotebookLogoFill32',\n+ ClassNotebookLogo16 = 'ClassNotebookLogo16',\n+ ClassNotebookLogoFill16 = 'ClassNotebookLogoFill16',\n+ ClassNotebookLogoInverse32 = 'ClassNotebookLogoInverse32',\n+ ClassNotebookLogoInverse16 = 'ClassNotebookLogoInverse16',\n+ StaffNotebookLogo32 = 'StaffNotebookLogo32',\n+ StaffNotebookLogoFill32 = 'StaffNotebookLogoFill32',\n+ StaffNotebookLogo16 = 'StaffNotebookLogo16',\n+ StaffNotebookLogoFill16 = 'StaffNotebookLogoFill16',\n+ StaffNotebookLogoInverted32 = 'StaffNotebookLogoInverted32',\n+ StaffNotebookLogoInverted16 = 'StaffNotebookLogoInverted16',\n+ KaizalaLogo = 'KaizalaLogo',\n+ TaskLogo = 'TaskLogo',\n+ ProtectionCenterLogo32 = 'ProtectionCenterLogo32',\n+ GallatinLogo = 'GallatinLogo',\n+ Globe2 = 'Globe2',\n+ Guitar = 'Guitar',\n+ Breakfast = 'Breakfast',\n+ Brunch = 'Brunch',\n+ BeerMug = 'BeerMug',\n+ Vacation = 'Vacation',\n+ Teeth = 'Teeth',\n+ Taxi = 'Taxi',\n+ Chopsticks = 'Chopsticks',\n+ SyncOccurence = 'SyncOccurence',\n+ UnsyncOccurence = 'UnsyncOccurence',\n+ GIF = 'GIF',\n+ PrimaryCalendar = 'PrimaryCalendar',\n+ SearchCalendar = 'SearchCalendar',\n+ VideoOff = 'VideoOff',\n+ MicrosoftFlowLogo = 'MicrosoftFlowLogo',\n+ BusinessCenterLogo = 'BusinessCenterLogo',\n+ ToDoLogoBottom = 'ToDoLogoBottom',\n+ ToDoLogoTop = 'ToDoLogoTop',\n+ EditSolid12 = 'EditSolid12',\n+ EditSolidMirrored12 = 'EditSolidMirrored12',\n+ UneditableSolid12 = 'UneditableSolid12',\n+ UneditableSolidMirrored12 = 'UneditableSolidMirrored12',\n+ UneditableMirrored = 'UneditableMirrored',\n+ AdminALogo32 = 'AdminALogo32',\n+ AdminALogoFill32 = 'AdminALogoFill32',\n+ ToDoLogoInverse = 'ToDoLogoInverse',\n+ Snooze = 'Snooze',\n+ WaffleOffice365 = 'WaffleOffice365',\n+ ImageSearch = 'ImageSearch',\n+ NewsSearch = 'NewsSearch',\n+ VideoSearch = 'VideoSearch',\n+ R = 'R',\n+ FontColorA = 'FontColorA',\n+ FontColorSwatch = 'FontColorSwatch',\n+ LightWeight = 'LightWeight',\n+ NormalWeight = 'NormalWeight',\n+ SemiboldWeight = 'SemiboldWeight',\n+ GroupObject = 'GroupObject',\n+ UngroupObject = 'UngroupObject',\n+ AlignHorizontalLeft = 'AlignHorizontalLeft',\n+ AlignHorizontalCenter = 'AlignHorizontalCenter',\n+ AlignHorizontalRight = 'AlignHorizontalRight',\n+ AlignVerticalTop = 'AlignVerticalTop',\n+ AlignVerticalCenter = 'AlignVerticalCenter',\n+ AlignVerticalBottom = 'AlignVerticalBottom',\n+ HorizontalDistributeCenter = 'HorizontalDistributeCenter',\n+ VerticalDistributeCenter = 'VerticalDistributeCenter',\n+ Ellipse = 'Ellipse',\n+ Line = 'Line',\n+ Octagon = 'Octagon',\n+ Hexagon = 'Hexagon',\n+ Pentagon = 'Pentagon',\n+ RightTriangle = 'RightTriangle',\n+ HalfCircle = 'HalfCircle',\n+ QuarterCircle = 'QuarterCircle',\n+ ThreeQuarterCircle = 'ThreeQuarterCircle',\n+ SixPointStar = 'SixPointStar',\n+ TwelvePointStar = 'TwelvePointStar',\n+ ArrangeBringToFront = 'ArrangeBringToFront',\n+ ArrangeSendToBack = 'ArrangeSendToBack',\n+ ArrangeSendBackward = 'ArrangeSendBackward',\n+ ArrangeBringForward = 'ArrangeBringForward',\n+ BorderDash = 'BorderDash',\n+ BorderDot = 'BorderDot',\n+ LineStyle = 'LineStyle',\n+ LineThickness = 'LineThickness',\n+ WindowEdit = 'WindowEdit',\n+ HintText = 'HintText',\n+ MediaAdd = 'MediaAdd',\n+ AnchorLock = 'AnchorLock',\n+ AutoHeight = 'AutoHeight',\n+ ChartSeries = 'ChartSeries',\n+ ChartXAngle = 'ChartXAngle',\n+ ChartYAngle = 'ChartYAngle',\n+ Combobox = 'Combobox',\n+ LineSpacing = 'LineSpacing',\n+ Padding = 'Padding',\n+ PaddingTop = 'PaddingTop',\n+ PaddingBottom = 'PaddingBottom',\n+ PaddingLeft = 'PaddingLeft',\n+ PaddingRight = 'PaddingRight',\n+ NavigationFlipper = 'NavigationFlipper',\n+ AlignJustify = 'AlignJustify',\n+ TextOverflow = 'TextOverflow',\n+ VisualsFolder = 'VisualsFolder',\n+ VisualsStore = 'VisualsStore',\n+ PictureCenter = 'PictureCenter',\n+ PictureFill = 'PictureFill',\n+ PicturePosition = 'PicturePosition',\n+ PictureStretch = 'PictureStretch',\n+ PictureTile = 'PictureTile',\n+ Slider = 'Slider',\n+ SliderHandleSize = 'SliderHandleSize',\n+ DefaultRatio = 'DefaultRatio',\n+ NumberSequence = 'NumberSequence',\n+ GUID = 'GUID',\n+ ReportAdd = 'ReportAdd',\n+ DashboardAdd = 'DashboardAdd',\n+ MapPinSolid = 'MapPinSolid',\n+ WebPublish = 'WebPublish',\n+ PieSingleSolid = 'PieSingleSolid',\n+ BlockedSolid = 'BlockedSolid',\n+ DrillDown = 'DrillDown',\n+ DrillDownSolid = 'DrillDownSolid',\n+ DrillExpand = 'DrillExpand',\n+ DrillShow = 'DrillShow',\n+ SpecialEvent = 'SpecialEvent',\n+ OneDriveFolder16 = 'OneDriveFolder16',\n+ FunctionalManagerDashboard = 'FunctionalManagerDashboard',\n+ BIDashboard = 'BIDashboard',\n+ CodeEdit = 'CodeEdit',\n+ RenewalCurrent = 'RenewalCurrent',\n+ RenewalFuture = 'RenewalFuture',\n+ SplitObject = 'SplitObject',\n+ BulkUpload = 'BulkUpload',\n+ DownloadDocument = 'DownloadDocument',\n+ Flower = 'Flower',\n+ WaitlistConfirm = 'WaitlistConfirm',\n+ WaitlistConfirmMirrored = 'WaitlistConfirmMirrored',\n+ LaptopSecure = 'LaptopSecure',\n+ DragObject = 'DragObject',\n+ EntryView = 'EntryView',\n+ EntryDecline = 'EntryDecline',\n+ ContactCardSettings = 'ContactCardSettings',\n+ ContactCardSettingsMirrored = 'ContactCardSettingsMirrored',\n+ CalendarSettings = 'CalendarSettings',\n+ CalendarSettingsMirrored = 'CalendarSettingsMirrored',\n+ HardDriveLock = 'HardDriveLock',\n+ HardDriveUnlock = 'HardDriveUnlock',\n+ AccountManagement = 'AccountManagement',\n+ TransitionPop = 'TransitionPop',\n+ TransitionPush = 'TransitionPush',\n+ TransitionEffect = 'TransitionEffect',\n+ LookupEntities = 'LookupEntities',\n+ ExploreData = 'ExploreData',\n+ AddBookmark = 'AddBookmark',\n+ SearchBookmark = 'SearchBookmark',\n+ DrillThrough = 'DrillThrough',\n+ MasterDatabase = 'MasterDatabase',\n+ CertifiedDatabase = 'CertifiedDatabase',\n+ MaximumValue = 'MaximumValue',\n+ MinimumValue = 'MinimumValue',\n+ VisualStudioIDELogo32 = 'VisualStudioIDELogo32',\n+ PasteAsText = 'PasteAsText',\n+ PasteAsCode = 'PasteAsCode',\n+ BrowserTab = 'BrowserTab',\n+ BrowserTabScreenshot = 'BrowserTabScreenshot',\n+ DesktopScreenshot = 'DesktopScreenshot',\n+ FileYML = 'FileYML',\n+ ClipboardSolid = 'ClipboardSolid',\n+ FabricUserFolder = 'FabricUserFolder',\n+ FabricNetworkFolder = 'FabricNetworkFolder',\n+ AnalyticsView = 'AnalyticsView',\n+ Video360Generic = 'Video360Generic',\n+ Leave = 'Leave',\n+ Trending12 = 'Trending12',\n+ Blocked12 = 'Blocked12',\n+ Warning12 = 'Warning12',\n+ CheckedOutByOther12 = 'CheckedOutByOther12',\n+ CheckedOutByYou12 = 'CheckedOutByYou12',\n+ CircleShapeSolid = 'CircleShapeSolid',\n+ SquareShapeSolid = 'SquareShapeSolid',\n+ TriangleShapeSolid = 'TriangleShapeSolid',\n+ DropShapeSolid = 'DropShapeSolid',\n+ RectangleShapeSolid = 'RectangleShapeSolid',\n+ ZoomToFit = 'ZoomToFit',\n+ InsertColumnsLeft = 'InsertColumnsLeft',\n+ InsertColumnsRight = 'InsertColumnsRight',\n+ InsertRowsAbove = 'InsertRowsAbove',\n+ InsertRowsBelow = 'InsertRowsBelow',\n+ DeleteColumns = 'DeleteColumns',\n+ DeleteRows = 'DeleteRows',\n+ DeleteRowsMirrored = 'DeleteRowsMirrored',\n+ DeleteTable = 'DeleteTable',\n+ AccountBrowser = 'AccountBrowser',\n+ VersionControlPush = 'VersionControlPush',\n+ StackedColumnChart2 = 'StackedColumnChart2',\n+ TripleColumnWide = 'TripleColumnWide',\n+ QuadColumn = 'QuadColumn',\n+ WhiteBoardApp16 = 'WhiteBoardApp16',\n+ WhiteBoardApp32 = 'WhiteBoardApp32',\n+ PinnedSolid = 'PinnedSolid',\n+ InsertSignatureLine = 'InsertSignatureLine',\n+ ArrangeByFrom = 'ArrangeByFrom',\n+ Phishing = 'Phishing',\n+ CreateMailRule = 'CreateMailRule',\n+ PublishCourse = 'PublishCourse',\n+ DictionaryRemove = 'DictionaryRemove',\n+ UserRemove = 'UserRemove',\n+ UserEvent = 'UserEvent',\n+ Encryption = 'Encryption',\n+ PasswordField = 'PasswordField',\n+ OpenInNewTab = 'OpenInNewTab',\n+ Hide3 = 'Hide3',\n+ VerifiedBrandSolid = 'VerifiedBrandSolid',\n+ MarkAsProtected = 'MarkAsProtected',\n+ AuthenticatorApp = 'AuthenticatorApp',\n+ WebTemplate = 'WebTemplate',\n+ DefenderTVM = 'DefenderTVM',\n+ MedalSolid = 'MedalSolid',\n+ D365TalentLearn = 'D365TalentLearn',\n+ D365TalentInsight = 'D365TalentInsight',\n+ D365TalentHRCore = 'D365TalentHRCore',\n+ BacklogList = 'BacklogList',\n+ ButtonControl = 'ButtonControl',\n+ TableGroup = 'TableGroup',\n+ MountainClimbing = 'MountainClimbing',\n+ TagUnknown = 'TagUnknown',\n+ TagUnknownMirror = 'TagUnknownMirror',\n+ TagUnknown12 = 'TagUnknown12',\n+ TagUnknown12Mirror = 'TagUnknown12Mirror',\n+ Link12 = 'Link12',\n+ Presentation = 'Presentation',\n+ Presentation12 = 'Presentation12',\n+ Lock12 = 'Lock12',\n+ BuildDefinition = 'BuildDefinition',\n+ ReleaseDefinition = 'ReleaseDefinition',\n+ SaveTemplate = 'SaveTemplate',\n+ UserGauge = 'UserGauge',\n+ BlockedSiteSolid12 = 'BlockedSiteSolid12',\n+ TagSolid = 'TagSolid',\n+ OfficeChat = 'OfficeChat',\n+ OfficeChatSolid = 'OfficeChatSolid',\n+ MailSchedule = 'MailSchedule',\n+ WarningSolid = 'WarningSolid',\n+ Blocked2Solid = 'Blocked2Solid',\n+ SkypeCircleArrow = 'SkypeCircleArrow',\n+ SkypeArrow = 'SkypeArrow',\n+ SyncStatus = 'SyncStatus',\n+ SyncStatusSolid = 'SyncStatusSolid',\n+ ProjectDocument = 'ProjectDocument',\n+ ToDoLogoOutline = 'ToDoLogoOutline',\n+ VisioOnlineLogoFill32 = 'VisioOnlineLogoFill32',\n+ VisioOnlineLogo32 = 'VisioOnlineLogo32',\n+ VisioOnlineLogoCloud32 = 'VisioOnlineLogoCloud32',\n+ VisioDiagramSync = 'VisioDiagramSync',\n+ Event12 = 'Event12',\n+ EventDateMissed12 = 'EventDateMissed12',\n+ UserOptional = 'UserOptional',\n+ ResponsesMenu = 'ResponsesMenu',\n+ DoubleDownArrow = 'DoubleDownArrow',\n+ DistributeDown = 'DistributeDown',\n+ BookmarkReport = 'BookmarkReport',\n+ FilterSettings = 'FilterSettings',\n+ GripperDotsVertical = 'GripperDotsVertical',\n+ MailAttached = 'MailAttached',\n+ AddIn = 'AddIn',\n+ LinkedDatabase = 'LinkedDatabase',\n+ TableLink = 'TableLink',\n+ PromotedDatabase = 'PromotedDatabase',\n+ BarChartVerticalFilter = 'BarChartVerticalFilter',\n+ BarChartVerticalFilterSolid = 'BarChartVerticalFilterSolid',\n+ MicrosoftTranslatorLogo = 'MicrosoftTranslatorLogo',\n+ ShowTimeAs = 'ShowTimeAs',\n+ FileRequest = 'FileRequest',\n+ WorkItemAlert = 'WorkItemAlert',\n+ PowerBILogo16 = 'PowerBILogo16',\n+ PowerBILogoBackplate16 = 'PowerBILogoBackplate16',\n+ BulletedListText = 'BulletedListText',\n+ BulletedListBullet = 'BulletedListBullet',\n+ BulletedListTextMirrored = 'BulletedListTextMirrored',\n+ BulletedListBulletMirrored = 'BulletedListBulletMirrored',\n+ NumberedListText = 'NumberedListText',\n+ NumberedListNumber = 'NumberedListNumber',\n+ NumberedListTextMirrored = 'NumberedListTextMirrored',\n+ NumberedListNumberMirrored = 'NumberedListNumberMirrored',\n+ RemoveLinkChain = 'RemoveLinkChain',\n+ RemoveLinkX = 'RemoveLinkX',\n+ FabricTextHighlight = 'FabricTextHighlight',\n+ ClearFormattingA = 'ClearFormattingA',\n+ ClearFormattingEraser = 'ClearFormattingEraser',\n+ Photo2Fill = 'Photo2Fill',\n+ IncreaseIndentText = 'IncreaseIndentText',\n+ IncreaseIndentArrow = 'IncreaseIndentArrow',\n+ DecreaseIndentText = 'DecreaseIndentText',\n+ DecreaseIndentArrow = 'DecreaseIndentArrow',\n+ IncreaseIndentTextMirrored = 'IncreaseIndentTextMirrored',\n+ IncreaseIndentArrowMirrored = 'IncreaseIndentArrowMirrored',\n+ DecreaseIndentTextMirrored = 'DecreaseIndentTextMirrored',\n+ DecreaseIndentArrowMirrored = 'DecreaseIndentArrowMirrored',\n+ CheckListText = 'CheckListText',\n+ CheckListCheck = 'CheckListCheck',\n+ CheckListTextMirrored = 'CheckListTextMirrored',\n+ CheckListCheckMirrored = 'CheckListCheckMirrored',\n+ NumberSymbol = 'NumberSymbol',\n+ Coupon = 'Coupon',\n+ VerifiedBrand = 'VerifiedBrand',\n+ ReleaseGate = 'ReleaseGate',\n+ ReleaseGateCheck = 'ReleaseGateCheck',\n+ ReleaseGateError = 'ReleaseGateError',\n+ M365InvoicingLogo = 'M365InvoicingLogo',\n+ RemoveFromShoppingList = 'RemoveFromShoppingList',\n+ ShieldAlert = 'ShieldAlert',\n+ FabricTextHighlightComposite = 'FabricTextHighlightComposite',\n+ Dataflows = 'Dataflows',\n+ GenericScanFilled = 'GenericScanFilled',\n+ DiagnosticDataBarTooltip = 'DiagnosticDataBarTooltip',\n+ SaveToMobile = 'SaveToMobile',\n+ Orientation2 = 'Orientation2',\n+ ScreenCast = 'ScreenCast',\n+ ShowGrid = 'ShowGrid',\n+ SnapToGrid = 'SnapToGrid',\n+ ContactList = 'ContactList',\n+ NewMail = 'NewMail',\n+ EyeShadow = 'EyeShadow',\n+ FabricFolderConfirm = 'FabricFolderConfirm',\n+ InformationBarriers = 'InformationBarriers',\n+ CommentActive = 'CommentActive',\n+ ColumnVerticalSectionEdit = 'ColumnVerticalSectionEdit',\n+ WavingHand = 'WavingHand',\n+ ShakeDevice = 'ShakeDevice',\n+ SmartGlassRemote = 'SmartGlassRemote',\n+ Rotate90Clockwise = 'Rotate90Clockwise',\n+ Rotate90CounterClockwise = 'Rotate90CounterClockwise',\n+ CampaignTemplate = 'CampaignTemplate',\n+ ChartTemplate = 'ChartTemplate',\n+ PageListFilter = 'PageListFilter',\n+ SecondaryNav = 'SecondaryNav',\n+ ColumnVerticalSection = 'ColumnVerticalSection',\n+ SkypeCircleSlash = 'SkypeCircleSlash',\n+ SkypeSlash = 'SkypeSlash',\n+ CustomizeToolbar = 'CustomizeToolbar',\n+ DuplicateRow = 'DuplicateRow',\n+ RemoveFromTrash = 'RemoveFromTrash',\n+ MailOptions = 'MailOptions',\n+ Childof = 'Childof',\n+ Footer = 'Footer',\n+ Header = 'Header',\n+ BarChartVerticalFill = 'BarChartVerticalFill',\n+ StackedColumnChart2Fill = 'StackedColumnChart2Fill',\n+ PlainText = 'PlainText',\n+ AccessibiltyChecker = 'AccessibiltyChecker',\n+ DatabaseSync = 'DatabaseSync',\n+ ReservationOrders = 'ReservationOrders',\n+ TabOneColumn = 'TabOneColumn',\n+ TabTwoColumn = 'TabTwoColumn',\n+ TabThreeColumn = 'TabThreeColumn',\n+ MicrosoftTranslatorLogoGreen = 'MicrosoftTranslatorLogoGreen',\n+ MicrosoftTranslatorLogoBlue = 'MicrosoftTranslatorLogoBlue',\n+ InternalInvestigation = 'InternalInvestigation',\n+ AddReaction = 'AddReaction',\n+ ContactHeart = 'ContactHeart',\n+ VisuallyImpaired = 'VisuallyImpaired',\n+ EventToDoLogo = 'EventToDoLogo',\n+ Variable2 = 'Variable2',\n+ ModelingView = 'ModelingView',\n+ DisconnectVirtualMachine = 'DisconnectVirtualMachine',\n+ ReportLock = 'ReportLock',\n+ Uneditable2 = 'Uneditable2',\n+ Uneditable2Mirrored = 'Uneditable2Mirrored',\n+ BarChartVerticalEdit = 'BarChartVerticalEdit',\n+ GlobalNavButtonActive = 'GlobalNavButtonActive',\n+ PollResults = 'PollResults',\n+ Rerun = 'Rerun',\n+ QandA = 'QandA',\n+ QandAMirror = 'QandAMirror',\n+ BookAnswers = 'BookAnswers',\n+ AlertSettings = 'AlertSettings',\n+ TableComputed = 'TableComputed',\n+ DecreaseIndentLegacy = 'DecreaseIndentLegacy',\n+ IncreaseIndentLegacy = 'IncreaseIndentLegacy',\n+ SizeLegacy = 'SizeLegacy'\n+}\n+\n+// tslint:disable-next-line:deprecation\n+export type IconNamesInput = keyof typeof IconNames;\n\\ No newline at end of file""}, {'Name': 'src/settings-web/src/icons/src/data/AllIconNames.json', 'Line Additions': 1752, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,1752 @@\n+[\n+  { ""_comment"": ""Auto-generated by the UI Fabric Icon subsetter tool: https://uifabricicons.azurewebsites.net"" },\n+  { ""name"": ""GlobalNavButton"", ""unicode"": ""E700"" },\n+  { ""name"": ""InternetSharing"", ""unicode"": ""E704"" },\n+  { ""name"": ""Brightness"", ""unicode"": ""E706"" },\n+  { ""name"": ""MapPin"", ""unicode"": ""E707"" },\n+  { ""name"": ""Airplane"", ""unicode"": ""E709"" },\n+  { ""name"": ""Tablet"", ""unicode"": ""E70A"" },\n+  { ""name"": ""QuickNote"", ""unicode"": ""E70B"" },\n+  { ""name"": ""ChevronDown"", ""unicode"": ""E70D"" },\n+  { ""name"": ""ChevronUp"", ""unicode"": ""E70E"" },\n+  { ""name"": ""Edit"", ""unicode"": ""E70F"" },\n+  { ""name"": ""Add"", ""unicode"": ""E710"" },\n+  { ""name"": ""Cancel"", ""unicode"": ""E711"" },\n+  { ""name"": ""More"", ""unicode"": ""E712"" },\n+  { ""name"": ""Settings"", ""unicode"": ""E713"" },\n+  { ""name"": ""Video"", ""unicode"": ""E714"" },\n+  { ""name"": ""Mail"", ""unicode"": ""E715"" },\n+  { ""name"": ""People"", ""unicode"": ""E716"" },\n+  { ""name"": ""Phone"", ""unicode"": ""E717"" },\n+  { ""name"": ""Pin"", ""unicode"": ""E718"" },\n+  { ""name"": ""Shop"", ""unicode"": ""E719"" },\n+  { ""name"": ""Stop"", ""unicode"": ""E71A"" },\n+  { ""name"": ""Link"", ""unicode"": ""E71B"" },\n+  { ""name"": ""Filter"", ""unicode"": ""E71C"" },\n+  { ""name"": ""AllApps"", ""unicode"": ""E71D"" },\n+  { ""name"": ""Zoom"", ""unicode"": ""E71E"" },\n+  { ""name"": ""ZoomOut"", ""unicode"": ""E71F"" },\n+  { ""name"": ""Microphone"", ""unicode"": ""E720"" },\n+  { ""name"": ""Search"", ""unicode"": ""E721"" },\n+  { ""name"": ""Camera"", ""unicode"": ""E722"" },\n+  { ""name"": ""Attach"", ""unicode"": ""E723"" },\n+  { ""name"": ""Send"", ""unicode"": ""E724"" },\n+  { ""name"": ""FavoriteList"", ""unicode"": ""E728"" },\n+  { ""name"": ""PageSolid"", ""unicode"": ""E729"" },\n+  { ""name"": ""Forward"", ""unicode"": ""E72A"" },\n+  { ""name"": ""Back"", ""unicode"": ""E72B"" },\n+  { ""name"": ""Refresh"", ""unicode"": ""E72C"" },\n+  { ""name"": ""Share"", ""unicode"": ""E72D"" },\n+  { ""name"": ""Lock"", ""unicode"": ""E72E"" },\n+  { ""name"": ""BlockedSite"", ""unicode"": ""E72F"" },\n+  { ""name"": ""ReportHacked"", ""unicode"": ""E730"" },\n+  { ""name"": ""EMI"", ""unicode"": ""E731"" },\n+  { ""name"": ""MiniLink"", ""unicode"": ""E732"" },\n+  { ""name"": ""Blocked"", ""unicode"": ""E733"" },\n+  { ""name"": ""FavoriteStar"", ""unicode"": ""E734"" },\n+  { ""name"": ""FavoriteStarFill"", ""unicode"": ""E735"" },\n+  { ""name"": ""ReadingMode"", ""unicode"": ""E736"" },\n+  { ""name"": ""Favicon"", ""unicode"": ""E737"" },\n+  { ""name"": ""Remove"", ""unicode"": ""E738"" },\n+  { ""name"": ""Checkbox"", ""unicode"": ""E739"" },\n+  { ""name"": ""CheckboxComposite"", ""unicode"": ""E73A"" },\n+  { ""name"": ""CheckboxFill"", ""unicode"": ""E73B"" },\n+  { ""name"": ""CheckboxIndeterminate"", ""unicode"": ""E73C"" },\n+  { ""name"": ""CheckboxCompositeReversed"", ""unicode"": ""E73D"" },\n+  { ""name"": ""CheckMark"", ""unicode"": ""E73E"" },\n+  { ""name"": ""BackToWindow"", ""unicode"": ""E73F"" },\n+  { ""name"": ""FullScreen"", ""unicode"": ""E740"" },\n+  { ""name"": ""Print"", ""unicode"": ""E749"" },\n+  { ""name"": ""Up"", ""unicode"": ""E74A"" },\n+  { ""name"": ""Down"", ""unicode"": ""E74B"" },\n+  { ""name"": ""OEM"", ""unicode"": ""E74C"" },\n+  { ""name"": ""Delete"", ""unicode"": ""E74D"" },\n+  { ""name"": ""Save"", ""unicode"": ""E74E"" },\n+  { ""name"": ""ReturnKey"", ""unicode"": ""E751"" },\n+  { ""name"": ""Cloud"", ""unicode"": ""E753"" },\n+  { ""name"": ""Flashlight"", ""unicode"": ""E754"" },\n+  { ""name"": ""CommandPrompt"", ""unicode"": ""E756"" },\n+  { ""name"": ""Sad"", ""unicode"": ""E757"" },\n+  { ""name"": ""RealEstate"", ""unicode"": ""E758"" },\n+  { ""name"": ""SIPMove"", ""unicode"": ""E759"" },\n+  { ""name"": ""EraseTool"", ""unicode"": ""E75C"" },\n+  { ""name"": ""GripperTool"", ""unicode"": ""E75E"" },\n+  { ""name"": ""Dialpad"", ""unicode"": ""E75F"" },\n+  { ""name"": ""PageLeft"", ""unicode"": ""E760"" },\n+  { ""name"": ""PageRight"", ""unicode"": ""E761"" },\n+  { ""name"": ""MultiSelect"", ""unicode"": ""E762"" },\n+  { ""name"": ""KeyboardClassic"", ""unicode"": ""E765"" },\n+  { ""name"": ""Play"", ""unicode"": ""E768"" },\n+  { ""name"": ""Pause"", ""unicode"": ""E769"" },\n+  { ""name"": ""ChevronLeft"", ""unicode"": ""E76B"" },\n+  { ""name"": ""ChevronRight"", ""unicode"": ""E76C"" },\n+  { ""name"": ""InkingTool"", ""unicode"": ""E76D"" },\n+  { ""name"": ""Emoji2"", ""unicode"": ""E76E"" },\n+  { ""name"": ""GripperBarHorizontal"", ""unicode"": ""E76F"" },\n+  { ""name"": ""System"", ""unicode"": ""E770"" },\n+  { ""name"": ""Personalize"", ""unicode"": ""E771"" },\n+  { ""name"": ""SearchAndApps"", ""unicode"": ""E773"" },\n+  { ""name"": ""Globe"", ""unicode"": ""E774"" },\n+  { ""name"": ""EaseOfAccess"", ""unicode"": ""E776"" },\n+  { ""name"": ""ContactInfo"", ""unicode"": ""E779"" },\n+  { ""name"": ""Unpin"", ""unicode"": ""E77A"" },\n+  { ""name"": ""Contact"", ""unicode"": ""E77B"" },\n+  { ""name"": ""Memo"", ""unicode"": ""E77C"" },\n+  { ""name"": ""IncomingCall"", ""unicode"": ""E77E"" },\n+  { ""name"": ""Paste"", ""unicode"": ""E77F"" },\n+  { ""name"": ""WindowsLogo"", ""unicode"": ""E782"" },\n+  { ""name"": ""Error"", ""unicode"": ""E783"" },\n+  { ""name"": ""GripperBarVertical"", ""unicode"": ""E784"" },\n+  { ""name"": ""Unlock"", ""unicode"": ""E785"" },\n+  { ""name"": ""Slideshow"", ""unicode"": ""E786"" },\n+  { ""name"": ""Calendar"", ""unicode"": ""E787"" },\n+  { ""name"": ""Megaphone"", ""unicode"": ""E789"" },\n+  { ""name"": ""AutoEnhanceOn"", ""unicode"": ""E78D"" },\n+  { ""name"": ""AutoEnhanceOff"", ""unicode"": ""E78E"" },\n+  { ""name"": ""Color"", ""unicode"": ""E790"" },\n+  { ""name"": ""SaveAs"", ""unicode"": ""E792"" },\n+  { ""name"": ""Light"", ""unicode"": ""E793"" },\n+  { ""name"": ""Filters"", ""unicode"": ""E795"" },\n+  { ""name"": ""AspectRatio"", ""unicode"": ""E799"" },\n+  { ""name"": ""Contrast"", ""unicode"": ""E7A1"" },\n+  { ""name"": ""Redo"", ""unicode"": ""E7A6"" },\n+  { ""name"": ""Undo"", ""unicode"": ""E7A7"" },\n+  { ""name"": ""Crop"", ""unicode"": ""E7A8"" },\n+  { ""name"": ""PhotoCollection"", ""unicode"": ""E7AA"" },\n+  { ""name"": ""Album"", ""unicode"": ""E7AB"" },\n+  { ""name"": ""Rotate"", ""unicode"": ""E7AD"" },\n+  { ""name"": ""PanoIndicator"", ""unicode"": ""E7B0"" },\n+  { ""name"": ""Translate"", ""unicode"": ""E7B2"" },\n+  { ""name"": ""RedEye"", ""unicode"": ""E7B3"" },\n+  { ""name"": ""ThumbnailView"", ""unicode"": ""E7B6"" },\n+  { ""name"": ""Package"", ""unicode"": ""E7B8"" },\n+  { ""name"": ""Telemarketer"", ""unicode"": ""E7B9"" },\n+  { ""name"": ""Warning"", ""unicode"": ""E7BA"" },\n+  { ""name"": ""Financial"", ""unicode"": ""E7BB"" },\n+  { ""name"": ""Education"", ""unicode"": ""E7BE"" },\n+  { ""name"": ""ShoppingCart"", ""unicode"": ""E7BF"" },\n+  { ""name"": ""Train"", ""unicode"": ""E7C0"" },\n+  { ""name"": ""Flag"", ""unicode"": ""E7C1"" },\n+  { ""name"": ""Move"", ""unicode"": ""E7C2"" },\n+  { ""name"": ""Page"", ""unicode"": ""E7C3"" },\n+  { ""name"": ""TouchPointer"", ""unicode"": ""E7C9"" },\n+  { ""name"": ""Merge"", ""unicode"": ""E7D5"" },\n+  { ""name"": ""TurnRight"", ""unicode"": ""E7DB"" },\n+  { ""name"": ""Ferry"", ""unicode"": ""E7E3"" },\n+  { ""name"": ""Highlight"", ""unicode"": ""E7E6"" },\n+  { ""name"": ""PowerButton"", ""unicode"": ""E7E8"" },\n+  { ""name"": ""Tab"", ""unicode"": ""E7E9"" },\n+  { ""name"": ""Admin"", ""unicode"": ""E7EF"" },\n+  { ""name"": ""TVMonitor"", ""unicode"": ""E7F4"" },\n+  { ""name"": ""Speakers"", ""unicode"": ""E7F5"" },\n+  { ""name"": ""Game"", ""unicode"": ""E7FC"" },\n+  { ""name"": ""UnstackSelected"", ""unicode"": ""E7FE"" },\n+  { ""name"": ""StackIndicator"", ""unicode"": ""E7FF"" },\n+  { ""name"": ""Nav2DMapView"", ""unicode"": ""E800"" },\n+  { ""name"": ""StreetsideSplitMinimize"", ""unicode"": ""E802"" },\n+  { ""name"": ""Car"", ""unicode"": ""E804"" },\n+  { ""name"": ""Bus"", ""unicode"": ""E806"" },\n+  { ""name"": ""EatDrink"", ""unicode"": ""E807"" },\n+  { ""name"": ""SeeDo"", ""unicode"": ""E808"" },\n+  { ""name"": ""LocationCircle"", ""unicode"": ""E80E"" },\n+  { ""name"": ""Home"", ""unicode"": ""E80F"" },\n+  { ""name"": ""SwitcherStartEnd"", ""unicode"": ""E810"" },\n+  { ""name"": ""ParkingLocation"", ""unicode"": ""E811"" },\n+  { ""name"": ""IncidentTriangle"", ""unicode"": ""E814"" },\n+  { ""name"": ""Touch"", ""unicode"": ""E815"" },\n+  { ""name"": ""MapDirections"", ""unicode"": ""E816"" },\n+  { ""name"": ""CaretHollow"", ""unicode"": ""E817"" },\n+  { ""name"": ""CaretSolid"", ""unicode"": ""E818"" },\n+  { ""name"": ""History"", ""unicode"": ""E81C"" },\n+  { ""name"": ""Location"", ""unicode"": ""E81D"" },\n+  { ""name"": ""MapLayers"", ""unicode"": ""E81E"" },\n+  { ""name"": ""SearchNearby"", ""unicode"": ""E820"" },\n+  { ""name"": ""Work"", ""unicode"": ""E821"" },\n+  { ""name"": ""Recent"", ""unicode"": ""E823"" },\n+  { ""name"": ""Hotel"", ""unicode"": ""E824"" },\n+  { ""name"": ""Bank"", ""unicode"": ""E825"" },\n+  { ""name"": ""LocationDot"", ""unicode"": ""E827"" },\n+  { ""name"": ""Dictionary"", ""unicode"": ""E82D"" },\n+  { ""name"": ""ChromeBack"", ""unicode"": ""E830"" },\n+  { ""name"": ""FolderOpen"", ""unicode"": ""E838"" },\n+  { ""name"": ""Pinned"", ""unicode"": ""E840"" },\n+  { ""name"": ""PinnedFill"", ""unicode"": ""E842"" },\n+  { ""name"": ""RevToggleKey"", ""unicode"": ""E845"" },\n+  { ""name"": ""USB"", ""unicode"": ""E88E"" },\n+  { ""name"": ""View"", ""unicode"": ""E890"" },\n+  { ""name"": ""Previous"", ""unicode"": ""E892"" },\n+  { ""name"": ""Next"", ""unicode"": ""E893"" },\n+  { ""name"": ""Clear"", ""unicode"": ""E894"" },\n+  { ""name"": ""Sync"", ""unicode"": ""E895"" },\n+  { ""name"": ""Download"", ""unicode"": ""E896"" },\n+  { ""name"": ""Help"", ""unicode"": ""E897"" },\n+  { ""name"": ""Upload"", ""unicode"": ""E898"" },\n+  { ""name"": ""Emoji"", ""unicode"": ""E899"" },\n+  { ""name"": ""MailForward"", ""unicode"": ""E89C"" },\n+  { ""name"": ""ClosePane"", ""unicode"": ""E89F"" },\n+  { ""name"": ""OpenPane"", ""unicode"": ""E8A0"" },\n+  { ""name"": ""PreviewLink"", ""unicode"": ""E8A1"" },\n+  { ""name"": ""ZoomIn"", ""unicode"": ""E8A3"" },\n+  { ""name"": ""Bookmarks"", ""unicode"": ""E8A4"" },\n+  { ""name"": ""Document"", ""unicode"": ""E8A5"" },\n+  { ""name"": ""ProtectedDocument"", ""unicode"": ""E8A6"" },\n+  { ""name"": ""OpenInNewWindow"", ""unicode"": ""E8A7"" },\n+  { ""name"": ""MailFill"", ""unicode"": ""E8A8"" },\n+  { ""name"": ""ViewAll"", ""unicode"": ""E8A9"" },\n+  { ""name"": ""Switch"", ""unicode"": ""E8AB"" },\n+  { ""name"": ""Rename"", ""unicode"": ""E8AC"" },\n+  { ""name"": ""Go"", ""unicode"": ""E8AD"" },\n+  { ""name"": ""Remote"", ""unicode"": ""E8AF"" },\n+  { ""name"": ""SelectAll"", ""unicode"": ""E8B3"" },\n+  { ""name"": ""Orientation"", ""unicode"": ""E8B4"" },\n+  { ""name"": ""Import"", ""unicode"": ""E8B5"" },\n+  { ""name"": ""Folder"", ""unicode"": ""E8B7"" },\n+  { ""name"": ""Picture"", ""unicode"": ""E8B9"" },\n+  { ""name"": ""ChromeClose"", ""unicode"": ""E8BB"" },\n+  { ""name"": ""ShowResults"", ""unicode"": ""E8BC"" },\n+  { ""name"": ""Message"", ""unicode"": ""E8BD"" },\n+  { ""name"": ""CalendarDay"", ""unicode"": ""E8BF"" },\n+  { ""name"": ""CalendarWeek"", ""unicode"": ""E8C0"" },\n+  { ""name"": ""MailReplyAll"", ""unicode"": ""E8C2"" },\n+  { ""name"": ""Read"", ""unicode"": ""E8C3"" },\n+  { ""name"": ""Cut"", ""unicode"": ""E8C6"" },\n+  { ""name"": ""PaymentCard"", ""unicode"": ""E8C7"" },\n+  { ""name"": ""Copy"", ""unicode"": ""E8C8"" },\n+  { ""name"": ""Important"", ""unicode"": ""E8C9"" },\n+  { ""name"": ""MailReply"", ""unicode"": ""E8CA"" },\n+  { ""name"": ""Sort"", ""unicode"": ""E8CB"" },\n+  { ""name"": ""GotoToday"", ""unicode"": ""E8D1"" },\n+  { ""name"": ""Font"", ""unicode"": ""E8D2"" },\n+  { ""name"": ""FontColor"", ""unicode"": ""E8D3"" },\n+  { ""name"": ""FolderFill"", ""unicode"": ""E8D5"" },\n+  { ""name"": ""Permissions"", ""unicode"": ""E8D7"" },\n+  { ""name"": ""DisableUpdates"", ""unicode"": ""E8D8"" },\n+  { ""name"": ""Unfavorite"", ""unicode"": ""E8D9"" },\n+  { ""name"": ""Italic"", ""unicode"": ""E8DB"" },\n+  { ""name"": ""Underline"", ""unicode"": ""E8DC"" },\n+  { ""name"": ""Bold"", ""unicode"": ""E8DD"" },\n+  { ""name"": ""MoveToFolder"", ""unicode"": ""E8DE"" },\n+  { ""name"": ""Dislike"", ""unicode"": ""E8E0"" },\n+  { ""name"": ""Like"", ""unicode"": ""E8E1"" },\n+  { ""name"": ""AlignRight"", ""unicode"": ""E8E2"" },\n+  { ""name"": ""AlignCenter"", ""unicode"": ""E8E3"" },\n+  { ""name"": ""AlignLeft"", ""unicode"": ""E8E4"" },\n+  { ""name"": ""OpenFile"", ""unicode"": ""E8E5"" },\n+  { ""name"": ""ClearSelection"", ""unicode"": ""E8E6"" },\n+  { ""name"": ""FontDecrease"", ""unicode"": ""E8E7"" },\n+  { ""name"": ""FontIncrease"", ""unicode"": ""E8E8"" },\n+  { ""name"": ""FontSize"", ""unicode"": ""E8E9"" },\n+  { ""name"": ""CellPhone"", ""unicode"": ""E8EA"" },\n+  { ""name"": ""Tag"", ""unicode"": ""E8EC"" },\n+  { ""name"": ""RepeatOne"", ""unicode"": ""E8ED"" },\n+  { ""name"": ""RepeatAll"", ""unicode"": ""E8EE"" },\n+  { ""name"": ""Calculator"", ""unicode"": ""E8EF"" },\n+  { ""name"": ""Library"", ""unicode"": ""E8F1"" },\n+  { ""name"": ""PostUpdate"", ""unicode"": ""E8F3"" },\n+  { ""name"": ""NewFolder"", ""unicode"": ""E8F4"" },\n+  { ""name"": ""CalendarReply"", ""unicode"": ""E8F5"" },\n+  { ""name"": ""UnsyncFolder"", ""unicode"": ""E8F6"" },\n+  { ""name"": ""SyncFolder"", ""unicode"": ""E8F7"" },\n+  { ""name"": ""BlockContact"", ""unicode"": ""E8F8"" },\n+  { ""name"": ""AddFriend"", ""unicode"": ""E8FA"" },\n+  { ""name"": ""Accept"", ""unicode"": ""E8FB"" },\n+  { ""name"": ""BulletedList"", ""unicode"": ""E8FD"" },\n+  { ""name"": ""Preview"", ""unicode"": ""E8FF"" },\n+  { ""name"": ""News"", ""unicode"": ""E900"" },\n+  { ""name"": ""Chat"", ""unicode"": ""E901"" },\n+  { ""name"": ""Group"", ""unicode"": ""E902"" },\n+  { ""name"": ""World"", ""unicode"": ""E909"" },\n+  { ""name"": ""Comment"", ""unicode"": ""E90A"" },\n+  { ""name"": ""DockLeft"", ""unicode"": ""E90C"" },\n+  { ""name"": ""DockRight"", ""unicode"": ""E90D"" },\n+  { ""name"": ""Repair"", ""unicode"": ""E90F"" },\n+  { ""name"": ""Accounts"", ""unicode"": ""E910"" },\n+  { ""name"": ""Street"", ""unicode"": ""E913"" },\n+  { ""name"": ""RadioBullet"", ""unicode"": ""E915"" },\n+  { ""name"": ""Stopwatch"", ""unicode"": ""E916"" },\n+  { ""name"": ""Clock"", ""unicode"": ""E917"" },\n+  { ""name"": ""WorldClock"", ""unicode"": ""E918"" },\n+  { ""name"": ""AlarmClock"", ""unicode"": ""E919"" },\n+  { ""name"": ""Photo"", ""unicode"": ""E91B"" },\n+  { ""name"": ""ActionCenter"", ""unicode"": ""E91C"" },\n+  { ""name"": ""Hospital"", ""unicode"": ""E91D"" },\n+  { ""name"": ""Timer"", ""unicode"": ""E91E"" },\n+  { ""name"": ""FullCircleMask"", ""unicode"": ""E91F"" },\n+  { ""name"": ""LocationFill"", ""unicode"": ""E920"" },\n+  { ""name"": ""ChromeMinimize"", ""unicode"": ""E921"" },\n+  { ""name"": ""ChromeRestore"", ""unicode"": ""E923"" },\n+  { ""name"": ""Annotation"", ""unicode"": ""E924"" },\n+  { ""name"": ""Fingerprint"", ""unicode"": ""E928"" },\n+  { ""name"": ""Handwriting"", ""unicode"": ""E929"" },\n+  { ""name"": ""ChromeFullScreen"", ""unicode"": ""E92D"" },\n+  { ""name"": ""Completed"", ""unicode"": ""E930"" },\n+  { ""name"": ""Label"", ""unicode"": ""E932"" },\n+  { ""name"": ""FlickDown"", ""unicode"": ""E935"" },\n+  { ""name"": ""FlickUp"", ""unicode"": ""E936"" },\n+  { ""name"": ""FlickLeft"", ""unicode"": ""E937"" },\n+  { ""name"": ""FlickRight"", ""unicode"": ""E938"" },\n+  { ""name"": ""MiniExpand"", ""unicode"": ""E93A"" },\n+  { ""name"": ""MiniContract"", ""unicode"": ""E93B"" },\n+  { ""name"": ""Streaming"", ""unicode"": ""E93E"" },\n+  { ""name"": ""MusicInCollection"", ""unicode"": ""E940"" },\n+  { ""name"": ""OneDriveLogo"", ""unicode"": ""E941"" },\n+  { ""name"": ""CompassNW"", ""unicode"": ""E942"" },\n+  { ""name"": ""Code"", ""unicode"": ""E943"" },\n+  { ""name"": ""LightningBolt"", ""unicode"": ""E945"" },\n+  { ""name"": ""Info"", ""unicode"": ""E946"" },\n+  { ""name"": ""CalculatorMultiply"", ""unicode"": ""E947"" },\n+  { ""name"": ""CalculatorAddition"", ""unicode"": ""E948"" },\n+  { ""name"": ""CalculatorSubtract"", ""unicode"": ""E949"" },\n+  { ""name"": ""CalculatorPercentage"", ""unicode"": ""E94C"" },\n+  { ""name"": ""CalculatorEqualTo"", ""unicode"": ""E94E"" },\n+  { ""name"": ""PrintfaxPrinterFile"", ""unicode"": ""E956"" },\n+  { ""name"": ""StorageOptical"", ""unicode"": ""E958"" },\n+  { ""name"": ""Communications"", ""unicode"": ""E95A"" },\n+  { ""name"": ""Headset"", ""unicode"": ""E95B"" },\n+  { ""name"": ""Health"", ""unicode"": ""E95E"" },\n+  { ""name"": ""FrontCamera"", ""unicode"": ""E96B"" },\n+  { ""name"": ""ChevronUpSmall"", ""unicode"": ""E96D"" },\n+  { ""name"": ""ChevronDownSmall"", ""unicode"": ""E96E"" },\n+  { ""name"": ""ChevronLeftSmall"", ""unicode"": ""E96F"" },\n+  { ""name"": ""ChevronRightSmall"", ""unicode"": ""E970"" },\n+  { ""name"": ""ChevronUpMed"", ""unicode"": ""E971"" },\n+  { ""name"": ""ChevronDownMed"", ""unicode"": ""E972"" },\n+  { ""name"": ""ChevronLeftMed"", ""unicode"": ""E973"" },\n+  { ""name"": ""ChevronRightMed"", ""unicode"": ""E974"" },\n+  { ""name"": ""Devices2"", ""unicode"": ""E975"" },\n+  { ""name"": ""PC1"", ""unicode"": ""E977"" },\n+  { ""name"": ""PresenceChickletVideo"", ""unicode"": ""E979"" },\n+  { ""name"": ""Reply"", ""unicode"": ""E97A"" },\n+  { ""name"": ""HalfAlpha"", ""unicode"": ""E97E"" },\n+  { ""name"": ""ConstructionCone"", ""unicode"": ""E98F"" },\n+  { ""name"": ""DoubleChevronLeftMed"", ""unicode"": ""E991"" },\n+  { ""name"": ""Volume0"", ""unicode"": ""E992"" },\n+  { ""name"": ""Volume1"", ""unicode"": ""E993"" },\n+  { ""name"": ""Volume2"", ""unicode"": ""E994"" },\n+  { ""name"": ""Volume3"", ""unicode"": ""E995"" },\n+  { ""name"": ""Chart"", ""unicode"": ""E999"" },\n+  { ""name"": ""Robot"", ""unicode"": ""E99A"" },\n+  { ""name"": ""Manufacturing"", ""unicode"": ""E99C"" },\n+  { ""name"": ""LockSolid"", ""unicode"": ""E9A2"" },\n+  { ""name"": ""FitPage"", ""unicode"": ""E9A6"" },\n+  { ""name"": ""FitWidth"", ""unicode"": ""E9A7"" },\n+  { ""name"": ""BidiLtr"", ""unicode"": ""E9AA"" },\n+  { ""name"": ""BidiRtl"", ""unicode"": ""E9AB"" },\n+  { ""name"": ""RightDoubleQuote"", ""unicode"": ""E9B1"" },\n+  { ""name"": ""Sunny"", ""unicode"": ""E9BD"" },\n+  { ""name"": ""CloudWeather"", ""unicode"": ""E9BE"" },\n+  { ""name"": ""Cloudy"", ""unicode"": ""E9BF"" },\n+  { ""name"": ""PartlyCloudyDay"", ""unicode"": ""E9C0"" },\n+  { ""name"": ""PartlyCloudyNight"", ""unicode"": ""E9C1"" },\n+  { ""name"": ""ClearNight"", ""unicode"": ""E9C2"" },\n+  { ""name"": ""RainShowersDay"", ""unicode"": ""E9C3"" },\n+  { ""name"": ""Rain"", ""unicode"": ""E9C4"" },\n+  { ""name"": ""Thunderstorms"", ""unicode"": ""E9C6"" },\n+  { ""name"": ""RainSnow"", ""unicode"": ""E9C7"" },\n+  { ""name"": ""Snow"", ""unicode"": ""E9C8"" },\n+  { ""name"": ""BlowingSnow"", ""unicode"": ""E9C9"" },\n+  { ""name"": ""Frigid"", ""unicode"": ""E9CA"" },\n+  { ""name"": ""Fog"", ""unicode"": ""E9CB"" },\n+  { ""name"": ""Squalls"", ""unicode"": ""E9CC"" },\n+  { ""name"": ""Duststorm"", ""unicode"": ""E9CD"" },\n+  { ""name"": ""Unknown"", ""unicode"": ""E9CE"" },\n+  { ""name"": ""Precipitation"", ""unicode"": ""E9CF"" },\n+  { ""name"": ""SortLines"", ""unicode"": ""E9D0"" },\n+  { ""name"": ""Ribbon"", ""unicode"": ""E9D1"" },\n+  { ""name"": ""AreaChart"", ""unicode"": ""E9D2"" },\n+  { ""name"": ""Assign"", ""unicode"": ""E9D3"" },\n+  { ""name"": ""FlowChart"", ""unicode"": ""E9D4"" },\n+  { ""name"": ""CheckList"", ""unicode"": ""E9D5"" },\n+  { ""name"": ""Diagnostic"", ""unicode"": ""E9D9"" },\n+  { ""name"": ""Generate"", ""unicode"": ""E9DA"" },\n+  { ""name"": ""LineChart"", ""unicode"": ""E9E6"" },\n+  { ""name"": ""Equalizer"", ""unicode"": ""E9E9"" },\n+  { ""name"": ""BarChartHorizontal"", ""unicode"": ""E9EB"" },\n+  { ""name"": ""BarChartVertical"", ""unicode"": ""E9EC"" },\n+  { ""name"": ""Freezing"", ""unicode"": ""E9EF"" },\n+  { ""name"": ""FunnelChart"", ""unicode"": ""E9F1"" },\n+  { ""name"": ""Processing"", ""unicode"": ""E9F5"" },\n+  { ""name"": ""Quantity"", ""unicode"": ""E9F8"" },\n+  { ""name"": ""ReportDocument"", ""unicode"": ""E9F9"" },\n+  { ""name"": ""StackColumnChart"", ""unicode"": ""E9FC"" },\n+  { ""name"": ""SnowShowerDay"", ""unicode"": ""E9FD"" },\n+  { ""name"": ""HailDay"", ""unicode"": ""EA00"" },\n+  { ""name"": ""WorkFlow"", ""unicode"": ""EA01"" },\n+  { ""name"": ""HourGlass"", ""unicode"": ""EA03"" },\n+  { ""name"": ""StoreLogoMed20"", ""unicode"": ""EA04"" },\n+  { ""name"": ""TimeSheet"", ""unicode"": ""EA05"" },\n+  { ""name"": ""TriangleSolid"", ""unicode"": ""EA08"" },\n+  { ""name"": ""UpgradeAnalysis"", ""unicode"": ""EA0B"" },\n+  { ""name"": ""VideoSolid"", ""unicode"": ""EA0C"" },\n+  { ""name"": ""RainShowersNight"", ""unicode"": ""EA0F"" },\n+  { ""name"": ""SnowShowerNight"", ""unicode"": ""EA11"" },\n+  { ""name"": ""Teamwork"", ""unicode"": ""EA12"" },\n+  { ""name"": ""HailNight"", ""unicode"": ""EA13"" },\n+  { ""name"": ""PeopleAdd"", ""unicode"": ""EA15"" },\n+  { ""name"": ""Glasses"", ""unicode"": ""EA16"" },\n+  { ""name"": ""DateTime2"", ""unicode"": ""EA17"" },\n+  { ""name"": ""Shield"", ""unicode"": ""EA18"" },\n+  { ""name"": ""Header1"", ""unicode"": ""EA19"" },\n+  { ""name"": ""PageAdd"", ""unicode"": ""EA1A"" },\n+  { ""name"": ""NumberedList"", ""unicode"": ""EA1C"" },\n+  { ""name"": ""PowerBILogo"", ""unicode"": ""EA1E"" },\n+  { ""name"": ""Info2"", ""unicode"": ""EA1F"" },\n+  { ""name"": ""MusicInCollectionFill"", ""unicode"": ""EA36"" },\n+  { ""name"": ""List"", ""unicode"": ""EA37"" },\n+  { ""name"": ""Asterisk"", ""unicode"": ""EA38"" },\n+  { ""name"": ""ErrorBadge"", ""unicode"": ""EA39"" },\n+  { ""name"": ""CircleRing"", ""unicode"": ""EA3A"" },\n+  { ""name"": ""CircleFill"", ""unicode"": ""EA3B"" },\n+  { ""name"": ""Record2"", ""unicode"": ""EA3F"" },\n+  { ""name"": ""AllAppsMirrored"", ""unicode"": ""EA40"" },\n+  { ""name"": ""BookmarksMirrored"", ""unicode"": ""EA41"" },\n+  { ""name"": ""BulletedListMirrored"", ""unicode"": ""EA42"" },\n+  { ""name"": ""CaretHollowMirrored"", ""unicode"": ""EA45"" },\n+  { ""name"": ""CaretSolidMirrored"", ""unicode"": ""EA46"" },\n+  { ""name"": ""ChromeBackMirrored"", ""unicode"": ""EA47"" },\n+  { ""name"": ""ClearSelectionMirrored"", ""unicode"": ""EA48"" },\n+  { ""name"": ""ClosePaneMirrored"", ""unicode"": ""EA49"" },\n+  { ""name"": ""DockLeftMirrored"", ""unicode"": ""EA4C"" },\n+  { ""name"": ""DoubleChevronLeftMedMirrored"", ""unicode"": ""EA4D"" },\n+  { ""name"": ""GoMirrored"", ""unicode"": ""EA4F"" },\n+  { ""name"": ""HelpMirrored"", ""unicode"": ""EA51"" },\n+  { ""name"": ""ImportMirrored"", ""unicode"": ""EA52"" },\n+  { ""name"": ""ImportAllMirrored"", ""unicode"": ""EA53"" },\n+  { ""name"": ""ListMirrored"", ""unicode"": ""EA55"" },\n+  { ""name"": ""MailForwardMirrored"", ""unicode"": ""EA56"" },\n+  { ""name"": ""MailReplyMirrored"", ""unicode"": ""EA57"" },\n+  { ""name"": ""MailReplyAllMirrored"", ""unicode"": ""EA58"" },\n+  { ""name"": ""MiniContractMirrored"", ""unicode"": ""EA59"" },\n+  { ""name"": ""MiniExpandMirrored"", ""unicode"": ""EA5A"" },\n+  { ""name"": ""OpenPaneMirrored"", ""unicode"": ""EA5B"" },\n+  { ""name"": ""ParkingLocationMirrored"", ""unicode"": ""EA5E"" },\n+  { ""name"": ""SendMirrored"", ""unicode"": ""EA63"" },\n+  { ""name"": ""ShowResultsMirrored"", ""unicode"": ""EA65"" },\n+  { ""name"": ""ThumbnailViewMirrored"", ""unicode"": ""EA67"" },\n+  { ""name"": ""Media"", ""unicode"": ""EA69"" },\n+  { ""name"": ""Devices3"", ""unicode"": ""EA6C"" },\n+  { ""name"": ""Focus"", ""unicode"": ""EA6F"" },\n+  { ""name"": ""VideoLightOff"", ""unicode"": ""EA74"" },\n+  { ""name"": ""Lightbulb"", ""unicode"": ""EA80"" },\n+  { ""name"": ""StatusTriangle"", ""unicode"": ""EA82"" },\n+  { ""name"": ""VolumeDisabled"", ""unicode"": ""EA85"" },\n+  { ""name"": ""Puzzle"", ""unicode"": ""EA86"" },\n+  { ""name"": ""EmojiNeutral"", ""unicode"": ""EA87"" },\n+  { ""name"": ""EmojiDisappointed"", ""unicode"": ""EA88"" },\n+  { ""name"": ""HomeSolid"", ""unicode"": ""EA8A"" },\n+  { ""name"": ""Ringer"", ""unicode"": ""EA8F"" },\n+  { ""name"": ""PDF"", ""unicode"": ""EA90"" },\n+  { ""name"": ""HeartBroken"", ""unicode"": ""EA92"" },\n+  { ""name"": ""StoreLogo16"", ""unicode"": ""EA96"" },\n+  { ""name"": ""MultiSelectMirrored"", ""unicode"": ""EA98"" },\n+  { ""name"": ""Broom"", ""unicode"": ""EA99"" },\n+  { ""name"": ""AddToShoppingList"", ""unicode"": ""EA9A"" },\n+  { ""name"": ""Cocktails"", ""unicode"": ""EA9D"" },\n+  { ""name"": ""Wines"", ""unicode"": ""EABF"" },\n+  { ""name"": ""Articles"", ""unicode"": ""EAC1"" },\n+  { ""name"": ""Cycling"", ""unicode"": ""EAC7"" },\n+  { ""name"": ""DietPlanNotebook"", ""unicode"": ""EAC8"" },\n+  { ""name"": ""Pill"", ""unicode"": ""EACB"" },\n+  { ""name"": ""ExerciseTracker"", ""unicode"": ""EACC"" },\n+  { ""name"": ""HandsFree"", ""unicode"": ""EAD0"" },\n+  { ""name"": ""Medical"", ""unicode"": ""EAD4"" },\n+  { ""name"": ""Running"", ""unicode"": ""EADA"" },\n+  { ""name"": ""Weights"", ""unicode"": ""EADB"" },\n+  { ""name"": ""Trackers"", ""unicode"": ""EADF"" },\n+  { ""name"": ""AddNotes"", ""unicode"": ""EAE3"" },\n+  { ""name"": ""AllCurrency"", ""unicode"": ""EAE4"" },\n+  { ""name"": ""BarChart4"", ""unicode"": ""EAE7"" },\n+  { ""name"": ""CirclePlus"", ""unicode"": ""EAEE"" },\n+  { ""name"": ""Coffee"", ""unicode"": ""EAEF"" },\n+  { ""name"": ""Cotton"", ""unicode"": ""EAF3"" },\n+  { ""name"": ""Market"", ""unicode"": ""EAFC"" },\n+  { ""name"": ""Money"", ""unicode"": ""EAFD"" },\n+  { ""name"": ""PieDouble"", ""unicode"": ""EB04"" },\n+  { ""name"": ""PieSingle"", ""unicode"": ""EB05"" },\n+  { ""name"": ""RemoveFilter"", ""unicode"": ""EB08"" },\n+  { ""name"": ""Savings"", ""unicode"": ""EB0B"" },\n+  { ""name"": ""Sell"", ""unicode"": ""EB0C"" },\n+  { ""name"": ""StockDown"", ""unicode"": ""EB0F"" },\n+  { ""name"": ""StockUp"", ""unicode"": ""EB11"" },\n+  { ""name"": ""Lamp"", ""unicode"": ""EB19"" },\n+  { ""name"": ""Source"", ""unicode"": ""EB1B"" },\n+  { ""name"": ""MSNVideos"", ""unicode"": ""EB1C"" },\n+  { ""name"": ""Cricket"", ""unicode"": ""EB1E"" },\n+  { ""name"": ""Golf"", ""unicode"": ""EB1F"" },\n+  { ""name"": ""Baseball"", ""unicode"": ""EB20"" },\n+  { ""name"": ""Soccer"", ""unicode"": ""EB21"" },\n+  { ""name"": ""MoreSports"", ""unicode"": ""EB22"" },\n+  { ""name"": ""AutoRacing"", ""unicode"": ""EB24"" },\n+  { ""name"": ""CollegeHoops"", ""unicode"": ""EB25"" },\n+  { ""name"": ""CollegeFootball"", ""unicode"": ""EB26"" },\n+  { ""name"": ""ProFootball"", ""unicode"": ""EB27"" },\n+  { ""name"": ""ProHockey"", ""unicode"": ""EB28"" },\n+  { ""name"": ""Rugby"", ""unicode"": ""EB2D"" },\n+  { ""name"": ""SubstitutionsIn"", ""unicode"": ""EB31"" },\n+  { ""name"": ""Tennis"", ""unicode"": ""EB33"" },\n+  { ""name"": ""Arrivals"", ""unicode"": ""EB34"" },\n+  { ""name"": ""Design"", ""unicode"": ""EB3C"" },\n+  { ""name"": ""Website"", ""unicode"": ""EB41"" },\n+  { ""name"": ""Drop"", ""unicode"": ""EB42"" },\n+  { ""name"": ""HistoricalWeather"", ""unicode"": ""EB43"" },\n+  { ""name"": ""SkiResorts"", ""unicode"": ""EB45"" },\n+  { ""name"": ""Snowflake"", ""unicode"": ""EB46"" },\n+  { ""name"": ""BusSolid"", ""unicode"": ""EB47"" },\n+  { ""name"": ""FerrySolid"", ""unicode"": ""EB48"" },\n+  { ""name"": ""AirplaneSolid"", ""unicode"": ""EB4C"" },\n+  { ""name"": ""TrainSolid"", ""unicode"": ""EB4D"" },\n+  { ""name"": ""Heart"", ""unicode"": ""EB51"" },\n+  { ""name"": ""HeartFill"", ""unicode"": ""EB52"" },\n+  { ""name"": ""Ticket"", ""unicode"": ""EB54"" },\n+  { ""name"": ""WifiWarning4"", ""unicode"": ""EB63"" },\n+  { ""name"": ""Devices4"", ""unicode"": ""EB66"" },\n+  { ""name"": ""AzureLogo"", ""unicode"": ""EB6A"" },\n+  { ""name"": ""BingLogo"", ""unicode"": ""EB6B"" },\n+  { ""name"": ""MSNLogo"", ""unicode"": ""EB6C"" },\n+  { ""name"": ""OutlookLogoInverse"", ""unicode"": ""EB6D"" },\n+  { ""name"": ""OfficeLogo"", ""unicode"": ""EB6E"" },\n+  { ""name"": ""SkypeLogo"", ""unicode"": ""EB6F"" },\n+  { ""name"": ""Door"", ""unicode"": ""EB75"" },\n+  { ""name"": ""EditMirrored"", ""unicode"": ""EB7E"" },\n+  { ""name"": ""GiftCard"", ""unicode"": ""EB8E"" },\n+  { ""name"": ""DoubleBookmark"", ""unicode"": ""EB8F"" },\n+  { ""name"": ""StatusErrorFull"", ""unicode"": ""EB90"" },\n+  { ""name"": ""Certificate"", ""unicode"": ""EB95"" },\n+  { ""name"": ""FastForward"", ""unicode"": ""EB9D"" },\n+  { ""name"": ""Rewind"", ""unicode"": ""EB9E"" },\n+  { ""name"": ""Photo2"", ""unicode"": ""EB9F"" },\n+  { ""name"": ""OpenSource"", ""unicode"": ""EBC2"" },\n+  { ""name"": ""Movers"", ""unicode"": ""EBCD"" },\n+  { ""name"": ""CloudDownload"", ""unicode"": ""EBD3"" },\n+  { ""name"": ""Family"", ""unicode"": ""EBDA"" },\n+  { ""name"": ""WindDirection"", ""unicode"": ""EBE6"" },\n+  { ""name"": ""Bug"", ""unicode"": ""EBE8"" },\n+  { ""name"": ""SiteScan"", ""unicode"": ""EBEC"" },\n+  { ""name"": ""BrowserScreenShot"", ""unicode"": ""EBED"" },\n+  { ""name"": ""F12DevTools"", ""unicode"": ""EBEE"" },\n+  { ""name"": ""CSS"", ""unicode"": ""EBEF"" },\n+  { ""name"": ""JS"", ""unicode"": ""EBF0"" },\n+  { ""name"": ""DeliveryTruck"", ""unicode"": ""EBF4"" },\n+  { ""name"": ""ReminderPerson"", ""unicode"": ""EBF7"" },\n+  { ""name"": ""ReminderGroup"", ""unicode"": ""EBF8"" },\n+  { ""name"": ""TabletMode"", ""unicode"": ""EBFC"" },\n+  { ""name"": ""Umbrella"", ""unicode"": ""EC04"" },\n+  { ""name"": ""NetworkTower"", ""unicode"": ""EC05"" },\n+  { ""name"": ""CityNext"", ""unicode"": ""EC06"" },\n+  { ""name"": ""CityNext2"", ""unicode"": ""EC07"" },\n+  { ""name"": ""Section"", ""unicode"": ""EC0C"" },\n+  { ""name"": ""OneNoteLogoInverse"", ""unicode"": ""EC0D"" },\n+  { ""name"": ""ToggleFilled"", ""unicode"": ""EC11"" },\n+  { ""name"": ""ToggleBorder"", ""unicode"": ""EC12"" },\n+  { ""name"": ""SliderThumb"", ""unicode"": ""EC13"" },\n+  { ""name"": ""ToggleThumb"", ""unicode"": ""EC14"" },\n+  { ""name"": ""Documentation"", ""unicode"": ""EC17"" },\n+  { ""name"": ""Badge"", ""unicode"": ""EC1B"" },\n+  { ""name"": ""Giftbox"", ""unicode"": ""EC1F"" },\n+  { ""name"": ""VisualStudioLogo"", ""unicode"": ""EC22"" },\n+  { ""name"": ""HomeGroup"", ""unicode"": ""EC26"" },\n+  { ""name"": ""ExcelLogoInverse"", ""unicode"": ""EC28"" },\n+  { ""name"": ""WordLogoInverse"", ""unicode"": ""EC29"" },\n+  { ""name"": ""PowerPointLogoInverse"", ""unicode"": ""EC2A"" },\n+  { ""name"": ""Cafe"", ""unicode"": ""EC32"" },\n+  { ""name"": ""SpeedHigh"", ""unicode"": ""EC4A"" },\n+  { ""name"": ""Commitments"", ""unicode"": ""EC4D"" },\n+  { ""name"": ""ThisPC"", ""unicode"": ""EC4E"" },\n+  { ""name"": ""MusicNote"", ""unicode"": ""EC4F"" },\n+  { ""name"": ""MicOff"", ""unicode"": ""EC54"" },\n+  { ""name"": ""PlaybackRate1x"", ""unicode"": ""EC57"" },\n+  { ""name"": ""EdgeLogo"", ""unicode"": ""EC60"" },\n+  { ""name"": ""CompletedSolid"", ""unicode"": ""EC61"" },\n+  { ""name"": ""AlbumRemove"", ""unicode"": ""EC62"" },\n+  { ""name"": ""MessageFill"", ""unicode"": ""EC70"" },\n+  { ""name"": ""TabletSelected"", ""unicode"": ""EC74"" },\n+  { ""name"": ""MobileSelected"", ""unicode"": ""EC75"" },\n+  { ""name"": ""LaptopSelected"", ""unicode"": ""EC76"" },\n+  { ""name"": ""TVMonitorSelected"", ""unicode"": ""EC77"" },\n+  { ""name"": ""DeveloperTools"", ""unicode"": ""EC7A"" },\n+  { ""name"": ""Shapes"", ""unicode"": ""EC7C"" },\n+  { ""name"": ""InsertTextBox"", ""unicode"": ""EC7D"" },\n+  { ""name"": ""LowerBrightness"", ""unicode"": ""EC8A"" },\n+  { ""name"": ""WebComponents"", ""unicode"": ""EC8B"" },\n+  { ""name"": ""OfflineStorage"", ""unicode"": ""EC8C"" },\n+  { ""name"": ""DOM"", ""unicode"": ""EC8D"" },\n+  { ""name"": ""CloudUpload"", ""unicode"": ""EC8E"" },\n+  { ""name"": ""ScrollUpDown"", ""unicode"": ""EC8F"" },\n+  { ""name"": ""DateTime"", ""unicode"": ""EC92"" },\n+  { ""name"": ""Event"", ""unicode"": ""ECA3"" },\n+  { ""name"": ""Cake"", ""unicode"": ""ECA4"" },\n+  { ""name"": ""Tiles"", ""unicode"": ""ECA5"" },\n+  { ""name"": ""Org"", ""unicode"": ""ECA6"" },\n+  { ""name"": ""PartyLeader"", ""unicode"": ""ECA7"" },\n+  { ""name"": ""DRM"", ""unicode"": ""ECA8"" },\n+  { ""name"": ""CloudAdd"", ""unicode"": ""ECA9"" },\n+  { ""name"": ""AppIconDefault"", ""unicode"": ""ECAA"" },\n+  { ""name"": ""Photo2Add"", ""unicode"": ""ECAB"" },\n+  { ""name"": ""Photo2Remove"", ""unicode"": ""ECAC"" },\n+  { ""name"": ""Calories"", ""unicode"": ""ECAD"" },\n+  { ""name"": ""POI"", ""unicode"": ""ECAF"" },\n+  { ""name"": ""AddTo"", ""unicode"": ""ECC8"" },\n+  { ""name"": ""RadioBtnOff"", ""unicode"": ""ECCA"" },\n+  { ""name"": ""RadioBtnOn"", ""unicode"": ""ECCB"" },\n+  { ""name"": ""ExploreContent"", ""unicode"": ""ECCD"" },\n+  { ""name"": ""Embed"", ""unicode"": ""ECCE"" },\n+  { ""name"": ""Product"", ""unicode"": ""ECDC"" },\n+  { ""name"": ""ProgressLoopInner"", ""unicode"": ""ECDE"" },\n+  { ""name"": ""ProgressLoopOuter"", ""unicode"": ""ECDF"" },\n+  { ""name"": ""Blocked2"", ""unicode"": ""ECE4"" },\n+  { ""name"": ""FangBody"", ""unicode"": ""ECEB"" },\n+  { ""name"": ""PageHeader"", ""unicode"": ""ECEE"" },\n+  { ""name"": ""Glimmer"", ""unicode"": ""ECF4"" },\n+  { ""name"": ""ChatInviteFriend"", ""unicode"": ""ECFE"" },\n+  { ""name"": ""Brush"", ""unicode"": ""ECFF"" },\n+  { ""name"": ""Shirt"", ""unicode"": ""ED00"" },\n+  { ""name"": ""Crown"", ""unicode"": ""ED01"" },\n+  { ""name"": ""Diamond"", ""unicode"": ""ED02"" },\n+  { ""name"": ""ScaleUp"", ""unicode"": ""ED09"" },\n+  { ""name"": ""QRCode"", ""unicode"": ""ED14"" },\n+  { ""name"": ""Feedback"", ""unicode"": ""ED15"" },\n+  { ""name"": ""SharepointLogoInverse"", ""unicode"": ""ED18"" },\n+  { ""name"": ""YammerLogo"", ""unicode"": ""ED19"" },\n+  { ""name"": ""Hide"", ""unicode"": ""ED1A"" },\n+  { ""name"": ""Uneditable"", ""unicode"": ""ED1D"" },\n+  { ""name"": ""ReturnToSession"", ""unicode"": ""ED24"" },\n+  { ""name"": ""OpenFolderHorizontal"", ""unicode"": ""ED25"" },\n+  { ""name"": ""CalendarMirrored"", ""unicode"": ""ED28"" },\n+  { ""name"": ""SwayLogoInverse"", ""unicode"": ""ED29"" },\n+  { ""name"": ""OutOfOffice"", ""unicode"": ""ED34"" },\n+  { ""name"": ""Trophy"", ""unicode"": ""ED3F"" },\n+  { ""name"": ""ReopenPages"", ""unicode"": ""ED50"" },\n+  { ""name"": ""EmojiTabSymbols"", ""unicode"": ""ED58"" },\n+  { ""name"": ""AADLogo"", ""unicode"": ""ED68"" },\n+  { ""name"": ""AccessLogo"", ""unicode"": ""ED69"" },\n+  { ""name"": ""AdminALogoInverse32"", ""unicode"": ""ED6A"" },\n+  { ""name"": ""AdminCLogoInverse32"", ""unicode"": ""ED6B"" },\n+  { ""name"": ""AdminDLogoInverse32"", ""unicode"": ""ED6C"" },\n+  { ""name"": ""AdminELogoInverse32"", ""unicode"": ""ED6D"" },\n+  { ""name"": ""AdminLLogoInverse32"", ""unicode"": ""ED6E"" },\n+  { ""name"": ""AdminMLogoInverse32"", ""unicode"": ""ED6F"" },\n+  { ""name"": ""AdminOLogoInverse32"", ""unicode"": ""ED70"" },\n+  { ""name"": ""AdminPLogoInverse32"", ""unicode"": ""ED71"" },\n+  { ""name"": ""AdminSLogoInverse32"", ""unicode"": ""ED72"" },\n+  { ""name"": ""AdminYLogoInverse32"", ""unicode"": ""ED73"" },\n+  { ""name"": ""DelveLogoInverse"", ""unicode"": ""ED76"" },\n+  { ""name"": ""ExchangeLogoInverse"", ""unicode"": ""ED78"" },\n+  { ""name"": ""LyncLogo"", ""unicode"": ""ED79"" },\n+  { ""name"": ""OfficeVideoLogoInverse"", ""unicode"": ""ED7A"" },\n+  { ""name"": ""SocialListeningLogo"", ""unicode"": ""ED7C"" },\n+  { ""name"": ""VisioLogoInverse"", ""unicode"": ""ED7D"" },\n+  { ""name"": ""Balloons"", ""unicode"": ""ED7E"" },\n+  { ""name"": ""Cat"", ""unicode"": ""ED7F"" },\n+  { ""name"": ""MailAlert"", ""unicode"": ""ED80"" },\n+  { ""name"": ""MailCheck"", ""unicode"": ""ED81"" },\n+  { ""name"": ""MailLowImportance"", ""unicode"": ""ED82"" },\n+  { ""name"": ""MailPause"", ""unicode"": ""ED83"" },\n+  { ""name"": ""MailRepeat"", ""unicode"": ""ED84"" },\n+  { ""name"": ""SecurityGroup"", ""unicode"": ""ED85"" },\n+  { ""name"": ""Table"", ""unicode"": ""ED86"" },\n+  { ""name"": ""VoicemailForward"", ""unicode"": ""ED87"" },\n+  { ""name"": ""VoicemailReply"", ""unicode"": ""ED88"" },\n+  { ""name"": ""Waffle"", ""unicode"": ""ED89"" },\n+  { ""name"": ""RemoveEvent"", ""unicode"": ""ED8A"" },\n+  { ""name"": ""EventInfo"", ""unicode"": ""ED8B"" },\n+  { ""name"": ""ForwardEvent"", ""unicode"": ""ED8C"" },\n+  { ""name"": ""WipePhone"", ""unicode"": ""ED8D"" },\n+  { ""name"": ""AddOnlineMeeting"", ""unicode"": ""ED8E"" },\n+  { ""name"": ""JoinOnlineMeeting"", ""unicode"": ""ED8F"" },\n+  { ""name"": ""RemoveLink"", ""unicode"": ""ED90"" },\n+  { ""name"": ""PeopleBlock"", ""unicode"": ""ED91"" },\n+  { ""name"": ""PeopleRepeat"", ""unicode"": ""ED92"" },\n+  { ""name"": ""PeopleAlert"", ""unicode"": ""ED93"" },\n+  { ""name"": ""PeoplePause"", ""unicode"": ""ED94"" },\n+  { ""name"": ""TransferCall"", ""unicode"": ""ED95"" },\n+  { ""name"": ""AddPhone"", ""unicode"": ""ED96"" },\n+  { ""name"": ""UnknownCall"", ""unicode"": ""ED97"" },\n+  { ""name"": ""NoteReply"", ""unicode"": ""ED98"" },\n+  { ""name"": ""NoteForward"", ""unicode"": ""ED99"" },\n+  { ""name"": ""NotePinned"", ""unicode"": ""ED9A"" },\n+  { ""name"": ""RemoveOccurrence"", ""unicode"": ""ED9B"" },\n+  { ""name"": ""Timeline"", ""unicode"": ""ED9C"" },\n+  { ""name"": ""EditNote"", ""unicode"": ""ED9D"" },\n+  { ""name"": ""CircleHalfFull"", ""unicode"": ""ED9E"" },\n+  { ""name"": ""Room"", ""unicode"": ""ED9F"" },\n+  { ""name"": ""Unsubscribe"", ""unicode"": ""EDA0"" },\n+  { ""name"": ""Subscribe"", ""unicode"": ""EDA1"" },\n+  { ""name"": ""HardDrive"", ""unicode"": ""EDA2"" },\n+  { ""name"": ""RecurringTask"", ""unicode"": ""EDB2"" },\n+  { ""name"": ""TaskManager"", ""unicode"": ""EDB7"" },\n+  { ""name"": ""TaskManagerMirrored"", ""unicode"": ""EDB8"" },\n+  { ""name"": ""Combine"", ""unicode"": ""EDBB"" },\n+  { ""name"": ""Split"", ""unicode"": ""EDBC"" },\n+  { ""name"": ""DoubleChevronUp"", ""unicode"": ""EDBD"" },\n+  { ""name"": ""DoubleChevronLeft"", ""unicode"": ""EDBE"" },\n+  { ""name"": ""DoubleChevronRight"", ""unicode"": ""EDBF"" },\n+  { ""name"": ""Ascending"", ""unicode"": ""EDC0"" },\n+  { ""name"": ""Descending"", ""unicode"": ""EDC1"" },\n+  { ""name"": ""TextBox"", ""unicode"": ""EDC2"" },\n+  { ""name"": ""TextField"", ""unicode"": ""EDC3"" },\n+  { ""name"": ""NumberField"", ""unicode"": ""EDC4"" },\n+  { ""name"": ""Dropdown"", ""unicode"": ""EDC5"" },\n+  { ""name"": ""PenWorkspace"", ""unicode"": ""EDC6"" },\n+  { ""name"": ""BookingsLogo"", ""unicode"": ""EDC7"" },\n+  { ""name"": ""ClassNotebookLogoInverse"", ""unicode"": ""EDC8"" },\n+  { ""name"": ""DelveAnalyticsLogo"", ""unicode"": ""EDCA"" },\n+  { ""name"": ""DocsLogoInverse"", ""unicode"": ""EDCB"" },\n+  { ""name"": ""Dynamics365Logo"", ""unicode"": ""EDCC"" },\n+  { ""name"": ""DynamicSMBLogo"", ""unicode"": ""EDCD"" },\n+  { ""name"": ""OfficeAssistantLogo"", ""unicode"": ""EDCE"" },\n+  { ""name"": ""OfficeStoreLogo"", ""unicode"": ""EDCF"" },\n+  { ""name"": ""OneNoteEduLogoInverse"", ""unicode"": ""EDD0"" },\n+  { ""name"": ""PlannerLogo"", ""unicode"": ""EDD1"" },\n+  { ""name"": ""PowerApps"", ""unicode"": ""EDD2"" },\n+  { ""name"": ""Suitcase"", ""unicode"": ""EDD3"" },\n+  { ""name"": ""ProjectLogoInverse"", ""unicode"": ""EDD4"" },\n+  { ""name"": ""CaretLeft8"", ""unicode"": ""EDD5"" },\n+  { ""name"": ""CaretRight8"", ""unicode"": ""EDD6"" },\n+  { ""name"": ""CaretUp8"", ""unicode"": ""EDD7"" },\n+  { ""name"": ""CaretDown8"", ""unicode"": ""EDD8"" },\n+  { ""name"": ""CaretLeftSolid8"", ""unicode"": ""EDD9"" },\n+  { ""name"": ""CaretRightSolid8"", ""unicode"": ""EDDA"" },\n+  { ""name"": ""CaretUpSolid8"", ""unicode"": ""EDDB"" },\n+  { ""name"": ""CaretDownSolid8"", ""unicode"": ""EDDC"" },\n+  { ""name"": ""ClearFormatting"", ""unicode"": ""EDDD"" },\n+  { ""name"": ""Superscript"", ""unicode"": ""EDDE"" },\n+  { ""name"": ""Subscript"", ""unicode"": ""EDDF"" },\n+  { ""name"": ""Strikethrough"", ""unicode"": ""EDE0"" },\n+  { ""name"": ""Export"", ""unicode"": ""EDE1"" },\n+  { ""name"": ""ExportMirrored"", ""unicode"": ""EDE2"" },\n+  { ""name"": ""SingleBookmark"", ""unicode"": ""EDFF"" },\n+  { ""name"": ""SingleBookmarkSolid"", ""unicode"": ""EE00"" },\n+  { ""name"": ""DoubleChevronDown"", ""unicode"": ""EE04"" },\n+  { ""name"": ""FollowUser"", ""unicode"": ""EE05"" },\n+  { ""name"": ""ReplyAll"", ""unicode"": ""EE0A"" },\n+  { ""name"": ""WorkforceManagement"", ""unicode"": ""EE0F"" },\n+  { ""name"": ""RecruitmentManagement"", ""unicode"": ""EE12"" },\n+  { ""name"": ""Questionnaire"", ""unicode"": ""EE19"" },\n+  { ""name"": ""ManagerSelfService"", ""unicode"": ""EE23"" },\n+  { ""name"": ""ProductRelease"", ""unicode"": ""EE2E"" },\n+  { ""name"": ""ReplyMirrored"", ""unicode"": ""EE35"" },\n+  { ""name"": ""ReplyAllMirrored"", ""unicode"": ""EE36"" },\n+  { ""name"": ""Medal"", ""unicode"": ""EE38"" },\n+  { ""name"": ""AddGroup"", ""unicode"": ""EE3D"" },\n+  { ""name"": ""QuestionnaireMirrored"", ""unicode"": ""EE4B"" },\n+  { ""name"": ""CloudImportExport"", ""unicode"": ""EE55"" },\n+  { ""name"": ""TemporaryUser"", ""unicode"": ""EE58"" },\n+  { ""name"": ""CaretSolid16"", ""unicode"": ""EE62"" },\n+  { ""name"": ""GroupedDescending"", ""unicode"": ""EE66"" },\n+  { ""name"": ""GroupedAscending"", ""unicode"": ""EE67"" },\n+  { ""name"": ""SortUp"", ""unicode"": ""EE68"" },\n+  { ""name"": ""SortDown"", ""unicode"": ""EE69"" },\n+  { ""name"": ""AwayStatus"", ""unicode"": ""EE6A"" },\n+  { ""name"": ""MyMoviesTV"", ""unicode"": ""EE6C"" },\n+  { ""name"": ""SyncToPC"", ""unicode"": ""EE6E"" },\n+  { ""name"": ""GenericScan"", ""unicode"": ""EE6F"" },\n+  { ""name"": ""AustralianRules"", ""unicode"": ""EE70"" },\n+  { ""name"": ""WifiEthernet"", ""unicode"": ""EE77"" },\n+  { ""name"": ""TrackersMirrored"", ""unicode"": ""EE92"" },\n+  { ""name"": ""DateTimeMirrored"", ""unicode"": ""EE93"" },\n+  { ""name"": ""StopSolid"", ""unicode"": ""EE95"" },\n+  { ""name"": ""DoubleChevronUp12"", ""unicode"": ""EE96"" },\n+  { ""name"": ""DoubleChevronDown12"", ""unicode"": ""EE97"" },\n+  { ""name"": ""DoubleChevronLeft12"", ""unicode"": ""EE98"" },\n+  { ""name"": ""DoubleChevronRight12"", ""unicode"": ""EE99"" },\n+  { ""name"": ""CalendarAgenda"", ""unicode"": ""EE9A"" },\n+  { ""name"": ""ConnectVirtualMachine"", ""unicode"": ""EE9D"" },\n+  { ""name"": ""AddEvent"", ""unicode"": ""EEB5"" },\n+  { ""name"": ""AssetLibrary"", ""unicode"": ""EEB6"" },\n+  { ""name"": ""DataConnectionLibrary"", ""unicode"": ""EEB7"" },\n+  { ""name"": ""DocLibrary"", ""unicode"": ""EEB8"" },\n+  { ""name"": ""FormLibrary"", ""unicode"": ""EEB9"" },\n+  { ""name"": ""FormLibraryMirrored"", ""unicode"": ""EEBA"" },\n+  { ""name"": ""ReportLibrary"", ""unicode"": ""EEBB"" },\n+  { ""name"": ""ReportLibraryMirrored"", ""unicode"": ""EEBC"" },\n+  { ""name"": ""ContactCard"", ""unicode"": ""EEBD"" },\n+  { ""name"": ""CustomList"", ""unicode"": ""EEBE"" },\n+  { ""name"": ""CustomListMirrored"", ""unicode"": ""EEBF"" },\n+  { ""name"": ""IssueTracking"", ""unicode"": ""EEC0"" },\n+  { ""name"": ""IssueTrackingMirrored"", ""unicode"": ""EEC1"" },\n+  { ""name"": ""PictureLibrary"", ""unicode"": ""EEC2"" },\n+  { ""name"": ""OfficeAddinsLogo"", ""unicode"": ""EEC7"" },\n+  { ""name"": ""OfflineOneDriveParachute"", ""unicode"": ""EEC8"" },\n+  { ""name"": ""OfflineOneDriveParachuteDisabled"", ""unicode"": ""EEC9"" },\n+  { ""name"": ""LargeGrid"", ""unicode"": ""EECB"" },\n+  { ""name"": ""TriangleSolidUp12"", ""unicode"": ""EECC"" },\n+  { ""name"": ""TriangleSolidDown12"", ""unicode"": ""EECD"" },\n+  { ""name"": ""TriangleSolidLeft12"", ""unicode"": ""EECE"" },\n+  { ""name"": ""TriangleSolidRight12"", ""unicode"": ""EECF"" },\n+  { ""name"": ""TriangleUp12"", ""unicode"": ""EED0"" },\n+  { ""name"": ""TriangleDown12"", ""unicode"": ""EED1"" },\n+  { ""name"": ""TriangleLeft12"", ""unicode"": ""EED2"" },\n+  { ""name"": ""TriangleRight12"", ""unicode"": ""EED3"" },\n+  { ""name"": ""ArrowUpRight8"", ""unicode"": ""EED4"" },\n+  { ""name"": ""ArrowDownRight8"", ""unicode"": ""EED5"" },\n+  { ""name"": ""DocumentSet"", ""unicode"": ""EED6"" },\n+  { ""name"": ""DelveAnalytics"", ""unicode"": ""EEEE"" },\n+  { ""name"": ""ArrowUpRightMirrored8"", ""unicode"": ""EEEF"" },\n+  { ""name"": ""ArrowDownRightMirrored8"", ""unicode"": ""EEF0"" },\n+  { ""name"": ""CompanyDirectory"", ""unicode"": ""EF0D"" },\n+  { ""name"": ""OpenEnrollment"", ""unicode"": ""EF1C"" },\n+  { ""name"": ""CompanyDirectoryMirrored"", ""unicode"": ""EF2B"" },\n+  { ""name"": ""OneDriveAdd"", ""unicode"": ""EF32"" },\n+  { ""name"": ""ProfileSearch"", ""unicode"": ""EF35"" },\n+  { ""name"": ""Header2"", ""unicode"": ""EF36"" },\n+  { ""name"": ""Header3"", ""unicode"": ""EF37"" },\n+  { ""name"": ""Header4"", ""unicode"": ""EF38"" },\n+  { ""name"": ""RingerSolid"", ""unicode"": ""EF3A"" },\n+  { ""name"": ""Eyedropper"", ""unicode"": ""EF3C"" },\n+  { ""name"": ""MarketDown"", ""unicode"": ""EF42"" },\n+  { ""name"": ""CalendarWorkWeek"", ""unicode"": ""EF51"" },\n+  { ""name"": ""SidePanel"", ""unicode"": ""EF52"" },\n+  { ""name"": ""GlobeFavorite"", ""unicode"": ""EF53"" },\n+  { ""name"": ""CaretTopLeftSolid8"", ""unicode"": ""EF54"" },\n+  { ""name"": ""CaretTopRightSolid8"", ""unicode"": ""EF55"" },\n+  { ""name"": ""ViewAll2"", ""unicode"": ""EF56"" },\n+  { ""name"": ""DocumentReply"", ""unicode"": ""EF57"" },\n+  { ""name"": ""PlayerSettings"", ""unicode"": ""EF58"" },\n+  { ""name"": ""ReceiptForward"", ""unicode"": ""EF59"" },\n+  { ""name"": ""ReceiptReply"", ""unicode"": ""EF5A"" },\n+  { ""name"": ""ReceiptCheck"", ""unicode"": ""EF5B"" },\n+  { ""name"": ""Fax"", ""unicode"": ""EF5C"" },\n+  { ""name"": ""RecurringEvent"", ""unicode"": ""EF5D"" },\n+  { ""name"": ""ReplyAlt"", ""unicode"": ""EF5E"" },\n+  { ""name"": ""ReplyAllAlt"", ""unicode"": ""EF5F"" },\n+  { ""name"": ""EditStyle"", ""unicode"": ""EF60"" },\n+  { ""name"": ""EditMail"", ""unicode"": ""EF61"" },\n+  { ""name"": ""Lifesaver"", ""unicode"": ""EF62"" },\n+  { ""name"": ""LifesaverLock"", ""unicode"": ""EF63"" },\n+  { ""name"": ""InboxCheck"", ""unicode"": ""EF64"" },\n+  { ""name"": ""FolderSearch"", ""unicode"": ""EF65"" },\n+  { ""name"": ""CollapseMenu"", ""unicode"": ""EF66"" },\n+  { ""name"": ""ExpandMenu"", ""unicode"": ""EF67"" },\n+  { ""name"": ""Boards"", ""unicode"": ""EF68"" },\n+  { ""name"": ""SunAdd"", ""unicode"": ""EF69"" },\n+  { ""name"": ""SunQuestionMark"", ""unicode"": ""EF6A"" },\n+  { ""name"": ""LandscapeOrientation"", ""unicode"": ""EF6B"" },\n+  { ""name"": ""DocumentSearch"", ""unicode"": ""EF6C"" },\n+  { ""name"": ""PublicCalendar"", ""unicode"": ""EF6D"" },\n+  { ""name"": ""PublicContactCard"", ""unicode"": ""EF6E"" },\n+  { ""name"": ""PublicEmail"", ""unicode"": ""EF6F"" },\n+  { ""name"": ""PublicFolder"", ""unicode"": ""EF70"" },\n+  { ""name"": ""WordDocument"", ""unicode"": ""EF71"" },\n+  { ""name"": ""PowerPointDocument"", ""unicode"": ""EF72"" },\n+  { ""name"": ""ExcelDocument"", ""unicode"": ""EF73"" },\n+  { ""name"": ""GroupedList"", ""unicode"": ""EF74"" },\n+  { ""name"": ""ClassroomLogo"", ""unicode"": ""EF75"" },\n+  { ""name"": ""Sections"", ""unicode"": ""EF76"" },\n+  { ""name"": ""EditPhoto"", ""unicode"": ""EF77"" },\n+  { ""name"": ""Starburst"", ""unicode"": ""EF78"" },\n+  { ""name"": ""ShareiOS"", ""unicode"": ""EF79"" },\n+  { ""name"": ""AirTickets"", ""unicode"": ""EF7A"" },\n+  { ""name"": ""PencilReply"", ""unicode"": ""EF7B"" },\n+  { ""name"": ""Tiles2"", ""unicode"": ""EF7C"" },\n+  { ""name"": ""SkypeCircleCheck"", ""unicode"": ""EF7D"" },\n+  { ""name"": ""SkypeCircleClock"", ""unicode"": ""EF7E"" },\n+  { ""name"": ""SkypeCircleMinus"", ""unicode"": ""EF7F"" },\n+  { ""name"": ""SkypeCheck"", ""unicode"": ""EF80"" },\n+  { ""name"": ""SkypeClock"", ""unicode"": ""EF81"" },\n+  { ""name"": ""SkypeMinus"", ""unicode"": ""EF82"" },\n+  { ""name"": ""SkypeMessage"", ""unicode"": ""EF83"" },\n+  { ""name"": ""ClosedCaption"", ""unicode"": ""EF84"" },\n+  { ""name"": ""ATPLogo"", ""unicode"": ""EF85"" },\n+  { ""name"": ""OfficeFormsLogoInverse"", ""unicode"": ""EF86"" },\n+  { ""name"": ""RecycleBin"", ""unicode"": ""EF87"" },\n+  { ""name"": ""EmptyRecycleBin"", ""unicode"": ""EF88"" },\n+  { ""name"": ""Hide2"", ""unicode"": ""EF89"" },\n+  { ""name"": ""Breadcrumb"", ""unicode"": ""EF8C"" },\n+  { ""name"": ""BirthdayCake"", ""unicode"": ""EF8D"" },\n+  { ""name"": ""ClearFilter"", ""unicode"": ""EF8F"" },\n+  { ""name"": ""Flow"", ""unicode"": ""EF90"" },\n+  { ""name"": ""TimeEntry"", ""unicode"": ""EF95"" },\n+  { ""name"": ""CRMProcesses"", ""unicode"": ""EFB1"" },\n+  { ""name"": ""PageEdit"", ""unicode"": ""EFB6"" },\n+  { ""name"": ""PageArrowRight"", ""unicode"": ""EFB8"" },\n+  { ""name"": ""PageRemove"", ""unicode"": ""EFBA"" },\n+  { ""name"": ""Database"", ""unicode"": ""EFC7"" },\n+  { ""name"": ""DataManagementSettings"", ""unicode"": ""EFC8"" },\n+  { ""name"": ""CRMServices"", ""unicode"": ""EFD2"" },\n+  { ""name"": ""EditContact"", ""unicode"": ""EFD3"" },\n+  { ""name"": ""ConnectContacts"", ""unicode"": ""EFD4"" },\n+  { ""name"": ""AppIconDefaultAdd"", ""unicode"": ""EFDA"" },\n+  { ""name"": ""AppIconDefaultList"", ""unicode"": ""EFDE"" },\n+  { ""name"": ""ActivateOrders"", ""unicode"": ""EFE0"" },\n+  { ""name"": ""DeactivateOrders"", ""unicode"": ""EFE1"" },\n+  { ""name"": ""ScatterChart"", ""unicode"": ""EFEB"" },\n+  { ""name"": ""DocumentManagement"", ""unicode"": ""EFFC"" },\n+  { ""name"": ""CRMReport"", ""unicode"": ""EFFE"" },\n+  { ""name"": ""KnowledgeArticle"", ""unicode"": ""F000"" },\n+  { ""name"": ""Relationship"", ""unicode"": ""F003"" },\n+  { ""name"": ""HomeVerify"", ""unicode"": ""F00E"" },\n+  { ""name"": ""ZipFolder"", ""unicode"": ""F012"" },\n+  { ""name"": ""SurveyQuestions"", ""unicode"": ""F01B"" },\n+  { ""name"": ""TextDocument"", ""unicode"": ""F029"" },\n+  { ""name"": ""TextDocumentShared"", ""unicode"": ""F02B"" },\n+  { ""name"": ""PageCheckedOut"", ""unicode"": ""F02C"" },\n+  { ""name"": ""SaveAndClose"", ""unicode"": ""F038"" },\n+  { ""name"": ""Script"", ""unicode"": ""F03A"" },\n+  { ""name"": ""Archive"", ""unicode"": ""F03F"" },\n+  { ""name"": ""ActivityFeed"", ""unicode"": ""F056"" },\n+  { ""name"": ""Compare"", ""unicode"": ""F057"" },\n+  { ""name"": ""EventDate"", ""unicode"": ""F059"" },\n+  { ""name"": ""ArrowUpRight"", ""unicode"": ""F069"" },\n+  { ""name"": ""CaretRight"", ""unicode"": ""F06B"" },\n+  { ""name"": ""SetAction"", ""unicode"": ""F071"" },\n+  { ""name"": ""CaretSolidLeft"", ""unicode"": ""F08D"" },\n+  { ""name"": ""CaretSolidDown"", ""unicode"": ""F08E"" },\n+  { ""name"": ""CaretSolidRight"", ""unicode"": ""F08F"" },\n+  { ""name"": ""CaretSolidUp"", ""unicode"": ""F090"" },\n+  { ""name"": ""PowerAppsLogo"", ""unicode"": ""F091"" },\n+  { ""name"": ""PowerApps2Logo"", ""unicode"": ""F092"" },\n+  { ""name"": ""SearchIssue"", ""unicode"": ""F09A"" },\n+  { ""name"": ""SearchIssueMirrored"", ""unicode"": ""F09B"" },\n+  { ""name"": ""FabricAssetLibrary"", ""unicode"": ""F09C"" },\n+  { ""name"": ""FabricDataConnectionLibrary"", ""unicode"": ""F09D"" },\n+  { ""name"": ""FabricDocLibrary"", ""unicode"": ""F09E"" },\n+  { ""name"": ""FabricFormLibrary"", ""unicode"": ""F09F"" },\n+  { ""name"": ""FabricFormLibraryMirrored"", ""unicode"": ""F0A0"" },\n+  { ""name"": ""FabricReportLibrary"", ""unicode"": ""F0A1"" },\n+  { ""name"": ""FabricReportLibraryMirrored"", ""unicode"": ""F0A2"" },\n+  { ""name"": ""FabricPublicFolder"", ""unicode"": ""F0A3"" },\n+  { ""name"": ""FabricFolderSearch"", ""unicode"": ""F0A4"" },\n+  { ""name"": ""FabricMovetoFolder"", ""unicode"": ""F0A5"" },\n+  { ""name"": ""FabricUnsyncFolder"", ""unicode"": ""F0A6"" },\n+  { ""name"": ""FabricSyncFolder"", ""unicode"": ""F0A7"" },\n+  { ""name"": ""FabricOpenFolderHorizontal"", ""unicode"": ""F0A8"" },\n+  { ""name"": ""FabricFolder"", ""unicode"": ""F0A9"" },\n+  { ""name"": ""FabricFolderFill"", ""unicode"": ""F0AA"" },\n+  { ""name"": ""FabricNewFolder"", ""unicode"": ""F0AB"" },\n+  { ""name"": ""FabricPictureLibrary"", ""unicode"": ""F0AC"" },\n+  { ""name"": ""AddFavorite"", ""unicode"": ""F0C8"" },\n+  { ""name"": ""AddFavoriteFill"", ""unicode"": ""F0C9"" },\n+  { ""name"": ""BufferTimeBefore"", ""unicode"": ""F0CF"" },\n+  { ""name"": ""BufferTimeAfter"", ""unicode"": ""F0D0"" },\n+  { ""name"": ""BufferTimeBoth"", ""unicode"": ""F0D1"" },\n+  { ""name"": ""PublishContent"", ""unicode"": ""F0D4"" },\n+  { ""name"": ""ClipboardList"", ""unicode"": ""F0E3"" },\n+  { ""name"": ""ClipboardListMirrored"", ""unicode"": ""F0E4"" },\n+  { ""name"": ""CannedChat"", ""unicode"": ""F0F2"" },\n+  { ""name"": ""SkypeForBusinessLogo"", ""unicode"": ""F0FC"" },\n+  { ""name"": ""TabCenter"", ""unicode"": ""F100"" },\n+  { ""name"": ""PageCheckedin"", ""unicode"": ""F104"" },\n+  { ""name"": ""PageList"", ""unicode"": ""F106"" },\n+  { ""name"": ""ReadOutLoud"", ""unicode"": ""F112"" },\n+  { ""name"": ""CaretBottomLeftSolid8"", ""unicode"": ""F121"" },\n+  { ""name"": ""CaretBottomRightSolid8"", ""unicode"": ""F122"" },\n+  { ""name"": ""FolderHorizontal"", ""unicode"": ""F12B"" },\n+  { ""name"": ""MicrosoftStaffhubLogo"", ""unicode"": ""F130"" },\n+  { ""name"": ""GiftboxOpen"", ""unicode"": ""F133"" },\n+  { ""name"": ""StatusCircleOuter"", ""unicode"": ""F136"" },\n+  { ""name"": ""StatusCircleInner"", ""unicode"": ""F137"" },\n+  { ""name"": ""StatusCircleRing"", ""unicode"": ""F138"" },\n+  { ""name"": ""StatusTriangleOuter"", ""unicode"": ""F139"" },\n+  { ""name"": ""StatusTriangleInner"", ""unicode"": ""F13A"" },\n+  { ""name"": ""StatusTriangleExclamation"", ""unicode"": ""F13B"" },\n+  { ""name"": ""StatusCircleExclamation"", ""unicode"": ""F13C"" },\n+  { ""name"": ""StatusCircleErrorX"", ""unicode"": ""F13D"" },\n+  { ""name"": ""StatusCircleCheckmark"", ""unicode"": ""F13E"" },\n+  { ""name"": ""StatusCircleInfo"", ""unicode"": ""F13F"" },\n+  { ""name"": ""StatusCircleBlock"", ""unicode"": ""F140"" },\n+  { ""name"": ""StatusCircleBlock2"", ""unicode"": ""F141"" },\n+  { ""name"": ""StatusCircleQuestionMark"", ""unicode"": ""F142"" },\n+  { ""name"": ""StatusCircleSync"", ""unicode"": ""F143"" },\n+  { ""name"": ""Toll"", ""unicode"": ""F160"" },\n+  { ""name"": ""ExploreContentSingle"", ""unicode"": ""F164"" },\n+  { ""name"": ""CollapseContent"", ""unicode"": ""F165"" },\n+  { ""name"": ""CollapseContentSingle"", ""unicode"": ""F166"" },\n+  { ""name"": ""InfoSolid"", ""unicode"": ""F167"" },\n+  { ""name"": ""GroupList"", ""unicode"": ""F168"" },\n+  { ""name"": ""ProgressRingDots"", ""unicode"": ""F16A"" },\n+  { ""name"": ""CaloriesAdd"", ""unicode"": ""F172"" },\n+  { ""name"": ""BranchFork"", ""unicode"": ""F173"" },\n+  { ""name"": ""AddHome"", ""unicode"": ""F17B"" },\n+  { ""name"": ""AddWork"", ""unicode"": ""F17C"" },\n+  { ""name"": ""MobileReport"", ""unicode"": ""F18A"" },\n+  { ""name"": ""ScaleVolume"", ""unicode"": ""F18C"" },\n+  { ""name"": ""HardDriveGroup"", ""unicode"": ""F18F"" },\n+  { ""name"": ""FastMode"", ""unicode"": ""F19A"" },\n+  { ""name"": ""ToggleLeft"", ""unicode"": ""F19E"" },\n+  { ""name"": ""ToggleRight"", ""unicode"": ""F19F"" },\n+  { ""name"": ""TriangleShape"", ""unicode"": ""F1A7"" },\n+  { ""name"": ""RectangleShape"", ""unicode"": ""F1A9"" },\n+  { ""name"": ""CubeShape"", ""unicode"": ""F1AA"" },\n+  { ""name"": ""Trophy2"", ""unicode"": ""F1AE"" },\n+  { ""name"": ""BucketColor"", ""unicode"": ""F1B6"" },\n+  { ""name"": ""BucketColorFill"", ""unicode"": ""F1B7"" },\n+  { ""name"": ""Taskboard"", ""unicode"": ""F1C2"" },\n+  { ""name"": ""SingleColumn"", ""unicode"": ""F1D3"" },\n+  { ""name"": ""DoubleColumn"", ""unicode"": ""F1D4"" },\n+  { ""name"": ""TripleColumn"", ""unicode"": ""F1D5"" },\n+  { ""name"": ""ColumnLeftTwoThirds"", ""unicode"": ""F1D6"" },\n+  { ""name"": ""ColumnRightTwoThirds"", ""unicode"": ""F1D7"" },\n+  { ""name"": ""AccessLogoFill"", ""unicode"": ""F1DB"" },\n+  { ""name"": ""AnalyticsLogo"", ""unicode"": ""F1DE"" },\n+  { ""name"": ""AnalyticsQuery"", ""unicode"": ""F1DF"" },\n+  { ""name"": ""NewAnalyticsQuery"", ""unicode"": ""F1E0"" },\n+  { ""name"": ""AnalyticsReport"", ""unicode"": ""F1E1"" },\n+  { ""name"": ""WordLogo"", ""unicode"": ""F1E3"" },\n+  { ""name"": ""WordLogoFill"", ""unicode"": ""F1E4"" },\n+  { ""name"": ""ExcelLogo"", ""unicode"": ""F1E5"" },\n+  { ""name"": ""ExcelLogoFill"", ""unicode"": ""F1E6"" },\n+  { ""name"": ""OneNoteLogo"", ""unicode"": ""F1E7"" },\n+  { ""name"": ""OneNoteLogoFill"", ""unicode"": ""F1E8"" },\n+  { ""name"": ""OutlookLogo"", ""unicode"": ""F1E9"" },\n+  { ""name"": ""OutlookLogoFill"", ""unicode"": ""F1EA"" },\n+  { ""name"": ""PowerPointLogo"", ""unicode"": ""F1EB"" },\n+  { ""name"": ""PowerPointLogoFill"", ""unicode"": ""F1EC"" },\n+  { ""name"": ""PublisherLogo"", ""unicode"": ""F1ED"" },\n+  { ""name"": ""PublisherLogoFill"", ""unicode"": ""F1EE"" },\n+  { ""name"": ""ScheduleEventAction"", ""unicode"": ""F1EF"" },\n+  { ""name"": ""FlameSolid"", ""unicode"": ""F1F3"" },\n+  { ""name"": ""ServerProcesses"", ""unicode"": ""F1FE"" },\n+  { ""name"": ""Server"", ""unicode"": ""F201"" },\n+  { ""name"": ""SaveAll"", ""unicode"": ""F203"" },\n+  { ""name"": ""LinkedInLogo"", ""unicode"": ""F20A"" },\n+  { ""name"": ""Decimals"", ""unicode"": ""F218"" },\n+  { ""name"": ""SidePanelMirrored"", ""unicode"": ""F221"" },\n+  { ""name"": ""ProtectRestrict"", ""unicode"": ""F22A"" },\n+  { ""name"": ""Blog"", ""unicode"": ""F22B"" },\n+  { ""name"": ""UnknownMirrored"", ""unicode"": ""F22E"" },\n+  { ""name"": ""PublicContactCardMirrored"", ""unicode"": ""F230"" },\n+  { ""name"": ""GridViewSmall"", ""unicode"": ""F232"" },\n+  { ""name"": ""GridViewMedium"", ""unicode"": ""F233"" },\n+  { ""name"": ""GridViewLarge"", ""unicode"": ""F234"" },\n+  { ""name"": ""Step"", ""unicode"": ""F241"" },\n+  { ""name"": ""StepInsert"", ""unicode"": ""F242"" },\n+  { ""name"": ""StepShared"", ""unicode"": ""F243"" },\n+  { ""name"": ""StepSharedAdd"", ""unicode"": ""F244"" },\n+  { ""name"": ""StepSharedInsert"", ""unicode"": ""F245"" },\n+  { ""name"": ""ViewDashboard"", ""unicode"": ""F246"" },\n+  { ""name"": ""ViewList"", ""unicode"": ""F247"" },\n+  { ""name"": ""ViewListGroup"", ""unicode"": ""F248"" },\n+  { ""name"": ""ViewListTree"", ""unicode"": ""F249"" },\n+  { ""name"": ""TriggerAuto"", ""unicode"": ""F24A"" },\n+  { ""name"": ""TriggerUser"", ""unicode"": ""F24B"" },\n+  { ""name"": ""PivotChart"", ""unicode"": ""F24C"" },\n+  { ""name"": ""StackedBarChart"", ""unicode"": ""F24D"" },\n+  { ""name"": ""StackedLineChart"", ""unicode"": ""F24E"" },\n+  { ""name"": ""BuildQueue"", ""unicode"": ""F24F"" },\n+  { ""name"": ""BuildQueueNew"", ""unicode"": ""F250"" },\n+  { ""name"": ""UserFollowed"", ""unicode"": ""F25C"" },\n+  { ""name"": ""ContactLink"", ""unicode"": ""F25F"" },\n+  { ""name"": ""Stack"", ""unicode"": ""F26F"" },\n+  { ""name"": ""Bullseye"", ""unicode"": ""F272"" },\n+  { ""name"": ""VennDiagram"", ""unicode"": ""F273"" },\n+  { ""name"": ""FiveTileGrid"", ""unicode"": ""F274"" },\n+  { ""name"": ""FocalPoint"", ""unicode"": ""F277"" },\n+  { ""name"": ""RingerRemove"", ""unicode"": ""F279"" },\n+  { ""name"": ""TeamsLogoInverse"", ""unicode"": ""F27A"" },\n+  { ""name"": ""TeamsLogo"", ""unicode"": ""F27B"" },\n+  { ""name"": ""TeamsLogoFill"", ""unicode"": ""F27C"" },\n+  { ""name"": ""SkypeForBusinessLogoFill"", ""unicode"": ""F27D"" },\n+  { ""name"": ""SharepointLogo"", ""unicode"": ""F27E"" },\n+  { ""name"": ""SharepointLogoFill"", ""unicode"": ""F27F"" },\n+  { ""name"": ""DelveLogo"", ""unicode"": ""F280"" },\n+  { ""name"": ""DelveLogoFill"", ""unicode"": ""F281"" },\n+  { ""name"": ""OfficeVideoLogo"", ""unicode"": ""F282"" },\n+  { ""name"": ""OfficeVideoLogoFill"", ""unicode"": ""F283"" },\n+  { ""name"": ""ExchangeLogo"", ""unicode"": ""F284"" },\n+  { ""name"": ""ExchangeLogoFill"", ""unicode"": ""F285"" },\n+  { ""name"": ""Signin"", ""unicode"": ""F286"" },\n+  { ""name"": ""DocumentApproval"", ""unicode"": ""F28B"" },\n+  { ""name"": ""CloneToDesktop"", ""unicode"": ""F28C"" },\n+  { ""name"": ""InstallToDrive"", ""unicode"": ""F28D"" },\n+  { ""name"": ""Blur"", ""unicode"": ""F28E"" },\n+  { ""name"": ""Build"", ""unicode"": ""F28F"" },\n+  { ""name"": ""ProcessMetaTask"", ""unicode"": ""F290"" },\n+  { ""name"": ""BranchFork2"", ""unicode"": ""F291"" },\n+  { ""name"": ""BranchLocked"", ""unicode"": ""F292"" },\n+  { ""name"": ""BranchCommit"", ""unicode"": ""F293"" },\n+  { ""name"": ""BranchCompare"", ""unicode"": ""F294"" },\n+  { ""name"": ""BranchMerge"", ""unicode"": ""F295"" },\n+  { ""name"": ""BranchPullRequest"", ""unicode"": ""F296"" },\n+  { ""name"": ""BranchSearch"", ""unicode"": ""F297"" },\n+  { ""name"": ""BranchShelveset"", ""unicode"": ""F298"" },\n+  { ""name"": ""RawSource"", ""unicode"": ""F299"" },\n+  { ""name"": ""MergeDuplicate"", ""unicode"": ""F29A"" },\n+  { ""name"": ""RowsGroup"", ""unicode"": ""F29B"" },\n+  { ""name"": ""RowsChild"", ""unicode"": ""F29C"" },\n+  { ""name"": ""Deploy"", ""unicode"": ""F29D"" },\n+  { ""name"": ""Redeploy"", ""unicode"": ""F29E"" },\n+  { ""name"": ""ServerEnviroment"", ""unicode"": ""F29F"" },\n+  { ""name"": ""VisioDiagram"", ""unicode"": ""F2A0"" },\n+  { ""name"": ""HighlightMappedShapes"", ""unicode"": ""F2A1"" },\n+  { ""name"": ""TextCallout"", ""unicode"": ""F2A2"" },\n+  { ""name"": ""IconSetsFlag"", ""unicode"": ""F2A4"" },\n+  { ""name"": ""VisioLogo"", ""unicode"": ""F2A7"" },\n+  { ""name"": ""VisioLogoFill"", ""unicode"": ""F2A8"" },\n+  { ""name"": ""VisioDocument"", ""unicode"": ""F2A9"" },\n+  { ""name"": ""TimelineProgress"", ""unicode"": ""F2AA"" },\n+  { ""name"": ""TimelineDelivery"", ""unicode"": ""F2AB"" },\n+  { ""name"": ""Backlog"", ""unicode"": ""F2AC"" },\n+  { ""name"": ""TeamFavorite"", ""unicode"": ""F2AD"" },\n+  { ""name"": ""TaskGroup"", ""unicode"": ""F2AE"" },\n+  { ""name"": ""TaskGroupMirrored"", ""unicode"": ""F2AF"" },\n+  { ""name"": ""ScopeTemplate"", ""unicode"": ""F2B0"" },\n+  { ""name"": ""AssessmentGroupTemplate"", ""unicode"": ""F2B1"" },\n+  { ""name"": ""NewTeamProject"", ""unicode"": ""F2B2"" },\n+  { ""name"": ""CommentAdd"", ""unicode"": ""F2B3"" },\n+  { ""name"": ""CommentNext"", ""unicode"": ""F2B4"" },\n+  { ""name"": ""CommentPrevious"", ""unicode"": ""F2B5"" },\n+  { ""name"": ""ShopServer"", ""unicode"": ""F2B6"" },\n+  { ""name"": ""LocaleLanguage"", ""unicode"": ""F2B7"" },\n+  { ""name"": ""QueryList"", ""unicode"": ""F2B8"" },\n+  { ""name"": ""UserSync"", ""unicode"": ""F2B9"" },\n+  { ""name"": ""UserPause"", ""unicode"": ""F2BA"" },\n+  { ""name"": ""StreamingOff"", ""unicode"": ""F2BB"" },\n+  { ""name"": ""MoreVertical"", ""unicode"": ""F2BC"" },\n+  { ""name"": ""ArrowTallUpLeft"", ""unicode"": ""F2BD"" },\n+  { ""name"": ""ArrowTallUpRight"", ""unicode"": ""F2BE"" },\n+  { ""name"": ""ArrowTallDownLeft"", ""unicode"": ""F2BF"" },\n+  { ""name"": ""ArrowTallDownRight"", ""unicode"": ""F2C0"" },\n+  { ""name"": ""FieldEmpty"", ""unicode"": ""F2C1"" },\n+  { ""name"": ""FieldFilled"", ""unicode"": ""F2C2"" },\n+  { ""name"": ""FieldChanged"", ""unicode"": ""F2C3"" },\n+  { ""name"": ""FieldNotChanged"", ""unicode"": ""F2C4"" },\n+  { ""name"": ""RingerOff"", ""unicode"": ""F2C5"" },\n+  { ""name"": ""PlayResume"", ""unicode"": ""F2C6"" },\n+  { ""name"": ""BulletedList2"", ""unicode"": ""F2C7"" },\n+  { ""name"": ""BulletedList2Mirrored"", ""unicode"": ""F2C8"" },\n+  { ""name"": ""ImageCrosshair"", ""unicode"": ""F2C9"" },\n+  { ""name"": ""GitGraph"", ""unicode"": ""F2CA"" },\n+  { ""name"": ""Repo"", ""unicode"": ""F2CB"" },\n+  { ""name"": ""RepoSolid"", ""unicode"": ""F2CC"" },\n+  { ""name"": ""FolderQuery"", ""unicode"": ""F2CD"" },\n+  { ""name"": ""FolderList"", ""unicode"": ""F2CE"" },\n+  { ""name"": ""FolderListMirrored"", ""unicode"": ""F2CF"" },\n+  { ""name"": ""LocationOutline"", ""unicode"": ""F2D0"" },\n+  { ""name"": ""POISolid"", ""unicode"": ""F2D1"" },\n+  { ""name"": ""CalculatorNotEqualTo"", ""unicode"": ""F2D2"" },\n+  { ""name"": ""BoxSubtractSolid"", ""unicode"": ""F2D3"" },\n+  { ""name"": ""BoxAdditionSolid"", ""unicode"": ""F2D4"" },\n+  { ""name"": ""BoxMultiplySolid"", ""unicode"": ""F2D5"" },\n+  { ""name"": ""BoxPlaySolid"", ""unicode"": ""F2D6"" },\n+  { ""name"": ""BoxCheckmarkSolid"", ""unicode"": ""F2D7"" },\n+  { ""name"": ""CirclePauseSolid"", ""unicode"": ""F2D8"" },\n+  { ""name"": ""CirclePause"", ""unicode"": ""F2D9"" },\n+  { ""name"": ""MSNVideosSolid"", ""unicode"": ""F2DA"" },\n+  { ""name"": ""CircleStopSolid"", ""unicode"": ""F2DB"" },\n+  { ""name"": ""CircleStop"", ""unicode"": ""F2DC"" },\n+  { ""name"": ""NavigateBack"", ""unicode"": ""F2DD"" },\n+  { ""name"": ""NavigateBackMirrored"", ""unicode"": ""F2DE"" },\n+  { ""name"": ""NavigateForward"", ""unicode"": ""F2DF"" },\n+  { ""name"": ""NavigateForwardMirrored"", ""unicode"": ""F2E0"" },\n+  { ""name"": ""UnknownSolid"", ""unicode"": ""F2E1"" },\n+  { ""name"": ""UnknownMirroredSolid"", ""unicode"": ""F2E2"" },\n+  { ""name"": ""CircleAddition"", ""unicode"": ""F2E3"" },\n+  { ""name"": ""CircleAdditionSolid"", ""unicode"": ""F2E4"" },\n+  { ""name"": ""FilePDB"", ""unicode"": ""F2E5"" },\n+  { ""name"": ""FileTemplate"", ""unicode"": ""F2E6"" },\n+  { ""name"": ""FileSQL"", ""unicode"": ""F2E7"" },\n+  { ""name"": ""FileJAVA"", ""unicode"": ""F2E8"" },\n+  { ""name"": ""FileASPX"", ""unicode"": ""F2E9"" },\n+  { ""name"": ""FileCSS"", ""unicode"": ""F2EA"" },\n+  { ""name"": ""FileSass"", ""unicode"": ""F2EB"" },\n+  { ""name"": ""FileLess"", ""unicode"": ""F2EC"" },\n+  { ""name"": ""FileHTML"", ""unicode"": ""F2ED"" },\n+  { ""name"": ""JavaScriptLanguage"", ""unicode"": ""F2EE"" },\n+  { ""name"": ""CSharpLanguage"", ""unicode"": ""F2EF"" },\n+  { ""name"": ""CSharp"", ""unicode"": ""F2F0"" },\n+  { ""name"": ""VisualBasicLanguage"", ""unicode"": ""F2F1"" },\n+  { ""name"": ""VB"", ""unicode"": ""F2F2"" },\n+  { ""name"": ""CPlusPlusLanguage"", ""unicode"": ""F2F3"" },\n+  { ""name"": ""CPlusPlus"", ""unicode"": ""F2F4"" },\n+  { ""name"": ""FSharpLanguage"", ""unicode"": ""F2F5"" },\n+  { ""name"": ""FSharp"", ""unicode"": ""F2F6"" },\n+  { ""name"": ""TypeScriptLanguage"", ""unicode"": ""F2F7"" },\n+  { ""name"": ""PythonLanguage"", ""unicode"": ""F2F8"" },\n+  { ""name"": ""PY"", ""unicode"": ""F2F9"" },\n+  { ""name"": ""CoffeeScript"", ""unicode"": ""F2FA"" },\n+  { ""name"": ""MarkDownLanguage"", ""unicode"": ""F2FB"" },\n+  { ""name"": ""FullWidth"", ""unicode"": ""F2FE"" },\n+  { ""name"": ""FullWidthEdit"", ""unicode"": ""F2FF"" },\n+  { ""name"": ""Plug"", ""unicode"": ""F300"" },\n+  { ""name"": ""PlugSolid"", ""unicode"": ""F301"" },\n+  { ""name"": ""PlugConnected"", ""unicode"": ""F302"" },\n+  { ""name"": ""PlugDisconnected"", ""unicode"": ""F303"" },\n+  { ""name"": ""UnlockSolid"", ""unicode"": ""F304"" },\n+  { ""name"": ""Variable"", ""unicode"": ""F305"" },\n+  { ""name"": ""Parameter"", ""unicode"": ""F306"" },\n+  { ""name"": ""CommentUrgent"", ""unicode"": ""F307"" },\n+  { ""name"": ""Storyboard"", ""unicode"": ""F308"" },\n+  { ""name"": ""DiffInline"", ""unicode"": ""F309"" },\n+  { ""name"": ""DiffSideBySide"", ""unicode"": ""F30A"" },\n+  { ""name"": ""ImageDiff"", ""unicode"": ""F30B"" },\n+  { ""name"": ""ImagePixel"", ""unicode"": ""F30C"" },\n+  { ""name"": ""FileBug"", ""unicode"": ""F30D"" },\n+  { ""name"": ""FileCode"", ""unicode"": ""F30E"" },\n+  { ""name"": ""FileComment"", ""unicode"": ""F30F"" },\n+  { ""name"": ""BusinessHoursSign"", ""unicode"": ""F310"" },\n+  { ""name"": ""FileImage"", ""unicode"": ""F311"" },\n+  { ""name"": ""FileSymlink"", ""unicode"": ""F312"" },\n+  { ""name"": ""AutoFillTemplate"", ""unicode"": ""F313"" },\n+  { ""name"": ""WorkItem"", ""unicode"": ""F314"" },\n+  { ""name"": ""WorkItemBug"", ""unicode"": ""F315"" },\n+  { ""name"": ""LogRemove"", ""unicode"": ""F316"" },\n+  { ""name"": ""ColumnOptions"", ""unicode"": ""F317"" },\n+  { ""name"": ""Packages"", ""unicode"": ""F318"" },\n+  { ""name"": ""BuildIssue"", ""unicode"": ""F319"" },\n+  { ""name"": ""AssessmentGroup"", ""unicode"": ""F31A"" },\n+  { ""name"": ""VariableGroup"", ""unicode"": ""F31B"" },\n+  { ""name"": ""FullHistory"", ""unicode"": ""F31C"" },\n+  { ""name"": ""Wheelchair"", ""unicode"": ""F31F"" },\n+  { ""name"": ""SingleColumnEdit"", ""unicode"": ""F321"" },\n+  { ""name"": ""DoubleColumnEdit"", ""unicode"": ""F322"" },\n+  { ""name"": ""TripleColumnEdit"", ""unicode"": ""F323"" },\n+  { ""name"": ""ColumnLeftTwoThirdsEdit"", ""unicode"": ""F324"" },\n+  { ""name"": ""ColumnRightTwoThirdsEdit"", ""unicode"": ""F325"" },\n+  { ""name"": ""StreamLogo"", ""unicode"": ""F329"" },\n+  { ""name"": ""PassiveAuthentication"", ""unicode"": ""F32A"" },\n+  { ""name"": ""AlertSolid"", ""unicode"": ""F331"" },\n+  { ""name"": ""MegaphoneSolid"", ""unicode"": ""F332"" },\n+  { ""name"": ""TaskSolid"", ""unicode"": ""F333"" },\n+  { ""name"": ""ConfigurationSolid"", ""unicode"": ""F334"" },\n+  { ""name"": ""BugSolid"", ""unicode"": ""F335"" },\n+  { ""name"": ""CrownSolid"", ""unicode"": ""F336"" },\n+  { ""name"": ""Trophy2Solid"", ""unicode"": ""F337"" },\n+  { ""name"": ""QuickNoteSolid"", ""unicode"": ""F338"" },\n+  { ""name"": ""ConstructionConeSolid"", ""unicode"": ""F339"" },\n+  { ""name"": ""PageListSolid"", ""unicode"": ""F33A"" },\n+  { ""name"": ""PageListMirroredSolid"", ""unicode"": ""F33B"" },\n+  { ""name"": ""StarburstSolid"", ""unicode"": ""F33C"" },\n+  { ""name"": ""ReadingModeSolid"", ""unicode"": ""F33D"" },\n+  { ""name"": ""SadSolid"", ""unicode"": ""F33E"" },\n+  { ""name"": ""HealthSolid"", ""unicode"": ""F33F"" },\n+  { ""name"": ""ShieldSolid"", ""unicode"": ""F340"" },\n+  { ""name"": ""GiftBoxSolid"", ""unicode"": ""F341"" },\n+  { ""name"": ""ShoppingCartSolid"", ""unicode"": ""F342"" },\n+  { ""name"": ""MailSolid"", ""unicode"": ""F343"" },\n+  { ""name"": ""ChatSolid"", ""unicode"": ""F344"" },\n+  { ""name"": ""RibbonSolid"", ""unicode"": ""F345"" },\n+  { ""name"": ""FinancialSolid"", ""unicode"": ""F346"" },\n+  { ""name"": ""FinancialMirroredSolid"", ""unicode"": ""F347"" },\n+  { ""name"": ""HeadsetSolid"", ""unicode"": ""F348"" },\n+  { ""name"": ""PermissionsSolid"", ""unicode"": ""F349"" },\n+  { ""name"": ""ParkingSolid"", ""unicode"": ""F34A"" },\n+  { ""name"": ""ParkingMirroredSolid"", ""unicode"": ""F34B"" },\n+  { ""name"": ""DiamondSolid"", ""unicode"": ""F34C"" },\n+  { ""name"": ""AsteriskSolid"", ""unicode"": ""F34D"" },\n+  { ""name"": ""OfflineStorageSolid"", ""unicode"": ""F34E"" },\n+  { ""name"": ""BankSolid"", ""unicode"": ""F34F"" },\n+  { ""name"": ""DecisionSolid"", ""unicode"": ""F350"" },\n+  { ""name"": ""Parachute"", ""unicode"": ""F351"" },\n+  { ""name"": ""ParachuteSolid"", ""unicode"": ""F352"" },\n+  { ""name"": ""FiltersSolid"", ""unicode"": ""F353"" },\n+  { ""name"": ""ColorSolid"", ""unicode"": ""F354"" },\n+  { ""name"": ""ReviewSolid"", ""unicode"": ""F355"" },\n+  { ""name"": ""ReviewRequestSolid"", ""unicode"": ""F356"" },\n+  { ""name"": ""ReviewRequestMirroredSolid"", ""unicode"": ""F357"" },\n+  { ""name"": ""ReviewResponseSolid"", ""unicode"": ""F358"" },\n+  { ""name"": ""FeedbackRequestSolid"", ""unicode"": ""F359"" },\n+  { ""name"": ""FeedbackRequestMirroredSolid"", ""unicode"": ""F35A"" },\n+  { ""name"": ""FeedbackResponseSolid"", ""unicode"": ""F35B"" },\n+  { ""name"": ""WorkItemBar"", ""unicode"": ""F35C"" },\n+  { ""name"": ""WorkItemBarSolid"", ""unicode"": ""F35D"" },\n+  { ""name"": ""Separator"", ""unicode"": ""F35E"" },\n+  { ""name"": ""NavigateExternalInline"", ""unicode"": ""F35F"" },\n+  { ""name"": ""PlanView"", ""unicode"": ""F360"" },\n+  { ""name"": ""TimelineMatrixView"", ""unicode"": ""F361"" },\n+  { ""name"": ""EngineeringGroup"", ""unicode"": ""F362"" },\n+  { ""name"": ""ProjectCollection"", ""unicode"": ""F363"" },\n+  { ""name"": ""CaretBottomRightCenter8"", ""unicode"": ""F364"" },\n+  { ""name"": ""CaretBottomLeftCenter8"", ""unicode"": ""F365"" },\n+  { ""name"": ""CaretTopRightCenter8"", ""unicode"": ""F366"" },\n+  { ""name"": ""CaretTopLeftCenter8"", ""unicode"": ""F367"" },\n+  { ""name"": ""DonutChart"", ""unicode"": ""F368"" },\n+  { ""name"": ""ChevronUnfold10"", ""unicode"": ""F369"" },\n+  { ""name"": ""ChevronFold10"", ""unicode"": ""F36A"" },\n+  { ""name"": ""DoubleChevronDown8"", ""unicode"": ""F36B"" },\n+  { ""name"": ""DoubleChevronUp8"", ""unicode"": ""F36C"" },\n+  { ""name"": ""DoubleChevronLeft8"", ""unicode"": ""F36D"" },\n+  { ""name"": ""DoubleChevronRight8"", ""unicode"": ""F36E"" },\n+  { ""name"": ""ChevronDownEnd6"", ""unicode"": ""F36F"" },\n+  { ""name"": ""ChevronUpEnd6"", ""unicode"": ""F370"" },\n+  { ""name"": ""ChevronLeftEnd6"", ""unicode"": ""F371"" },\n+  { ""name"": ""ChevronRightEnd6"", ""unicode"": ""F372"" },\n+  { ""name"": ""ContextMenu"", ""unicode"": ""F37C"" },\n+  { ""name"": ""AzureAPIManagement"", ""unicode"": ""F37F"" },\n+  { ""name"": ""AzureServiceEndpoint"", ""unicode"": ""F380"" },\n+  { ""name"": ""VSTSLogo"", ""unicode"": ""F381"" },\n+  { ""name"": ""VSTSAltLogo1"", ""unicode"": ""F382"" },\n+  { ""name"": ""VSTSAltLogo2"", ""unicode"": ""F383"" },\n+  { ""name"": ""FileTypeSolution"", ""unicode"": ""F387"" },\n+  { ""name"": ""WordLogoInverse16"", ""unicode"": ""F390"" },\n+  { ""name"": ""WordLogo16"", ""unicode"": ""F391"" },\n+  { ""name"": ""WordLogoFill16"", ""unicode"": ""F392"" },\n+  { ""name"": ""PowerPointLogoInverse16"", ""unicode"": ""F393"" },\n+  { ""name"": ""PowerPointLogo16"", ""unicode"": ""F394"" },\n+  { ""name"": ""PowerPointLogoFill16"", ""unicode"": ""F395"" },\n+  { ""name"": ""ExcelLogoInverse16"", ""unicode"": ""F396"" },\n+  { ""name"": ""ExcelLogo16"", ""unicode"": ""F397"" },\n+  { ""name"": ""ExcelLogoFill16"", ""unicode"": ""F398"" },\n+  { ""name"": ""OneNoteLogoInverse16"", ""unicode"": ""F399"" },\n+  { ""name"": ""OneNoteLogo16"", ""unicode"": ""F39A"" },\n+  { ""name"": ""OneNoteLogoFill16"", ""unicode"": ""F39B"" },\n+  { ""name"": ""OutlookLogoInverse16"", ""unicode"": ""F39C"" },\n+  { ""name"": ""OutlookLogo16"", ""unicode"": ""F39D"" },\n+  { ""name"": ""OutlookLogoFill16"", ""unicode"": ""F39E"" },\n+  { ""name"": ""PublisherLogoInverse16"", ""unicode"": ""F39F"" },\n+  { ""name"": ""PublisherLogo16"", ""unicode"": ""F3A0"" },\n+  { ""name"": ""PublisherLogoFill16"", ""unicode"": ""F3A1"" },\n+  { ""name"": ""VisioLogoInverse16"", ""unicode"": ""F3A2"" },\n+  { ""name"": ""VisioLogo16"", ""unicode"": ""F3A3"" },\n+  { ""name"": ""VisioLogoFill16"", ""unicode"": ""F3A4"" },\n+  { ""name"": ""TestBeaker"", ""unicode"": ""F3A5"" },\n+  { ""name"": ""TestBeakerSolid"", ""unicode"": ""F3A6"" },\n+  { ""name"": ""TestExploreSolid"", ""unicode"": ""F3A7"" },\n+  { ""name"": ""TestAutoSolid"", ""unicode"": ""F3A8"" },\n+  { ""name"": ""TestUserSolid"", ""unicode"": ""F3A9"" },\n+  { ""name"": ""TestImpactSolid"", ""unicode"": ""F3AA"" },\n+  { ""name"": ""TestPlan"", ""unicode"": ""F3AB"" },\n+  { ""name"": ""TestStep"", ""unicode"": ""F3AC"" },\n+  { ""name"": ""TestParameter"", ""unicode"": ""F3AD"" },\n+  { ""name"": ""TestSuite"", ""unicode"": ""F3AE"" },\n+  { ""name"": ""TestCase"", ""unicode"": ""F3AF"" },\n+  { ""name"": ""Sprint"", ""unicode"": ""F3B0"" },\n+  { ""name"": ""SignOut"", ""unicode"": ""F3B1"" },\n+  { ""name"": ""TriggerApproval"", ""unicode"": ""F3B2"" },\n+  { ""name"": ""Rocket"", ""unicode"": ""F3B3"" },\n+  { ""name"": ""AzureKeyVault"", ""unicode"": ""F3B4"" },\n+  { ""name"": ""Onboarding"", ""unicode"": ""F3BA"" },\n+  { ""name"": ""Transition"", ""unicode"": ""F3BC"" },\n+  { ""name"": ""LikeSolid"", ""unicode"": ""F3BF"" },\n+  { ""name"": ""DislikeSolid"", ""unicode"": ""F3C0"" },\n+  { ""name"": ""CRMCustomerInsightsApp"", ""unicode"": ""F3C8"" },\n+  { ""name"": ""EditCreate"", ""unicode"": ""F3C9"" },\n+  { ""name"": ""SearchData"", ""unicode"": ""F3F1"" },\n+  { ""name"": ""UnSetColor"", ""unicode"": ""F3F9"" },\n+  { ""name"": ""DeclineCall"", ""unicode"": ""F405"" },\n+  { ""name"": ""RectangularClipping"", ""unicode"": ""F407"" },\n+  { ""name"": ""TeamsLogo16"", ""unicode"": ""F40A"" },\n+  { ""name"": ""TeamsLogoFill16"", ""unicode"": ""F40B"" },\n+  { ""name"": ""Spacer"", ""unicode"": ""F40D"" },\n+  { ""name"": ""SkypeLogo16"", ""unicode"": ""F40E"" },\n+  { ""name"": ""SkypeForBusinessLogo16"", ""unicode"": ""F40F"" },\n+  { ""name"": ""SkypeForBusinessLogoFill16"", ""unicode"": ""F410"" },\n+  { ""name"": ""FilterSolid"", ""unicode"": ""F412"" },\n+  { ""name"": ""MailUndelivered"", ""unicode"": ""F415"" },\n+  { ""name"": ""MailTentative"", ""unicode"": ""F416"" },\n+  { ""name"": ""MailTentativeMirrored"", ""unicode"": ""F417"" },\n+  { ""name"": ""MailReminder"", ""unicode"": ""F418"" },\n+  { ""name"": ""ReceiptUndelivered"", ""unicode"": ""F419"" },\n+  { ""name"": ""ReceiptTentative"", ""unicode"": ""F41A"" },\n+  { ""name"": ""ReceiptTentativeMirrored"", ""unicode"": ""F41B"" },\n+  { ""name"": ""Inbox"", ""unicode"": ""F41C"" },\n+  { ""name"": ""IRMReply"", ""unicode"": ""F41D"" },\n+  { ""name"": ""IRMReplyMirrored"", ""unicode"": ""F41E"" },\n+  { ""name"": ""IRMForward"", ""unicode"": ""F41F"" },\n+  { ""name"": ""IRMForwardMirrored"", ""unicode"": ""F420"" },\n+  { ""name"": ""VoicemailIRM"", ""unicode"": ""F421"" },\n+  { ""name"": ""EventAccepted"", ""unicode"": ""F422"" },\n+  { ""name"": ""EventTentative"", ""unicode"": ""F423"" },\n+  { ""name"": ""EventTentativeMirrored"", ""unicode"": ""F424"" },\n+  { ""name"": ""EventDeclined"", ""unicode"": ""F425"" },\n+  { ""name"": ""IDBadge"", ""unicode"": ""F427"" },\n+  { ""name"": ""BackgroundColor"", ""unicode"": ""F42B"" },\n+  { ""name"": ""OfficeFormsLogoInverse16"", ""unicode"": ""F433"" },\n+  { ""name"": ""OfficeFormsLogo"", ""unicode"": ""F434"" },\n+  { ""name"": ""OfficeFormsLogoFill"", ""unicode"": ""F435"" },\n+  { ""name"": ""OfficeFormsLogo16"", ""unicode"": ""F436"" },\n+  { ""name"": ""OfficeFormsLogoFill16"", ""unicode"": ""F437"" },\n+  { ""name"": ""OfficeFormsLogoInverse24"", ""unicode"": ""F43A"" },\n+  { ""name"": ""OfficeFormsLogo24"", ""unicode"": ""F43B"" },\n+  { ""name"": ""OfficeFormsLogoFill24"", ""unicode"": ""F43C"" },\n+  { ""name"": ""PageLock"", ""unicode"": ""F43F"" },\n+  { ""name"": ""NotExecuted"", ""unicode"": ""F440"" },\n+  { ""name"": ""NotImpactedSolid"", ""unicode"": ""F441"" },\n+  { ""name"": ""FieldReadOnly"", ""unicode"": ""F442"" },\n+  { ""name"": ""FieldRequired"", ""unicode"": ""F443"" },\n+  { ""name"": ""BacklogBoard"", ""unicode"": ""F444"" },\n+  { ""name"": ""ExternalBuild"", ""unicode"": ""F445"" },\n+  { ""name"": ""ExternalTFVC"", ""unicode"": ""F446"" },\n+  { ""name"": ""ExternalXAML"", ""unicode"": ""F447"" },\n+  { ""name"": ""IssueSolid"", ""unicode"": ""F448"" },\n+  { ""name"": ""DefectSolid"", ""unicode"": ""F449"" },\n+  { ""name"": ""LadybugSolid"", ""unicode"": ""F44A"" },\n+  { ""name"": ""NugetLogo"", ""unicode"": ""F44C"" },\n+  { ""name"": ""TFVCLogo"", ""unicode"": ""F44D"" },\n+  { ""name"": ""ProjectLogo32"", ""unicode"": ""F47E"" },\n+  { ""name"": ""ProjectLogoFill32"", ""unicode"": ""F47F"" },\n+  { ""name"": ""ProjectLogo16"", ""unicode"": ""F480"" },\n+  { ""name"": ""ProjectLogoFill16"", ""unicode"": ""F481"" },\n+  { ""name"": ""SwayLogo32"", ""unicode"": ""F482"" },\n+  { ""name"": ""SwayLogoFill32"", ""unicode"": ""F483"" },\n+  { ""name"": ""SwayLogo16"", ""unicode"": ""F484"" },\n+  { ""name"": ""SwayLogoFill16"", ""unicode"": ""F485"" },\n+  { ""name"": ""ClassNotebookLogo32"", ""unicode"": ""F486"" },\n+  { ""name"": ""ClassNotebookLogoFill32"", ""unicode"": ""F487"" },\n+  { ""name"": ""ClassNotebookLogo16"", ""unicode"": ""F488"" },\n+  { ""name"": ""ClassNotebookLogoFill16"", ""unicode"": ""F489"" },\n+  { ""name"": ""ClassNotebookLogoInverse32"", ""unicode"": ""F48A"" },\n+  { ""name"": ""ClassNotebookLogoInverse16"", ""unicode"": ""F48B"" },\n+  { ""name"": ""StaffNotebookLogo32"", ""unicode"": ""F48C"" },\n+  { ""name"": ""StaffNotebookLogoFill32"", ""unicode"": ""F48D"" },\n+  { ""name"": ""StaffNotebookLogo16"", ""unicode"": ""F48E"" },\n+  { ""name"": ""StaffNotebookLogoFill16"", ""unicode"": ""F48F"" },\n+  { ""name"": ""StaffNotebookLogoInverted32"", ""unicode"": ""F490"" },\n+  { ""name"": ""StaffNotebookLogoInverted16"", ""unicode"": ""F491"" },\n+  { ""name"": ""KaizalaLogo"", ""unicode"": ""F492"" },\n+  { ""name"": ""TaskLogo"", ""unicode"": ""F493"" },\n+  { ""name"": ""ProtectionCenterLogo32"", ""unicode"": ""F494"" },\n+  { ""name"": ""GallatinLogo"", ""unicode"": ""F496"" },\n+  { ""name"": ""Globe2"", ""unicode"": ""F49A"" },\n+  { ""name"": ""Guitar"", ""unicode"": ""F49B"" },\n+  { ""name"": ""Breakfast"", ""unicode"": ""F49C"" },\n+  { ""name"": ""Brunch"", ""unicode"": ""F49D"" },\n+  { ""name"": ""BeerMug"", ""unicode"": ""F49E"" },\n+  { ""name"": ""Vacation"", ""unicode"": ""F49F"" },\n+  { ""name"": ""Teeth"", ""unicode"": ""F4A0"" },\n+  { ""name"": ""Taxi"", ""unicode"": ""F4A1"" },\n+  { ""name"": ""Chopsticks"", ""unicode"": ""F4A2"" },\n+  { ""name"": ""SyncOccurence"", ""unicode"": ""F4A3"" },\n+  { ""name"": ""UnsyncOccurence"", ""unicode"": ""F4A4"" },\n+  { ""name"": ""GIF"", ""unicode"": ""F4A9"" },\n+  { ""name"": ""PrimaryCalendar"", ""unicode"": ""F4AE"" },\n+  { ""name"": ""SearchCalendar"", ""unicode"": ""F4AF"" },\n+  { ""name"": ""VideoOff"", ""unicode"": ""F4B0"" },\n+  { ""name"": ""MicrosoftFlowLogo"", ""unicode"": ""F4B1"" },\n+  { ""name"": ""BusinessCenterLogo"", ""unicode"": ""F4B2"" },\n+  { ""name"": ""ToDoLogoBottom"", ""unicode"": ""F4B3"" },\n+  { ""name"": ""ToDoLogoTop"", ""unicode"": ""F4B4"" },\n+  { ""name"": ""EditSolid12"", ""unicode"": ""F4B5"" },\n+  { ""name"": ""EditSolidMirrored12"", ""unicode"": ""F4B6"" },\n+  { ""name"": ""UneditableSolid12"", ""unicode"": ""F4B7"" },\n+  { ""name"": ""UneditableSolidMirrored12"", ""unicode"": ""F4B8"" },\n+  { ""name"": ""UneditableMirrored"", ""unicode"": ""F4B9"" },\n+  { ""name"": ""AdminALogo32"", ""unicode"": ""F4BA"" },\n+  { ""name"": ""AdminALogoFill32"", ""unicode"": ""F4BB"" },\n+  { ""name"": ""ToDoLogoInverse"", ""unicode"": ""F4BC"" },\n+  { ""name"": ""Snooze"", ""unicode"": ""F4BD"" },\n+  { ""name"": ""WaffleOffice365"", ""unicode"": ""F4E0"" },\n+  { ""name"": ""ImageSearch"", ""unicode"": ""F4E8"" },\n+  { ""name"": ""NewsSearch"", ""unicode"": ""F4E9"" },\n+  { ""name"": ""VideoSearch"", ""unicode"": ""F4EA"" },\n+  { ""name"": ""R"", ""unicode"": ""F4EB"" },\n+  { ""name"": ""FontColorA"", ""unicode"": ""F4EC"" },\n+  { ""name"": ""FontColorSwatch"", ""unicode"": ""F4ED"" },\n+  { ""name"": ""LightWeight"", ""unicode"": ""F4EE"" },\n+  { ""name"": ""NormalWeight"", ""unicode"": ""F4EF"" },\n+  { ""name"": ""SemiboldWeight"", ""unicode"": ""F4F0"" },\n+  { ""name"": ""GroupObject"", ""unicode"": ""F4F1"" },\n+  { ""name"": ""UngroupObject"", ""unicode"": ""F4F2"" },\n+  { ""name"": ""AlignHorizontalLeft"", ""unicode"": ""F4F3"" },\n+  { ""name"": ""AlignHorizontalCenter"", ""unicode"": ""F4F4"" },\n+  { ""name"": ""AlignHorizontalRight"", ""unicode"": ""F4F5"" },\n+  { ""name"": ""AlignVerticalTop"", ""unicode"": ""F4F6"" },\n+  { ""name"": ""AlignVerticalCenter"", ""unicode"": ""F4F7"" },\n+  { ""name"": ""AlignVerticalBottom"", ""unicode"": ""F4F8"" },\n+  { ""name"": ""HorizontalDistributeCenter"", ""unicode"": ""F4F9"" },\n+  { ""name"": ""VerticalDistributeCenter"", ""unicode"": ""F4FA"" },\n+  { ""name"": ""Ellipse"", ""unicode"": ""F4FB"" },\n+  { ""name"": ""Line"", ""unicode"": ""F4FC"" },\n+  { ""name"": ""Octagon"", ""unicode"": ""F4FD"" },\n+  { ""name"": ""Hexagon"", ""unicode"": ""F4FE"" },\n+  { ""name"": ""Pentagon"", ""unicode"": ""F4FF"" },\n+  { ""name"": ""RightTriangle"", ""unicode"": ""F500"" },\n+  { ""name"": ""HalfCircle"", ""unicode"": ""F501"" },\n+  { ""name"": ""QuarterCircle"", ""unicode"": ""F502"" },\n+  { ""name"": ""ThreeQuarterCircle"", ""unicode"": ""F503"" },\n+  { ""name"": ""6PointStar"", ""unicode"": ""F504"" },\n+  { ""name"": ""12PointStar"", ""unicode"": ""F505"" },\n+  { ""name"": ""ArrangeBringToFront"", ""unicode"": ""F506"" },\n+  { ""name"": ""ArrangeSendToBack"", ""unicode"": ""F507"" },\n+  { ""name"": ""ArrangeSendBackward"", ""unicode"": ""F508"" },\n+  { ""name"": ""ArrangeBringForward"", ""unicode"": ""F509"" },\n+  { ""name"": ""BorderDash"", ""unicode"": ""F50A"" },\n+  { ""name"": ""BorderDot"", ""unicode"": ""F50B"" },\n+  { ""name"": ""LineStyle"", ""unicode"": ""F50C"" },\n+  { ""name"": ""LineThickness"", ""unicode"": ""F50D"" },\n+  { ""name"": ""WindowEdit"", ""unicode"": ""F50E"" },\n+  { ""name"": ""HintText"", ""unicode"": ""F50F"" },\n+  { ""name"": ""MediaAdd"", ""unicode"": ""F510"" },\n+  { ""name"": ""AnchorLock"", ""unicode"": ""F511"" },\n+  { ""name"": ""AutoHeight"", ""unicode"": ""F512"" },\n+  { ""name"": ""ChartSeries"", ""unicode"": ""F513"" },\n+  { ""name"": ""ChartXAngle"", ""unicode"": ""F514"" },\n+  { ""name"": ""ChartYAngle"", ""unicode"": ""F515"" },\n+  { ""name"": ""Combobox"", ""unicode"": ""F516"" },\n+  { ""name"": ""LineSpacing"", ""unicode"": ""F517"" },\n+  { ""name"": ""Padding"", ""unicode"": ""F518"" },\n+  { ""name"": ""PaddingTop"", ""unicode"": ""F519"" },\n+  { ""name"": ""PaddingBottom"", ""unicode"": ""F51A"" },\n+  { ""name"": ""PaddingLeft"", ""unicode"": ""F51B"" },\n+  { ""name"": ""PaddingRight"", ""unicode"": ""F51C"" },\n+  { ""name"": ""NavigationFlipper"", ""unicode"": ""F51D"" },\n+  { ""name"": ""AlignJustify"", ""unicode"": ""F51E"" },\n+  { ""name"": ""TextOverflow"", ""unicode"": ""F51F"" },\n+  { ""name"": ""VisualsFolder"", ""unicode"": ""F520"" },\n+  { ""name"": ""VisualsStore"", ""unicode"": ""F521"" },\n+  { ""name"": ""PictureCenter"", ""unicode"": ""F522"" },\n+  { ""name"": ""PictureFill"", ""unicode"": ""F523"" },\n+  { ""name"": ""PicturePosition"", ""unicode"": ""F524"" },\n+  { ""name"": ""PictureStretch"", ""unicode"": ""F525"" },\n+  { ""name"": ""PictureTile"", ""unicode"": ""F526"" },\n+  { ""name"": ""Slider"", ""unicode"": ""F527"" },\n+  { ""name"": ""SliderHandleSize"", ""unicode"": ""F528"" },\n+  { ""name"": ""DefaultRatio"", ""unicode"": ""F529"" },\n+  { ""name"": ""NumberSequence"", ""unicode"": ""F52A"" },\n+  { ""name"": ""GUID"", ""unicode"": ""F52B"" },\n+  { ""name"": ""ReportAdd"", ""unicode"": ""F52C"" },\n+  { ""name"": ""DashboardAdd"", ""unicode"": ""F52D"" },\n+  { ""name"": ""MapPinSolid"", ""unicode"": ""F52E"" },\n+  { ""name"": ""WebPublish"", ""unicode"": ""F52F"" },\n+  { ""name"": ""PieSingleSolid"", ""unicode"": ""F530"" },\n+  { ""name"": ""BlockedSolid"", ""unicode"": ""F531"" },\n+  { ""name"": ""DrillDown"", ""unicode"": ""F532"" },\n+  { ""name"": ""DrillDownSolid"", ""unicode"": ""F533"" },\n+  { ""name"": ""DrillExpand"", ""unicode"": ""F534"" },\n+  { ""name"": ""DrillShow"", ""unicode"": ""F535"" },\n+  { ""name"": ""SpecialEvent"", ""unicode"": ""F536"" },\n+  { ""name"": ""OneDriveFolder16"", ""unicode"": ""F53B"" },\n+  { ""name"": ""FunctionalManagerDashboard"", ""unicode"": ""F542"" },\n+  { ""name"": ""BIDashboard"", ""unicode"": ""F543"" },\n+  { ""name"": ""CodeEdit"", ""unicode"": ""F544"" },\n+  { ""name"": ""RenewalCurrent"", ""unicode"": ""F545"" },\n+  { ""name"": ""RenewalFuture"", ""unicode"": ""F546"" },\n+  { ""name"": ""SplitObject"", ""unicode"": ""F547"" },\n+  { ""name"": ""BulkUpload"", ""unicode"": ""F548"" },\n+  { ""name"": ""DownloadDocument"", ""unicode"": ""F549"" },\n+  { ""name"": ""Flower"", ""unicode"": ""F54E"" },\n+  { ""name"": ""WaitlistConfirm"", ""unicode"": ""F550"" },\n+  { ""name"": ""WaitlistConfirmMirrored"", ""unicode"": ""F551"" },\n+  { ""name"": ""LaptopSecure"", ""unicode"": ""F552"" },\n+  { ""name"": ""DragObject"", ""unicode"": ""F553"" },\n+  { ""name"": ""EntryView"", ""unicode"": ""F554"" },\n+  { ""name"": ""EntryDecline"", ""unicode"": ""F555"" },\n+  { ""name"": ""ContactCardSettings"", ""unicode"": ""F556"" },\n+  { ""name"": ""ContactCardSettingsMirrored"", ""unicode"": ""F557"" },\n+  { ""name"": ""CalendarSettings"", ""unicode"": ""F558"" },\n+  { ""name"": ""CalendarSettingsMirrored"", ""unicode"": ""F559"" },\n+  { ""name"": ""HardDriveLock"", ""unicode"": ""F55A"" },\n+  { ""name"": ""HardDriveUnlock"", ""unicode"": ""F55B"" },\n+  { ""name"": ""AccountManagement"", ""unicode"": ""F55C"" },\n+  { ""name"": ""TransitionPop"", ""unicode"": ""F5B2"" },\n+  { ""name"": ""TransitionPush"", ""unicode"": ""F5B3"" },\n+  { ""name"": ""TransitionEffect"", ""unicode"": ""F5B4"" },\n+  { ""name"": ""LookupEntities"", ""unicode"": ""F5B5"" },\n+  { ""name"": ""ExploreData"", ""unicode"": ""F5B6"" },\n+  { ""name"": ""AddBookmark"", ""unicode"": ""F5B7"" },\n+  { ""name"": ""SearchBookmark"", ""unicode"": ""F5B8"" },\n+  { ""name"": ""DrillThrough"", ""unicode"": ""F5B9"" },\n+  { ""name"": ""MasterDatabase"", ""unicode"": ""F5BA"" },\n+  { ""name"": ""CertifiedDatabase"", ""unicode"": ""F5BB"" },\n+  { ""name"": ""MaximumValue"", ""unicode"": ""F5BC"" },\n+  { ""name"": ""MinimumValue"", ""unicode"": ""F5BD"" },\n+  { ""name"": ""VisualStudioIDELogo32"", ""unicode"": ""F5D0"" },\n+  { ""name"": ""PasteAsText"", ""unicode"": ""F5D5"" },\n+  { ""name"": ""PasteAsCode"", ""unicode"": ""F5D6"" },\n+  { ""name"": ""BrowserTab"", ""unicode"": ""F5D7"" },\n+  { ""name"": ""BrowserTabScreenshot"", ""unicode"": ""F5D8"" },\n+  { ""name"": ""DesktopScreenshot"", ""unicode"": ""F5D9"" },\n+  { ""name"": ""FileYML"", ""unicode"": ""F5DA"" },\n+  { ""name"": ""ClipboardSolid"", ""unicode"": ""F5DC"" },\n+  { ""name"": ""FabricUserFolder"", ""unicode"": ""F5E5"" },\n+  { ""name"": ""FabricNetworkFolder"", ""unicode"": ""F5E6"" },\n+  { ""name"": ""AnalyticsView"", ""unicode"": ""F5F1"" },\n+  { ""name"": ""Video360Generic"", ""unicode"": ""F609"" },\n+  { ""name"": ""Leave"", ""unicode"": ""F627"" },\n+  { ""name"": ""Trending12"", ""unicode"": ""F62D"" },\n+  { ""name"": ""Blocked12"", ""unicode"": ""F62E"" },\n+  { ""name"": ""Warning12"", ""unicode"": ""F62F"" },\n+  { ""name"": ""CheckedOutByOther12"", ""unicode"": ""F630"" },\n+  { ""name"": ""CheckedOutByYou12"", ""unicode"": ""F631"" },\n+  { ""name"": ""CircleShapeSolid"", ""unicode"": ""F63C"" },\n+  { ""name"": ""SquareShapeSolid"", ""unicode"": ""F63D"" },\n+  { ""name"": ""TriangleShapeSolid"", ""unicode"": ""F63E"" },\n+  { ""name"": ""DropShapeSolid"", ""unicode"": ""F63F"" },\n+  { ""name"": ""RectangleShapeSolid"", ""unicode"": ""F640"" },\n+  { ""name"": ""ZoomToFit"", ""unicode"": ""F649"" },\n+  { ""name"": ""InsertColumnsLeft"", ""unicode"": ""F64A"" },\n+  { ""name"": ""InsertColumnsRight"", ""unicode"": ""F64B"" },\n+  { ""name"": ""InsertRowsAbove"", ""unicode"": ""F64C"" },\n+  { ""name"": ""InsertRowsBelow"", ""unicode"": ""F64D"" },\n+  { ""name"": ""DeleteColumns"", ""unicode"": ""F64E"" },\n+  { ""name"": ""DeleteRows"", ""unicode"": ""F64F"" },\n+  { ""name"": ""DeleteRowsMirrored"", ""unicode"": ""F650"" },\n+  { ""name"": ""DeleteTable"", ""unicode"": ""F651"" },\n+  { ""name"": ""AccountBrowser"", ""unicode"": ""F652"" },\n+  { ""name"": ""VersionControlPush"", ""unicode"": ""F664"" },\n+  { ""name"": ""StackedColumnChart2"", ""unicode"": ""F666"" },\n+  { ""name"": ""TripleColumnWide"", ""unicode"": ""F66E"" },\n+  { ""name"": ""QuadColumn"", ""unicode"": ""F66F"" },\n+  { ""name"": ""WhiteBoardApp16"", ""unicode"": ""F673"" },\n+  { ""name"": ""WhiteBoardApp32"", ""unicode"": ""F674"" },\n+  { ""name"": ""PinnedSolid"", ""unicode"": ""F676"" },\n+  { ""name"": ""InsertSignatureLine"", ""unicode"": ""F677"" },\n+  { ""name"": ""ArrangeByFrom"", ""unicode"": ""F678"" },\n+  { ""name"": ""Phishing"", ""unicode"": ""F679"" },\n+  { ""name"": ""CreateMailRule"", ""unicode"": ""F67A"" },\n+  { ""name"": ""PublishCourse"", ""unicode"": ""F699"" },\n+  { ""name"": ""DictionaryRemove"", ""unicode"": ""F69A"" },\n+  { ""name"": ""UserRemove"", ""unicode"": ""F69B"" },\n+  { ""name"": ""UserEvent"", ""unicode"": ""F69C"" },\n+  { ""name"": ""Encryption"", ""unicode"": ""F69D"" },\n+  { ""name"": ""PasswordField"", ""unicode"": ""F6AA"" },\n+  { ""name"": ""OpenInNewTab"", ""unicode"": ""F6AB"" },\n+  { ""name"": ""Hide3"", ""unicode"": ""F6AC"" },\n+  { ""name"": ""VerifiedBrandSolid"", ""unicode"": ""F6AD"" },\n+  { ""name"": ""MarkAsProtected"", ""unicode"": ""F6AE"" },\n+  { ""name"": ""AuthenticatorApp"", ""unicode"": ""F6B1"" },\n+  { ""name"": ""WebTemplate"", ""unicode"": ""F6B2"" },\n+  { ""name"": ""DefenderTVM"", ""unicode"": ""F6B3"" },\n+  { ""name"": ""MedalSolid"", ""unicode"": ""F6B9"" },\n+  { ""name"": ""D365TalentLearn"", ""unicode"": ""F6BB"" },\n+  { ""name"": ""D365TalentInsight"", ""unicode"": ""F6BC"" },\n+  { ""name"": ""D365TalentHRCore"", ""unicode"": ""F6BD"" },\n+  { ""name"": ""BacklogList"", ""unicode"": ""F6BF"" },\n+  { ""name"": ""ButtonControl"", ""unicode"": ""F6C0"" },\n+  { ""name"": ""TableGroup"", ""unicode"": ""F6D9"" },\n+  { ""name"": ""MountainClimbing"", ""unicode"": ""F6DB"" },\n+  { ""name"": ""TagUnknown"", ""unicode"": ""F6DF"" },\n+  { ""name"": ""TagUnknownMirror"", ""unicode"": ""F6E0"" },\n+  { ""name"": ""TagUnknown12"", ""unicode"": ""F6E1"" },\n+  { ""name"": ""TagUnknown12Mirror"", ""unicode"": ""F6E2"" },\n+  { ""name"": ""Link12"", ""unicode"": ""F6E3"" },\n+  { ""name"": ""Presentation"", ""unicode"": ""F6E4"" },\n+  { ""name"": ""Presentation12"", ""unicode"": ""F6E5"" },\n+  { ""name"": ""Lock12"", ""unicode"": ""F6E6"" },\n+  { ""name"": ""BuildDefinition"", ""unicode"": ""F6E9"" },\n+  { ""name"": ""ReleaseDefinition"", ""unicode"": ""F6EA"" },\n+  { ""name"": ""SaveTemplate"", ""unicode"": ""F6EC"" },\n+  { ""name"": ""UserGauge"", ""unicode"": ""F6ED"" },\n+  { ""name"": ""BlockedSiteSolid12"", ""unicode"": ""F70A"" },\n+  { ""name"": ""TagSolid"", ""unicode"": ""F70E"" },\n+  { ""name"": ""OfficeChat"", ""unicode"": ""F70F"" },\n+  { ""name"": ""OfficeChatSolid"", ""unicode"": ""F710"" },\n+  { ""name"": ""MailSchedule"", ""unicode"": ""F72E"" },\n+  { ""name"": ""WarningSolid"", ""unicode"": ""F736"" },\n+  { ""name"": ""Blocked2Solid"", ""unicode"": ""F737"" },\n+  { ""name"": ""SkypeCircleArrow"", ""unicode"": ""F747"" },\n+  { ""name"": ""SkypeArrow"", ""unicode"": ""F748"" },\n+  { ""name"": ""SyncStatus"", ""unicode"": ""F751"" },\n+  { ""name"": ""SyncStatusSolid"", ""unicode"": ""F752"" },\n+  { ""name"": ""ProjectDocument"", ""unicode"": ""F759"" },\n+  { ""name"": ""ToDoLogoOutline"", ""unicode"": ""F75B"" },\n+  { ""name"": ""VisioOnlineLogoFill32"", ""unicode"": ""F75F"" },\n+  { ""name"": ""VisioOnlineLogo32"", ""unicode"": ""F760"" },\n+  { ""name"": ""VisioOnlineLogoCloud32"", ""unicode"": ""F761"" },\n+  { ""name"": ""VisioDiagramSync"", ""unicode"": ""F762"" },\n+  { ""name"": ""Event12"", ""unicode"": ""F763"" },\n+  { ""name"": ""EventDateMissed12"", ""unicode"": ""F764"" },\n+  { ""name"": ""UserOptional"", ""unicode"": ""F767"" },\n+  { ""name"": ""ResponsesMenu"", ""unicode"": ""F768"" },\n+  { ""name"": ""DoubleDownArrow"", ""unicode"": ""F769"" },\n+  { ""name"": ""DistributeDown"", ""unicode"": ""F76A"" },\n+  { ""name"": ""BookmarkReport"", ""unicode"": ""F76B"" },\n+  { ""name"": ""FilterSettings"", ""unicode"": ""F76C"" },\n+  { ""name"": ""GripperDotsVertical"", ""unicode"": ""F772"" },\n+  { ""name"": ""MailAttached"", ""unicode"": ""F774"" },\n+  { ""name"": ""AddIn"", ""unicode"": ""F775"" },\n+  { ""name"": ""LinkedDatabase"", ""unicode"": ""F779"" },\n+  { ""name"": ""TableLink"", ""unicode"": ""F77A"" },\n+  { ""name"": ""PromotedDatabase"", ""unicode"": ""F77D"" },\n+  { ""name"": ""BarChartVerticalFilter"", ""unicode"": ""F77E"" },\n+  { ""name"": ""BarChartVerticalFilterSolid"", ""unicode"": ""F77F"" },\n+  { ""name"": ""MicrosoftTranslatorLogo"", ""unicode"": ""F782"" },\n+  { ""name"": ""ShowTimeAs"", ""unicode"": ""F787"" },\n+  { ""name"": ""FileRequest"", ""unicode"": ""F789"" },\n+  { ""name"": ""WorkItemAlert"", ""unicode"": ""F78F"" },\n+  { ""name"": ""PowerBILogo16"", ""unicode"": ""F790"" },\n+  { ""name"": ""PowerBILogoBackplate16"", ""unicode"": ""F791"" },\n+  { ""name"": ""BulletedListText"", ""unicode"": ""F792"" },\n+  { ""name"": ""BulletedListBullet"", ""unicode"": ""F793"" },\n+  { ""name"": ""BulletedListTextMirrored"", ""unicode"": ""F794"" },\n+  { ""name"": ""BulletedListBulletMirrored"", ""unicode"": ""F795"" },\n+  { ""name"": ""NumberedListText"", ""unicode"": ""F796"" },\n+  { ""name"": ""NumberedListNumber"", ""unicode"": ""F797"" },\n+  { ""name"": ""NumberedListTextMirrored"", ""unicode"": ""F798"" },\n+  { ""name"": ""NumberedListNumberMirrored"", ""unicode"": ""F799"" },\n+  { ""name"": ""RemoveLinkChain"", ""unicode"": ""F79A"" },\n+  { ""name"": ""RemoveLinkX"", ""unicode"": ""F79B"" },\n+  { ""name"": ""FabricTextHighlight"", ""unicode"": ""F79C"" },\n+  { ""name"": ""ClearFormattingA"", ""unicode"": ""F79D"" },\n+  { ""name"": ""ClearFormattingEraser"", ""unicode"": ""F79E"" },\n+  { ""name"": ""Photo2Fill"", ""unicode"": ""F79F"" },\n+  { ""name"": ""IncreaseIndentText"", ""unicode"": ""F7A0"" },\n+  { ""name"": ""IncreaseIndentArrow"", ""unicode"": ""F7A1"" },\n+  { ""name"": ""DecreaseIndentText"", ""unicode"": ""F7A2"" },\n+  { ""name"": ""DecreaseIndentArrow"", ""unicode"": ""F7A3"" },\n+  { ""name"": ""IncreaseIndentTextMirrored"", ""unicode"": ""F7A4"" },\n+  { ""name"": ""IncreaseIndentArrowMirrored"", ""unicode"": ""F7A5"" },\n+  { ""name"": ""DecreaseIndentTextMirrored"", ""unicode"": ""F7A6"" },\n+  { ""name"": ""DecreaseIndentArrowMirrored"", ""unicode"": ""F7A7"" },\n+  { ""name"": ""CheckListText"", ""unicode"": ""F7A8"" },\n+  { ""name"": ""CheckListCheck"", ""unicode"": ""F7A9"" },\n+  { ""name"": ""CheckListTextMirrored"", ""unicode"": ""F7AA"" },\n+  { ""name"": ""CheckListCheckMirrored"", ""unicode"": ""F7AB"" },\n+  { ""name"": ""NumberSymbol"", ""unicode"": ""F7AC"" },\n+  { ""name"": ""Coupon"", ""unicode"": ""F7BC"" },\n+  { ""name"": ""VerifiedBrand"", ""unicode"": ""F7BD"" },\n+  { ""name"": ""ReleaseGate"", ""unicode"": ""F7BE"" },\n+  { ""name"": ""ReleaseGateCheck"", ""unicode"": ""F7BF"" },\n+  { ""name"": ""ReleaseGateError"", ""unicode"": ""F7C0"" },\n+  { ""name"": ""M365InvoicingLogo"", ""unicode"": ""F7C1"" },\n+  { ""name"": ""RemoveFromShoppingList"", ""unicode"": ""F7D5"" },\n+  { ""name"": ""ShieldAlert"", ""unicode"": ""F7D7"" },\n+  { ""name"": ""FabricTextHighlightComposite"", ""unicode"": ""F7DA"" },\n+  { ""name"": ""Dataflows"", ""unicode"": ""F7DD"" },\n+  { ""name"": ""GenericScanFilled"", ""unicode"": ""F7DE"" },\n+  { ""name"": ""DiagnosticDataBarTooltip"", ""unicode"": ""F7DF"" },\n+  { ""name"": ""SaveToMobile"", ""unicode"": ""F7E0"" },\n+  { ""name"": ""Orientation2"", ""unicode"": ""F7E1"" },\n+  { ""name"": ""ScreenCast"", ""unicode"": ""F7E2"" },\n+  { ""name"": ""ShowGrid"", ""unicode"": ""F7E3"" },\n+  { ""name"": ""SnapToGrid"", ""unicode"": ""F7E4"" },\n+  { ""name"": ""ContactList"", ""unicode"": ""F7E5"" },\n+  { ""name"": ""NewMail"", ""unicode"": ""F7EA"" },\n+  { ""name"": ""EyeShadow"", ""unicode"": ""F7EB"" },\n+  { ""name"": ""FabricFolderConfirm"", ""unicode"": ""F7FF"" },\n+  { ""name"": ""InformationBarriers"", ""unicode"": ""F803"" },\n+  { ""name"": ""CommentActive"", ""unicode"": ""F804"" },\n+  { ""name"": ""ColumnVerticalSectionEdit"", ""unicode"": ""F806"" },\n+  { ""name"": ""WavingHand"", ""unicode"": ""F807"" },\n+  { ""name"": ""ShakeDevice"", ""unicode"": ""F80A"" },\n+  { ""name"": ""SmartGlassRemote"", ""unicode"": ""F80B"" },\n+  { ""name"": ""Rotate90Clockwise"", ""unicode"": ""F80D"" },\n+  { ""name"": ""Rotate90CounterClockwise"", ""unicode"": ""F80E"" },\n+  { ""name"": ""CampaignTemplate"", ""unicode"": ""F811"" },\n+  { ""name"": ""ChartTemplate"", ""unicode"": ""F812"" },\n+  { ""name"": ""PageListFilter"", ""unicode"": ""F813"" },\n+  { ""name"": ""SecondaryNav"", ""unicode"": ""F814"" },\n+  { ""name"": ""ColumnVerticalSection"", ""unicode"": ""F81E"" },\n+  { ""name"": ""SkypeCircleSlash"", ""unicode"": ""F825"" },\n+  { ""name"": ""SkypeSlash"", ""unicode"": ""F826"" },\n+  { ""name"": ""CustomizeToolbar"", ""unicode"": ""F828"" },\n+  { ""name"": ""DuplicateRow"", ""unicode"": ""F82A"" },\n+  { ""name"": ""RemoveFromTrash"", ""unicode"": ""F82B"" },\n+  { ""name"": ""MailOptions"", ""unicode"": ""F82C"" },\n+  { ""name"": ""Childof"", ""unicode"": ""F82D"" },\n+  { ""name"": ""Footer"", ""unicode"": ""F82E"" },\n+  { ""name"": ""Header"", ""unicode"": ""F82F"" },\n+  { ""name"": ""BarChartVerticalFill"", ""unicode"": ""F830"" },\n+  { ""name"": ""StackedColumnChart2Fill"", ""unicode"": ""F831"" },\n+  { ""name"": ""PlainText"", ""unicode"": ""F834"" },\n+  { ""name"": ""AccessibiltyChecker"", ""unicode"": ""F835"" },\n+  { ""name"": ""DatabaseSync"", ""unicode"": ""F842"" },\n+  { ""name"": ""ReservationOrders"", ""unicode"": ""F845"" },\n+  { ""name"": ""TabOneColumn"", ""unicode"": ""F849"" },\n+  { ""name"": ""TabTwoColumn"", ""unicode"": ""F84A"" },\n+  { ""name"": ""TabThreeColumn"", ""unicode"": ""F84B"" },\n+  { ""name"": ""MicrosoftTranslatorLogoGreen"", ""unicode"": ""F852"" },\n+  { ""name"": ""MicrosoftTranslatorLogoBlue"", ""unicode"": ""F853"" },\n+  { ""name"": ""InternalInvestigation"", ""unicode"": ""F854"" },\n+  { ""name"": ""AddReaction"", ""unicode"": ""F85D"" },\n+  { ""name"": ""ContactHeart"", ""unicode"": ""F862"" },\n+  { ""name"": ""VisuallyImpaired"", ""unicode"": ""F866"" },\n+  { ""name"": ""EventToDoLogo"", ""unicode"": ""F869"" },\n+  { ""name"": ""Variable2"", ""unicode"": ""F86D"" },\n+  { ""name"": ""ModelingView"", ""unicode"": ""F871"" },\n+  { ""name"": ""DisconnectVirtualMachine"", ""unicode"": ""F873"" },\n+  { ""name"": ""ReportLock"", ""unicode"": ""F875"" },\n+  { ""name"": ""Uneditable2"", ""unicode"": ""F876"" },\n+  { ""name"": ""Uneditable2Mirrored"", ""unicode"": ""F877"" },\n+  { ""name"": ""BarChartVerticalEdit"", ""unicode"": ""F89D"" },\n+  { ""name"": ""GlobalNavButtonActive"", ""unicode"": ""F89F"" },\n+  { ""name"": ""PollResults"", ""unicode"": ""F8A0"" },\n+  { ""name"": ""Rerun"", ""unicode"": ""F8A1"" },\n+  { ""name"": ""QandA"", ""unicode"": ""F8A2"" },\n+  { ""name"": ""QandAMirror"", ""unicode"": ""F8A3"" },\n+  { ""name"": ""BookAnswers"", ""unicode"": ""F8A4"" },\n+  { ""name"": ""AlertSettings"", ""unicode"": ""F8B6"" },\n+  { ""name"": ""TableComputed"", ""unicode"": ""F8F5"" },\n+  { ""name"": ""DecreaseIndentLegacy"", ""unicode"": ""E290"" },\n+  { ""name"": ""IncreaseIndentLegacy"", ""unicode"": ""E291"" },\n+  { ""name"": ""SizeLegacy"", ""unicode"": ""E2B2"" }\n+]'}, {'Name': 'src/settings-web/src/icons/src/fabric-icons.ts', 'Line Additions': 49, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,49 @@\n+  // Your use of the content in the files referenced here is subject to the terms of the license at https://aka.ms/fabric-assets-license\n+\n+// tslint:disable:max-line-length\n+\n+import {\n+  IIconOptions,\n+  IIconSubset,\n+  registerIcons\n+} from \'@uifabric/styling\';\n+\n+export function initializeIcons(\n+  baseUrl: string = \'\',\n+  options?: IIconOptions\n+): void {\n+  const subset: IIconSubset = {\n+    style: {\n+      MozOsxFontSmoothing: \'grayscale\',\n+      WebkitFontSmoothing: \'antialiased\',\n+      fontStyle: \'normal\',\n+      fontWeight: \'normal\',\n+      speak: \'none\'\n+    },\n+    fontFace: {\n+      fontFamily: `""FabricMDL2Icons""`,\n+      // Inline Data, taken from ../css/fabric-icons-inline.css\n+      src: `url(\'data:application/octet-stream;base64,d09GRgABAAAAAAu8AA4AAAAAFYgAA2PXAAAAAAAAAAAAAAAAAAAAAAAAAABPUy8yAAABRAAAAEgAAABgMUZxSWNtYXAAAAGMAAAAWwAAAXqhL5+fY3Z0IAAAAegAAAAgAAAAKgnZCa9mcGdtAAACCAAAAPAAAAFZ/J7mjmdhc3AAAAL4AAAADAAAAAwACAAbZ2x5ZgAAAwQAAANmAAAFdLqlsAxoZWFkAAAGbAAAADIAAAA2AGEB92hoZWEAAAagAAAAFQAAACQQAQgDaG10eAAABrgAAAAmAAAAJhJIBzVsb2NhAAAG4AAAACQAAAAkDIYOZG1heHAAAAcEAAAAHQAAACAAKgH2bmFtZQAAByQAAAP2AAAJ+o+d8VFwb3N0AAALHAAAABQAAAAg/1EAiHByZXAAAAswAAAAiQAAANN4vfIOeJxjYGG/yjiBgZWBgXUWqzEDA6M0hGa+yJDGJMTBysrFyMQIBgxAIMCAAL7BCgoMDs8ZXllxgPkQkgGsjgXCU2BgAADopwgseJxjYGBgZoBgGQZGBhAoAfIYwXwWhgggLcQgABRhes7wnPc533PB58LPc16WvLL6/5+BAUks+2UuSEySUeKrxHeJTxIfJWaLzRa9BjUTDTCyYRMdWQAAVKwc+wB4nGPQYghlKGBoYFjFyMDYwOzAeIDBAYsIEAAAqhwHlXicXY+/TsNADMZzJLSEJ0A6IZ11KkOViJ3phksk1CUlDOelgNRKpO+AlIXFA8/ibhnzYgjMEf4utr/P+ny/c6f5yXx2nKVHKilWnDfhoNQLDurtmf35IU/vNmVhTNV5VvdlwWoJomtOF/VNsGjI0PWWTG0eH7acLWKXxY7w0nDShk7qbQB2qL/HHeJVPJLFI4QS30/xfYxL+rUsVobTiyasA/des/OoAUzFYxN49BoQf8ikP3VnE+NsOWXbwE5zgkSfygL3RJqE+0uPf/Wgkv+G+23Iv6tB9U3c9Bb0h2HBgrChl2fbUAkaYPkOhPxkxgABAAIACAAK//8AD3iclZPPaxtXEMdn3uzuSC1Waq/ktVJQa8mSECVqKlveQ0BxIZCkEB19WKOQUw6F6BISEASsQImbgi92bj2YRDR/QAKhxn9Arrnl1F5CqotzkFNoVrxdOrv6EQX3Uv3YNzvzmfedtzsDCp4CGD+Zd4GAAdz55fni8vzyU/pTv1Avgh/AvDv85ZHRBPkQAHYTYEkCJCEFFTiKvQTGN78DfHEIc2D9fQifAck1Edum2Oe/w+X6cmZ+eknAB/j4N7vdroZuV+H2NiDY+Be/s85JJqCTRBd539O2tj3at86JRe88fUu49/Ce53gOPgdIIiexLGwSHWNLPfOCa8E1Tz0Lmp56rp57BnxyGzQFgegUFlg85CG4cBt24FdRTC9m0lbGpKLFtkl5q5AvFahol8riWivV19brRdtcd8VVW1+tLa4KtOgUbWxgfa1UdstmFct2matYyFtcZjuFXGQnhZn0osNOMYcOOW4OV2vrruNSA13TxVpOZdIpVchXVX2toexaQ9aq3KfEn1PWP4hIB+HrpbOXwvuPkwtJ+T0O7186uxS+PkBCDIMDrEgUtydR3JYoVg7Cn5VhqOPNcPDV96WLrx45552lb5f2X10sbXwdDjaPR1E8czqKZzb1XvPhzQsXbj5sTlb3xpVK5coNd7waK/+vmGD2IOEfoiWKU7njT0udjZ4qVf04W1a0Bt2ZwuJVeoQUcWBtRb2UVNIg3NMt3fIooEARPdHXPQq1inob8TcgM+AgYovJqPPMnlYUevo6PaEow4tyY1ZJz1tbU1babma3FvWo52nSFLPA2GLfuhyNzahP0QDyT7Sv/ROSgOYBsfYH5E/4Q+F7ER/3vyTxiWbNJ8TEVm+gmfyB9olHdR+CONmP91eyv2P1ouAIYx7riKKwLWEvT9hoYFST/EkB7E9VhIWsynLf6kxZ5rbe03sd6lO/o7LUjm2d7UQs7nDf7I/OGE2hnFEi1KZ2R0tQMvRebI9q3oGs2eeYHz1rNts6O6GysUQsJs86C1mrM2ZHM65EeKI+FZGt4xeZkC98KRMNWDNyaiGTVillFPIrVSVTtdBQKzJfhsyX+FKGzJdhwC5ab44eXL364OhNONzdDYeTO7R277192buzsXGn9/LtvRk7Af9Jj3f60D2VMLalwn8BDliIAQAAeJxjYGRgYGBOvp43+b9GPL/NVwZuDgYQ2P/3YAOIvunUvwhEczCAxTkZmEAUAGSmCn0AAHicY2BkYOBgAAE4yciACpgAAsoAHQAAAAUqAKYIAAAAABMA8wAGAAMBpQIDAAcABwG5AV0AGQAZAYcCGQAAAAAAAAAWAEgAXAB+AW4BhAGaAbAByAHgAfYCDAIiAjoCUAJmArp4nGNgZGBgEGSYw8DCAAKMYJILhBkjQUwAFCoBIgAAAHictVQ/axxHFH+nO1sKjkUwBFxOEYIsjj1bKozsSthxZTWyEbgJzO3M7Q7e2xlmZr1scOHSRT5GGkM+RUggZep8gtSpUua9t7N3ku9ilEDu2NnfvHl/f+/NAsDd0dcwgv53jE+PR3AHdz3egV34JuExyp8nPEH8bcI34HNwCd+EL+BtwrtwAt8nvAdfwi8J34JD+D3h26OfR5OE9+Fw51eMMpp8hju182fCI/hqfJHwDuyPv0t4jPL3CU8Q/5jwDbg7/i3hmyDGfyS8C36yl/AeHE4GP7fg5eSHhG+P30/+SngfXu69++mDOLr/4KE4M7m3wS6ieGK9s15GY+tMnFaVODdFGYM410H7N1plz+Tcm1ycPX1+JE5D0DGc66KppN882JRcaB/QszjOjk/6Uzrsz17owmphgpAieqn0UvrXwi5ELPWl/ApvG0fi3C6drI0O2dbkyxjdo9msbdtsOZxnaDOLnbOFl67sZgtbxzBbm4fGucpoJeggE69sI5ayE03QmAQmRmIRrci9llFPhTLBVbKbClkr4bzB0xxVNL5lEE77pYkR3c07LqIyua7JFx4EYf0AFhRhulmq81Y1eZwKYh5tp2QzBDC1aEuTl5cyazGoqfOqUdimVfa2rjpxYO4JvZxjLmt19PCpbFldmboQXoeInSJW1wHIfOXrMTNwYDBK1EtqgTcYVdm2rqxUV9mTPVXaUzkWQ+HaRNdEoTSVSTqlrtxVRnEY6y6pU0PQIfJTmrnBnLPrdxs+gIAjuA8P4CGiMzCQgwcLAZ8FRJQ9QeTxztMqUWIQ1ZDhySlU+BdwjrICSjwLvNP41qj9BleFms/Qbo578k0xnuKX5YjtA2uSHVkV0KA/iZrXsbiOzgXnEVLOAr90GT4nV2wHy8t2Lzgbi6tAHapK4hOZAYXSJWf5GmXEEp2UrLuNv4L3DTI4aOf4XuJeYk6G2cr+BfPEc0TpI5jhv+V/hv4+ts9SnBnijr0U7Mehhw6lC/ZG1c62Rg+cs8OOGO6jWFlQ719xTYKZ6PDdMHc9Ez1jgzbJLFftUYPq0DDFvWI9xx3vWEJ8UBzHnelt8+RFp71k3477SjVHPiOrOecxdKLiishqyKu3CNwFvyFZrGqYXqurjvcKbXLcT5mvfub7uNNVnI8rMDyJLfOU47qdszZVSto5VtPw3Kmt3JNNxegA9e/hmyZ0nnjZ5r3P4b9yu/au2FOBMs9zHNOdGmZ1WwVD9M28Hl+aAaqkryVyvOEWkP++VoWSliu3fCs/NXvyylRp7otNa19Vjxu+WQ1bUrZDNwc/pFnxTf7nGe2/jHXqzNr7cENMYpnmh/KdM9N9b/+Hu/03eW84mAAAeJxjYGYAg/9+DOUMmEAQACk7Adl4nNvAoM2wiZGTSZtxExeI3M7Vmhtqq8rAob2dOzXYQU8GxOKJ8LDQkASxeJ3NteWFQSw+HRUZER4Qi19OQpiPA8QS4OPhZGcBsQTBAMQS2jChIMAAyGLYzgg3mgluNDPcaBa40axwo9nkJKFGs8ON5oAbzQk3epMwI7v2BgYF19pMCRcAxAEoGgAAAA==\') format(\'truetype\');`\n+    },\n+    icons: {\n+      \'GlobalNavButton\': \'\\uE700\',\n+      \'ChevronDown\': \'\\uE70D\',\n+      \'ChevronUp\': \'\\uE70E\',\n+      \'Cancel\': \'\\uE711\',\n+      \'Settings\': \'\\uE713\',\n+      \'ChevronLeft\': \'\\uE76B\',\n+      \'ChevronRight\': \'\\uE76C\',\n+      \'ChevronUpSmall\': \'\\uE96D\',\n+      \'ChevronDownSmall\': \'\\uE96E\',\n+      \'ChevronLeftSmall\': \'\\uE96F\',\n+      \'ChevronRightSmall\': \'\\uE970\',\n+      \'ChevronUpMed\': \'\\uE971\',\n+      \'ChevronDownMed\': \'\\uE972\',\n+      \'ChevronLeftMed\': \'\\uE973\',\n+      \'ChevronRightMed\': \'\\uE974\',\n+      \'CircleRing\': \'\\uEA3A\'\n+    }\n+  };\n+\n+  registerIcons(subset, options);\n+}'}, {'Name': 'src/settings-web/src/icons/src/iconAliases.ts', 'Line Additions': 13, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,13 @@\n+import { registerIconAlias } from '@uifabric/styling';\n+\n+export const registerIconAliases = () => {\n+  registerIconAlias('trash', 'delete');\n+  registerIconAlias('onedrive', 'onedrivelogo');\n+  registerIconAlias('alertsolid12', 'eventdatemissed12');\n+  registerIconAlias('sixpointstar', '6pointstar');\n+  registerIconAlias('twelvepointstar', '12pointstar');\n+  registerIconAlias('toggleon', 'toggleleft');\n+  registerIconAlias('toggleoff', 'toggleright');\n+}\n+\n+export default registerIconAliases;""}, {'Name': 'src/settings-web/src/icons/src/index.ts', 'Line Additions': 18, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,18 @@\n+import { initializeIcons as i } from './fabric-icons';\n+\n+import { IIconOptions } from '@uifabric/styling';\n+import { registerIconAliases } from './iconAliases';\n+const DEFAULT_BASE_URL = 'https://spoprod-a.akamaihd.net/files/fabric/assets/icons/';\n+\n+export function initializeIcons(\n+  baseUrl: string = DEFAULT_BASE_URL,\n+  options?: IIconOptions\n+): void {\n+  [i].forEach(\n+    (initialize: (url: string, options?: IIconOptions) => void) => initialize(baseUrl, options)\n+  );\n+\n+  registerIconAliases();\n+}\n+\n+export { IconNames } from './IconNames';""}, {'Name': 'src/settings-web/src/index.tsx', 'Line Additions': 29, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,29 @@\n+import React from 'react';\n+import ReactDOM from 'react-dom';\n+import { App } from './components/App';\n+import { mergeStyles } from 'office-ui-fabric-react';\n+\n+// Inject some global styles\n+mergeStyles({\n+  selectors: {\n+    ':global(body), :global(html), :global(#app)': {\n+      margin: 0,\n+      padding: 0,\n+      height: '100vh'\n+    }\n+  }\n+});\n+\n+const root = document.getElementById('app');\n+if (root && root.hasChildNodes()) {\n+  ReactDOM.hydrate(<App \n+    ref={(app_component) => {(window as any).react_app_component=app_component;}} // in order to call the app from outside react.\n+    />, \n+    root);\n+} else {\n+  ReactDOM.render(<App \n+    ref={(app_component) => {(window as any).react_app_component=app_component;}} // in order to call the app from outside react.\n+    />, \n+    root);\n+}\n+""}, {'Name': 'src/settings-web/src/setup_icons.tsx', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,26 @@\n+import React from 'react';\n+import {registerIcons} from 'office-ui-fabric-react';\n+import {initializeIcons} from './icons/src';\n+\n+// Import SVG files for the icons here.\n+import AnimatedGifRecorderSVG from './svg/animated_gif_recorder.svg';\n+import BatchRenamerSVG from './svg/batch_renamer.svg';\n+import FancyZonesSVG from './svg/fancy_zones.svg';\n+import ShortcutGuideSVG from './svg/shortcut_guide.svg';\n+import TerminateToolSVG from './svg/terminate_tool.svg';\n+import MaximizeNewDesktopSVG from './svg/maximize_new_desktop.svg';\n+\n+export function setup_powertoys_icons(): void {\n+  initializeIcons('icons/fonts/');\n+\n+  registerIcons({\n+    icons: {\n+      'pt-animated-gif-recorder': ( <AnimatedGifRecorderSVG /> ),\n+      'pt-batch-renamer': ( <BatchRenamerSVG /> ),\n+      'pt-fancy-zones': ( <FancyZonesSVG /> ),\n+      'pt-shortcut-guide': ( <ShortcutGuideSVG /> ),\n+      'pt-terminate-tool': ( <TerminateToolSVG /> ),\n+      'pt-maximize-new-desktop': ( <MaximizeNewDesktopSVG /> )\n+    }\n+  });\n+}""}, {'Name': 'src/settings-web/src/svg/animated_gif_recorder.svg', 'Line Additions': 19, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,19 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""15px"" height=""15px"" viewBox=""0 0 15 15"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>Group 6</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Icons"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""X-Large-Copy-5"" transform=""translate(-17.000000, -237.000000)"">\n+            <g id=""Group-4"">\n+                <g id=""Navigation-/-Left-Nav-/-Default-/-Level-2-w-Icon-/-Rest-Copy-5"" transform=""translate(0.000000, 224.000000)"">\n+                    <g id=""Group-6"" transform=""translate(17.000000, 13.000000)"">\n+                        <rect id=""Rectangle"" stroke=""#000000"" x=""0.5"" y=""0.5"" width=""14"" height=""14""></rect>\n+                        <circle id=""Oval"" fill=""#000000"" cx=""7.5"" cy=""7.5"" r=""2.5""></circle>\n+                        <circle id=""Oval"" stroke=""#000000"" cx=""7.5"" cy=""7.5"" r=""4""></circle>\n+                    </g>\n+                </g>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/settings-web/src/svg/batch_renamer.svg', 'Line Additions': 38, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,38 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""15px"" height=""15px"" viewBox=""0 0 15 15"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>Fancy zones</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Icons"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""X-Large-Copy-5"" transform=""translate(-17.000000, -164.000000)"" stroke=""#000000"">\n+            <g id=""Group-4"">\n+                <g id=""Navigation-/-Left-Nav-/-Default-/-Level-2-w-Icon-/-Rest-Copy-3"" transform=""translate(0.000000, 152.000000)"">\n+                    <g id=""Fancy-zones"" transform=""translate(17.000000, 12.000000)"">\n+                        <g id=""Group-5"">\n+                            <rect id=""Rectangle"" x=""0.5"" y=""0.5"" width=""14"" height=""14""></rect>\n+                            <path d=""M2.5,2 L2.5,7"" id=""Line-4""></path>\n+                            <path d=""M4.5,2 L4.5,7"" id=""Line-4-Copy""></path>\n+                            <path d=""M6.5,5 L6.5,10"" id=""Line-4-Copy""></path>\n+                            <path d=""M7.5,6 L7.5,9"" id=""Line-4-Copy""></path>\n+                            <path d=""M8.5,7 L8.5,8"" id=""Line-4-Copy""></path>\n+                            <path d=""M3.5,1 L3.5,4"" id=""Line-4-Copy-2"" transform=""translate(3.500000, 2.500000) rotate(-270.000000) translate(-3.500000, -2.500000) ""></path>\n+                            <path d=""M2.5,8 L2.5,13"" id=""Line-4""></path>\n+                            <path d=""M3.5,7 L3.5,10"" id=""Line-4-Copy-2"" transform=""translate(3.500000, 8.500000) rotate(-270.000000) translate(-3.500000, -8.500000) ""></path>\n+                            <path d=""M3.5,11 L3.5,14"" id=""Line-4-Copy-2"" transform=""translate(3.500000, 12.500000) rotate(-270.000000) translate(-3.500000, -12.500000) ""></path>\n+                            <path d=""M10.5,8 L10.5,13"" id=""Line-4""></path>\n+                            <path d=""M12.5,9 L12.5,12"" id=""Line-4""></path>\n+                            <path d=""M11,7.5 L11,9.5"" id=""Line-4-Copy-2"" transform=""translate(11.000000, 8.500000) rotate(-270.000000) translate(-11.000000, -8.500000) ""></path>\n+                            <path d=""M11,11.5 L11,13.5"" id=""Line-4-Copy-2"" transform=""translate(11.000000, 12.500000) rotate(-270.000000) translate(-11.000000, -12.500000) ""></path>\n+                            <path d=""M3.5,3 L3.5,6"" id=""Line-4-Copy-2"" transform=""translate(3.500000, 4.500000) rotate(-270.000000) translate(-3.500000, -4.500000) ""></path>\n+                            <path d=""M10.5,2 L10.5,7"" id=""Line-4""></path>\n+                            <path d=""M12.5,2 L12.5,7"" id=""Line-4-Copy""></path>\n+                            <path d=""M11.5,1 L11.5,4"" id=""Line-4-Copy-2"" transform=""translate(11.500000, 2.500000) rotate(-270.000000) translate(-11.500000, -2.500000) ""></path>\n+                            <path d=""M11.5,3 L11.5,6"" id=""Line-4-Copy-2"" transform=""translate(11.500000, 4.500000) rotate(-270.000000) translate(-11.500000, -4.500000) ""></path>\n+                            <path d=""M11.5,5 L11.5,8"" id=""Line-4-Copy-2"" transform=""translate(11.500000, 6.500000) rotate(-270.000000) translate(-11.500000, -6.500000) ""></path>\n+                        </g>\n+                    </g>\n+                </g>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/settings-web/src/svg/fancy_zones.svg', 'Line Additions': 20, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,20 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""15px"" height=""15px"" viewBox=""0 0 15 15"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>Fancy zones</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Icons"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""X-Large-Copy-5"" transform=""translate(-17.000000, -128.000000)"" stroke=""#000000"">\n+            <g id=""Group-4"">\n+                <g id=""Navigation-/-Left-Nav-/-Default-/-Level-2-w-Icon-/-Rest-Copy-2"" transform=""translate(0.000000, 116.000000)"">\n+                    <g id=""Fancy-zones"" transform=""translate(17.000000, 12.000000)"">\n+                        <rect id=""Rectangle"" x=""0.5"" y=""0.5"" width=""14"" height=""14""></rect>\n+                        <rect id=""Rectangle"" x=""2.5"" y=""2.5"" width=""4"" height=""4""></rect>\n+                        <rect id=""Rectangle"" x=""2.5"" y=""8.5"" width=""4"" height=""4""></rect>\n+                        <rect id=""Rectangle"" x=""8.5"" y=""2.5"" width=""4"" height=""10""></rect>\n+                    </g>\n+                </g>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/settings-web/src/svg/maximize_new_desktop.svg', 'Line Additions': 22, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,22 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""15px"" height=""13px"" viewBox=""0 0 15 13"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>maximize</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Icons"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""X-Large-Copy-5"" transform=""translate(-17.000000, -56.000000)"" stroke=""#000000"">\n+            <g id=""Group-4"">\n+                <g id=""Navigation-/-Left-Nav-/-Default-/-Level-2-w-Icon-/-Rest"" transform=""translate(0.000000, 44.000000)"">\n+                    <g id=""maximize"" transform=""translate(17.000000, 12.000000)"">\n+                        <g id=""Group"">\n+                            <rect id=""Rectangle"" x=""0.5"" y=""0.5"" width=""14"" height=""10""></rect>\n+                            <path d=""M5,5.5 L10,5.5"" id=""Line-2""></path>\n+                            <path d=""M5,5.5 L10,5.5"" id=""Line-2"" transform=""translate(7.500000, 5.500000) rotate(-270.000000) translate(-7.500000, -5.500000) ""></path>\n+                            <rect id=""Rectangle"" x=""0.5"" y=""0.5"" width=""14"" height=""12""></rect>\n+                        </g>\n+                    </g>\n+                </g>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/settings-web/src/svg/shortcut_guide.svg', 'Line Additions': 23, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,23 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""15px"" height=""15px"" viewBox=""0 0 15 15"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>Shortcut guide</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Icons"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""X-Large-Copy-5"" transform=""translate(-17.000000, -92.000000)"" stroke=""#000000"">\n+            <g id=""Group-4"">\n+                <g id=""Navigation-/-Left-Nav-/-Default-/-Level-2-w-Icon-/-Rest-Copy"" transform=""translate(0.000000, 80.000000)"">\n+                    <g id=""Shortcut-guide"" transform=""translate(17.000000, 12.000000)"">\n+                        <rect id=""Rectangle"" x=""0.5"" y=""0.5"" width=""14"" height=""14""></rect>\n+                        <rect id=""Rectangle"" x=""2.5"" y=""2.5"" width=""6"" height=""6""></rect>\n+                        <rect id=""Rectangle"" x=""2.5"" y=""10.5"" width=""2"" height=""2""></rect>\n+                        <rect id=""Rectangle"" x=""6.5"" y=""10.5"" width=""2"" height=""2""></rect>\n+                        <rect id=""Rectangle"" x=""10.5"" y=""2.5"" width=""2"" height=""2""></rect>\n+                        <rect id=""Rectangle"" x=""10.5"" y=""6.5"" width=""2"" height=""2""></rect>\n+                        <rect id=""Rectangle"" x=""10.5"" y=""10.5"" width=""2"" height=""2""></rect>\n+                    </g>\n+                </g>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/settings-web/src/svg/terminate_tool.svg', 'Line Additions': 21, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,21 @@\n+<?xml version=""1.0"" encoding=""UTF-8""?>\n+<svg width=""16px"" height=""16px"" viewBox=""0 0 16 16"" version=""1.1"" xmlns=""http://www.w3.org/2000/svg"" xmlns:xlink=""http://www.w3.org/1999/xlink"">\n+    <!-- Generator: Sketch 54.1 (76490) - https://sketchapp.com -->\n+    <title>Terminate tool</title>\n+    <desc>Created with Sketch.</desc>\n+    <g id=""Icons"" stroke=""none"" stroke-width=""1"" fill=""none"" fill-rule=""evenodd"">\n+        <g id=""X-Large-Copy-5"" transform=""translate(-17.000000, -200.000000)"" stroke=""#000000"">\n+            <g id=""Group-4"">\n+                <g id=""Navigation-/-Left-Nav-/-Default-/-Level-2-w-Icon-/-Rest-Copy-4"" transform=""translate(0.000000, 188.000000)"">\n+                    <g id=""Terminate-tool"" transform=""translate(17.000000, 12.000000)"">\n+                        <rect id=""Rectangle"" x=""0.5"" y=""0.5"" width=""15"" height=""15""></rect>\n+                        <g id=""Group-3"" transform=""translate(5.000000, 5.000000)"">\n+                            <path d=""M-2.13162821e-14,0 L5.65685425,5.65685425"" id=""Line-3""></path>\n+                            <path d=""M-1.42108547e-14,-7.10542736e-15 L5.65685425,5.65685425"" id=""Line-3-Copy"" transform=""translate(2.828427, 2.828427) rotate(-270.000000) translate(-2.828427, -2.828427) ""></path>\n+                        </g>\n+                    </g>\n+                </g>\n+            </g>\n+        </g>\n+    </g>\n+</svg>\n\\ No newline at end of file'}, {'Name': 'src/settings-web/tsconfig.json', 'Line Additions': 20, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,20 @@\n+{\n+  ""compilerOptions"": {\n+    ""target"": ""es5"",\n+    ""module"": ""es2015"",\n+    ""outDir"": ""./lib"",\n+    ""importHelpers"": true,\n+    ""downlevelIteration"": true,\n+    ""strict"": true,\n+    ""noImplicitAny"": true,\n+    ""noImplicitThis"": true,\n+    ""noUnusedLocals"": true,\n+    ""forceConsistentCasingInFileNames"": true,\n+    ""pretty"": true,\n+    ""moduleResolution"": ""node"",\n+    ""allowSyntheticDefaultImports"": true,\n+    ""esModuleInterop"": true,\n+    ""jsx"": ""react""\n+  },\n+  ""include"": [""src/index.tsx"", ""typings/**/*.d.ts""]\n+}'}, {'Name': 'src/settings-web/typings/just-scripts.d.ts', 'Line Additions': 49, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,49 @@\n+/// <reference types=""node"" />\n+/// <reference types=""react"" />\n+/// <reference types=""react-dom"" />\n+\n+declare namespace NodeJS {\n+  interface ProcessEnv {\n+    readonly NODE_ENV: \'development\' | \'production\' | \'test\';\n+    readonly PUBLIC_URL: string;\n+  }\n+}\n+\n+declare module \'*.bmp\' {\n+  const src: string;\n+  export default src;\n+}\n+\n+declare module \'*.gif\' {\n+  const src: string;\n+  export default src;\n+}\n+\n+declare module \'*.jpg\' {\n+  const src: string;\n+  export default src;\n+}\n+\n+declare module \'*.jpeg\' {\n+  const src: string;\n+  export default src;\n+}\n+\n+declare module \'*.png\' {\n+  const src: string;\n+  export default src;\n+}\n+\n+declare module \'*.webp\' {\n+  const src: string;\n+  export default src;\n+}\n+\n+declare module \'*.svg\' {\n+  import * as React from \'react\';\n+\n+  export const ReactComponent: React.FunctionComponent<React.SVGProps<SVGSVGElement>>;\n+\n+  const src: string;\n+  export default src;\n+}'}, {'Name': 'src/settings-web/webpack.config.js', 'Line Additions': 23, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,23 @@\n+const path = require('path')\n+const { webpackMerge, basicWebpackConfig, stylesOverlay, tsOverlay } = require('just-scripts');\n+\n+// Overrides the Just file overlay so that SVGs can be used as a React Component.\n+powertoys_fileOverlay = {\n+  output: {\n+    path: path.resolve(__dirname, 'build', 'dist')\n+  },\n+  module: {\n+    rules: [\n+      {\n+        test: /\\.(png|jpg|gif)$/,\n+        use: ['file-loader']\n+      },\n+      {\n+        test: /\\.svg$/,\n+        use: ['@svgr/webpack']\n+      }\n+    ]\n+  }\n+};\n+\n+module.exports = webpackMerge(basicWebpackConfig, stylesOverlay, tsOverlay, powertoys_fileOverlay);""}, {'Name': 'src/settings-web/webpack.serve.config.js', 'Line Additions': 19, 'Line Deletions': 0, 'Patch': ""@@ -0,0 +1,19 @@\n+const { webpackMerge, htmlOverlay, basicWebpackServeConfig, stylesOverlay, tsOverlay } = require('just-scripts');\n+\n+// Overrides the Just file overlay so that SVGs can be used as a React Component.\n+powertoys_fileOverlay = {\n+  module: {\n+    rules: [\n+      {\n+        test: /\\.(png|jpg|gif)$/,\n+        use: ['file-loader']\n+      },\n+      {\n+        test: /\\.svg$/,\n+        use: ['@svgr/webpack']\n+      }\n+    ]\n+  }\n+};\n+\n+module.exports = webpackMerge(basicWebpackServeConfig, htmlOverlay, stylesOverlay, tsOverlay, powertoys_fileOverlay);""}, {'Name': 'tools/project_template/ModuleTemplate/ModuleTemplate.rc', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'tools/project_template/ModuleTemplate/ModuleTemplate.vcxproj', 'Line Additions': 123, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,123 @@\n+<?xml version=""1.0"" encoding=""utf-8""?>\n+<Project DefaultTargets=""Build"" ToolsVersion=""15.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\n+  <ItemGroup Label=""ProjectConfigurations"">\n+    <ProjectConfiguration Include=""Debug|x64"">\n+      <Configuration>Debug</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+    <ProjectConfiguration Include=""Release|x64"">\n+      <Configuration>Release</Configuration>\n+      <Platform>x64</Platform>\n+    </ProjectConfiguration>\n+  </ItemGroup>\n+  <PropertyGroup Label=""Globals"">\n+    <VCProjectVersion>15.0</VCProjectVersion>\n+    <ProjectGuid>{44CC9375-3E6E-4D99-8913-7FB748807EBD}</ProjectGuid>\n+    <Keyword>Win32Proj</Keyword>\n+    <RootNamespace>templatenamespace</RootNamespace>\n+    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>\n+    <ProjectName>ModuleTemplate</ProjectName>\n+  </PropertyGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.Default.props"" />\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"" Label=""Configuration"">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseDebugLibraries>true</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"" Label=""Configuration"">\n+    <ConfigurationType>DynamicLibrary</ConfigurationType>\n+    <UseDebugLibraries>false</UseDebugLibraries>\n+    <PlatformToolset>v142</PlatformToolset>\n+    <WholeProgramOptimization>true</WholeProgramOptimization>\n+    <CharacterSet>Unicode</CharacterSet>\n+  </PropertyGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.props"" />\n+  <ImportGroup Label=""ExtensionSettings"">\n+  </ImportGroup>\n+  <ImportGroup Label=""Shared"">\n+  </ImportGroup>\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\n+  </ImportGroup>\n+  <ImportGroup Label=""PropertySheets"" Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <Import Project=""$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props"" Condition=""exists(\'$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\')"" Label=""LocalAppDataPlatform"" />\n+  </ImportGroup>\n+  <PropertyGroup Label=""UserMacros"" />\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <LinkIncremental>true</LinkIncremental>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\modules\\</OutDir>\n+  </PropertyGroup>\n+  <PropertyGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <LinkIncremental>false</LinkIncremental>\n+    <OutDir>$(SolutionDir)$(Platform)\\$(Configuration)\\modules\\</OutDir>\n+  </PropertyGroup>\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">\n+    <ClCompile>\n+      <PrecompiledHeader>Use</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>Disabled</Optimization>\n+      <SDLCheck>true</SDLCheck>\n+      <PreprocessorDefinitions>_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ConformanceMode>true</ConformanceMode>\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\n+      <AdditionalIncludeDirectories>..\\..\\common\\inc;..\\..\\common\\Telemetry;..\\;..\\..\\;..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Windows</SubSystem>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemDefinitionGroup Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">\n+    <ClCompile>\n+      <PrecompiledHeader>Use</PrecompiledHeader>\n+      <WarningLevel>Level3</WarningLevel>\n+      <Optimization>MaxSpeed</Optimization>\n+      <FunctionLevelLinking>true</FunctionLevelLinking>\n+      <IntrinsicFunctions>true</IntrinsicFunctions>\n+      <SDLCheck>true</SDLCheck>\n+      <PreprocessorDefinitions>NDEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <ConformanceMode>true</ConformanceMode>\n+      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>\n+      <AdditionalIncludeDirectories>..\\..\\common\\inc;..\\..\\common\\Telemetry;..\\;..\\..\\;..\\..\\..\\deps\\cpprestsdk\\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>\n+      <LanguageStandard>stdcpplatest</LanguageStandard>\n+    </ClCompile>\n+    <Link>\n+      <SubSystem>Windows</SubSystem>\n+      <EnableCOMDATFolding>true</EnableCOMDATFolding>\n+      <OptimizeReferences>true</OptimizeReferences>\n+      <GenerateDebugInformation>true</GenerateDebugInformation>\n+      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>\n+    </Link>\n+  </ItemDefinitionGroup>\n+  <ItemGroup>\n+    <ClInclude Include=""pch.h"" />\n+    <ClInclude Include=""resource.h"" />\n+    <ClInclude Include=""trace.h"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClCompile Include=""dllmain.cpp"" />\n+    <ClCompile Include=""pch.cpp"">\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">Create</PrecompiledHeader>\n+      <PrecompiledHeader Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">Create</PrecompiledHeader>\n+      <PrecompiledHeaderFile Condition=""\'$(Configuration)|$(Platform)\'==\'Debug|x64\'"">pch.h</PrecompiledHeaderFile>\n+      <PrecompiledHeaderFile Condition=""\'$(Configuration)|$(Platform)\'==\'Release|x64\'"">pch.h</PrecompiledHeaderFile>\n+    </ClCompile>\n+    <ClCompile Include=""trace.cpp"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ProjectReference Include=""..\\..\\common\\common.vcxproj"">\n+      <Project>{74485049-c722-400f-abe5-86ac52d929b3}</Project>\n+    </ProjectReference>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ResourceCompile Include=""$projectname$.rc"" />\n+  </ItemGroup>\n+  <Import Project=""$(VCTargetsPath)\\Microsoft.Cpp.targets"" />\n+  <ImportGroup Label=""ExtensionTargets"">\n+  </ImportGroup>\n+</Project>\n\\ No newline at end of file'}, {'Name': 'tools/project_template/ModuleTemplate/ModuleTemplate.vcxproj.filters', 'Line Additions': 16, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,16 @@\n+\ufeff<?xml version=""1.0"" encoding=""utf-8""?>\n+<Project ToolsVersion=""4.0"" xmlns=""http://schemas.microsoft.com/developer/msbuild/2003"">\n+  <ItemGroup>\n+    <ClCompile Include=""pch.cpp"" />\n+    <ClCompile Include=""dllmain.cpp"" />\n+    <ClCompile Include=""trace.cpp"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ClInclude Include=""pch.h"" />\n+    <ClInclude Include=""trace.h"" />\n+    <ClInclude Include=""resource.h"" />\n+  </ItemGroup>\n+  <ItemGroup>\n+    <ResourceCompile Include=""$projectname$.rc"" />\n+  </ItemGroup>\n+</Project>\n\\ No newline at end of file'}, {'Name': 'tools/project_template/ModuleTemplate/README.md', 'Line Additions': 44, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,44 @@\n+# PowerToy ModuleTemplate\n+\n+# Introduction\n+This project is used to generate the Visual Studio PowerToys Module Template\n+\n+# Instruction\n+In Visual Studio from the menu Project->Export Template... generate the template.\n+Set the name `PowerToys Module`, add a description `A project for creating a PowerToys module` and an icon.\n+Open the resulting .zip file in `%USERNAME%\\Documents\\Visual Studio 2019\\Templates\\ProjectTemplates`\n+and edit `MyTemplate.vstemplate` to make the necessary changes, the resulting template should look like this:\n+\n+```xml\n+<VSTemplate Version=""3.0.0"" xmlns=""http://schemas.microsoft.com/developer/vstemplate/2005"" Type=""Project"">\n+  <TemplateData>\n+    <Name>PowerToys Module</Name>\n+    <Description>A project for creating a PowerToys module</Description>\n+    <ProjectType>VC</ProjectType>\n+    <ProjectSubType>\n+    </ProjectSubType>\n+\t  <LanguageTag>C++</LanguageTag>\n+\t  <PlatformTag>windows</PlatformTag>\n+\t  <ProjectTypeTag>extension</ProjectTypeTag>\n+    <SortOrder>1000</SortOrder>\n+    <CreateNewFolder>true</CreateNewFolder>\n+    <DefaultName>PowerToy</DefaultName>\n+    <ProvideDefaultName>true</ProvideDefaultName>\n+    <LocationField>Enabled</LocationField>\n+    <EnableLocationBrowseButton>true</EnableLocationBrowseButton>\n+    <Icon>__TemplateIcon.ico</Icon>\n+  </TemplateData>\n+  <TemplateContent>\n+    <Project TargetFileName=""$projectname$.vcxproj"" File=""ModuleTemplate.vcxproj"" ReplaceParameters=""true"">\n+      <ProjectItem ReplaceParameters=""false"" TargetFileName=""$projectname$.vcxproj.filters"">ModuleTemplate.vcxproj.filters</ProjectItem>\n+      <ProjectItem ReplaceParameters=""true"" TargetFileName=""dllmain.cpp"">dllmain.cpp</ProjectItem>\n+      <ProjectItem ReplaceParameters=""false"" TargetFileName=""pch.cpp"">pch.cpp</ProjectItem>\n+      <ProjectItem ReplaceParameters=""false"" TargetFileName=""trace.cpp"">trace.cpp</ProjectItem>\n+      <ProjectItem ReplaceParameters=""false"" TargetFileName=""pch.h"">pch.h</ProjectItem>\n+      <ProjectItem ReplaceParameters=""false"" TargetFileName=""resource.h"">resource.h</ProjectItem>\n+      <ProjectItem ReplaceParameters=""false"" TargetFileName=""trace.h"">trace.h</ProjectItem>\n+      <ProjectItem ReplaceParameters=""true"" TargetFileName=""$projectname$.rc"">ModuleTemplate.rc</ProjectItem>\n+    </Project>\n+  </TemplateContent>\n+</VSTemplate>\n+```\n\\ No newline at end of file'}, {'Name': 'tools/project_template/ModuleTemplate/dllmain.cpp', 'Line Additions': 324, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,324 @@\n+#include ""pch.h""\n+#include <interface/powertoy_module_interface.h>\n+#include <interface/lowlevel_keyboard_event_data.h>\n+#include <interface/win_hook_event_data.h>\n+#include <common/settings_objects.h>\n+#include ""trace.h""\n+\n+extern ""C"" IMAGE_DOS_HEADER __ImageBase;\n+\n+BOOL APIENTRY DllMain(HMODULE hModule, DWORD  ul_reason_for_call, LPVOID lpReserved) {\n+  switch (ul_reason_for_call) {\n+  case DLL_PROCESS_ATTACH:\n+    Trace::RegisterProvider();\n+    break;\n+  case DLL_THREAD_ATTACH:\n+  case DLL_THREAD_DETACH:\n+    break;\n+  case DLL_PROCESS_DETACH:\n+    Trace::UnregisterProvider();\n+    break;\n+  }\n+  return TRUE;\n+}\n+\n+// The PowerToy name that will be shown in the settings.\n+const static wchar_t* MODULE_NAME = L""$projectname$"";\n+// Add a description that will we shown in the module settings page.\n+const static wchar_t* MODULE_DESC = L""<no description>"";\n+\n+// These are the properties shown in the Settings page.\n+struct ModuleSettings {\n+  // Add the PowerToy module properties with default values.\n+  // Currently available types:\n+  // - int\n+  // - bool\n+  // - string\n+\n+  //bool bool_prop = true;\n+  //int int_prop = 10;\n+  //std::wstring string_prop = L""The quick brown fox jumps over the lazy dog"";\n+  //std::wstring color_prop = L""#1212FF"";\n+\n+} g_settings;\n+\n+// Implement the PowerToy Module Interface and all the required methods.\n+class $safeprojectname$ : public PowertoyModuleIface {\n+private:\n+  // The PowerToy state.\n+  bool m_enabled = false;\n+\n+  // Load initial settings from the persisted values.\n+  void init_settings();\n+\n+public:\n+  // Constructor\n+  $safeprojectname$() {\n+    init_settings();\n+  };\n+\n+  // Destroy the powertoy and free memory\n+  virtual void destroy() override {\n+    delete this;\n+  }\n+\n+  // Return the display name of the powertoy, this will be cached by the runner\n+  virtual const wchar_t* get_name() override {\n+    return MODULE_NAME;\n+  }\n+\n+  // Return array of the names of all events that this powertoy listens for, with\n+  // nullptr as the last element of the array. Nullptr can also be retured for empty\n+  // list.\n+  virtual const wchar_t** get_events() override {\n+    static const wchar_t* events[] = { nullptr };\n+    // Available events:\n+    // - ll_keyboard\n+    // - win_hook_event\n+    //\n+    // static const wchar_t* events[] = { ll_keyboard,\n+    //                                   win_hook_event,\n+    //                                   nullptr };\n+\n+    return events;\n+  }\n+\n+  // Return JSON with the configuration options.\n+  virtual bool get_config(wchar_t* buffer, int* buffer_size) override {\n+    HINSTANCE hinstance = reinterpret_cast<HINSTANCE>(&__ImageBase);\n+\n+    // Create a Settings object.\n+    PowerToysSettings::Settings settings(hinstance, get_name());\n+    settings.set_description(MODULE_DESC);\n+\n+    // Show an overview link in the Settings page\n+    //settings.set_overview_link(L""https://"");\n+\n+    // Show a video link in the Settings page.\n+    //settings.set_video_link(L""https://"");\n+\n+    // A bool property with a toggle editor.\n+    /*settings.add_bool_toogle(\n+      L""bool_toggle_1"", // property name.\n+      L""This is what a BoolToggle property looks like"", // description or resource id of the localized string.\n+      g_settings.bool_prop // property value.\n+    );*/\n+\n+    // An integer property with a spinner editor.\n+    /*settings.add_int_spinner(\n+      L""int_spinner_1"", // property name\n+      L""This is what a IntSpinner property looks like"", // description or resource id of the localized string.\n+      g_settings.int_prop, // property value.\n+      0, // min value.\n+      100, // max value.\n+      10 // incremental step.\n+    );*/\n+\n+    // A string property with a textbox editor.\n+    /*settings.add_string(\n+      L""string_text_1"", // property name.\n+      L""This is what a String property looks like"", // description or resource id of the localized string.\n+      g_settings.string_prop // property value.\n+    );*/\n+\n+    // A string property with a color picker editor.\n+    /*settings.add_color_picker(\n+      L""color_picker_1"", // property name.\n+      L""This is what a ColorPicker property looks like"", // description or resource id of the localized string.\n+      g_settings.color_prop // property value.\n+    );*/\n+\n+    // A custom action property. When using this settings type, the ""PowertoyModuleIface::call_custom_action()""\n+    // method should be overriden as well.\n+    /*settings.add_custom_action(\n+      L""custom_action_id"", // action name.\n+      L""This is what a CustomAction property looks like"", // label above the field.\n+      L""Call a custom action"", // button text.\n+      L""Press the button to call a custom action."" // display values / extended info.\n+    );*/\n+\n+    return settings.serialize_to_buffer(buffer, buffer_size);\n+  }\n+\n+  // Signal from the Settings editor to call a custom action.\n+  // This can be used to spawn more complex editors.\n+  virtual void call_custom_action(const wchar_t* action) override {\n+    static UINT custom_action_num_calls = 0;\n+    try {\n+      // Parse the action values, including name.\n+      PowerToysSettings::CustomActionObject action_object =\n+        PowerToysSettings::CustomActionObject::from_json_string(action);\n+\n+      /*\n+      if (action_object.get_name() == L""custom_action_id"") {\n+        // Execute your custom action\n+      }\n+      */\n+    }\n+    catch (std::exception ex) {\n+      // Improper JSON.\n+    }\n+  }\n+\n+  // Called by the runner to pass the updated settings values as a serialized JSON.\n+  virtual void set_config(const wchar_t* config) override {\n+    try {\n+      // Parse the input JSON string.\n+      PowerToysSettings::PowerToyValues values =\n+        PowerToysSettings::PowerToyValues::from_json_string(config);\n+\n+      // Update a bool property.\n+      /*\n+      if (values.is_bool_value(L""bool_toggle_1"")) {\n+        g_settings.bool_prop = values.get_bool_value(L""bool_toggle_1"");\n+      }\n+      */\n+\n+      // Update an int property.\n+      /*\n+      if (values.is_int_value(L""int_spinner_1"")) {\n+        g_settings.int_prop = values.get_int_value(L""int_spinner_1"");\n+      }\n+      */\n+\n+      // Update a string property.\n+      /*\n+      if (values.is_string_value(L""string_text_1"")) {\n+        g_settings.string_prop = values.get_string_value(L""string_text_1"");\n+      }\n+      */\n+\n+      // Update a color property.\n+      /*\n+      if (values.is_string_value(L""color_picker_1"")) {\n+        g_settings.color_prop = values.get_string_value(L""color_picker_1"");\n+      }\n+      */\n+\n+      // If you don\'t need to do any custom processing of the settings, proceed\n+      // to persists the values calling:\n+      values.save_to_settings_file();\n+      // Otherwise call a custom function to process the settings before saving them to disk:\n+      // save_settings();\n+    }\n+    catch (std::exception ex) {\n+      // Improper JSON.\n+    }\n+  }\n+\n+  // Enable the powertoy\n+  virtual void enable() {\n+    m_enabled = true;\n+  }\n+\n+  // Disable the powertoy\n+  virtual void disable() {\n+    m_enabled = false;\n+  }\n+\n+  // Returns if the powertoys is enabled\n+  virtual bool is_enabled() override {\n+    return m_enabled;\n+  }\n+\n+  // Handle incoming event, data is event-specific\n+  virtual intptr_t signal_event(const wchar_t* name, intptr_t data)  override {\n+    if (wcscmp(name, ll_keyboard) == 0) {\n+      auto& event = *(reinterpret_cast<LowlevelKeyboardEvent*>(data));\n+      // Return 1 if the keypress is to be suppressed (not forwarded to Windows),\n+      // otherwise return 0.\n+      return 0;\n+    }\n+    else if (wcscmp(name, win_hook_event) == 0) {\n+      auto& event = *(reinterpret_cast<WinHookEvent*>(data));\n+      // Return value is ignored\n+      return 0;\n+    }\n+    return 0;\n+  }\n+};\n+\n+// Load the settings file.\n+void $safeprojectname$::init_settings() {\n+  try {\n+    // Load and parse the settings file for this PowerToy.\n+    PowerToysSettings::PowerToyValues settings =\n+      PowerToysSettings::PowerToyValues::load_from_settings_file(get_name());\n+\n+    // Load a bool property.\n+    /*\n+    if (settings.is_bool_value(L""bool_toggle_1"")) {\n+      g_settings.bool_prop = settings.get_bool_value(L""bool_toggle_1"");\n+    }\n+    */\n+\n+    // Load an int property.\n+    /*\n+    if (settings.is_int_value(L""int_spinner_1"")) {\n+      g_settings.int_prop = settings.get_int_value(L""int_spinner_1"");\n+    }\n+    */\n+\n+    // Load a string property.\n+    /*\n+    if (settings.is_string_value(L""string_text_1"")) {\n+      g_settings.string_prop = settings.get_string_value(L""string_text_1"");\n+    }\n+    */\n+\n+    // Load a color property.\n+    /*\n+    if (settings.is_string_value(L""color_picker_1"")) {\n+      g_settings.color_prop = settings.get_string_value(L""color_picker_1"");\n+    }\n+    */\n+  }\n+  catch (std::exception ex) {\n+    // Error while loading from the settings file. Let default values stay as they are.\n+  }\n+}\n+\n+// This method of saving the module settings is only required if you need to do any\n+// custom processing of the settings before saving them to disk.\n+/*\n+void $projectname$::save_settings() {\n+  try {\n+    // Create a PowerToyValues object for this PowerToy\n+    PowerToysSettings::PowerToyValues values(get_name());\n+\n+    // Save a bool property.\n+    //values.add_property(\n+    //  L""bool_toggle_1"", // property name\n+    //  g_settings.bool_prop // property value\n+    //);\n+\n+    // Save an int property.\n+    //values.add_property(\n+    //  L""int_spinner_1"", // property name\n+    //  g_settings.int_prop // property value\n+    //);\n+\n+    // Save a string property.\n+    //values.add_property(\n+    //  L""string_text_1"", // property name\n+    //  g_settings.string_prop // property value\n+    );\n+\n+    // Save a color property.\n+    //values.add_property(\n+    //  L""color_picker_1"", // property name\n+    //  g_settings.color_prop // property value\n+    //);\n+\n+    // Save the PowerToyValues JSON to the power toy settings file.\n+    values.save_to_settings_file();\n+  }\n+  catch (std::exception ex) {\n+    // Couldn\'t save the settings.\n+  }\n+}\n+*/\n+\n+extern ""C"" __declspec(dllexport) PowertoyModuleIface* __cdecl powertoy_create() {\n+  return new $safeprojectname$();\n+}'}, {'Name': 'tools/project_template/ModuleTemplate/pch.cpp', 'Line Additions': 2, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,2 @@\n+#include ""pch.h""\n+#pragma comment(lib, ""windowsapp"")\n\\ No newline at end of file'}, {'Name': 'tools/project_template/ModuleTemplate/pch.h', 'Line Additions': 5, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,5 @@\n+#pragma once\n+#define WIN32_LEAN_AND_MEAN\n+#include <windows.h>\n+#include <common/common.h>\n+#include <ProjectTelemetry.h>\n\\ No newline at end of file'}, {'Name': 'tools/project_template/ModuleTemplate/resource.h', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'tools/project_template/ModuleTemplate/trace.cpp', 'Line Additions': 26, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,26 @@\n+#include ""pch.h""\n+#include ""trace.h""\n+\n+TRACELOGGING_DEFINE_PROVIDER(\n+  g_hProvider,\n+  ""Microsoft.PowerToys"",\n+  // {38e8889b-9731-53f5-e901-e8a7c1753074}\n+  (0x38e8889b, 0x9731, 0x53f5, 0xe9, 0x01, 0xe8, 0xa7, 0xc1, 0x75, 0x30, 0x74),\n+  TraceLoggingOptionProjectTelemetry());\n+\n+void Trace::RegisterProvider() {\n+  TraceLoggingRegister(g_hProvider);\n+}\n+\n+void Trace::UnregisterProvider() {\n+  TraceLoggingUnregister(g_hProvider);\n+}\n+\n+void Trace::MyEvent() {\n+  TraceLoggingWrite(\n+    g_hProvider,\n+    ""PowerToyName::Event::MyEvent"",\n+    ProjectTelemetryPrivacyDataTag(ProjectTelemetryTag_ProductAndServicePerformance),\n+    TraceLoggingBoolean(TRUE, ""UTCReplace_AppSessionGuid""),\n+    TraceLoggingKeyword(PROJECT_KEYWORD_MEASURE));\n+}'}, {'Name': 'tools/project_template/ModuleTemplate/trace.h', 'Line Additions': 8, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,8 @@\n+#pragma once\n+\n+class Trace {\n+public:\n+  static void RegisterProvider();\n+  static void UnregisterProvider();\n+  static void MyEvent();\n+};'}, {'Name': 'tools/project_template/PowerToysModuleTemplate.zip', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}, {'Name': 'tools/project_template/README.md', 'Line Additions': 448, 'Line Deletions': 0, 'Patch': '@@ -0,0 +1,448 @@\n+# PowerToy DLL Project For Visual Studio 2019\r\n+\r\n+## Installation\r\n+\r\n+- Put the `PowerToy Module.zip` file inside the `%USERPROFILE%\\Documents\\Visual Studio 2019\\Templates\\ProjectTemplate\\Visual C++` folder. \r\n+- The template will be available in Visual Studio, when adding a new project, under the `Visual C++` tab.\r\n+\r\n+## Create a new PowerToy Module\r\n+\r\n+- Add the new PowerToy project to the `src\\modules\\` folder for all the relative paths to work.\r\n+- For the module interface implementation take a look at [the interface](/src/modules/interface) and\r\n+    [the example PowerToy implementation](/src/modules/example_powertoy/dllmain.cpp)\r\n+- Each PowerToy is built as a DLL and in order to be loaded at run-time, the PowerToy\'s DLL name needs to be added to the `known_dlls` map in [src/runner/main.cpp](/src/runner/main.cpp).\r\n+\r\n+## DPI Awareness\r\n+\r\n+All PowerToy modules need to be DPI aware and calculate dimensions and positions of the UI elements using the Windows API for DPI awareness.\r\n+The `/src/common` library has some helpers that you can use and extend:\r\n+ - [`dpi_aware.h`](/src/common/dpi_aware.h), [`dpi_aware.cpp`](/src/common/dpi_aware.cpp)\r\n+ - [`monitors.h`](/src/common/monitors.h), [`monitors.cpp`](/src/common/monitors.cpp)\r\n+\r\n+## PowerToy settings\r\n+\r\n+### Settings architecture overview\r\n+\r\n+PowerToys provides a settings infrastructure to add a settings page for new modules. The PowerToys Settings application is accessed from the PowerToys tray icon, it provides a global settings page and a dedicated settings page for each module.\r\n+\r\n+The PowerToys settings API provides a way to define the required information and controls for the module\'s settings page and methods to read and persist the settings values. A module may need a more complex way to configure the user\'s preferences, in that case it can provide its own custom settings editor that can be invoked from the module\'s settings page through a dedicated button.\r\n+\r\n+The settings specification can be read at [doc/specs/PowerToys-settings.md](/doc/specs/PowerToys-settings.md).\r\n+\r\n+A PowerToy can provide this general information about itself:\r\n+  - **[name](#name)**: The name of the PowerToy.\r\n+  - **[description](#description)**: A text describing the PowerToy.\r\n+  - **[icon_key](#icon_key)**: The identifier of the PowerToy icon in the [`settings-web` project](/src/settings-web#updating-the-icons).\r\n+  - **[overview_link](#overview_link)**: A link to an extended overview of the PowerToy.\r\n+  - **[video_link](#video_link)**: A link to a video showcasing the PowerToy.\r\n+\r\n+A PowerToy can define settings of the following types:\r\n+  - **[bool_toggle](#bool_toggle)**: A boolean property, edited with a Toggle control.\r\n+  - **[int_spinner](#int_spinner)**: An integer property, edited with a Spinner control.\r\n+  - **[string](#string)**: A string property, edited with a TextBox control.\r\n+  - **[color_picker](#color_picker)**: A color property, edited with a ColorPicker control.\r\n+  - **[custom_action](#custom_action)**: A custom action property, invoked from the settings by a Button control.\r\n+\r\n+Here\'s an example of what the settings look like in the Settings screen:\r\n+\r\n+![Image of the Options](/doc/images/example_powertoy/settings.png)\r\n+\r\n+### How to add your module\'s settings page\r\n+\r\n+The PowerToy can set its settings information and controls by overriding the [PowerToy\'s Interface `get_config` method](/src/modules/interface/README.md#get_config) and returning a serialized [`PowerToysSettings::Settings`](/src/common/settings_object.h) object that\'s been filled with the required informations and controls.\r\n+\r\n+The PowerToy can receive the new values by overriding the [PowerToy\'s Interface `set_config` method](/src/modules/interface/README.md#set_config), parsing the serialized [`PowerToysSettings::PowerToyValues`](/src/common/settings_object.h) object and applying the new settings.\r\n+\r\n+Here\'s an example from [the example PowerToy implementation](/src/modules/example_powertoy/dllmain.cpp):\r\n+```cpp\r\n+  // Return JSON with the configuration options.\r\n+  virtual bool get_config(wchar_t* buffer, int* buffer_size) override {\r\n+    HINSTANCE hinstance = reinterpret_cast<HINSTANCE>(&__ImageBase);\r\n+\r\n+    // Create a Settings object.\r\n+    PowerToysSettings::Settings settings(hinstance, get_name());\r\n+    settings.set_description(L""Serves as an example powertoy, with example settings."");\r\n+\r\n+    // Show an overview link in the Settings page\r\n+    settings.set_overview_link(L""https://github.com/microsoft/PowerToys"");\r\n+\r\n+    // Show a video link in the Settings page.\r\n+    settings.set_video_link(L""https://www.youtube.com/watch?v=d3LHo2yXKoY&t=21462"");\r\n+\r\n+    // Add a bool property with a toggle editor.\r\n+    settings.add_bool_toogle(\r\n+      L""test_bool_toggle"", // property name.\r\n+      L""This is what a BoolToggle property looks like"", // description or resource id of the localized string.\r\n+      g_settings.test_bool_prop // property value.\r\n+    );\r\n+\r\n+    // Add an integer property with a spinner editor.\r\n+    settings.add_int_spinner(\r\n+      L""test_int_spinner"", // property name\r\n+      L""This is what a IntSpinner property looks like"", // description or resource id of the localized string.\r\n+      g_settings.test_int_prop, // property value.\r\n+      0, // min value.\r\n+      100, // max value.\r\n+      10 // incremental step.\r\n+    );\r\n+\r\n+    // Add a string property with a textbox editor.\r\n+    settings.add_string(\r\n+      L""test_string_text"", // property name.\r\n+      L""This is what a String property looks like"", // description or resource id of the localized string.\r\n+      g_settings.test_string_prop // property value.\r\n+    );\r\n+\r\n+    // Add a string property with a color picker editor.\r\n+    settings.add_color_picker(\r\n+      L""test_color_picker"", // property name.\r\n+      L""This is what a ColorPicker property looks like"", // description or resource id of the localized string.\r\n+      g_settings.test_color_prop // property value.\r\n+    );\r\n+\r\n+    // Add a custom action property. When using this settings type, the ""PowertoyModuleIface::call_custom_action()""\r\n+    // method should be overriden as well.\r\n+    settings.add_custom_action(\r\n+      L""test_custom_action"", // action name.\r\n+      L""This is what a CustomAction property looks like"", // label above the field.\r\n+      L""Call a custom action"", // button text.\r\n+      L""Press the button to call a custom action in the Example PowerToy"" // display values / extended info.\r\n+    );\r\n+\r\n+    return settings.serialize_to_buffer(buffer, buffer_size);\r\n+  }\r\n+\r\n+  // Called by the runner to pass the updated settings values as a serialized JSON.\r\n+  virtual void set_config(const wchar_t* config) override { \r\n+    try {\r\n+      // Parse the input JSON string.\r\n+      PowerToysSettings::PowerToyValues values =\r\n+        PowerToysSettings::PowerToyValues::from_json_string(config);\r\n+\r\n+      // Update the bool property.\r\n+      if (values.is_bool_value(L""test_bool_toggle"")) {\r\n+        g_settings.test_bool_prop = values.get_bool_value(L""test_bool_toggle"");\r\n+      }\r\n+\r\n+      // Update the int property.\r\n+      if (values.is_int_value(L""test_int_spinner"")) {\r\n+        g_settings.test_int_prop = values.get_int_value(L""test_int_spinner"");\r\n+      }\r\n+\r\n+      // Update the string property.\r\n+      if (values.is_string_value(L""test_string_text"")) {\r\n+        g_settings.test_string_prop = values.get_string_value(L""test_string_text"");\r\n+      }\r\n+\r\n+      // Update the color property.\r\n+      if (values.is_string_value(L""test_color_picker"")) {\r\n+        g_settings.test_color_prop = values.get_string_value(L""test_color_picker"");\r\n+      }\r\n+\r\n+      // If you don\'t need to do any custom processing of the settings, proceed\r\n+      // to persists the values calling:\r\n+      values.save_to_settings_file();\r\n+      // Otherwise call a custom function to process the settings before saving them to disk:\r\n+      // save_settings();\r\n+    }\r\n+    catch (std::exception ex) {\r\n+      // Improper JSON.\r\n+    }\r\n+  }\r\n+```\r\n+\r\n+### Settings Informations\r\n+The PowerToys settings object supports adding additional information to a PowerToys Settings description:\r\n+\r\n+#### name\r\n+The name of the PowerToy. Its a required information that\'s applied in the settings object constructor:\r\n+\r\n+```cpp\r\n+PowerToysSettings::Settings settings(hinstance, get_name());\r\n+```\r\n+\r\n+#### description\r\n+A short description of the PowerToy.\r\n+\r\n+```cpp\r\n+settings.set_description(L""Serves as an example powertoy, with example settings."");\r\n+```\r\n+or\r\n+```cpp\r\n+settings.set_description(description_resource_id);\r\n+```\r\n+where `description_resource_id` is the UINT index of a resouce string in the project .rc file.\r\n+\r\n+#### icon_key\r\n+The identifier of the PowerToy icon in the [`settings-web` project](/src/settings-web#updating-the-icons).\r\n+By default, a `CircleRing` icon from *FabricUI* is shown for the PowerToy if no icon is specified.\r\n+\r\n+```cpp\r\n+settings.set_icon_key(L""pt-shortcut-guide"");\r\n+```\r\n+\r\n+#### overview_link\r\n+A link to an extended overview of the PowerToy.\r\n+```cpp\r\n+settings.set_overview_link(L""https://github.com/microsoft/PowerToys"");\r\n+```\r\n+\r\n+\r\n+#### video_link\r\n+A link to a video showcasing the PowerToy.\r\n+\r\n+```cpp\r\n+settings.set_video_link(L""https://www.youtube.com/watch?v=d3LHo2yXKoY&t=21462"");\r\n+```\r\n+\r\n+### Setting Controls\r\n+\r\n+#### bool_toggle\r\n+\r\n+A boolean property, edited with a Toggle control.\r\n+\r\n+It can be added to a `Settings` object by calling `add_bool_toogle`.\r\n+```cpp\r\n+// Add a bool property with a toggle editor.\r\n+settings.add_bool_toogle(\r\n+  L""test_bool_toggle"", // property name.\r\n+  L""This is what a BoolToggle property looks like"", // description or resource id of the localized string.\r\n+  g_settings.test_bool_prop // property value.\r\n+);\r\n+```\r\n+\r\n+It can be read from a `PowerToyValues` object by calling `get_bool_value`.\r\n+```cpp\r\n+// Update the bool property.\r\n+if (values.is_bool_value(L""test_bool_toggle"")) {\r\n+  g_settings.test_bool_prop = values.get_bool_value(L""test_bool_toggle"");\r\n+}\r\n+```\r\n+\r\n+#### int_spinner\r\n+\r\n+An integer property, edited with a Spinner control.\r\n+\r\n+It can be added to a `Settings` object by calling `add_int_spinner`.\r\n+```cpp\r\n+// Add an integer property with a spinner editor.\r\n+settings.add_int_spinner(\r\n+  L""test_int_spinner"", // property name\r\n+  L""This is what a IntSpinner property looks like"", // description or resource id of the localized string.\r\n+  g_settings.test_int_prop, // property value.\r\n+  0, // min value.\r\n+  100, // max value.\r\n+  10 // incremental step.\r\n+);\r\n+```\r\n+\r\n+It can be read from a `PowerToyValues` object by calling `get_int_value`.\r\n+```cpp\r\n+// Update the int property.\r\n+if (values.is_int_value(L""test_int_spinner"")) {\r\n+  g_settings.test_int_prop = values.get_int_value(L""test_int_spinner"");\r\n+}\r\n+```\r\n+\r\n+#### string\r\n+\r\n+A string property, edited with a TextBox control.\r\n+\r\n+It can be added to a `Settings` object by calling `add_string`.\r\n+```cpp\r\n+// Add a string property with a textbox editor.\r\n+settings.add_string(\r\n+  L""test_string_text"", // property name.\r\n+  L""This is what a String property looks like"", // description or resource id of the localized string.\r\n+  g_settings.test_string_prop // property value.\r\n+);\r\n+```\r\n+\r\n+It can be read from a `PowerToyValues` object by calling `get_string_value`.\r\n+```cpp\r\n+// Update the string property.\r\n+if (values.is_string_value(L""test_string_text"")) {\r\n+  g_settings.test_string_prop = values.get_string_value(L""test_string_text"");\r\n+}\r\n+```\r\n+\r\n+#### color_picker\r\n+\r\n+A color property, edited with a ColorPicker control. Its value is a string with the `\'#RRGGBB\'` format, with two hexadecimal digits for each color component.\r\n+\r\n+It can be added to a `Settings` object by calling `add_color_picker`.\r\n+```cpp\r\n+// Add a string property with a color picker editor.\r\n+settings.add_color_picker(\r\n+  L""test_color_picker"", // property name.\r\n+  L""This is what a ColorPicker property looks like"", // description or resource id of the localized string.\r\n+  g_settings.test_color_prop // property value.\r\n+);\r\n+```\r\n+\r\n+The `\'#RRGGBB\'`-format string can be read from a `PowerToyValues` object by calling `get_string_value`.\r\n+```cpp\r\n+// Update the color property.\r\n+if (values.is_string_value(L""test_color_picker"")) {\r\n+  g_settings.test_color_prop = values.get_string_value(L""test_color_picker"");\r\n+}\r\n+```\r\n+\r\n+#### custom_action\r\n+A custom action property, invoked from the settings by a Button control. This can be used to spawn a custom editor by the PowerToy.\r\n+\r\n+It can be added to a `Settings` object by calling `add_custom_action`.\r\n+```cpp\r\n+// Add a custom action property. When using this settings type, the ""PowertoyModuleIface::call_custom_action()""\r\n+// method should be overriden as well.\r\n+settings.add_custom_action(\r\n+  L""test_custom_action"", // action name.\r\n+  L""This is what a CustomAction property looks like"", // label above the field: a string literal or a resource id\r\n+  L""Call a custom action"", // button text: a string literal or a resource id\r\n+  L""Press the button to call a custom action in the Example PowerToy"" // display values / extended info: a string literal or a resource id\r\n+);\r\n+```\r\n+\r\n+When the custom action button is pressed, the PowerToy\'s `call_custom_action()` is called with a serialized [`PowerToysSettings::CustomActionObject`](/src/common/settings_object.h) object.\r\n+```cpp\r\n+  // Signal from the Settings editor to call a custom action.\r\n+  // This can be used to spawn more complex editors.\r\n+  virtual void call_custom_action(const wchar_t* action) override {\r\n+    static UINT custom_action_num_calls = 0;\r\n+    try {\r\n+      // Parse the action values, including name.\r\n+      PowerToysSettings::CustomActionObject action_object =\r\n+        PowerToysSettings::CustomActionObject::from_json_string(action);\r\n+\r\n+      if (action_object.get_name() == L""test_custom_action"") {\r\n+        // Custom action code to increase and show a counter.\r\n+        ++custom_action_num_calls;\r\n+        std::wstring msg(L""I have been called "");\r\n+        msg += std::to_wstring(custom_action_num_calls);\r\n+        msg += L"" time(s)."";\r\n+        MessageBox(NULL, msg.c_str(), L""Custom action call."", MB_OK | MB_TOPMOST);\r\n+      }\r\n+    }\r\n+    catch (std::exception ex) {\r\n+      // Improper JSON.\r\n+    }\r\n+  }\r\n+```\r\n+\r\n+### Settings Persistence\r\n+\r\n+By default, the PowerToys settings are persisted in the User\'s `%LocalAppData%\\Microsoft\\PowerToys` path.\r\n+Each PowerToy has its own folder for saving the persisted settings data.\r\n+\r\n+Loading and saving the settings in the default location can be achieved through the use of a [`PowerToysSettings::PowerToyValues`](/src/common/settings_object.h) object.\r\n+\r\n+#### Loading settings\r\n+\r\n+The PowerToy can load the saved `PowerToyValues` object through the use of the `load_from_settings_file` method.\r\n+\r\n+Here\'s an example from [the example PowerToy implementation](/src/modules/example_powertoy/dllmain.cpp):\r\n+```cpp\r\n+// Load the settings file.\r\n+void ExamplePowertoy::init_settings() {\r\n+  try {\r\n+    // Load and parse the settings file for this PowerToy.\r\n+    PowerToysSettings::PowerToyValues settings =\r\n+      PowerToysSettings::PowerToyValues::load_from_settings_file(get_name());\r\n+\r\n+    // Load the bool property.\r\n+    if (settings.is_bool_value(L""test_bool_toggle"")) {\r\n+      g_settings.test_bool_prop = settings.get_bool_value(L""test_bool_toggle"");\r\n+    }\r\n+\r\n+    // Load the int property.\r\n+    if (settings.is_int_value(L""test_int_spinner"")) {\r\n+      g_settings.test_int_prop = settings.get_int_value(L""test_int_spinner"");\r\n+    }\r\n+\r\n+    // Load the string property.\r\n+    if (settings.is_string_value(L""test_string_text"")) {\r\n+      g_settings.test_string_prop = settings.get_string_value(L""test_string_text"");\r\n+    }\r\n+\r\n+    // Load the color property.\r\n+    if (settings.is_string_value(L""test_color_picker"")) {\r\n+      g_settings.test_color_prop = settings.get_string_value(L""test_color_picker"");\r\n+    }\r\n+  }\r\n+  catch (std::exception ex) {\r\n+    // Error while loading from the settings file. Let default values stay as they are.\r\n+  }\r\n+}\r\n+```\r\n+\r\n+#### Saving settings\r\n+\r\n+The PowerToy can save the `PowerToyValues` object received in `set_config` through the use of the `save_to_settings_file` method.\r\n+\r\n+Here\'s an example from [the example PowerToy implementation](/src/modules/example_powertoy/dllmain.cpp):\r\n+```cpp\r\n+// Called by the runner to pass the updated settings values as a serialized JSON.\r\n+virtual void set_config(const wchar_t* config) override { \r\n+  try {\r\n+    // Parse the input JSON string.\r\n+    PowerToysSettings::PowerToyValues values =\r\n+      PowerToysSettings::PowerToyValues::from_json_string(config);\r\n+...\r\n+    values.save_to_settings_file();\r\n+  }\r\n+  catch (std::exception ex) {\r\n+    // Improper JSON.\r\n+  }\r\n+}\r\n+```\r\n+\r\n+Alternatively, the `PowerToyValues` object can be built manually and then saved if more complex logic is needed:\r\n+```cpp\r\n+// This method of saving the module settings is only required if you need to do any\r\n+// custom processing of the settings before saving them to disk.\r\n+void ExamplePowertoy::save_settings() {\r\n+  try {\r\n+    // Create a PowerToyValues object for this PowerToy\r\n+    PowerToysSettings::PowerToyValues values(get_name());\r\n+\r\n+    // Save the bool property.\r\n+    values.add_property(\r\n+      L""test_bool_toggle"", // property name\r\n+      g_settings.test_bool_prop // property value\r\n+    );\r\n+\r\n+    // Save the int property.\r\n+    values.add_property(\r\n+      L""test_int_spinner"", // property name\r\n+      g_settings.test_int_prop // property value\r\n+    );\r\n+\r\n+    // Save the string property.\r\n+    values.add_property(\r\n+      L""test_string_text"", // property name\r\n+      g_settings.test_string_prop // property value\r\n+    );\r\n+\r\n+    // Save the color property.\r\n+    values.add_property(\r\n+      L""test_color_picker"", // property name\r\n+      g_settings.test_color_prop // property value\r\n+    );\r\n+\r\n+    // Save the PowerToyValues JSON to the power toy settings file.\r\n+    values.save_to_settings_file();\r\n+  }\r\n+  catch (std::exception ex) {\r\n+    // Couldn\'t save the settings.\r\n+  }\r\n+}\r\n+```\r\n+\r\n+## Add a new PowerToy to the Installer\r\n+\r\n+In the `installer` folder, open the `PowerToysSetup.sln` solution.\r\n+Under the `PowerToysSetup` project, edit `Product.wxs`.\r\n+You will need to add a component for your module DLL. Search for `Module_ShortcutGuide` to see where to add the component declaration and where to reference that declaration so the DLL is added to the installer.\r\n+Each component requires a newly generated GUID (you can use the Visual Studio integrated tool to generate one).\r\n+Repeat the process for each extra file your PowerToy module requires.\r\n+If your PowerToy comes with a subfolder containing for example images, follow the example of the `PowerToysSvgs` component.\r'}, {'Name': 'tools/project_template/TemplateIcon.ico', 'Line Additions': 0, 'Line Deletions': 0, 'Patch': None}]",2019-09-05 16:12:42
153,closed,grumpydev,"<!-- Enter a brief description/summary of your PR here. What does it fix/what does it change/how was it tested (even manually, if necessary)? -->
Fixed a small typo in the readme.

<!-- Other than the issue solved, is this relevant to any other issues/existing PRs? --> 


<!-- Please review the items on the PR checklist before submitting-->
## PR Checklist
* [x] CLA signed. If not, go over [here](https://cla.opensource.microsoft.com/microsoft/PowerToys) and sign the CLA
* [ ] I've discussed this with core contributors already. If not checked, I'm ready to accept this work might be rejected in favor of a different grand plan. Issue number where discussion took place: #xxx

<!-- Provide a more detailed description of the PR, other things fixed or any additional comments/features here -->

<!-- Describe how you validated the behavior. Add automated tests wherever possible, but list manual validation steps taken as well -->
",1,['README.md'],1,"[{'Commit_ID': 'bc0383232d437fcc4b8a2b03e70b240339fa6efb', 'Commit_Message': 'Fixed typo in readme', 'Commit_Timestamp': datetime.datetime(2019, 9, 5, 16, 39, 2)}]","[{'Name': 'README.md', 'Line Additions': 1, 'Line Deletions': 1, 'Patch': '@@ -13,7 +13,7 @@ The first preview of these utilities can be installed from [here](https://github\n ## September Update\n The first preview release of the PowerToys utilities and source code is now live!  This release includes two preview quality utilities as well as the tools and docs to make it easy to create new PowerToys utilities.  \n \n-1. [FancyZones](/src/modules/fancyzones/) - FancyZones is a window manager that makes it easy to create copmlex window layouts and quickly position windows into those layouts.  The FancyZones backlog can be found [here](https://github.com/Microsoft/PowerToys/tree/master/doc/planning/FancyZonesBacklog.md)\n+1. [FancyZones](/src/modules/fancyzones/) - FancyZones is a window manager that makes it easy to create complex window layouts and quickly position windows into those layouts.  The FancyZones backlog can be found [here](https://github.com/Microsoft/PowerToys/tree/master/doc/planning/FancyZonesBacklog.md)\n \n ![FancyZones](src/modules/fancyzones/FancyZones.png)\n '}]",2019-09-06 17:01:40
